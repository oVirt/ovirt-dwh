// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package ovirt_engine_dwh.aggregationtodaily_4_5;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.RoutineHistoryETL;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: AggregationToDaily Purpose: <br>
 * Description:  <br>
 * @author ydary@redhat.com
 * @version 8.0.1.20211109_1610
 * @status 
 */
public class AggregationToDaily implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(ovirtEngineHistoryDbJdbcConnection != null){
				
					this.setProperty("ovirtEngineHistoryDbJdbcConnection", ovirtEngineHistoryDbJdbcConnection.toString());
				
			}
			
			if(ovirtEngineHistoryDbDriverClass != null){
				
					this.setProperty("ovirtEngineHistoryDbDriverClass", ovirtEngineHistoryDbDriverClass.toString());
				
			}
			
			if(ovirtEngineHistoryDbPassword != null){
				
					this.setProperty("ovirtEngineHistoryDbPassword", ovirtEngineHistoryDbPassword.toString());
				
			}
			
			if(ovirtEngineHistoryDbUser != null){
				
					this.setProperty("ovirtEngineHistoryDbUser", ovirtEngineHistoryDbUser.toString());
				
			}
			
			if(runTime != null){
				
					String pattern_runTime = "yyyy-MM-dd HH:mm:ss";
					String value_runTime = "yyyy-MM-dd HH:mm:ss.SSSSSS;2011-07-03 12:46:47.000000";
					String[] parts_runTime = value_runTime.split(";");
					if(parts_runTime.length > 1){
						pattern_runTime = parts_runTime[0];
						this.setProperty("runTime", pattern_runTime + ";" + FormatterUtils.format_Date(runTime, pattern_runTime));
					}else{
						this.setProperty("runTime", FormatterUtils.format_Date(runTime, pattern_runTime));
					}
				
			}
			
			if(lastDayAggr != null){
				
					String pattern_lastDayAggr = "yyyy-MM-dd HH:mm:ss";
					String value_lastDayAggr = "yyyy-MM-dd HH:mm:ss;2000-01-01 00:00:00";
					String[] parts_lastDayAggr = value_lastDayAggr.split(";");
					if(parts_lastDayAggr.length > 1){
						pattern_lastDayAggr = parts_lastDayAggr[0];
						this.setProperty("lastDayAggr", pattern_lastDayAggr + ";" + FormatterUtils.format_Date(lastDayAggr, pattern_lastDayAggr));
					}else{
						this.setProperty("lastDayAggr", FormatterUtils.format_Date(lastDayAggr, pattern_lastDayAggr));
					}
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String ovirtEngineHistoryDbJdbcConnection;
public String getOvirtEngineHistoryDbJdbcConnection(){
	return this.ovirtEngineHistoryDbJdbcConnection;
}
public String ovirtEngineHistoryDbDriverClass;
public String getOvirtEngineHistoryDbDriverClass(){
	return this.ovirtEngineHistoryDbDriverClass;
}
public java.lang.String ovirtEngineHistoryDbPassword;
public java.lang.String getOvirtEngineHistoryDbPassword(){
	return this.ovirtEngineHistoryDbPassword;
}
public String ovirtEngineHistoryDbUser;
public String getOvirtEngineHistoryDbUser(){
	return this.ovirtEngineHistoryDbUser;
}
public java.util.Date runTime;
public java.util.Date getRunTime(){
	return this.runTime;
}
public java.util.Date lastDayAggr;
public java.util.Date getLastDayAggr(){
	return this.lastDayAggr;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "4.5";
	private final String jobName = "AggregationToDaily";
	private final String projectName = "OVIRT_ENGINE_DWH";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils talendLogs_LOGS = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				AggregationToDaily.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(AggregationToDaily.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				talendLogs_LOGS.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				talendLogs_LOGSProcess(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tJDBCInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_2_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_2_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_2_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_3_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_3_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_3_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_4_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_4_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_4_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_5_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_5_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_5_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_6_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_6_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_6_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_7_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_7_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_7_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_9_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_9_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_9_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_8_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_8_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_8_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void talendLogs_LOGS_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							talendLogs_CONSOLE_error(exception, errorComponent, globalMap);
						
						}
					
			public void talendLogs_CONSOLE_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					talendLogs_LOGS_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void talendLogs_LOGS_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	






public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public short host_status;

				public short getHost_status () {
					return this.host_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short max_memory_usage;

				public Short getMax_memory_usage () {
					return this.max_memory_usage;
				}
				
			    public Long ksm_shared_memory_mb;

				public Long getKsm_shared_memory_mb () {
					return this.ksm_shared_memory_mb;
				}
				
			    public Long max_ksm_shared_memory_mb;

				public Long getMax_ksm_shared_memory_mb () {
					return this.max_ksm_shared_memory_mb;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short max_cpu_usage;

				public Short getMax_cpu_usage () {
					return this.max_cpu_usage;
				}
				
			    public Short ksm_cpu_percent;

				public Short getKsm_cpu_percent () {
					return this.ksm_cpu_percent;
				}
				
			    public Short max_ksm_cpu_percent;

				public Short getMax_ksm_cpu_percent () {
					return this.max_ksm_cpu_percent;
				}
				
			    public Short active_vms;

				public Short getActive_vms () {
					return this.active_vms;
				}
				
			    public Short max_active_vms;

				public Short getMax_active_vms () {
					return this.max_active_vms;
				}
				
			    public Short total_vms;

				public Short getTotal_vms () {
					return this.total_vms;
				}
				
			    public Short max_total_vms;

				public Short getMax_total_vms () {
					return this.max_total_vms;
				}
				
			    public Integer total_vms_vcpus;

				public Integer getTotal_vms_vcpus () {
					return this.total_vms_vcpus;
				}
				
			    public Integer max_total_vms_vcpus;

				public Integer getMax_total_vms_vcpus () {
					return this.max_total_vms_vcpus;
				}
				
			    public Integer cpu_load;

				public Integer getCpu_load () {
					return this.cpu_load;
				}
				
			    public Integer max_cpu_load;

				public Integer getMax_cpu_load () {
					return this.max_cpu_load;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short max_system_cpu_usage_percent;

				public Short getMax_system_cpu_usage_percent () {
					return this.max_system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short max_user_cpu_usage_percent;

				public Short getMax_user_cpu_usage_percent () {
					return this.max_user_cpu_usage_percent;
				}
				
			    public Integer swap_used_mb;

				public Integer getSwap_used_mb () {
					return this.swap_used_mb;
				}
				
			    public Integer max_swap_used_mb;

				public Integer getMax_swap_used_mb () {
					return this.max_swap_used_mb;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_shared_memory_mb = null;
           				} else {
           			    	this.max_ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_cpu_percent = null;
           				} else {
           			    	this.max_ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_active_vms = null;
           				} else {
           			    	this.max_active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_total_vms = null;
           				} else {
           			    	this.max_total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.max_total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
						this.max_cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.max_swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_shared_memory_mb = null;
           				} else {
           			    	this.max_ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_cpu_percent = null;
           				} else {
           			    	this.max_ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_active_vms = null;
           				} else {
           			    	this.max_active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_total_vms = null;
           				} else {
           			    	this.max_total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.max_total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
						this.max_cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.max_swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Long
				
						if(this.max_ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.max_ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.max_active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Short
				
						if(this.max_total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.max_total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Integer
				
						writeInteger(this.max_cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.max_swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Long
				
						if(this.max_ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.max_ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.max_active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Short
				
						if(this.max_total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.max_total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Integer
				
						writeInteger(this.max_cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.max_swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_status="+String.valueOf(host_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",max_memory_usage="+String.valueOf(max_memory_usage));
		sb.append(",ksm_shared_memory_mb="+String.valueOf(ksm_shared_memory_mb));
		sb.append(",max_ksm_shared_memory_mb="+String.valueOf(max_ksm_shared_memory_mb));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",max_cpu_usage="+String.valueOf(max_cpu_usage));
		sb.append(",ksm_cpu_percent="+String.valueOf(ksm_cpu_percent));
		sb.append(",max_ksm_cpu_percent="+String.valueOf(max_ksm_cpu_percent));
		sb.append(",active_vms="+String.valueOf(active_vms));
		sb.append(",max_active_vms="+String.valueOf(max_active_vms));
		sb.append(",total_vms="+String.valueOf(total_vms));
		sb.append(",max_total_vms="+String.valueOf(max_total_vms));
		sb.append(",total_vms_vcpus="+String.valueOf(total_vms_vcpus));
		sb.append(",max_total_vms_vcpus="+String.valueOf(max_total_vms_vcpus));
		sb.append(",cpu_load="+String.valueOf(cpu_load));
		sb.append(",max_cpu_load="+String.valueOf(max_cpu_load));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",max_system_cpu_usage_percent="+String.valueOf(max_system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",max_user_cpu_usage_percent="+String.valueOf(max_user_cpu_usage_percent));
		sb.append(",swap_used_mb="+String.valueOf(swap_used_mb));
		sb.append(",max_swap_used_mb="+String.valueOf(max_swap_used_mb));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_2 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_2> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public short host_status;

				public short getHost_status () {
					return this.host_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short max_memory_usage;

				public Short getMax_memory_usage () {
					return this.max_memory_usage;
				}
				
			    public Long ksm_shared_memory_mb;

				public Long getKsm_shared_memory_mb () {
					return this.ksm_shared_memory_mb;
				}
				
			    public Long max_ksm_shared_memory_mb;

				public Long getMax_ksm_shared_memory_mb () {
					return this.max_ksm_shared_memory_mb;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short max_cpu_usage;

				public Short getMax_cpu_usage () {
					return this.max_cpu_usage;
				}
				
			    public Short ksm_cpu_percent;

				public Short getKsm_cpu_percent () {
					return this.ksm_cpu_percent;
				}
				
			    public Short max_ksm_cpu_percent;

				public Short getMax_ksm_cpu_percent () {
					return this.max_ksm_cpu_percent;
				}
				
			    public Short active_vms;

				public Short getActive_vms () {
					return this.active_vms;
				}
				
			    public Short max_active_vms;

				public Short getMax_active_vms () {
					return this.max_active_vms;
				}
				
			    public Short total_vms;

				public Short getTotal_vms () {
					return this.total_vms;
				}
				
			    public Short max_total_vms;

				public Short getMax_total_vms () {
					return this.max_total_vms;
				}
				
			    public Integer total_vms_vcpus;

				public Integer getTotal_vms_vcpus () {
					return this.total_vms_vcpus;
				}
				
			    public Integer max_total_vms_vcpus;

				public Integer getMax_total_vms_vcpus () {
					return this.max_total_vms_vcpus;
				}
				
			    public Integer cpu_load;

				public Integer getCpu_load () {
					return this.cpu_load;
				}
				
			    public Integer max_cpu_load;

				public Integer getMax_cpu_load () {
					return this.max_cpu_load;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short max_system_cpu_usage_percent;

				public Short getMax_system_cpu_usage_percent () {
					return this.max_system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short max_user_cpu_usage_percent;

				public Short getMax_user_cpu_usage_percent () {
					return this.max_user_cpu_usage_percent;
				}
				
			    public Integer swap_used_mb;

				public Integer getSwap_used_mb () {
					return this.swap_used_mb;
				}
				
			    public Integer max_swap_used_mb;

				public Integer getMax_swap_used_mb () {
					return this.max_swap_used_mb;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_shared_memory_mb = null;
           				} else {
           			    	this.max_ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_cpu_percent = null;
           				} else {
           			    	this.max_ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_active_vms = null;
           				} else {
           			    	this.max_active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_total_vms = null;
           				} else {
           			    	this.max_total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.max_total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
						this.max_cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.max_swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_shared_memory_mb = null;
           				} else {
           			    	this.max_ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_ksm_cpu_percent = null;
           				} else {
           			    	this.max_ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_active_vms = null;
           				} else {
           			    	this.max_active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_total_vms = null;
           				} else {
           			    	this.max_total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.max_total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
						this.max_cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.max_swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Long
				
						if(this.max_ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.max_ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.max_active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Short
				
						if(this.max_total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.max_total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Integer
				
						writeInteger(this.max_cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.max_swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Long
				
						if(this.max_ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.max_ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.max_active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Short
				
						if(this.max_total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.max_total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Integer
				
						writeInteger(this.max_cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.max_swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_status="+String.valueOf(host_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",max_memory_usage="+String.valueOf(max_memory_usage));
		sb.append(",ksm_shared_memory_mb="+String.valueOf(ksm_shared_memory_mb));
		sb.append(",max_ksm_shared_memory_mb="+String.valueOf(max_ksm_shared_memory_mb));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",max_cpu_usage="+String.valueOf(max_cpu_usage));
		sb.append(",ksm_cpu_percent="+String.valueOf(ksm_cpu_percent));
		sb.append(",max_ksm_cpu_percent="+String.valueOf(max_ksm_cpu_percent));
		sb.append(",active_vms="+String.valueOf(active_vms));
		sb.append(",max_active_vms="+String.valueOf(max_active_vms));
		sb.append(",total_vms="+String.valueOf(total_vms));
		sb.append(",max_total_vms="+String.valueOf(max_total_vms));
		sb.append(",total_vms_vcpus="+String.valueOf(total_vms_vcpus));
		sb.append(",max_total_vms_vcpus="+String.valueOf(max_total_vms_vcpus));
		sb.append(",cpu_load="+String.valueOf(cpu_load));
		sb.append(",max_cpu_load="+String.valueOf(max_cpu_load));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",max_system_cpu_usage_percent="+String.valueOf(max_system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",max_user_cpu_usage_percent="+String.valueOf(max_user_cpu_usage_percent));
		sb.append(",swap_used_mb="+String.valueOf(swap_used_mb));
		sb.append(",max_swap_used_mb="+String.valueOf(max_swap_used_mb));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_2 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class host_aggregationStruct implements routines.system.IPersistableRow<host_aggregationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public short host_status;

				public short getHost_status () {
					return this.host_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Long ksm_shared_memory_mb;

				public Long getKsm_shared_memory_mb () {
					return this.ksm_shared_memory_mb;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short ksm_cpu_percent;

				public Short getKsm_cpu_percent () {
					return this.ksm_cpu_percent;
				}
				
			    public Short active_vms;

				public Short getActive_vms () {
					return this.active_vms;
				}
				
			    public Short total_vms;

				public Short getTotal_vms () {
					return this.total_vms;
				}
				
			    public Integer total_vms_vcpus;

				public Integer getTotal_vms_vcpus () {
					return this.total_vms_vcpus;
				}
				
			    public Integer cpu_load;

				public Integer getCpu_load () {
					return this.cpu_load;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Integer swap_used_mb;

				public Integer getSwap_used_mb () {
					return this.swap_used_mb;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_status="+String.valueOf(host_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",ksm_shared_memory_mb="+String.valueOf(ksm_shared_memory_mb));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",ksm_cpu_percent="+String.valueOf(ksm_cpu_percent));
		sb.append(",active_vms="+String.valueOf(active_vms));
		sb.append(",total_vms="+String.valueOf(total_vms));
		sb.append(",total_vms_vcpus="+String.valueOf(total_vms_vcpus));
		sb.append(",cpu_load="+String.valueOf(cpu_load));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",swap_used_mb="+String.valueOf(swap_used_mb));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(host_aggregationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public short host_status;

				public short getHost_status () {
					return this.host_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Long ksm_shared_memory_mb;

				public Long getKsm_shared_memory_mb () {
					return this.ksm_shared_memory_mb;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short ksm_cpu_percent;

				public Short getKsm_cpu_percent () {
					return this.ksm_cpu_percent;
				}
				
			    public Short active_vms;

				public Short getActive_vms () {
					return this.active_vms;
				}
				
			    public Short total_vms;

				public Short getTotal_vms () {
					return this.total_vms;
				}
				
			    public Integer total_vms_vcpus;

				public Integer getTotal_vms_vcpus () {
					return this.total_vms_vcpus;
				}
				
			    public Integer cpu_load;

				public Integer getCpu_load () {
					return this.cpu_load;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Integer swap_used_mb;

				public Integer getSwap_used_mb () {
					return this.swap_used_mb;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_status="+String.valueOf(host_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",ksm_shared_memory_mb="+String.valueOf(ksm_shared_memory_mb));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",ksm_cpu_percent="+String.valueOf(ksm_cpu_percent));
		sb.append(",active_vms="+String.valueOf(active_vms));
		sb.append(",total_vms="+String.valueOf(total_vms));
		sb.append(",total_vms_vcpus="+String.valueOf(total_vms_vcpus));
		sb.append(",cpu_load="+String.valueOf(cpu_load));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",swap_used_mb="+String.valueOf(swap_used_mb));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
host_aggregationStruct host_aggregation = new host_aggregationStruct();
row7Struct row7 = new row7Struct();





	
	/**
	 * [tAggregateRow_2_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGOUT", false);
		start_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"host_aggregation");
					}
				
		int tos_count_tAggregateRow_2_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_2 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_2 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_2 utilClass_tAggregateRow_2 = new UtilClass_tAggregateRow_2();

	

	class AggOperationStruct_tAggregateRow_2 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object host_id;
    				short host_status;BigDecimal minutes_in_status_sum;
           			
           			Double memory_usage_percent_sum;
					int memory_usage_percent_count = 0;
           			
         			Short max_memory_usage_max;
           			Double cpu_usage_percent_sum;
					int cpu_usage_percent_count = 0;
           			
         			Short max_cpu_usage_max;
           			Double ksm_cpu_percent_sum;
					int ksm_cpu_percent_count = 0;
           			
         			Short max_ksm_cpu_percent_max;
           			Double active_vms_sum;
					int active_vms_count = 0;
           			
         			Short max_active_vms_max;
           			Double total_vms_sum;
					int total_vms_count = 0;
           			
         			Short max_total_vms_max;
           			Double total_vms_vcpus_sum;
					int total_vms_vcpus_count = 0;
           			
         			Integer max_total_vms_vcpus_max;
           			Double cpu_load_sum;
					int cpu_load_count = 0;
           			
         			Integer max_cpu_load_max;
           			Double system_cpu_usage_percent_sum;
					int system_cpu_usage_percent_count = 0;
           			
         			Short max_system_cpu_usage_percent_max;
           			Double user_cpu_usage_percent_sum;
					int user_cpu_usage_percent_count = 0;
           			
         			Short max_user_cpu_usage_percent_max;
           			Double swap_used_mb_sum;
					int swap_used_mb_count = 0;
           			
         			Integer max_swap_used_mb_max;
         			Integer host_configuration_version_last;BigDecimal ksm_shared_memory_mb_sum;
           			int ksm_shared_memory_mb_count = 0;
           			
         			Long max_ksm_shared_memory_mb_max;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.host_id == null) ? 0 : this.host_id.hashCode());
							
								result = prime * result + (int) this.host_status;
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_2 other = (AggOperationStruct_tAggregateRow_2) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.host_id == null) {
								if (other.host_id != null) 
									return false;
							} else if (!this.host_id.equals(other.host_id)) 
								return false;
						
							if (this.host_status != other.host_status) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_2 operation_result_tAggregateRow_2 = null;
	AggOperationStruct_tAggregateRow_2 operation_finder_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();
	java.util.Map<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2> hash_tAggregateRow_2 = new java.util.HashMap<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2>();
	

 



/**
 * [tAggregateRow_2_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
host_aggregationStruct host_aggregation_tmp = new host_aggregationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJDBCInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_2", false);
		start_Hash.put("tJDBCInput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_2";

	
		int tos_count_tJDBCInput_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_2 = (String)(restRequest_tJDBCInput_2 != null ? restRequest_tJDBCInput_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_2 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_2 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_2 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_2.createRuntimeProperties();
 		                    props_tJDBCInput_2.setValue("sql",
 		                    "SELECT \n  history_id, \n  history_datetime, \n  host_id, \n  host_status, \n  minutes_in_status, \n  memory_usage_perc"
+"ent, \n  ksm_shared_memory_mb,\n  cpu_usage_percent, \n  ksm_cpu_percent,  \n  active_vms,  \n  total_vms, \n  total_vms_"
+"vcpus, \n  cpu_load, \n  system_cpu_usage_percent,  \n  user_cpu_usage_percent, \n  swap_used_mb,  \n  host_configuratio"
+"n_version\nFROM host_hourly_history\nWHERE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\nAND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY history_datetime,\n		 host_id,\n      	 host_status");
 		                    
 		                    props_tJDBCInput_2.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_2.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_2\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_2_1_fisrt sst_tJDBCInput_2_1_fisrt = new SchemaSettingTool_tJDBCInput_2_1_fisrt();
 		                    
 		                    props_tJDBCInput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_2.tableSelection.setValue("tablename",
 		                    "host_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_2_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_2.trimTable).setValue("trim",tJDBCInput_2_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_2_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_2_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("host_id");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("host_status");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("minutes_in_status");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("memory_usage_percent");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("ksm_shared_memory_mb");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("cpu_usage_percent");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("ksm_cpu_percent");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("active_vms");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("total_vms");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("total_vms_vcpus");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("cpu_load");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("system_cpu_usage_percent");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("user_cpu_usage_percent");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("swap_used_mb");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("host_configuration_version");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_2.trimTable).setValue("columnName",tJDBCInput_2_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_2 = props_tJDBCInput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_2);
        }
    }
globalMap.put("tJDBCInput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_2_MAPPINGS_URL", mappings_url_tJDBCInput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_2 = null;
topology_tJDBCInput_2 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_2 = def_tJDBCInput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_2, topology_tJDBCInput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_2 = def_tJDBCInput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_2 = componentRuntime_tJDBCInput_2.initialize(container_tJDBCInput_2, props_tJDBCInput_2);

if (initVr_tJDBCInput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_2.getMessage());
}

if(componentRuntime_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_2;
	compDriverInitialization_tJDBCInput_2.runAtDriver(container_tJDBCInput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_2 = null;
if(componentRuntime_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_2;
	if (doesNodeBelongToRequest_tJDBCInput_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_2 = sourceOrSink_tJDBCInput_2.validate(container_tJDBCInput_2);
        if (vr_tJDBCInput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_2.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_2 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_2;
        reader_tJDBCInput_2 = source_tJDBCInput_2.createReader(container_tJDBCInput_2);
	    reader_tJDBCInput_2 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_2, container_tJDBCInput_2);

            boolean multi_output_is_allowed_tJDBCInput_2 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_2 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_2.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_2 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_2 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_2 = props_tJDBCInput_2.getSchema(c_tJDBCInput_2, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_2 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_2, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_2 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_2 = reader_tJDBCInput_2.start();

        resourceMap.put("reader_tJDBCInput_2", reader_tJDBCInput_2);

        for (; available_tJDBCInput_2; available_tJDBCInput_2 = reader_tJDBCInput_2.advance()) {
			nb_line_tJDBCInput_2++;

			
			if (multi_output_is_allowed_tJDBCInput_2) {
				
					row2 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_2 = reader_tJDBCInput_2.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_2) {
						row2 = new row2Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_2 == null) {
            factory_tJDBCInput_2 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_2.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_2.setWrapped(factory_tJDBCInput_2.convertToAvro(data_tJDBCInput_2));
                Object columnValue_0_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(0);
                    if (columnValue_0_tJDBCInput_2 == null) {
                        row2.history_id = 0;
                    } else {
                            row2.history_id = (long) (columnValue_0_tJDBCInput_2);
                    }
                Object columnValue_1_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(1);
                        row2.history_datetime = (java.util.Date) (columnValue_1_tJDBCInput_2);
                Object columnValue_2_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(2);
                        row2.host_id = (Object) (columnValue_2_tJDBCInput_2);
                Object columnValue_3_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(3);
                    if (columnValue_3_tJDBCInput_2 == null) {
                        row2.host_status = 0;
                    } else {
                            row2.host_status = (short) (columnValue_3_tJDBCInput_2);
                    }
                Object columnValue_4_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(4);
                    if (columnValue_4_tJDBCInput_2 == null) {
                        row2.minutes_in_status = 0;
                    } else {
                            row2.minutes_in_status = (double) (columnValue_4_tJDBCInput_2);
                    }
                Object columnValue_5_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(5);
                        row2.memory_usage_percent = (Short) (columnValue_5_tJDBCInput_2);
                Object columnValue_6_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(6);
                        row2.ksm_shared_memory_mb = (Long) (columnValue_6_tJDBCInput_2);
                Object columnValue_7_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(7);
                        row2.cpu_usage_percent = (Short) (columnValue_7_tJDBCInput_2);
                Object columnValue_8_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(8);
                        row2.ksm_cpu_percent = (Short) (columnValue_8_tJDBCInput_2);
                Object columnValue_9_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(9);
                        row2.active_vms = (Short) (columnValue_9_tJDBCInput_2);
                Object columnValue_10_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(10);
                        row2.total_vms = (Short) (columnValue_10_tJDBCInput_2);
                Object columnValue_11_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(11);
                        row2.total_vms_vcpus = (Integer) (columnValue_11_tJDBCInput_2);
                Object columnValue_12_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(12);
                        row2.cpu_load = (Integer) (columnValue_12_tJDBCInput_2);
                Object columnValue_13_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(13);
                        row2.system_cpu_usage_percent = (Short) (columnValue_13_tJDBCInput_2);
                Object columnValue_14_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(14);
                        row2.user_cpu_usage_percent = (Short) (columnValue_14_tJDBCInput_2);
                Object columnValue_15_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(15);
                        row2.swap_used_mb = (Integer) (columnValue_15_tJDBCInput_2);
                Object columnValue_16_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(16);
                        row2.host_configuration_version = (Integer) (columnValue_16_tJDBCInput_2);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_2) {
				java.util.Map<String,Object> info_tJDBCInput_2 = e_tJDBCInput_2.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_2 = null;
					if(info_tJDBCInput_2.containsKey("error")){
						errorMessage_tJDBCInput_2 = info_tJDBCInput_2.get("error");
					}else if(info_tJDBCInput_2.containsKey("errorMessage")){
						errorMessage_tJDBCInput_2 = info_tJDBCInput_2.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_2 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_2 = "Row "+ nb_line_tJDBCInput_2 + ": "+errorMessage_tJDBCInput_2;
					System.err.println(errorMessage_tJDBCInput_2);
				
					// If the record is reject, the main line record should put NULL
					row2 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_2 = null;


 



/**
 * [tJDBCInput_2 begin ] stop
 */
	
	/**
	 * [tJDBCInput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 


	tos_count_tJDBCInput_2++;

/**
 * [tJDBCInput_2 main ] stop
 */
	
	/**
	 * [tJDBCInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 



/**
 * [tJDBCInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_2 = false;
		  boolean mainRowRejected_tMap_2 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

host_aggregation = null;


// # Output table : 'host_aggregation'
host_aggregation_tmp.history_datetime = RoutineHistoryETL.startOfDay(row2.history_datetime) ;
host_aggregation_tmp.host_id = row2.host_id;
host_aggregation_tmp.host_status = row2.host_status;
host_aggregation_tmp.minutes_in_status = row2.minutes_in_status;
host_aggregation_tmp.memory_usage_percent = row2.memory_usage_percent;
host_aggregation_tmp.ksm_shared_memory_mb = row2.ksm_shared_memory_mb ;
host_aggregation_tmp.cpu_usage_percent = row2.cpu_usage_percent;
host_aggregation_tmp.ksm_cpu_percent = row2.ksm_cpu_percent;
host_aggregation_tmp.active_vms = row2.active_vms;
host_aggregation_tmp.total_vms = row2.total_vms;
host_aggregation_tmp.total_vms_vcpus = row2.total_vms_vcpus;
host_aggregation_tmp.cpu_load = row2.cpu_load;
host_aggregation_tmp.system_cpu_usage_percent = row2.system_cpu_usage_percent;
host_aggregation_tmp.user_cpu_usage_percent = row2.user_cpu_usage_percent;
host_aggregation_tmp.swap_used_mb = row2.swap_used_mb;
host_aggregation_tmp.host_configuration_version = row2.host_configuration_version;
host_aggregation = host_aggregation_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "host_aggregation"
if(host_aggregation != null) { 



	
	/**
	 * [tAggregateRow_2_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"host_aggregation"
						
						);
					}
					
	
operation_finder_tAggregateRow_2.history_datetime = host_aggregation.history_datetime;
			operation_finder_tAggregateRow_2.host_id = host_aggregation.host_id;
			operation_finder_tAggregateRow_2.host_status = host_aggregation.host_status;
			

	operation_finder_tAggregateRow_2.hashCodeDirty = true;
	
	operation_result_tAggregateRow_2 = hash_tAggregateRow_2.get(operation_finder_tAggregateRow_2);

	
		boolean isFirstAdd_tAggregateRow_2 = false;
	

	if(operation_result_tAggregateRow_2 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();

		operation_result_tAggregateRow_2.history_datetime = operation_finder_tAggregateRow_2.history_datetime;
				operation_result_tAggregateRow_2.host_id = operation_finder_tAggregateRow_2.host_id;
				operation_result_tAggregateRow_2.host_status = operation_finder_tAggregateRow_2.host_status;
				
		
		
			isFirstAdd_tAggregateRow_2 = true;
		

		hash_tAggregateRow_2.put(operation_result_tAggregateRow_2, operation_result_tAggregateRow_2);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_2.minutes_in_status_sum == null) {
						operation_result_tAggregateRow_2.minutes_in_status_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_2.minutes_in_status_sum = operation_result_tAggregateRow_2.minutes_in_status_sum.add(
						new BigDecimal(
							String.valueOf(
								host_aggregation.minutes_in_status
							)
						)
					);
					
				if(host_aggregation.memory_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.memory_usage_percent_count++;
				
					if(operation_result_tAggregateRow_2.memory_usage_percent_sum == null) {
						operation_result_tAggregateRow_2.memory_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_2.memory_usage_percent_sum = (double)(operation_result_tAggregateRow_2.memory_usage_percent_sum.doubleValue() + host_aggregation.memory_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.memory_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_memory_usage_max == null || 
						host_aggregation.memory_usage_percent > operation_result_tAggregateRow_2.max_memory_usage_max
						
					) {
						operation_result_tAggregateRow_2.max_memory_usage_max = host_aggregation.memory_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_2.cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_2.cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_2.cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_2.cpu_usage_percent_sum.doubleValue() + host_aggregation.cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_cpu_usage_max == null || 
						host_aggregation.cpu_usage_percent > operation_result_tAggregateRow_2.max_cpu_usage_max
						
					) {
						operation_result_tAggregateRow_2.max_cpu_usage_max = host_aggregation.cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.ksm_cpu_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.ksm_cpu_percent_count++;
				
					if(operation_result_tAggregateRow_2.ksm_cpu_percent_sum == null) {
						operation_result_tAggregateRow_2.ksm_cpu_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_2.ksm_cpu_percent_sum = (double)(operation_result_tAggregateRow_2.ksm_cpu_percent_sum.doubleValue() + host_aggregation.ksm_cpu_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.ksm_cpu_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_ksm_cpu_percent_max == null || 
						host_aggregation.ksm_cpu_percent > operation_result_tAggregateRow_2.max_ksm_cpu_percent_max
						
					) {
						operation_result_tAggregateRow_2.max_ksm_cpu_percent_max = host_aggregation.ksm_cpu_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.active_vms != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.active_vms_count++;
				
					if(operation_result_tAggregateRow_2.active_vms_sum == null) {
						operation_result_tAggregateRow_2.active_vms_sum = (double) 0;
					}
					operation_result_tAggregateRow_2.active_vms_sum = (double)(operation_result_tAggregateRow_2.active_vms_sum.doubleValue() + host_aggregation.active_vms.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.active_vms != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_active_vms_max == null || 
						host_aggregation.active_vms > operation_result_tAggregateRow_2.max_active_vms_max
						
					) {
						operation_result_tAggregateRow_2.max_active_vms_max = host_aggregation.active_vms;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.total_vms != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.total_vms_count++;
				
					if(operation_result_tAggregateRow_2.total_vms_sum == null) {
						operation_result_tAggregateRow_2.total_vms_sum = (double) 0;
					}
					operation_result_tAggregateRow_2.total_vms_sum = (double)(operation_result_tAggregateRow_2.total_vms_sum.doubleValue() + host_aggregation.total_vms.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.total_vms != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_total_vms_max == null || 
						host_aggregation.total_vms > operation_result_tAggregateRow_2.max_total_vms_max
						
					) {
						operation_result_tAggregateRow_2.max_total_vms_max = host_aggregation.total_vms;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.total_vms_vcpus != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.total_vms_vcpus_count++;
				
					if(operation_result_tAggregateRow_2.total_vms_vcpus_sum == null) {
						operation_result_tAggregateRow_2.total_vms_vcpus_sum = (double) 0;
					}
					
					if( host_aggregation.total_vms_vcpus != null)
						operation_result_tAggregateRow_2.total_vms_vcpus_sum += host_aggregation.total_vms_vcpus;
				} // G_OutMain_AggR_546
				
				if(host_aggregation.total_vms_vcpus != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_total_vms_vcpus_max == null || 
						host_aggregation.total_vms_vcpus > operation_result_tAggregateRow_2.max_total_vms_vcpus_max
						
					) {
						operation_result_tAggregateRow_2.max_total_vms_vcpus_max = host_aggregation.total_vms_vcpus;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.cpu_load != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.cpu_load_count++;
				
					if(operation_result_tAggregateRow_2.cpu_load_sum == null) {
						operation_result_tAggregateRow_2.cpu_load_sum = (double) 0;
					}
					
					if( host_aggregation.cpu_load != null)
						operation_result_tAggregateRow_2.cpu_load_sum += host_aggregation.cpu_load;
				} // G_OutMain_AggR_546
				
				if(host_aggregation.cpu_load != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_cpu_load_max == null || 
						host_aggregation.cpu_load > operation_result_tAggregateRow_2.max_cpu_load_max
						
					) {
						operation_result_tAggregateRow_2.max_cpu_load_max = host_aggregation.cpu_load;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.system_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.system_cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_2.system_cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_2.system_cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_2.system_cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_2.system_cpu_usage_percent_sum.doubleValue() + host_aggregation.system_cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.system_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_system_cpu_usage_percent_max == null || 
						host_aggregation.system_cpu_usage_percent > operation_result_tAggregateRow_2.max_system_cpu_usage_percent_max
						
					) {
						operation_result_tAggregateRow_2.max_system_cpu_usage_percent_max = host_aggregation.system_cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.user_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.user_cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_2.user_cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_2.user_cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_2.user_cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_2.user_cpu_usage_percent_sum.doubleValue() + host_aggregation.user_cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.user_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_user_cpu_usage_percent_max == null || 
						host_aggregation.user_cpu_usage_percent > operation_result_tAggregateRow_2.max_user_cpu_usage_percent_max
						
					) {
						operation_result_tAggregateRow_2.max_user_cpu_usage_percent_max = host_aggregation.user_cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.swap_used_mb != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.swap_used_mb_count++;
				
					if(operation_result_tAggregateRow_2.swap_used_mb_sum == null) {
						operation_result_tAggregateRow_2.swap_used_mb_sum = (double) 0;
					}
					
					if( host_aggregation.swap_used_mb != null)
						operation_result_tAggregateRow_2.swap_used_mb_sum += host_aggregation.swap_used_mb;
				} // G_OutMain_AggR_546
				
				if(host_aggregation.swap_used_mb != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_swap_used_mb_max == null || 
						host_aggregation.swap_used_mb > operation_result_tAggregateRow_2.max_swap_used_mb_max
						
					) {
						operation_result_tAggregateRow_2.max_swap_used_mb_max = host_aggregation.swap_used_mb;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.host_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_2.host_configuration_version_last = host_aggregation.host_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(host_aggregation.ksm_shared_memory_mb != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_2.ksm_shared_memory_mb_count++;
				
					if(operation_result_tAggregateRow_2.ksm_shared_memory_mb_sum == null) {
						operation_result_tAggregateRow_2.ksm_shared_memory_mb_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_2.ksm_shared_memory_mb_sum = operation_result_tAggregateRow_2.ksm_shared_memory_mb_sum.add(
						new BigDecimal(
							String.valueOf(
								host_aggregation.ksm_shared_memory_mb
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(host_aggregation.ksm_shared_memory_mb != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_2.max_ksm_shared_memory_mb_max == null || 
						host_aggregation.ksm_shared_memory_mb > operation_result_tAggregateRow_2.max_ksm_shared_memory_mb_max
						
					) {
						operation_result_tAggregateRow_2.max_ksm_shared_memory_mb_max = host_aggregation.ksm_shared_memory_mb;
					}
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_2_AGGOUT++;

/**
 * [tAggregateRow_2_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";

	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";

	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_end ] stop
 */

} // End of branch "host_aggregation"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 



/**
 * [tJDBCInput_2 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	
// end of generic


resourceMap.put("finish_tJDBCInput_2", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_2 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_2 = null;
    if (reader_tJDBCInput_2 != null) {
        reader_tJDBCInput_2.close();
        resultMap_tJDBCInput_2 = reader_tJDBCInput_2.getReturnValues();
    }
if(resultMap_tJDBCInput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_2 : resultMap_tJDBCInput_2.entrySet()) {
		switch(entry_tJDBCInput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "ERROR_MESSAGE", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_LINE", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_SUCCESS", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_REJECT", entry_tJDBCInput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_2 = new StringBuilder();
            for (int i_tJDBCInput_2 = 0; i_tJDBCInput_2 < entry_tJDBCInput_2.getKey().length(); i_tJDBCInput_2++) {
                char ch_tJDBCInput_2 = entry_tJDBCInput_2.getKey().charAt(i_tJDBCInput_2);
                if(Character.isUpperCase(ch_tJDBCInput_2) && i_tJDBCInput_2> 0) {
                	studio_key_tJDBCInput_2.append('_');
                }
                studio_key_tJDBCInput_2.append(ch_tJDBCInput_2);
            }
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", studio_key_tJDBCInput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_2.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_2", true);
end_Hash.put("tJDBCInput_2", System.currentTimeMillis());




/**
 * [tJDBCInput_2 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"host_aggregation");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_2_AGGOUT", true);
end_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGOUT end ] stop
 */


	
	/**
	 * [tJDBCOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_2", false);
		start_Hash.put("tJDBCOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tJDBCOutput_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_2 = (String)(restRequest_tJDBCOutput_2 != null ? restRequest_tJDBCOutput_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_2 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_2 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_2 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_2.createRuntimeProperties();
 		                    props_tJDBCOutput_2.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_2.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.tableSelection.setValue("tablename",
 		                    "host_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"host_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_1_fisrt sst_tJDBCOutput_2_1_fisrt = new SchemaSettingTool_tJDBCOutput_2_1_fisrt();
 		                    
 		                    props_tJDBCOutput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"host_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_2_fisrt sst_tJDBCOutput_2_2_fisrt = new SchemaSettingTool_tJDBCOutput_2_2_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"host_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_3_fisrt sst_tJDBCOutput_2_3_fisrt = new SchemaSettingTool_tJDBCOutput_2_3_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_2 = props_tJDBCOutput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_2);
        }
    }
globalMap.put("tJDBCOutput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_2_MAPPINGS_URL", mappings_url_tJDBCOutput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_2 = null;
topology_tJDBCOutput_2 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_2 = def_tJDBCOutput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_2, topology_tJDBCOutput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_2 = def_tJDBCOutput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_2 = componentRuntime_tJDBCOutput_2.initialize(container_tJDBCOutput_2, props_tJDBCOutput_2);

if (initVr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_2.getMessage());
}

if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_2;
	compDriverInitialization_tJDBCOutput_2.runAtDriver(container_tJDBCOutput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_2 = null;
if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_2;
	if (doesNodeBelongToRequest_tJDBCOutput_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_2 = sourceOrSink_tJDBCOutput_2.validate(container_tJDBCOutput_2);
        if (vr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_2.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_2 = null;
    if (sourceOrSink_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_2 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_2;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_2 = sink_tJDBCOutput_2.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writeOperation_tJDBCOutput_2.initialize(container_tJDBCOutput_2);
        }
        writer_tJDBCOutput_2 = writeOperation_tJDBCOutput_2.createWriter(container_tJDBCOutput_2);
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writer_tJDBCOutput_2.open("tJDBCOutput_2");
        }

        resourceMap.put("writer_tJDBCOutput_2", writer_tJDBCOutput_2);
    } // end of "sourceOrSink_tJDBCOutput_2 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_2 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_2.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_2 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_2 = props_tJDBCOutput_2.getSchema(c_tJDBCOutput_2, false);
    incomingEnforcer_tJDBCOutput_2 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_2);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_2 = null;


 



/**
 * [tJDBCOutput_2 begin ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGIN", false);
		start_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";

	
		int tos_count_tAggregateRow_2_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_2> values_tAggregateRow_2 = hash_tAggregateRow_2.values();

globalMap.put("tAggregateRow_2_NB_LINE", values_tAggregateRow_2.size());

for(AggOperationStruct_tAggregateRow_2 aggregated_row_tAggregateRow_2 : values_tAggregateRow_2) { // G_AggR_600



 



/**
 * [tAggregateRow_2_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";

	

            				    row7.history_datetime = aggregated_row_tAggregateRow_2.history_datetime;
            				    
            				    row7.host_id = aggregated_row_tAggregateRow_2.host_id;
            				    
            				    row7.host_status = aggregated_row_tAggregateRow_2.host_status;
            				    
    								if(aggregated_row_tAggregateRow_2.minutes_in_status_sum != null) {
    								row7.minutes_in_status = aggregated_row_tAggregateRow_2.minutes_in_status_sum.doubleValue();
										
    								}else{
    								
    									row7.minutes_in_status = 0;
    									
    								}
    								
                                if(aggregated_row_tAggregateRow_2.memory_usage_percent_count > 0){
                                	
	    								double row7_memory_usage_percent_temp = (double) aggregated_row_tAggregateRow_2.memory_usage_percent_sum / (double) aggregated_row_tAggregateRow_2.memory_usage_percent_count;
	    								
	    								row7.memory_usage_percent = (short) row7_memory_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.memory_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row7.max_memory_usage = aggregated_row_tAggregateRow_2.max_memory_usage_max;
                                if(aggregated_row_tAggregateRow_2.ksm_shared_memory_mb_count > 0){
                                	
	    								row7.ksm_shared_memory_mb = aggregated_row_tAggregateRow_2.ksm_shared_memory_mb_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_2.ksm_shared_memory_mb_count)), 10, BigDecimal.ROUND_HALF_UP)
	    								
	    									.longValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.ksm_shared_memory_mb = ParserUtils.parseTo_Long(count);
    									
                                }
                                row7.max_ksm_shared_memory_mb = aggregated_row_tAggregateRow_2.max_ksm_shared_memory_mb_max;
                                if(aggregated_row_tAggregateRow_2.cpu_usage_percent_count > 0){
                                	
	    								double row7_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_2.cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_2.cpu_usage_percent_count;
	    								
	    								row7.cpu_usage_percent = (short) row7_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row7.max_cpu_usage = aggregated_row_tAggregateRow_2.max_cpu_usage_max;
                                if(aggregated_row_tAggregateRow_2.ksm_cpu_percent_count > 0){
                                	
	    								double row7_ksm_cpu_percent_temp = (double) aggregated_row_tAggregateRow_2.ksm_cpu_percent_sum / (double) aggregated_row_tAggregateRow_2.ksm_cpu_percent_count;
	    								
	    								row7.ksm_cpu_percent = (short) row7_ksm_cpu_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.ksm_cpu_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row7.max_ksm_cpu_percent = aggregated_row_tAggregateRow_2.max_ksm_cpu_percent_max;
                                if(aggregated_row_tAggregateRow_2.active_vms_count > 0){
                                	
	    								double row7_active_vms_temp = (double) aggregated_row_tAggregateRow_2.active_vms_sum / (double) aggregated_row_tAggregateRow_2.active_vms_count;
	    								
	    								row7.active_vms = (short) row7_active_vms_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.active_vms = ParserUtils.parseTo_Short(count);
    									
                                }
                                row7.max_active_vms = aggregated_row_tAggregateRow_2.max_active_vms_max;
                                if(aggregated_row_tAggregateRow_2.total_vms_count > 0){
                                	
	    								double row7_total_vms_temp = (double) aggregated_row_tAggregateRow_2.total_vms_sum / (double) aggregated_row_tAggregateRow_2.total_vms_count;
	    								
	    								row7.total_vms = (short) row7_total_vms_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.total_vms = ParserUtils.parseTo_Short(count);
    									
                                }
                                row7.max_total_vms = aggregated_row_tAggregateRow_2.max_total_vms_max;
                                if(aggregated_row_tAggregateRow_2.total_vms_vcpus_count > 0){
                                	
	    								double row7_total_vms_vcpus_temp = (double) aggregated_row_tAggregateRow_2.total_vms_vcpus_sum / (double) aggregated_row_tAggregateRow_2.total_vms_vcpus_count;
	    								
	    								row7.total_vms_vcpus = (int) row7_total_vms_vcpus_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.total_vms_vcpus = ParserUtils.parseTo_Integer(count);
    									
                                }
                                row7.max_total_vms_vcpus = aggregated_row_tAggregateRow_2.max_total_vms_vcpus_max;
                                if(aggregated_row_tAggregateRow_2.cpu_load_count > 0){
                                	
	    								double row7_cpu_load_temp = (double) aggregated_row_tAggregateRow_2.cpu_load_sum / (double) aggregated_row_tAggregateRow_2.cpu_load_count;
	    								
	    								row7.cpu_load = (int) row7_cpu_load_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.cpu_load = ParserUtils.parseTo_Integer(count);
    									
                                }
                                row7.max_cpu_load = aggregated_row_tAggregateRow_2.max_cpu_load_max;
                                if(aggregated_row_tAggregateRow_2.system_cpu_usage_percent_count > 0){
                                	
	    								double row7_system_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_2.system_cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_2.system_cpu_usage_percent_count;
	    								
	    								row7.system_cpu_usage_percent = (short) row7_system_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.system_cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row7.max_system_cpu_usage_percent = aggregated_row_tAggregateRow_2.max_system_cpu_usage_percent_max;
                                if(aggregated_row_tAggregateRow_2.user_cpu_usage_percent_count > 0){
                                	
	    								double row7_user_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_2.user_cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_2.user_cpu_usage_percent_count;
	    								
	    								row7.user_cpu_usage_percent = (short) row7_user_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.user_cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row7.max_user_cpu_usage_percent = aggregated_row_tAggregateRow_2.max_user_cpu_usage_percent_max;
                                if(aggregated_row_tAggregateRow_2.swap_used_mb_count > 0){
                                	
	    								double row7_swap_used_mb_temp = (double) aggregated_row_tAggregateRow_2.swap_used_mb_sum / (double) aggregated_row_tAggregateRow_2.swap_used_mb_count;
	    								
	    								row7.swap_used_mb = (int) row7_swap_used_mb_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row7.swap_used_mb = ParserUtils.parseTo_Integer(count);
    									
                                }
                                row7.max_swap_used_mb = aggregated_row_tAggregateRow_2.max_swap_used_mb_max;
                                row7.host_configuration_version = aggregated_row_tAggregateRow_2.host_configuration_version_last;

 


	tos_count_tAggregateRow_2_AGGIN++;

/**
 * [tAggregateRow_2_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";

	

 



/**
 * [tAggregateRow_2_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_2 != null) {
            incomingEnforcer_tJDBCOutput_2.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_2.put("history_datetime", row7.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("host_id") != null){
                    incomingEnforcer_tJDBCOutput_2.put("host_id", row7.host_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("host_status") != null){
                    incomingEnforcer_tJDBCOutput_2.put("host_status", row7.host_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("minutes_in_status") != null){
                    incomingEnforcer_tJDBCOutput_2.put("minutes_in_status", row7.minutes_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("memory_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("memory_usage_percent", row7.memory_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_memory_usage") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_memory_usage", row7.max_memory_usage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("ksm_shared_memory_mb") != null){
                    incomingEnforcer_tJDBCOutput_2.put("ksm_shared_memory_mb", row7.ksm_shared_memory_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_ksm_shared_memory_mb") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_ksm_shared_memory_mb", row7.max_ksm_shared_memory_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("cpu_usage_percent", row7.cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_cpu_usage") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_cpu_usage", row7.max_cpu_usage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("ksm_cpu_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("ksm_cpu_percent", row7.ksm_cpu_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_ksm_cpu_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_ksm_cpu_percent", row7.max_ksm_cpu_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("active_vms") != null){
                    incomingEnforcer_tJDBCOutput_2.put("active_vms", row7.active_vms);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_active_vms") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_active_vms", row7.max_active_vms);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("total_vms") != null){
                    incomingEnforcer_tJDBCOutput_2.put("total_vms", row7.total_vms);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_total_vms") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_total_vms", row7.max_total_vms);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("total_vms_vcpus") != null){
                    incomingEnforcer_tJDBCOutput_2.put("total_vms_vcpus", row7.total_vms_vcpus);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_total_vms_vcpus") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_total_vms_vcpus", row7.max_total_vms_vcpus);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("cpu_load") != null){
                    incomingEnforcer_tJDBCOutput_2.put("cpu_load", row7.cpu_load);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_cpu_load") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_cpu_load", row7.max_cpu_load);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("system_cpu_usage_percent", row7.system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_system_cpu_usage_percent", row7.max_system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("user_cpu_usage_percent", row7.user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_user_cpu_usage_percent", row7.max_user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("swap_used_mb") != null){
                    incomingEnforcer_tJDBCOutput_2.put("swap_used_mb", row7.swap_used_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("max_swap_used_mb") != null){
                    incomingEnforcer_tJDBCOutput_2.put("max_swap_used_mb", row7.max_swap_used_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_2.put("host_configuration_version", row7.host_configuration_version);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_2 = null;
        if (incomingEnforcer_tJDBCOutput_2 != null) {
            data_tJDBCOutput_2 = incomingEnforcer_tJDBCOutput_2.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_2 != null && data_tJDBCOutput_2 != null) {
        	writer_tJDBCOutput_2.write(data_tJDBCOutput_2);
        }
        
        nb_line_tJDBCOutput_2++;

 


	tos_count_tJDBCOutput_2++;

/**
 * [tJDBCOutput_2 main ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";

	

 



/**
 * [tAggregateRow_2_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_2_AGGIN", true);
end_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGIN end ] stop
 */

	
	/**
	 * [tJDBCOutput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_2", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_2 = null;
    if (writer_tJDBCOutput_2 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_2 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_2.close();
        resultMap_tJDBCOutput_2 = writer_tJDBCOutput_2.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_2), container_tJDBCOutput_2);
    }
if(resultMap_tJDBCOutput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_2 : resultMap_tJDBCOutput_2.entrySet()) {
		switch(entry_tJDBCOutput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "ERROR_MESSAGE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_LINE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_SUCCESS", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_REJECT", entry_tJDBCOutput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_2 = new StringBuilder();
            for (int i_tJDBCOutput_2 = 0; i_tJDBCOutput_2 < entry_tJDBCOutput_2.getKey().length(); i_tJDBCOutput_2++) {
                char ch_tJDBCOutput_2 = entry_tJDBCOutput_2.getKey().charAt(i_tJDBCOutput_2);
                if(Character.isUpperCase(ch_tJDBCOutput_2) && i_tJDBCOutput_2> 0) {
                	studio_key_tJDBCOutput_2.append('_');
                }
                studio_key_tJDBCOutput_2.append(ch_tJDBCOutput_2);
            }
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", studio_key_tJDBCOutput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_2.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_2", true);
end_Hash.put("tJDBCOutput_2", System.currentTimeMillis());




/**
 * [tJDBCOutput_2 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_2_AGGIN"
							globalMap.remove("tAggregateRow_2");
						
				try{
					
	
	/**
	 * [tJDBCInput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_2")==null){
    if(resourceMap.get("reader_tJDBCInput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_2")).close();
		} catch (java.io.IOException e_tJDBCInput_2) {
			String errorMessage_tJDBCInput_2 = "failed to release the resource in tJDBCInput_2 :" + e_tJDBCInput_2.getMessage();
			System.err.println(errorMessage_tJDBCInput_2);
		}
	}
}
 



/**
 * [tJDBCInput_2 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";

	

 



/**
 * [tAggregateRow_2_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";

	

 



/**
 * [tAggregateRow_2_AGGIN finally ] stop
 */

	
	/**
	 * [tJDBCOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_2")==null){
    if(resourceMap.get("writer_tJDBCOutput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_2")).close();
		} catch (java.io.IOException e_tJDBCOutput_2) {
			String errorMessage_tJDBCOutput_2 = "failed to release the resource in tJDBCOutput_2 :" + e_tJDBCOutput_2.getMessage();
			System.err.println(errorMessage_tJDBCOutput_2);
		}
	}
}
 



/**
 * [tJDBCOutput_2 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double max_receive_rate_percent;

				public Double getMax_receive_rate_percent () {
					return this.max_receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double max_transmit_rate_percent;

				public Double getMax_transmit_rate_percent () {
					return this.max_transmit_rate_percent;
				}
				
			    public Integer host_interface_configuration_version;

				public Integer getHost_interface_configuration_version () {
					return this.host_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",max_receive_rate_percent="+String.valueOf(max_receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",max_transmit_rate_percent="+String.valueOf(max_transmit_rate_percent));
		sb.append(",host_interface_configuration_version="+String.valueOf(host_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_3 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_3> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double max_receive_rate_percent;

				public Double getMax_receive_rate_percent () {
					return this.max_receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double max_transmit_rate_percent;

				public Double getMax_transmit_rate_percent () {
					return this.max_transmit_rate_percent;
				}
				
			    public Integer host_interface_configuration_version;

				public Integer getHost_interface_configuration_version () {
					return this.host_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",max_receive_rate_percent="+String.valueOf(max_receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",max_transmit_rate_percent="+String.valueOf(max_transmit_rate_percent));
		sb.append(",host_interface_configuration_version="+String.valueOf(host_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_3 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class host_history_history_aggregateStruct implements routines.system.IPersistableRow<host_history_history_aggregateStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Integer host_interface_configuration_version;

				public Integer getHost_interface_configuration_version () {
					return this.host_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",host_interface_configuration_version="+String.valueOf(host_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(host_history_history_aggregateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Integer host_interface_configuration_version;

				public Integer getHost_interface_configuration_version () {
					return this.host_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",host_interface_configuration_version="+String.valueOf(host_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
host_history_history_aggregateStruct host_history_history_aggregate = new host_history_history_aggregateStruct();
row8Struct row8 = new row8Struct();





	
	/**
	 * [tAggregateRow_3_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGOUT", false);
		start_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"host_history_history_aggregate");
					}
				
		int tos_count_tAggregateRow_3_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_3 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_3 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_3 utilClass_tAggregateRow_3 = new UtilClass_tAggregateRow_3();

	

	class AggOperationStruct_tAggregateRow_3 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object host_interface_id;BigDecimal receive_rate_percent_sum;
           			int receive_rate_percent_count = 0;
           			
         			Double max_receive_rate_percent_max;BigDecimal transmit_rate_percent_sum;
           			int transmit_rate_percent_count = 0;
           			
         			Double max_transmit_rate_percent_max;
         			Integer host_interface_configuration_version_last;
         			Double received_total_byte_last;
         			Double transmitted_total_byte_last;
         			Double received_dropped_total_packets_last;
         			Double transmitted_dropped_total_packets_last;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.host_interface_id == null) ? 0 : this.host_interface_id.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_3 other = (AggOperationStruct_tAggregateRow_3) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.host_interface_id == null) {
								if (other.host_interface_id != null) 
									return false;
							} else if (!this.host_interface_id.equals(other.host_interface_id)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_3 operation_result_tAggregateRow_3 = null;
	AggOperationStruct_tAggregateRow_3 operation_finder_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();
	java.util.Map<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3> hash_tAggregateRow_3 = new java.util.HashMap<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3>();
	

 



/**
 * [tAggregateRow_3_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
host_history_history_aggregateStruct host_history_history_aggregate_tmp = new host_history_history_aggregateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tJDBCInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_3", false);
		start_Hash.put("tJDBCInput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_3";

	
		int tos_count_tJDBCInput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_3 = (String)(restRequest_tJDBCInput_3 != null ? restRequest_tJDBCInput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_3 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_3 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_3 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_3.createRuntimeProperties();
 		                    props_tJDBCInput_3.setValue("sql",
 		                    "SELECT\n history_id,\n history_datetime,\n host_interface_id,\n receive_rate_percent,\n transmit_rate_percent,\n host_in"
+"terface_configuration_version,\n received_total_byte,\n transmitted_total_byte,\n received_dropped_total_packets,\n transmit"
+"ted_dropped_total_packets\nFROM host_interface_hourly_history\nWHERE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\nAND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY history_datetime,\n      	 host_interface_id");
 		                    
 		                    props_tJDBCInput_3.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_3.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_3\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_3_1_fisrt sst_tJDBCInput_3_1_fisrt = new SchemaSettingTool_tJDBCInput_3_1_fisrt();
 		                    
 		                    props_tJDBCInput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_3.tableSelection.setValue("tablename",
 		                    "host_interface_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("trim",tJDBCInput_3_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_3_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("host_interface_id");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("receive_rate_percent");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("transmit_rate_percent");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("host_interface_configuration_version");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("received_total_byte");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("transmitted_total_byte");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("received_dropped_total_packets");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("transmitted_dropped_total_packets");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("columnName",tJDBCInput_3_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_3 = props_tJDBCInput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_3);
        }
    }
globalMap.put("tJDBCInput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_3_MAPPINGS_URL", mappings_url_tJDBCInput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_3 = null;
topology_tJDBCInput_3 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_3 = def_tJDBCInput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_3, topology_tJDBCInput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_3 = def_tJDBCInput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_3 = componentRuntime_tJDBCInput_3.initialize(container_tJDBCInput_3, props_tJDBCInput_3);

if (initVr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_3.getMessage());
}

if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_3;
	compDriverInitialization_tJDBCInput_3.runAtDriver(container_tJDBCInput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_3 = null;
if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_3;
	if (doesNodeBelongToRequest_tJDBCInput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_3 = sourceOrSink_tJDBCInput_3.validate(container_tJDBCInput_3);
        if (vr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_3.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_3 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_3;
        reader_tJDBCInput_3 = source_tJDBCInput_3.createReader(container_tJDBCInput_3);
	    reader_tJDBCInput_3 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_3, container_tJDBCInput_3);

            boolean multi_output_is_allowed_tJDBCInput_3 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_3 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_3.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_3 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_3 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_3 = props_tJDBCInput_3.getSchema(c_tJDBCInput_3, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_3 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_3, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_3 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_3 = reader_tJDBCInput_3.start();

        resourceMap.put("reader_tJDBCInput_3", reader_tJDBCInput_3);

        for (; available_tJDBCInput_3; available_tJDBCInput_3 = reader_tJDBCInput_3.advance()) {
			nb_line_tJDBCInput_3++;

			
			if (multi_output_is_allowed_tJDBCInput_3) {
				
					row3 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_3 = reader_tJDBCInput_3.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_3) {
						row3 = new row3Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_3 == null) {
            factory_tJDBCInput_3 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_3.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_3.setWrapped(factory_tJDBCInput_3.convertToAvro(data_tJDBCInput_3));
                Object columnValue_0_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(0);
                    if (columnValue_0_tJDBCInput_3 == null) {
                        row3.history_id = 0;
                    } else {
                            row3.history_id = (long) (columnValue_0_tJDBCInput_3);
                    }
                Object columnValue_1_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(1);
                        row3.history_datetime = (java.util.Date) (columnValue_1_tJDBCInput_3);
                Object columnValue_2_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(2);
                        row3.host_interface_id = (Object) (columnValue_2_tJDBCInput_3);
                Object columnValue_3_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(3);
                        row3.receive_rate_percent = (Double) (columnValue_3_tJDBCInput_3);
                Object columnValue_4_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(4);
                        row3.transmit_rate_percent = (Double) (columnValue_4_tJDBCInput_3);
                Object columnValue_5_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(5);
                        row3.host_interface_configuration_version = (Integer) (columnValue_5_tJDBCInput_3);
                Object columnValue_6_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(6);
                        row3.received_total_byte = (Double) (columnValue_6_tJDBCInput_3);
                Object columnValue_7_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(7);
                        row3.transmitted_total_byte = (Double) (columnValue_7_tJDBCInput_3);
                Object columnValue_8_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(8);
                        row3.received_dropped_total_packets = (Double) (columnValue_8_tJDBCInput_3);
                Object columnValue_9_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(9);
                        row3.transmitted_dropped_total_packets = (Double) (columnValue_9_tJDBCInput_3);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_3) {
				java.util.Map<String,Object> info_tJDBCInput_3 = e_tJDBCInput_3.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_3 = null;
					if(info_tJDBCInput_3.containsKey("error")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("error");
					}else if(info_tJDBCInput_3.containsKey("errorMessage")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_3 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_3 = "Row "+ nb_line_tJDBCInput_3 + ": "+errorMessage_tJDBCInput_3;
					System.err.println(errorMessage_tJDBCInput_3);
				
					// If the record is reject, the main line record should put NULL
					row3 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_3 = null;


 



/**
 * [tJDBCInput_3 begin ] stop
 */
	
	/**
	 * [tJDBCInput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 


	tos_count_tJDBCInput_3++;

/**
 * [tJDBCInput_3 main ] stop
 */
	
	/**
	 * [tJDBCInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_3 = false;
		  boolean mainRowRejected_tMap_3 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

host_history_history_aggregate = null;


// # Output table : 'host_history_history_aggregate'
host_history_history_aggregate_tmp.history_datetime = RoutineHistoryETL.startOfDay(row3.history_datetime) ;
host_history_history_aggregate_tmp.host_interface_id = row3.host_interface_id;
host_history_history_aggregate_tmp.receive_rate_percent = row3.receive_rate_percent;
host_history_history_aggregate_tmp.transmit_rate_percent = row3.transmit_rate_percent;
host_history_history_aggregate_tmp.host_interface_configuration_version = row3.host_interface_configuration_version;
host_history_history_aggregate_tmp.received_total_byte = row3.received_total_byte ;
host_history_history_aggregate_tmp.transmitted_total_byte = row3.transmitted_total_byte ;
host_history_history_aggregate_tmp.received_dropped_total_packets = row3.received_dropped_total_packets ;
host_history_history_aggregate_tmp.transmitted_dropped_total_packets = row3.transmitted_dropped_total_packets ;
host_history_history_aggregate = host_history_history_aggregate_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "host_history_history_aggregate"
if(host_history_history_aggregate != null) { 



	
	/**
	 * [tAggregateRow_3_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"host_history_history_aggregate"
						
						);
					}
					
	
operation_finder_tAggregateRow_3.history_datetime = host_history_history_aggregate.history_datetime;
			operation_finder_tAggregateRow_3.host_interface_id = host_history_history_aggregate.host_interface_id;
			

	operation_finder_tAggregateRow_3.hashCodeDirty = true;
	
	operation_result_tAggregateRow_3 = hash_tAggregateRow_3.get(operation_finder_tAggregateRow_3);

	
		boolean isFirstAdd_tAggregateRow_3 = false;
	

	if(operation_result_tAggregateRow_3 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();

		operation_result_tAggregateRow_3.history_datetime = operation_finder_tAggregateRow_3.history_datetime;
				operation_result_tAggregateRow_3.host_interface_id = operation_finder_tAggregateRow_3.host_interface_id;
				
		
		
			isFirstAdd_tAggregateRow_3 = true;
		

		hash_tAggregateRow_3.put(operation_result_tAggregateRow_3, operation_result_tAggregateRow_3);
	
	} // G_OutMain_AggR_001


	
				if(host_history_history_aggregate.receive_rate_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_3.receive_rate_percent_count++;
				
					if(operation_result_tAggregateRow_3.receive_rate_percent_sum == null) {
						operation_result_tAggregateRow_3.receive_rate_percent_sum = new BigDecimal(0).setScale(4);
					}
					operation_result_tAggregateRow_3.receive_rate_percent_sum = operation_result_tAggregateRow_3.receive_rate_percent_sum.add(
						new BigDecimal(
							String.valueOf(
								host_history_history_aggregate.receive_rate_percent
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.receive_rate_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_3.max_receive_rate_percent_max == null || 
						host_history_history_aggregate.receive_rate_percent > operation_result_tAggregateRow_3.max_receive_rate_percent_max
						
					) {
						operation_result_tAggregateRow_3.max_receive_rate_percent_max = host_history_history_aggregate.receive_rate_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.transmit_rate_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_3.transmit_rate_percent_count++;
				
					if(operation_result_tAggregateRow_3.transmit_rate_percent_sum == null) {
						operation_result_tAggregateRow_3.transmit_rate_percent_sum = new BigDecimal(0).setScale(4);
					}
					operation_result_tAggregateRow_3.transmit_rate_percent_sum = operation_result_tAggregateRow_3.transmit_rate_percent_sum.add(
						new BigDecimal(
							String.valueOf(
								host_history_history_aggregate.transmit_rate_percent
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.transmit_rate_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_3.max_transmit_rate_percent_max == null || 
						host_history_history_aggregate.transmit_rate_percent > operation_result_tAggregateRow_3.max_transmit_rate_percent_max
						
					) {
						operation_result_tAggregateRow_3.max_transmit_rate_percent_max = host_history_history_aggregate.transmit_rate_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.host_interface_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_3.host_interface_configuration_version_last = host_history_history_aggregate.host_interface_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.received_total_byte != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_3.received_total_byte_last = host_history_history_aggregate.received_total_byte;
				
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.transmitted_total_byte != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_3.transmitted_total_byte_last = host_history_history_aggregate.transmitted_total_byte;
				
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.received_dropped_total_packets != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_3.received_dropped_total_packets_last = host_history_history_aggregate.received_dropped_total_packets;
				
				} // G_OutMain_AggR_546
				
				if(host_history_history_aggregate.transmitted_dropped_total_packets != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_3.transmitted_dropped_total_packets_last = host_history_history_aggregate.transmitted_dropped_total_packets;
				
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_3_AGGOUT++;

/**
 * [tAggregateRow_3_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";

	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";

	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_end ] stop
 */

} // End of branch "host_history_history_aggregate"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// end of generic


resourceMap.put("finish_tJDBCInput_3", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_3 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_3 = null;
    if (reader_tJDBCInput_3 != null) {
        reader_tJDBCInput_3.close();
        resultMap_tJDBCInput_3 = reader_tJDBCInput_3.getReturnValues();
    }
if(resultMap_tJDBCInput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_3 : resultMap_tJDBCInput_3.entrySet()) {
		switch(entry_tJDBCInput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "ERROR_MESSAGE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_LINE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_SUCCESS", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_REJECT", entry_tJDBCInput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_3 = new StringBuilder();
            for (int i_tJDBCInput_3 = 0; i_tJDBCInput_3 < entry_tJDBCInput_3.getKey().length(); i_tJDBCInput_3++) {
                char ch_tJDBCInput_3 = entry_tJDBCInput_3.getKey().charAt(i_tJDBCInput_3);
                if(Character.isUpperCase(ch_tJDBCInput_3) && i_tJDBCInput_3> 0) {
                	studio_key_tJDBCInput_3.append('_');
                }
                studio_key_tJDBCInput_3.append(ch_tJDBCInput_3);
            }
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", studio_key_tJDBCInput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_3.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_3", true);
end_Hash.put("tJDBCInput_3", System.currentTimeMillis());




/**
 * [tJDBCInput_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"host_history_history_aggregate");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_3_AGGOUT", true);
end_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGOUT end ] stop
 */


	
	/**
	 * [tJDBCOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_3", false);
		start_Hash.put("tJDBCOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tJDBCOutput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_3 = (String)(restRequest_tJDBCOutput_3 != null ? restRequest_tJDBCOutput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_3 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_3 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_3 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_3.createRuntimeProperties();
 		                    props_tJDBCOutput_3.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_3.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.tableSelection.setValue("tablename",
 		                    "host_interface_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_interface_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_1_fisrt sst_tJDBCOutput_3_1_fisrt = new SchemaSettingTool_tJDBCOutput_3_1_fisrt();
 		                    
 		                    props_tJDBCOutput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_interface_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_2_fisrt sst_tJDBCOutput_3_2_fisrt = new SchemaSettingTool_tJDBCOutput_3_2_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_interface_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_3_fisrt sst_tJDBCOutput_3_3_fisrt = new SchemaSettingTool_tJDBCOutput_3_3_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_3 = props_tJDBCOutput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_3);
        }
    }
globalMap.put("tJDBCOutput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_3_MAPPINGS_URL", mappings_url_tJDBCOutput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_3 = null;
topology_tJDBCOutput_3 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_3 = def_tJDBCOutput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_3, topology_tJDBCOutput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_3 = def_tJDBCOutput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_3 = componentRuntime_tJDBCOutput_3.initialize(container_tJDBCOutput_3, props_tJDBCOutput_3);

if (initVr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_3.getMessage());
}

if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_3;
	compDriverInitialization_tJDBCOutput_3.runAtDriver(container_tJDBCOutput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_3 = null;
if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_3;
	if (doesNodeBelongToRequest_tJDBCOutput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_3 = sourceOrSink_tJDBCOutput_3.validate(container_tJDBCOutput_3);
        if (vr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_3.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_3 = null;
    if (sourceOrSink_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_3 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_3;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_3 = sink_tJDBCOutput_3.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writeOperation_tJDBCOutput_3.initialize(container_tJDBCOutput_3);
        }
        writer_tJDBCOutput_3 = writeOperation_tJDBCOutput_3.createWriter(container_tJDBCOutput_3);
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writer_tJDBCOutput_3.open("tJDBCOutput_3");
        }

        resourceMap.put("writer_tJDBCOutput_3", writer_tJDBCOutput_3);
    } // end of "sourceOrSink_tJDBCOutput_3 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_3 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_3.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_3 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_3 = props_tJDBCOutput_3.getSchema(c_tJDBCOutput_3, false);
    incomingEnforcer_tJDBCOutput_3 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_3);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_3 = null;


 



/**
 * [tJDBCOutput_3 begin ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGIN", false);
		start_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";

	
		int tos_count_tAggregateRow_3_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_3> values_tAggregateRow_3 = hash_tAggregateRow_3.values();

globalMap.put("tAggregateRow_3_NB_LINE", values_tAggregateRow_3.size());

for(AggOperationStruct_tAggregateRow_3 aggregated_row_tAggregateRow_3 : values_tAggregateRow_3) { // G_AggR_600



 



/**
 * [tAggregateRow_3_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";

	

            				    row8.history_datetime = aggregated_row_tAggregateRow_3.history_datetime;
            				    
            				    row8.host_interface_id = aggregated_row_tAggregateRow_3.host_interface_id;
            				    
                                if(aggregated_row_tAggregateRow_3.receive_rate_percent_count > 0){
                                	
	    								row8.receive_rate_percent = aggregated_row_tAggregateRow_3.receive_rate_percent_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_3.receive_rate_percent_count)), 4, BigDecimal.ROUND_HALF_UP)
	    								
	    									.doubleValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row8.receive_rate_percent = ParserUtils.parseTo_Double(count);
    									
                                }
                                row8.max_receive_rate_percent = aggregated_row_tAggregateRow_3.max_receive_rate_percent_max;
                                if(aggregated_row_tAggregateRow_3.transmit_rate_percent_count > 0){
                                	
	    								row8.transmit_rate_percent = aggregated_row_tAggregateRow_3.transmit_rate_percent_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_3.transmit_rate_percent_count)), 4, BigDecimal.ROUND_HALF_UP)
	    								
	    									.doubleValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row8.transmit_rate_percent = ParserUtils.parseTo_Double(count);
    									
                                }
                                row8.max_transmit_rate_percent = aggregated_row_tAggregateRow_3.max_transmit_rate_percent_max;
                                row8.host_interface_configuration_version = aggregated_row_tAggregateRow_3.host_interface_configuration_version_last;
                                row8.received_total_byte = aggregated_row_tAggregateRow_3.received_total_byte_last;
                                row8.transmitted_total_byte = aggregated_row_tAggregateRow_3.transmitted_total_byte_last;
                                row8.received_dropped_total_packets = aggregated_row_tAggregateRow_3.received_dropped_total_packets_last;
                                row8.transmitted_dropped_total_packets = aggregated_row_tAggregateRow_3.transmitted_dropped_total_packets_last;

 


	tos_count_tAggregateRow_3_AGGIN++;

/**
 * [tAggregateRow_3_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";

	

 



/**
 * [tAggregateRow_3_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_3 != null) {
            incomingEnforcer_tJDBCOutput_3.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_3.put("history_datetime", row8.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("host_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("host_interface_id", row8.host_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("receive_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("receive_rate_percent", row8.receive_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("max_receive_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("max_receive_rate_percent", row8.max_receive_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("transmit_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("transmit_rate_percent", row8.transmit_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("max_transmit_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("max_transmit_rate_percent", row8.max_transmit_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("host_interface_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_3.put("host_interface_configuration_version", row8.host_interface_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("received_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_3.put("received_total_byte", row8.received_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("transmitted_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_3.put("transmitted_total_byte", row8.transmitted_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("received_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_3.put("received_dropped_total_packets", row8.received_dropped_total_packets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("transmitted_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_3.put("transmitted_dropped_total_packets", row8.transmitted_dropped_total_packets);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_3 = null;
        if (incomingEnforcer_tJDBCOutput_3 != null) {
            data_tJDBCOutput_3 = incomingEnforcer_tJDBCOutput_3.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_3 != null && data_tJDBCOutput_3 != null) {
        	writer_tJDBCOutput_3.write(data_tJDBCOutput_3);
        }
        
        nb_line_tJDBCOutput_3++;

 


	tos_count_tJDBCOutput_3++;

/**
 * [tJDBCOutput_3 main ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";

	

 



/**
 * [tAggregateRow_3_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_3_AGGIN", true);
end_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGIN end ] stop
 */

	
	/**
	 * [tJDBCOutput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_3", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_3 = null;
    if (writer_tJDBCOutput_3 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_3 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_3.close();
        resultMap_tJDBCOutput_3 = writer_tJDBCOutput_3.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_3), container_tJDBCOutput_3);
    }
if(resultMap_tJDBCOutput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_3 : resultMap_tJDBCOutput_3.entrySet()) {
		switch(entry_tJDBCOutput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "ERROR_MESSAGE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_LINE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_SUCCESS", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_REJECT", entry_tJDBCOutput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_3 = new StringBuilder();
            for (int i_tJDBCOutput_3 = 0; i_tJDBCOutput_3 < entry_tJDBCOutput_3.getKey().length(); i_tJDBCOutput_3++) {
                char ch_tJDBCOutput_3 = entry_tJDBCOutput_3.getKey().charAt(i_tJDBCOutput_3);
                if(Character.isUpperCase(ch_tJDBCOutput_3) && i_tJDBCOutput_3> 0) {
                	studio_key_tJDBCOutput_3.append('_');
                }
                studio_key_tJDBCOutput_3.append(ch_tJDBCOutput_3);
            }
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", studio_key_tJDBCOutput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_3.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_3", true);
end_Hash.put("tJDBCOutput_3", System.currentTimeMillis());




/**
 * [tJDBCOutput_3 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_3_AGGIN"
							globalMap.remove("tAggregateRow_3");
						
				try{
					
	
	/**
	 * [tJDBCInput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_3")==null){
    if(resourceMap.get("reader_tJDBCInput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_3")).close();
		} catch (java.io.IOException e_tJDBCInput_3) {
			String errorMessage_tJDBCInput_3 = "failed to release the resource in tJDBCInput_3 :" + e_tJDBCInput_3.getMessage();
			System.err.println(errorMessage_tJDBCInput_3);
		}
	}
}
 



/**
 * [tJDBCInput_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";

	

 



/**
 * [tAggregateRow_3_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";

	

 



/**
 * [tAggregateRow_3_AGGIN finally ] stop
 */

	
	/**
	 * [tJDBCOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_3")==null){
    if(resourceMap.get("writer_tJDBCOutput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_3")).close();
		} catch (java.io.IOException e_tJDBCOutput_3) {
			String errorMessage_tJDBCOutput_3 = "failed to release the resource in tJDBCOutput_3 :" + e_tJDBCOutput_3.getMessage();
			System.err.println(errorMessage_tJDBCOutput_3);
		}
	}
}
 



/**
 * [tJDBCOutput_3 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public short vm_status;

				public short getVm_status () {
					return this.vm_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short max_cpu_usage;

				public Short getMax_cpu_usage () {
					return this.max_cpu_usage;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short max_memory_usage;

				public Short getMax_memory_usage () {
					return this.max_memory_usage;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short max_user_cpu_usage_percent;

				public Short getMax_user_cpu_usage_percent () {
					return this.max_user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short max_system_cpu_usage_percent;

				public Short getMax_system_cpu_usage_percent () {
					return this.max_system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public Object current_user_id;

				public Object getCurrent_user_id () {
					return this.current_user_id;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				
			    public Long memory_buffered_kb;

				public Long getMemory_buffered_kb () {
					return this.memory_buffered_kb;
				}
				
			    public Long max_memory_buffered_kb;

				public Long getMax_memory_buffered_kb () {
					return this.max_memory_buffered_kb;
				}
				
			    public Long memory_cached_kb;

				public Long getMemory_cached_kb () {
					return this.memory_cached_kb;
				}
				
			    public Long max_memory_cached_kb;

				public Long getMax_memory_cached_kb () {
					return this.max_memory_cached_kb;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_buffered_kb = null;
           				} else {
           			    	this.max_memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_cached_kb = null;
           				} else {
           			    	this.max_memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_buffered_kb = null;
           				} else {
           			    	this.max_memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_cached_kb = null;
           				} else {
           			    	this.max_memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.max_memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
					// Long
				
						if(this.max_memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.max_memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
					// Long
				
						if(this.max_memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_status="+String.valueOf(vm_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",max_cpu_usage="+String.valueOf(max_cpu_usage));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",max_memory_usage="+String.valueOf(max_memory_usage));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",max_user_cpu_usage_percent="+String.valueOf(max_user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",max_system_cpu_usage_percent="+String.valueOf(max_system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",current_user_id="+String.valueOf(current_user_id));
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
		sb.append(",memory_buffered_kb="+String.valueOf(memory_buffered_kb));
		sb.append(",max_memory_buffered_kb="+String.valueOf(max_memory_buffered_kb));
		sb.append(",memory_cached_kb="+String.valueOf(memory_cached_kb));
		sb.append(",max_memory_cached_kb="+String.valueOf(max_memory_cached_kb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_4 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_4> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public short vm_status;

				public short getVm_status () {
					return this.vm_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short max_cpu_usage;

				public Short getMax_cpu_usage () {
					return this.max_cpu_usage;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short max_memory_usage;

				public Short getMax_memory_usage () {
					return this.max_memory_usage;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short max_user_cpu_usage_percent;

				public Short getMax_user_cpu_usage_percent () {
					return this.max_user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short max_system_cpu_usage_percent;

				public Short getMax_system_cpu_usage_percent () {
					return this.max_system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public Object current_user_id;

				public Object getCurrent_user_id () {
					return this.current_user_id;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				
			    public Long memory_buffered_kb;

				public Long getMemory_buffered_kb () {
					return this.memory_buffered_kb;
				}
				
			    public Long max_memory_buffered_kb;

				public Long getMax_memory_buffered_kb () {
					return this.max_memory_buffered_kb;
				}
				
			    public Long memory_cached_kb;

				public Long getMemory_cached_kb () {
					return this.memory_cached_kb;
				}
				
			    public Long max_memory_cached_kb;

				public Long getMax_memory_cached_kb () {
					return this.max_memory_cached_kb;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_buffered_kb = null;
           				} else {
           			    	this.max_memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_cached_kb = null;
           				} else {
           			    	this.max_memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_buffered_kb = null;
           				} else {
           			    	this.max_memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_cached_kb = null;
           				} else {
           			    	this.max_memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.max_memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
					// Long
				
						if(this.max_memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.max_memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
					// Long
				
						if(this.max_memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_status="+String.valueOf(vm_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",max_cpu_usage="+String.valueOf(max_cpu_usage));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",max_memory_usage="+String.valueOf(max_memory_usage));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",max_user_cpu_usage_percent="+String.valueOf(max_user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",max_system_cpu_usage_percent="+String.valueOf(max_system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",current_user_id="+String.valueOf(current_user_id));
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
		sb.append(",memory_buffered_kb="+String.valueOf(memory_buffered_kb));
		sb.append(",max_memory_buffered_kb="+String.valueOf(max_memory_buffered_kb));
		sb.append(",memory_cached_kb="+String.valueOf(memory_cached_kb));
		sb.append(",max_memory_cached_kb="+String.valueOf(max_memory_cached_kb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_4 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class vm_aggregate_historyStruct implements routines.system.IPersistableRow<vm_aggregate_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public short vm_status;

				public short getVm_status () {
					return this.vm_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public Object current_user_id;

				public Object getCurrent_user_id () {
					return this.current_user_id;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				
			    public Long memory_buffered_kb;

				public Long getMemory_buffered_kb () {
					return this.memory_buffered_kb;
				}
				
			    public Long memory_cached_kb;

				public Long getMemory_cached_kb () {
					return this.memory_cached_kb;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_status="+String.valueOf(vm_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",current_user_id="+String.valueOf(current_user_id));
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
		sb.append(",memory_buffered_kb="+String.valueOf(memory_buffered_kb));
		sb.append(",memory_cached_kb="+String.valueOf(memory_cached_kb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_aggregate_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public short vm_status;

				public short getVm_status () {
					return this.vm_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public Object current_user_id;

				public Object getCurrent_user_id () {
					return this.current_user_id;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				
			    public Long memory_buffered_kb;

				public Long getMemory_buffered_kb () {
					return this.memory_buffered_kb;
				}
				
			    public Long memory_cached_kb;

				public Long getMemory_cached_kb () {
					return this.memory_cached_kb;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_status="+String.valueOf(vm_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",current_user_id="+String.valueOf(current_user_id));
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
		sb.append(",memory_buffered_kb="+String.valueOf(memory_buffered_kb));
		sb.append(",memory_cached_kb="+String.valueOf(memory_cached_kb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
vm_aggregate_historyStruct vm_aggregate_history = new vm_aggregate_historyStruct();
row9Struct row9 = new row9Struct();





	
	/**
	 * [tAggregateRow_4_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGOUT", false);
		start_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_aggregate_history");
					}
				
		int tos_count_tAggregateRow_4_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_4 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_4 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_4 utilClass_tAggregateRow_4 = new UtilClass_tAggregateRow_4();

	

	class AggOperationStruct_tAggregateRow_4 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object vm_id;
    				short vm_status;BigDecimal minutes_in_status_sum;
           			
           			Double cpu_usage_percent_sum;
					int cpu_usage_percent_count = 0;
           			
         			Short max_cpu_usage_max;
           			Double memory_usage_percent_sum;
					int memory_usage_percent_count = 0;
           			
         			Short max_memory_usage_max;
           			Double user_cpu_usage_percent_sum;
					int user_cpu_usage_percent_count = 0;
           			
         			Short max_user_cpu_usage_percent_max;
           			Double system_cpu_usage_percent_sum;
					int system_cpu_usage_percent_count = 0;
           			
         			Short max_system_cpu_usage_percent_max;
         			String vm_ip_last;
         			Object current_user_id_last;
         			Object currently_running_on_host_last;
         			Integer vm_configuration_version_last;
         			Integer current_host_configuration_version_last;BigDecimal memory_buffered_kb_sum;
           			int memory_buffered_kb_count = 0;
           			
         			Long max_memory_buffered_kb_max;BigDecimal memory_cached_kb_sum;
           			int memory_cached_kb_count = 0;
           			
         			Long max_memory_cached_kb_max;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.vm_id == null) ? 0 : this.vm_id.hashCode());
							
								result = prime * result + (int) this.vm_status;
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_4 other = (AggOperationStruct_tAggregateRow_4) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.vm_id == null) {
								if (other.vm_id != null) 
									return false;
							} else if (!this.vm_id.equals(other.vm_id)) 
								return false;
						
							if (this.vm_status != other.vm_status) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_4 operation_result_tAggregateRow_4 = null;
	AggOperationStruct_tAggregateRow_4 operation_finder_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();
	java.util.Map<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4> hash_tAggregateRow_4 = new java.util.HashMap<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4>();
	

 



/**
 * [tAggregateRow_4_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_aggregate_historyStruct vm_aggregate_history_tmp = new vm_aggregate_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tJDBCInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_4", false);
		start_Hash.put("tJDBCInput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_4";

	
		int tos_count_tJDBCInput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_4 = (String)(restRequest_tJDBCInput_4 != null ? restRequest_tJDBCInput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_4 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_4 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_4 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_4.createRuntimeProperties();
 		                    props_tJDBCInput_4.setValue("sql",
 		                    "SELECT \n  history_id, \n  history_datetime, \n  vm_id, \n  vm_status, \n  minutes_in_status, \n  cpu_usage_percent,  "
+"\n  memory_usage_percent, \n  user_cpu_usage_percent, \n  system_cpu_usage_percent,\n  vm_ip, \n  current_user_id,\n  curr"
+"ently_running_on_host, \n  vm_configuration_version, \n  current_host_configuration_version,\n  memory_buffered_kb,\n  mem"
+"ory_cached_kb\nFROM vm_hourly_history\nWHERE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\nAND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY history_datetime,\n      	 vm_id,\n		 vm_status");
 		                    
 		                    props_tJDBCInput_4.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_4.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_4\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_4_1_fisrt sst_tJDBCInput_4_1_fisrt = new SchemaSettingTool_tJDBCInput_4_1_fisrt();
 		                    
 		                    props_tJDBCInput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_4.tableSelection.setValue("tablename",
 		                    "vm_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("trim",tJDBCInput_4_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_4_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("vm_status");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("minutes_in_status");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("cpu_usage_percent");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("memory_usage_percent");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("user_cpu_usage_percent");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("system_cpu_usage_percent");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("vm_ip");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("current_user_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("currently_running_on_host");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("vm_configuration_version");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("current_host_configuration_version");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("memory_buffered_kb");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("memory_cached_kb");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("columnName",tJDBCInput_4_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_4 = props_tJDBCInput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_4);
        }
    }
globalMap.put("tJDBCInput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_4_MAPPINGS_URL", mappings_url_tJDBCInput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_4 = null;
topology_tJDBCInput_4 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_4 = def_tJDBCInput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_4, topology_tJDBCInput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_4 = def_tJDBCInput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_4 = componentRuntime_tJDBCInput_4.initialize(container_tJDBCInput_4, props_tJDBCInput_4);

if (initVr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_4.getMessage());
}

if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_4;
	compDriverInitialization_tJDBCInput_4.runAtDriver(container_tJDBCInput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_4 = null;
if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_4;
	if (doesNodeBelongToRequest_tJDBCInput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_4 = sourceOrSink_tJDBCInput_4.validate(container_tJDBCInput_4);
        if (vr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_4.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_4 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_4;
        reader_tJDBCInput_4 = source_tJDBCInput_4.createReader(container_tJDBCInput_4);
	    reader_tJDBCInput_4 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_4, container_tJDBCInput_4);

            boolean multi_output_is_allowed_tJDBCInput_4 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_4 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_4.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_4 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_4 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_4 = props_tJDBCInput_4.getSchema(c_tJDBCInput_4, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_4 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_4, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_4 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_4 = reader_tJDBCInput_4.start();

        resourceMap.put("reader_tJDBCInput_4", reader_tJDBCInput_4);

        for (; available_tJDBCInput_4; available_tJDBCInput_4 = reader_tJDBCInput_4.advance()) {
			nb_line_tJDBCInput_4++;

			
			if (multi_output_is_allowed_tJDBCInput_4) {
				
					row4 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_4 = reader_tJDBCInput_4.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_4) {
						row4 = new row4Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_4 == null) {
            factory_tJDBCInput_4 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_4.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_4.setWrapped(factory_tJDBCInput_4.convertToAvro(data_tJDBCInput_4));
                Object columnValue_0_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(0);
                    if (columnValue_0_tJDBCInput_4 == null) {
                        row4.history_id = 0;
                    } else {
                            row4.history_id = (long) (columnValue_0_tJDBCInput_4);
                    }
                Object columnValue_1_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(1);
                        row4.history_datetime = (java.util.Date) (columnValue_1_tJDBCInput_4);
                Object columnValue_2_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(2);
                        row4.vm_id = (Object) (columnValue_2_tJDBCInput_4);
                Object columnValue_3_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(3);
                    if (columnValue_3_tJDBCInput_4 == null) {
                        row4.vm_status = 0;
                    } else {
                            row4.vm_status = (short) (columnValue_3_tJDBCInput_4);
                    }
                Object columnValue_4_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(4);
                    if (columnValue_4_tJDBCInput_4 == null) {
                        row4.minutes_in_status = 0;
                    } else {
                            row4.minutes_in_status = (double) (columnValue_4_tJDBCInput_4);
                    }
                Object columnValue_5_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(5);
                        row4.cpu_usage_percent = (Short) (columnValue_5_tJDBCInput_4);
                Object columnValue_6_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(6);
                        row4.memory_usage_percent = (Short) (columnValue_6_tJDBCInput_4);
                Object columnValue_7_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(7);
                        row4.user_cpu_usage_percent = (Short) (columnValue_7_tJDBCInput_4);
                Object columnValue_8_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(8);
                        row4.system_cpu_usage_percent = (Short) (columnValue_8_tJDBCInput_4);
                Object columnValue_9_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(9);
                        row4.vm_ip = (String) (columnValue_9_tJDBCInput_4);
                Object columnValue_10_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(10);
                        row4.current_user_id = (Object) (columnValue_10_tJDBCInput_4);
                Object columnValue_11_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(11);
                        row4.currently_running_on_host = (Object) (columnValue_11_tJDBCInput_4);
                Object columnValue_12_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(12);
                        row4.vm_configuration_version = (Integer) (columnValue_12_tJDBCInput_4);
                Object columnValue_13_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(13);
                        row4.current_host_configuration_version = (Integer) (columnValue_13_tJDBCInput_4);
                Object columnValue_14_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(14);
                        row4.memory_buffered_kb = (Long) (columnValue_14_tJDBCInput_4);
                Object columnValue_15_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(15);
                        row4.memory_cached_kb = (Long) (columnValue_15_tJDBCInput_4);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_4) {
				java.util.Map<String,Object> info_tJDBCInput_4 = e_tJDBCInput_4.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_4 = null;
					if(info_tJDBCInput_4.containsKey("error")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("error");
					}else if(info_tJDBCInput_4.containsKey("errorMessage")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_4 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_4 = "Row "+ nb_line_tJDBCInput_4 + ": "+errorMessage_tJDBCInput_4;
					System.err.println(errorMessage_tJDBCInput_4);
				
					// If the record is reject, the main line record should put NULL
					row4 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_4 = null;


 



/**
 * [tJDBCInput_4 begin ] stop
 */
	
	/**
	 * [tJDBCInput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 


	tos_count_tJDBCInput_4++;

/**
 * [tJDBCInput_4 main ] stop
 */
	
	/**
	 * [tJDBCInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_4 = false;
		  boolean mainRowRejected_tMap_4 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

vm_aggregate_history = null;


// # Output table : 'vm_aggregate_history'
vm_aggregate_history_tmp.history_datetime = RoutineHistoryETL.startOfDay(row4.history_datetime) ;
vm_aggregate_history_tmp.vm_id = row4.vm_id;
vm_aggregate_history_tmp.vm_status = row4.vm_status;
vm_aggregate_history_tmp.minutes_in_status = row4.minutes_in_status;
vm_aggregate_history_tmp.cpu_usage_percent = row4.cpu_usage_percent;
vm_aggregate_history_tmp.memory_usage_percent = row4.memory_usage_percent;
vm_aggregate_history_tmp.user_cpu_usage_percent = row4.user_cpu_usage_percent ;
vm_aggregate_history_tmp.system_cpu_usage_percent = row4.system_cpu_usage_percent ;
vm_aggregate_history_tmp.vm_ip = row4.vm_ip;
vm_aggregate_history_tmp.current_user_id = row4.current_user_id ;
vm_aggregate_history_tmp.currently_running_on_host = row4.currently_running_on_host;
vm_aggregate_history_tmp.vm_configuration_version = row4.vm_configuration_version;
vm_aggregate_history_tmp.current_host_configuration_version = row4.current_host_configuration_version;
vm_aggregate_history_tmp.memory_buffered_kb = row4.memory_buffered_kb ;
vm_aggregate_history_tmp.memory_cached_kb = row4.memory_cached_kb ;
vm_aggregate_history = vm_aggregate_history_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "vm_aggregate_history"
if(vm_aggregate_history != null) { 



	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_aggregate_history"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.history_datetime = vm_aggregate_history.history_datetime;
			operation_finder_tAggregateRow_4.vm_id = vm_aggregate_history.vm_id;
			operation_finder_tAggregateRow_4.vm_status = vm_aggregate_history.vm_status;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	
		boolean isFirstAdd_tAggregateRow_4 = false;
	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.history_datetime = operation_finder_tAggregateRow_4.history_datetime;
				operation_result_tAggregateRow_4.vm_id = operation_finder_tAggregateRow_4.vm_id;
				operation_result_tAggregateRow_4.vm_status = operation_finder_tAggregateRow_4.vm_status;
				
		
		
			isFirstAdd_tAggregateRow_4 = true;
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_4.minutes_in_status_sum == null) {
						operation_result_tAggregateRow_4.minutes_in_status_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_4.minutes_in_status_sum = operation_result_tAggregateRow_4.minutes_in_status_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_aggregate_history.minutes_in_status
							)
						)
					);
					
				if(vm_aggregate_history.cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_4.cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_4.cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_4.cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_4.cpu_usage_percent_sum.doubleValue() + vm_aggregate_history.cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_4.max_cpu_usage_max == null || 
						vm_aggregate_history.cpu_usage_percent > operation_result_tAggregateRow_4.max_cpu_usage_max
						
					) {
						operation_result_tAggregateRow_4.max_cpu_usage_max = vm_aggregate_history.cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.memory_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.memory_usage_percent_count++;
				
					if(operation_result_tAggregateRow_4.memory_usage_percent_sum == null) {
						operation_result_tAggregateRow_4.memory_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_4.memory_usage_percent_sum = (double)(operation_result_tAggregateRow_4.memory_usage_percent_sum.doubleValue() + vm_aggregate_history.memory_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.memory_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_4.max_memory_usage_max == null || 
						vm_aggregate_history.memory_usage_percent > operation_result_tAggregateRow_4.max_memory_usage_max
						
					) {
						operation_result_tAggregateRow_4.max_memory_usage_max = vm_aggregate_history.memory_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.user_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.user_cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_4.user_cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_4.user_cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_4.user_cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_4.user_cpu_usage_percent_sum.doubleValue() + vm_aggregate_history.user_cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.user_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_4.max_user_cpu_usage_percent_max == null || 
						vm_aggregate_history.user_cpu_usage_percent > operation_result_tAggregateRow_4.max_user_cpu_usage_percent_max
						
					) {
						operation_result_tAggregateRow_4.max_user_cpu_usage_percent_max = vm_aggregate_history.user_cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.system_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.system_cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_4.system_cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_4.system_cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_4.system_cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_4.system_cpu_usage_percent_sum.doubleValue() + vm_aggregate_history.system_cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.system_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_4.max_system_cpu_usage_percent_max == null || 
						vm_aggregate_history.system_cpu_usage_percent > operation_result_tAggregateRow_4.max_system_cpu_usage_percent_max
						
					) {
						operation_result_tAggregateRow_4.max_system_cpu_usage_percent_max = vm_aggregate_history.system_cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.vm_ip != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_4.vm_ip_last = vm_aggregate_history.vm_ip;
				
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.current_user_id != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_4.current_user_id_last = vm_aggregate_history.current_user_id;
				
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.currently_running_on_host != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_4.currently_running_on_host_last = vm_aggregate_history.currently_running_on_host;
				
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.vm_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_4.vm_configuration_version_last = vm_aggregate_history.vm_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.current_host_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_4.current_host_configuration_version_last = vm_aggregate_history.current_host_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.memory_buffered_kb != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.memory_buffered_kb_count++;
				
					if(operation_result_tAggregateRow_4.memory_buffered_kb_sum == null) {
						operation_result_tAggregateRow_4.memory_buffered_kb_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.memory_buffered_kb_sum = operation_result_tAggregateRow_4.memory_buffered_kb_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_aggregate_history.memory_buffered_kb
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.memory_buffered_kb != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_4.max_memory_buffered_kb_max == null || 
						vm_aggregate_history.memory_buffered_kb > operation_result_tAggregateRow_4.max_memory_buffered_kb_max
						
					) {
						operation_result_tAggregateRow_4.max_memory_buffered_kb_max = vm_aggregate_history.memory_buffered_kb;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.memory_cached_kb != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.memory_cached_kb_count++;
				
					if(operation_result_tAggregateRow_4.memory_cached_kb_sum == null) {
						operation_result_tAggregateRow_4.memory_cached_kb_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.memory_cached_kb_sum = operation_result_tAggregateRow_4.memory_cached_kb_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_aggregate_history.memory_cached_kb
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_aggregate_history.memory_cached_kb != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_4.max_memory_cached_kb_max == null || 
						vm_aggregate_history.memory_cached_kb > operation_result_tAggregateRow_4.max_memory_cached_kb_max
						
					) {
						operation_result_tAggregateRow_4.max_memory_cached_kb_max = vm_aggregate_history.memory_cached_kb;
					}
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";

	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";

	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */

} // End of branch "vm_aggregate_history"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// end of generic


resourceMap.put("finish_tJDBCInput_4", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_4 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_4 = null;
    if (reader_tJDBCInput_4 != null) {
        reader_tJDBCInput_4.close();
        resultMap_tJDBCInput_4 = reader_tJDBCInput_4.getReturnValues();
    }
if(resultMap_tJDBCInput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_4 : resultMap_tJDBCInput_4.entrySet()) {
		switch(entry_tJDBCInput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "ERROR_MESSAGE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_LINE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_SUCCESS", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_REJECT", entry_tJDBCInput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_4 = new StringBuilder();
            for (int i_tJDBCInput_4 = 0; i_tJDBCInput_4 < entry_tJDBCInput_4.getKey().length(); i_tJDBCInput_4++) {
                char ch_tJDBCInput_4 = entry_tJDBCInput_4.getKey().charAt(i_tJDBCInput_4);
                if(Character.isUpperCase(ch_tJDBCInput_4) && i_tJDBCInput_4> 0) {
                	studio_key_tJDBCInput_4.append('_');
                }
                studio_key_tJDBCInput_4.append(ch_tJDBCInput_4);
            }
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", studio_key_tJDBCInput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_4.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_4", true);
end_Hash.put("tJDBCInput_4", System.currentTimeMillis());




/**
 * [tJDBCInput_4 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_aggregate_history");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_4_AGGOUT", true);
end_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGOUT end ] stop
 */


	
	/**
	 * [tJDBCOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_4", false);
		start_Hash.put("tJDBCOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tJDBCOutput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_4 = (String)(restRequest_tJDBCOutput_4 != null ? restRequest_tJDBCOutput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_4 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_4 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_4 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_4.createRuntimeProperties();
 		                    props_tJDBCOutput_4.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_4.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.tableSelection.setValue("tablename",
 		                    "vm_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_cached_kb\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"vm_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_1_fisrt sst_tJDBCOutput_4_1_fisrt = new SchemaSettingTool_tJDBCOutput_4_1_fisrt();
 		                    
 		                    props_tJDBCOutput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_cached_kb\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"vm_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_2_fisrt sst_tJDBCOutput_4_2_fisrt = new SchemaSettingTool_tJDBCOutput_4_2_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_cached_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"vm_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_3_fisrt sst_tJDBCOutput_4_3_fisrt = new SchemaSettingTool_tJDBCOutput_4_3_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_4 = props_tJDBCOutput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_4);
        }
    }
globalMap.put("tJDBCOutput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_4_MAPPINGS_URL", mappings_url_tJDBCOutput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_4 = null;
topology_tJDBCOutput_4 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_4 = def_tJDBCOutput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_4, topology_tJDBCOutput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_4 = def_tJDBCOutput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_4 = componentRuntime_tJDBCOutput_4.initialize(container_tJDBCOutput_4, props_tJDBCOutput_4);

if (initVr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_4.getMessage());
}

if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_4;
	compDriverInitialization_tJDBCOutput_4.runAtDriver(container_tJDBCOutput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_4 = null;
if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_4;
	if (doesNodeBelongToRequest_tJDBCOutput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_4 = sourceOrSink_tJDBCOutput_4.validate(container_tJDBCOutput_4);
        if (vr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_4.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_4 = null;
    if (sourceOrSink_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_4 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_4;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_4 = sink_tJDBCOutput_4.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writeOperation_tJDBCOutput_4.initialize(container_tJDBCOutput_4);
        }
        writer_tJDBCOutput_4 = writeOperation_tJDBCOutput_4.createWriter(container_tJDBCOutput_4);
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writer_tJDBCOutput_4.open("tJDBCOutput_4");
        }

        resourceMap.put("writer_tJDBCOutput_4", writer_tJDBCOutput_4);
    } // end of "sourceOrSink_tJDBCOutput_4 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_4 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_4.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_4 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_4 = props_tJDBCOutput_4.getSchema(c_tJDBCOutput_4, false);
    incomingEnforcer_tJDBCOutput_4 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_4);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_4 = null;


 



/**
 * [tJDBCOutput_4 begin ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGIN", false);
		start_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";

	
		int tos_count_tAggregateRow_4_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_4> values_tAggregateRow_4 = hash_tAggregateRow_4.values();

globalMap.put("tAggregateRow_4_NB_LINE", values_tAggregateRow_4.size());

for(AggOperationStruct_tAggregateRow_4 aggregated_row_tAggregateRow_4 : values_tAggregateRow_4) { // G_AggR_600



 



/**
 * [tAggregateRow_4_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";

	

            				    row9.history_datetime = aggregated_row_tAggregateRow_4.history_datetime;
            				    
            				    row9.vm_id = aggregated_row_tAggregateRow_4.vm_id;
            				    
            				    row9.vm_status = aggregated_row_tAggregateRow_4.vm_status;
            				    
    								if(aggregated_row_tAggregateRow_4.minutes_in_status_sum != null) {
    								row9.minutes_in_status = aggregated_row_tAggregateRow_4.minutes_in_status_sum.doubleValue();
										
    								}else{
    								
    									row9.minutes_in_status = 0;
    									
    								}
    								
                                if(aggregated_row_tAggregateRow_4.cpu_usage_percent_count > 0){
                                	
	    								double row9_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_4.cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_4.cpu_usage_percent_count;
	    								
	    								row9.cpu_usage_percent = (short) row9_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row9.cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row9.max_cpu_usage = aggregated_row_tAggregateRow_4.max_cpu_usage_max;
                                if(aggregated_row_tAggregateRow_4.memory_usage_percent_count > 0){
                                	
	    								double row9_memory_usage_percent_temp = (double) aggregated_row_tAggregateRow_4.memory_usage_percent_sum / (double) aggregated_row_tAggregateRow_4.memory_usage_percent_count;
	    								
	    								row9.memory_usage_percent = (short) row9_memory_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row9.memory_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row9.max_memory_usage = aggregated_row_tAggregateRow_4.max_memory_usage_max;
                                if(aggregated_row_tAggregateRow_4.user_cpu_usage_percent_count > 0){
                                	
	    								double row9_user_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_4.user_cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_4.user_cpu_usage_percent_count;
	    								
	    								row9.user_cpu_usage_percent = (short) row9_user_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row9.user_cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row9.max_user_cpu_usage_percent = aggregated_row_tAggregateRow_4.max_user_cpu_usage_percent_max;
                                if(aggregated_row_tAggregateRow_4.system_cpu_usage_percent_count > 0){
                                	
	    								double row9_system_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_4.system_cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_4.system_cpu_usage_percent_count;
	    								
	    								row9.system_cpu_usage_percent = (short) row9_system_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row9.system_cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row9.max_system_cpu_usage_percent = aggregated_row_tAggregateRow_4.max_system_cpu_usage_percent_max;
                                row9.vm_ip = aggregated_row_tAggregateRow_4.vm_ip_last;
                                row9.current_user_id = aggregated_row_tAggregateRow_4.current_user_id_last;
                                row9.currently_running_on_host = aggregated_row_tAggregateRow_4.currently_running_on_host_last;
                                row9.vm_configuration_version = aggregated_row_tAggregateRow_4.vm_configuration_version_last;
                                row9.current_host_configuration_version = aggregated_row_tAggregateRow_4.current_host_configuration_version_last;
                                if(aggregated_row_tAggregateRow_4.memory_buffered_kb_count > 0){
                                	
	    								row9.memory_buffered_kb = aggregated_row_tAggregateRow_4.memory_buffered_kb_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_4.memory_buffered_kb_count)), 10, BigDecimal.ROUND_HALF_UP)
	    								
	    									.longValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row9.memory_buffered_kb = ParserUtils.parseTo_Long(count);
    									
                                }
                                row9.max_memory_buffered_kb = aggregated_row_tAggregateRow_4.max_memory_buffered_kb_max;
                                if(aggregated_row_tAggregateRow_4.memory_cached_kb_count > 0){
                                	
	    								row9.memory_cached_kb = aggregated_row_tAggregateRow_4.memory_cached_kb_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_4.memory_cached_kb_count)), 10, BigDecimal.ROUND_HALF_UP)
	    								
	    									.longValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row9.memory_cached_kb = ParserUtils.parseTo_Long(count);
    									
                                }
                                row9.max_memory_cached_kb = aggregated_row_tAggregateRow_4.max_memory_cached_kb_max;

 


	tos_count_tAggregateRow_4_AGGIN++;

/**
 * [tAggregateRow_4_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";

	

 



/**
 * [tAggregateRow_4_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_4 != null) {
            incomingEnforcer_tJDBCOutput_4.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_4.put("history_datetime", row9.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("vm_id", row9.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("vm_status") != null){
                    incomingEnforcer_tJDBCOutput_4.put("vm_status", row9.vm_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("minutes_in_status") != null){
                    incomingEnforcer_tJDBCOutput_4.put("minutes_in_status", row9.minutes_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("cpu_usage_percent", row9.cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("max_cpu_usage") != null){
                    incomingEnforcer_tJDBCOutput_4.put("max_cpu_usage", row9.max_cpu_usage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("memory_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("memory_usage_percent", row9.memory_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("max_memory_usage") != null){
                    incomingEnforcer_tJDBCOutput_4.put("max_memory_usage", row9.max_memory_usage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("user_cpu_usage_percent", row9.user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("max_user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("max_user_cpu_usage_percent", row9.max_user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("system_cpu_usage_percent", row9.system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("max_system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("max_system_cpu_usage_percent", row9.max_system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("vm_ip") != null){
                    incomingEnforcer_tJDBCOutput_4.put("vm_ip", row9.vm_ip);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("current_user_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("current_user_id", row9.current_user_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("currently_running_on_host") != null){
                    incomingEnforcer_tJDBCOutput_4.put("currently_running_on_host", row9.currently_running_on_host);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("vm_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("vm_configuration_version", row9.vm_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("current_host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("current_host_configuration_version", row9.current_host_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("memory_buffered_kb") != null){
                    incomingEnforcer_tJDBCOutput_4.put("memory_buffered_kb", row9.memory_buffered_kb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("max_memory_buffered_kb") != null){
                    incomingEnforcer_tJDBCOutput_4.put("max_memory_buffered_kb", row9.max_memory_buffered_kb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("memory_cached_kb") != null){
                    incomingEnforcer_tJDBCOutput_4.put("memory_cached_kb", row9.memory_cached_kb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("max_memory_cached_kb") != null){
                    incomingEnforcer_tJDBCOutput_4.put("max_memory_cached_kb", row9.max_memory_cached_kb);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_4 = null;
        if (incomingEnforcer_tJDBCOutput_4 != null) {
            data_tJDBCOutput_4 = incomingEnforcer_tJDBCOutput_4.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_4 != null && data_tJDBCOutput_4 != null) {
        	writer_tJDBCOutput_4.write(data_tJDBCOutput_4);
        }
        
        nb_line_tJDBCOutput_4++;

 


	tos_count_tJDBCOutput_4++;

/**
 * [tJDBCOutput_4 main ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";

	

 



/**
 * [tAggregateRow_4_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_4_AGGIN", true);
end_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGIN end ] stop
 */

	
	/**
	 * [tJDBCOutput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_4", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_4 = null;
    if (writer_tJDBCOutput_4 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_4 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_4.close();
        resultMap_tJDBCOutput_4 = writer_tJDBCOutput_4.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_4), container_tJDBCOutput_4);
    }
if(resultMap_tJDBCOutput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_4 : resultMap_tJDBCOutput_4.entrySet()) {
		switch(entry_tJDBCOutput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "ERROR_MESSAGE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_LINE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_SUCCESS", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_REJECT", entry_tJDBCOutput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_4 = new StringBuilder();
            for (int i_tJDBCOutput_4 = 0; i_tJDBCOutput_4 < entry_tJDBCOutput_4.getKey().length(); i_tJDBCOutput_4++) {
                char ch_tJDBCOutput_4 = entry_tJDBCOutput_4.getKey().charAt(i_tJDBCOutput_4);
                if(Character.isUpperCase(ch_tJDBCOutput_4) && i_tJDBCOutput_4> 0) {
                	studio_key_tJDBCOutput_4.append('_');
                }
                studio_key_tJDBCOutput_4.append(ch_tJDBCOutput_4);
            }
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", studio_key_tJDBCOutput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_4.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_4", true);
end_Hash.put("tJDBCOutput_4", System.currentTimeMillis());




/**
 * [tJDBCOutput_4 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_4_AGGIN"
							globalMap.remove("tAggregateRow_4");
						
				try{
					
	
	/**
	 * [tJDBCInput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_4")==null){
    if(resourceMap.get("reader_tJDBCInput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_4")).close();
		} catch (java.io.IOException e_tJDBCInput_4) {
			String errorMessage_tJDBCInput_4 = "failed to release the resource in tJDBCInput_4 :" + e_tJDBCInput_4.getMessage();
			System.err.println(errorMessage_tJDBCInput_4);
		}
	}
}
 



/**
 * [tJDBCInput_4 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";

	

 



/**
 * [tAggregateRow_4_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";

	

 



/**
 * [tAggregateRow_4_AGGIN finally ] stop
 */

	
	/**
	 * [tJDBCOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_4")==null){
    if(resourceMap.get("writer_tJDBCOutput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_4")).close();
		} catch (java.io.IOException e_tJDBCOutput_4) {
			String errorMessage_tJDBCOutput_4 = "failed to release the resource in tJDBCOutput_4 :" + e_tJDBCOutput_4.getMessage();
			System.err.println(errorMessage_tJDBCOutput_4);
		}
	}
}
 



/**
 * [tJDBCOutput_4 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double max_receive_rate_percent;

				public Double getMax_receive_rate_percent () {
					return this.max_receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double max_transmit_rate_percent;

				public Double getMax_transmit_rate_percent () {
					return this.max_transmit_rate_percent;
				}
				
			    public Integer vm_interface_configuration_version;

				public Integer getVm_interface_configuration_version () {
					return this.vm_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",max_receive_rate_percent="+String.valueOf(max_receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",max_transmit_rate_percent="+String.valueOf(max_transmit_rate_percent));
		sb.append(",vm_interface_configuration_version="+String.valueOf(vm_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_5 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_5> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double max_receive_rate_percent;

				public Double getMax_receive_rate_percent () {
					return this.max_receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double max_transmit_rate_percent;

				public Double getMax_transmit_rate_percent () {
					return this.max_transmit_rate_percent;
				}
				
			    public Integer vm_interface_configuration_version;

				public Integer getVm_interface_configuration_version () {
					return this.vm_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_receive_rate_percent = null;
           				} else {
           			    	this.max_receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_transmit_rate_percent = null;
           				} else {
           			    	this.max_transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.max_receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.max_transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",max_receive_rate_percent="+String.valueOf(max_receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",max_transmit_rate_percent="+String.valueOf(max_transmit_rate_percent));
		sb.append(",vm_interface_configuration_version="+String.valueOf(vm_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_5 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class vm_interface_aggregateStruct implements routines.system.IPersistableRow<vm_interface_aggregateStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Integer vm_interface_configuration_version;

				public Integer getVm_interface_configuration_version () {
					return this.vm_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",vm_interface_configuration_version="+String.valueOf(vm_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_interface_aggregateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Integer vm_interface_configuration_version;

				public Integer getVm_interface_configuration_version () {
					return this.vm_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",vm_interface_configuration_version="+String.valueOf(vm_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();
vm_interface_aggregateStruct vm_interface_aggregate = new vm_interface_aggregateStruct();
row10Struct row10 = new row10Struct();





	
	/**
	 * [tAggregateRow_5_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_5_AGGOUT", false);
		start_Hash.put("tAggregateRow_5_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_interface_aggregate");
					}
				
		int tos_count_tAggregateRow_5_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_5 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_5 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_5 utilClass_tAggregateRow_5 = new UtilClass_tAggregateRow_5();

	

	class AggOperationStruct_tAggregateRow_5 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object vm_interface_id;BigDecimal receive_rate_percent_sum;
           			int receive_rate_percent_count = 0;
           			
         			Double max_receive_rate_percent_max;BigDecimal transmit_rate_percent_sum;
           			int transmit_rate_percent_count = 0;
           			
         			Double max_transmit_rate_percent_max;
         			Integer vm_interface_configuration_version_last;
         			Double received_total_byte_last;
         			Double transmitted_total_byte_last;
         			Double received_dropped_total_packets_last;
         			Double transmitted_dropped_total_packets_last;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.vm_interface_id == null) ? 0 : this.vm_interface_id.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_5 other = (AggOperationStruct_tAggregateRow_5) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.vm_interface_id == null) {
								if (other.vm_interface_id != null) 
									return false;
							} else if (!this.vm_interface_id.equals(other.vm_interface_id)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_5 operation_result_tAggregateRow_5 = null;
	AggOperationStruct_tAggregateRow_5 operation_finder_tAggregateRow_5 = new AggOperationStruct_tAggregateRow_5();
	java.util.Map<AggOperationStruct_tAggregateRow_5,AggOperationStruct_tAggregateRow_5> hash_tAggregateRow_5 = new java.util.HashMap<AggOperationStruct_tAggregateRow_5,AggOperationStruct_tAggregateRow_5>();
	

 



/**
 * [tAggregateRow_5_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_interface_aggregateStruct vm_interface_aggregate_tmp = new vm_interface_aggregateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJDBCInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_5", false);
		start_Hash.put("tJDBCInput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_5";

	
		int tos_count_tJDBCInput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_5 = (String)(restRequest_tJDBCInput_5 != null ? restRequest_tJDBCInput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_5 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_5 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_5 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_5.createRuntimeProperties();
 		                    props_tJDBCInput_5.setValue("sql",
 		                    "SELECT\n  history_id,\n  history_datetime,\n  vm_interface_id,\n  receive_rate_percent,\n  transmit_rate_percent,\n  vm"
+"_interface_configuration_version,\n  received_total_byte,\n  transmitted_total_byte,\n  received_dropped_total_packets,\n  t"
+"ransmitted_dropped_total_packets\nFROM vm_interface_hourly_history\nWHERE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\nAND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY history_datetime,\n		 vm_interface_id");
 		                    
 		                    props_tJDBCInput_5.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_5.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_5\",\"di.table.label\":\"vm_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_5_1_fisrt sst_tJDBCInput_5_1_fisrt = new SchemaSettingTool_tJDBCInput_5_1_fisrt();
 		                    
 		                    props_tJDBCInput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_5.tableSelection.setValue("tablename",
 		                    "vm_interface_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("trim",tJDBCInput_5_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_5_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("vm_interface_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("receive_rate_percent");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("transmit_rate_percent");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("vm_interface_configuration_version");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("received_total_byte");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("transmitted_total_byte");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("received_dropped_total_packets");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("transmitted_dropped_total_packets");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("columnName",tJDBCInput_5_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_5 = props_tJDBCInput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_5);
        }
    }
globalMap.put("tJDBCInput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_5_MAPPINGS_URL", mappings_url_tJDBCInput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_5 = null;
topology_tJDBCInput_5 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_5 = def_tJDBCInput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_5, topology_tJDBCInput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_5 = def_tJDBCInput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_5 = componentRuntime_tJDBCInput_5.initialize(container_tJDBCInput_5, props_tJDBCInput_5);

if (initVr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_5.getMessage());
}

if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_5;
	compDriverInitialization_tJDBCInput_5.runAtDriver(container_tJDBCInput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_5 = null;
if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_5;
	if (doesNodeBelongToRequest_tJDBCInput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_5 = sourceOrSink_tJDBCInput_5.validate(container_tJDBCInput_5);
        if (vr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_5.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_5 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_5;
        reader_tJDBCInput_5 = source_tJDBCInput_5.createReader(container_tJDBCInput_5);
	    reader_tJDBCInput_5 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_5, container_tJDBCInput_5);

            boolean multi_output_is_allowed_tJDBCInput_5 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_5 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_5.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_5 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_5 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_5 = props_tJDBCInput_5.getSchema(c_tJDBCInput_5, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_5 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_5, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_5 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_5 = reader_tJDBCInput_5.start();

        resourceMap.put("reader_tJDBCInput_5", reader_tJDBCInput_5);

        for (; available_tJDBCInput_5; available_tJDBCInput_5 = reader_tJDBCInput_5.advance()) {
			nb_line_tJDBCInput_5++;

			
			if (multi_output_is_allowed_tJDBCInput_5) {
				
					row5 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_5 = reader_tJDBCInput_5.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_5) {
						row5 = new row5Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_5 == null) {
            factory_tJDBCInput_5 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_5.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_5.setWrapped(factory_tJDBCInput_5.convertToAvro(data_tJDBCInput_5));
                Object columnValue_0_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(0);
                    if (columnValue_0_tJDBCInput_5 == null) {
                        row5.history_id = 0;
                    } else {
                            row5.history_id = (long) (columnValue_0_tJDBCInput_5);
                    }
                Object columnValue_1_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(1);
                        row5.history_datetime = (java.util.Date) (columnValue_1_tJDBCInput_5);
                Object columnValue_2_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(2);
                        row5.vm_interface_id = (Object) (columnValue_2_tJDBCInput_5);
                Object columnValue_3_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(3);
                        row5.receive_rate_percent = (Double) (columnValue_3_tJDBCInput_5);
                Object columnValue_4_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(4);
                        row5.transmit_rate_percent = (Double) (columnValue_4_tJDBCInput_5);
                Object columnValue_5_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(5);
                        row5.vm_interface_configuration_version = (Integer) (columnValue_5_tJDBCInput_5);
                Object columnValue_6_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(6);
                        row5.received_total_byte = (Double) (columnValue_6_tJDBCInput_5);
                Object columnValue_7_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(7);
                        row5.transmitted_total_byte = (Double) (columnValue_7_tJDBCInput_5);
                Object columnValue_8_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(8);
                        row5.received_dropped_total_packets = (Double) (columnValue_8_tJDBCInput_5);
                Object columnValue_9_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(9);
                        row5.transmitted_dropped_total_packets = (Double) (columnValue_9_tJDBCInput_5);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_5) {
				java.util.Map<String,Object> info_tJDBCInput_5 = e_tJDBCInput_5.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_5 = null;
					if(info_tJDBCInput_5.containsKey("error")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("error");
					}else if(info_tJDBCInput_5.containsKey("errorMessage")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_5 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_5 = "Row "+ nb_line_tJDBCInput_5 + ": "+errorMessage_tJDBCInput_5;
					System.err.println(errorMessage_tJDBCInput_5);
				
					// If the record is reject, the main line record should put NULL
					row5 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_5 = null;


 



/**
 * [tJDBCInput_5 begin ] stop
 */
	
	/**
	 * [tJDBCInput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 


	tos_count_tJDBCInput_5++;

/**
 * [tJDBCInput_5 main ] stop
 */
	
	/**
	 * [tJDBCInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_5 = false;
		  boolean mainRowRejected_tMap_5 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

vm_interface_aggregate = null;


// # Output table : 'vm_interface_aggregate'
vm_interface_aggregate_tmp.history_datetime = RoutineHistoryETL.startOfDay(row5.history_datetime) ;
vm_interface_aggregate_tmp.vm_interface_id = row5.vm_interface_id;
vm_interface_aggregate_tmp.receive_rate_percent = row5.receive_rate_percent;
vm_interface_aggregate_tmp.transmit_rate_percent = row5.transmit_rate_percent;
vm_interface_aggregate_tmp.vm_interface_configuration_version = row5.vm_interface_configuration_version;
vm_interface_aggregate_tmp.received_total_byte = row5.received_total_byte ;
vm_interface_aggregate_tmp.transmitted_total_byte = row5.transmitted_total_byte ;
vm_interface_aggregate_tmp.received_dropped_total_packets = row5.received_dropped_total_packets ;
vm_interface_aggregate_tmp.transmitted_dropped_total_packets = row5.transmitted_dropped_total_packets ;
vm_interface_aggregate = vm_interface_aggregate_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "vm_interface_aggregate"
if(vm_interface_aggregate != null) { 



	
	/**
	 * [tAggregateRow_5_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_interface_aggregate"
						
						);
					}
					
	
operation_finder_tAggregateRow_5.history_datetime = vm_interface_aggregate.history_datetime;
			operation_finder_tAggregateRow_5.vm_interface_id = vm_interface_aggregate.vm_interface_id;
			

	operation_finder_tAggregateRow_5.hashCodeDirty = true;
	
	operation_result_tAggregateRow_5 = hash_tAggregateRow_5.get(operation_finder_tAggregateRow_5);

	
		boolean isFirstAdd_tAggregateRow_5 = false;
	

	if(operation_result_tAggregateRow_5 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_5 = new AggOperationStruct_tAggregateRow_5();

		operation_result_tAggregateRow_5.history_datetime = operation_finder_tAggregateRow_5.history_datetime;
				operation_result_tAggregateRow_5.vm_interface_id = operation_finder_tAggregateRow_5.vm_interface_id;
				
		
		
			isFirstAdd_tAggregateRow_5 = true;
		

		hash_tAggregateRow_5.put(operation_result_tAggregateRow_5, operation_result_tAggregateRow_5);
	
	} // G_OutMain_AggR_001


	
				if(vm_interface_aggregate.receive_rate_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_5.receive_rate_percent_count++;
				
					if(operation_result_tAggregateRow_5.receive_rate_percent_sum == null) {
						operation_result_tAggregateRow_5.receive_rate_percent_sum = new BigDecimal(0).setScale(4);
					}
					operation_result_tAggregateRow_5.receive_rate_percent_sum = operation_result_tAggregateRow_5.receive_rate_percent_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_interface_aggregate.receive_rate_percent
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.receive_rate_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_5.max_receive_rate_percent_max == null || 
						vm_interface_aggregate.receive_rate_percent > operation_result_tAggregateRow_5.max_receive_rate_percent_max
						
					) {
						operation_result_tAggregateRow_5.max_receive_rate_percent_max = vm_interface_aggregate.receive_rate_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.transmit_rate_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_5.transmit_rate_percent_count++;
				
					if(operation_result_tAggregateRow_5.transmit_rate_percent_sum == null) {
						operation_result_tAggregateRow_5.transmit_rate_percent_sum = new BigDecimal(0).setScale(4);
					}
					operation_result_tAggregateRow_5.transmit_rate_percent_sum = operation_result_tAggregateRow_5.transmit_rate_percent_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_interface_aggregate.transmit_rate_percent
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.transmit_rate_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_5.max_transmit_rate_percent_max == null || 
						vm_interface_aggregate.transmit_rate_percent > operation_result_tAggregateRow_5.max_transmit_rate_percent_max
						
					) {
						operation_result_tAggregateRow_5.max_transmit_rate_percent_max = vm_interface_aggregate.transmit_rate_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.vm_interface_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_5.vm_interface_configuration_version_last = vm_interface_aggregate.vm_interface_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.received_total_byte != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_5.received_total_byte_last = vm_interface_aggregate.received_total_byte;
				
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.transmitted_total_byte != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_5.transmitted_total_byte_last = vm_interface_aggregate.transmitted_total_byte;
				
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.received_dropped_total_packets != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_5.received_dropped_total_packets_last = vm_interface_aggregate.received_dropped_total_packets;
				
				} // G_OutMain_AggR_546
				
				if(vm_interface_aggregate.transmitted_dropped_total_packets != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_5.transmitted_dropped_total_packets_last = vm_interface_aggregate.transmitted_dropped_total_packets;
				
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_5_AGGOUT++;

/**
 * [tAggregateRow_5_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";

	

 



/**
 * [tAggregateRow_5_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";

	

 



/**
 * [tAggregateRow_5_AGGOUT process_data_end ] stop
 */

} // End of branch "vm_interface_aggregate"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// end of generic


resourceMap.put("finish_tJDBCInput_5", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_5 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_5 = null;
    if (reader_tJDBCInput_5 != null) {
        reader_tJDBCInput_5.close();
        resultMap_tJDBCInput_5 = reader_tJDBCInput_5.getReturnValues();
    }
if(resultMap_tJDBCInput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_5 : resultMap_tJDBCInput_5.entrySet()) {
		switch(entry_tJDBCInput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "ERROR_MESSAGE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_LINE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_SUCCESS", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_REJECT", entry_tJDBCInput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_5 = new StringBuilder();
            for (int i_tJDBCInput_5 = 0; i_tJDBCInput_5 < entry_tJDBCInput_5.getKey().length(); i_tJDBCInput_5++) {
                char ch_tJDBCInput_5 = entry_tJDBCInput_5.getKey().charAt(i_tJDBCInput_5);
                if(Character.isUpperCase(ch_tJDBCInput_5) && i_tJDBCInput_5> 0) {
                	studio_key_tJDBCInput_5.append('_');
                }
                studio_key_tJDBCInput_5.append(ch_tJDBCInput_5);
            }
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", studio_key_tJDBCInput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_5.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_5", true);
end_Hash.put("tJDBCInput_5", System.currentTimeMillis());




/**
 * [tJDBCInput_5 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_interface_aggregate");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_5_AGGOUT", true);
end_Hash.put("tAggregateRow_5_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_5_AGGOUT end ] stop
 */


	
	/**
	 * [tJDBCOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_5", false);
		start_Hash.put("tJDBCOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tJDBCOutput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_5 = (String)(restRequest_tJDBCOutput_5 != null ? restRequest_tJDBCOutput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_5 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_5 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_5 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_5.createRuntimeProperties();
 		                    props_tJDBCOutput_5.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_5.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.tableSelection.setValue("tablename",
 		                    "vm_interface_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_interface_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_1_fisrt sst_tJDBCOutput_5_1_fisrt = new SchemaSettingTool_tJDBCOutput_5_1_fisrt();
 		                    
 		                    props_tJDBCOutput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_interface_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_2_fisrt sst_tJDBCOutput_5_2_fisrt = new SchemaSettingTool_tJDBCOutput_5_2_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_interface_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_3_fisrt sst_tJDBCOutput_5_3_fisrt = new SchemaSettingTool_tJDBCOutput_5_3_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_5 = props_tJDBCOutput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_5);
        }
    }
globalMap.put("tJDBCOutput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_5_MAPPINGS_URL", mappings_url_tJDBCOutput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_5 = null;
topology_tJDBCOutput_5 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_5 = def_tJDBCOutput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_5, topology_tJDBCOutput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_5 = def_tJDBCOutput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_5 = componentRuntime_tJDBCOutput_5.initialize(container_tJDBCOutput_5, props_tJDBCOutput_5);

if (initVr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_5.getMessage());
}

if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_5;
	compDriverInitialization_tJDBCOutput_5.runAtDriver(container_tJDBCOutput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_5 = null;
if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_5;
	if (doesNodeBelongToRequest_tJDBCOutput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_5 = sourceOrSink_tJDBCOutput_5.validate(container_tJDBCOutput_5);
        if (vr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_5.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_5 = null;
    if (sourceOrSink_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_5 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_5;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_5 = sink_tJDBCOutput_5.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writeOperation_tJDBCOutput_5.initialize(container_tJDBCOutput_5);
        }
        writer_tJDBCOutput_5 = writeOperation_tJDBCOutput_5.createWriter(container_tJDBCOutput_5);
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writer_tJDBCOutput_5.open("tJDBCOutput_5");
        }

        resourceMap.put("writer_tJDBCOutput_5", writer_tJDBCOutput_5);
    } // end of "sourceOrSink_tJDBCOutput_5 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_5 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_5.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_5 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_5 = props_tJDBCOutput_5.getSchema(c_tJDBCOutput_5, false);
    incomingEnforcer_tJDBCOutput_5 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_5);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_5 = null;


 



/**
 * [tJDBCOutput_5 begin ] stop
 */



	
	/**
	 * [tAggregateRow_5_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_5_AGGIN", false);
		start_Hash.put("tAggregateRow_5_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";

	
		int tos_count_tAggregateRow_5_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_5> values_tAggregateRow_5 = hash_tAggregateRow_5.values();

globalMap.put("tAggregateRow_5_NB_LINE", values_tAggregateRow_5.size());

for(AggOperationStruct_tAggregateRow_5 aggregated_row_tAggregateRow_5 : values_tAggregateRow_5) { // G_AggR_600



 



/**
 * [tAggregateRow_5_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";

	

            				    row10.history_datetime = aggregated_row_tAggregateRow_5.history_datetime;
            				    
            				    row10.vm_interface_id = aggregated_row_tAggregateRow_5.vm_interface_id;
            				    
                                if(aggregated_row_tAggregateRow_5.receive_rate_percent_count > 0){
                                	
	    								row10.receive_rate_percent = aggregated_row_tAggregateRow_5.receive_rate_percent_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_5.receive_rate_percent_count)), 4, BigDecimal.ROUND_HALF_UP)
	    								
	    									.doubleValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row10.receive_rate_percent = ParserUtils.parseTo_Double(count);
    									
                                }
                                row10.max_receive_rate_percent = aggregated_row_tAggregateRow_5.max_receive_rate_percent_max;
                                if(aggregated_row_tAggregateRow_5.transmit_rate_percent_count > 0){
                                	
	    								row10.transmit_rate_percent = aggregated_row_tAggregateRow_5.transmit_rate_percent_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_5.transmit_rate_percent_count)), 4, BigDecimal.ROUND_HALF_UP)
	    								
	    									.doubleValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row10.transmit_rate_percent = ParserUtils.parseTo_Double(count);
    									
                                }
                                row10.max_transmit_rate_percent = aggregated_row_tAggregateRow_5.max_transmit_rate_percent_max;
                                row10.vm_interface_configuration_version = aggregated_row_tAggregateRow_5.vm_interface_configuration_version_last;
                                row10.received_total_byte = aggregated_row_tAggregateRow_5.received_total_byte_last;
                                row10.transmitted_total_byte = aggregated_row_tAggregateRow_5.transmitted_total_byte_last;
                                row10.received_dropped_total_packets = aggregated_row_tAggregateRow_5.received_dropped_total_packets_last;
                                row10.transmitted_dropped_total_packets = aggregated_row_tAggregateRow_5.transmitted_dropped_total_packets_last;

 


	tos_count_tAggregateRow_5_AGGIN++;

/**
 * [tAggregateRow_5_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";

	

 



/**
 * [tAggregateRow_5_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_5 != null) {
            incomingEnforcer_tJDBCOutput_5.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_5.put("history_datetime", row10.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vm_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vm_interface_id", row10.vm_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("receive_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("receive_rate_percent", row10.receive_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("max_receive_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("max_receive_rate_percent", row10.max_receive_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("transmit_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("transmit_rate_percent", row10.transmit_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("max_transmit_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("max_transmit_rate_percent", row10.max_transmit_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vm_interface_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vm_interface_configuration_version", row10.vm_interface_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("received_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_5.put("received_total_byte", row10.received_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("transmitted_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_5.put("transmitted_total_byte", row10.transmitted_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("received_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_5.put("received_dropped_total_packets", row10.received_dropped_total_packets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("transmitted_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_5.put("transmitted_dropped_total_packets", row10.transmitted_dropped_total_packets);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_5 = null;
        if (incomingEnforcer_tJDBCOutput_5 != null) {
            data_tJDBCOutput_5 = incomingEnforcer_tJDBCOutput_5.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_5 != null && data_tJDBCOutput_5 != null) {
        	writer_tJDBCOutput_5.write(data_tJDBCOutput_5);
        }
        
        nb_line_tJDBCOutput_5++;

 


	tos_count_tJDBCOutput_5++;

/**
 * [tJDBCOutput_5 main ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_5_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";

	

 



/**
 * [tAggregateRow_5_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_5_AGGIN", true);
end_Hash.put("tAggregateRow_5_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_5_AGGIN end ] stop
 */

	
	/**
	 * [tJDBCOutput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_5", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_5 = null;
    if (writer_tJDBCOutput_5 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_5 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_5.close();
        resultMap_tJDBCOutput_5 = writer_tJDBCOutput_5.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_5), container_tJDBCOutput_5);
    }
if(resultMap_tJDBCOutput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_5 : resultMap_tJDBCOutput_5.entrySet()) {
		switch(entry_tJDBCOutput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "ERROR_MESSAGE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_LINE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_SUCCESS", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_REJECT", entry_tJDBCOutput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_5 = new StringBuilder();
            for (int i_tJDBCOutput_5 = 0; i_tJDBCOutput_5 < entry_tJDBCOutput_5.getKey().length(); i_tJDBCOutput_5++) {
                char ch_tJDBCOutput_5 = entry_tJDBCOutput_5.getKey().charAt(i_tJDBCOutput_5);
                if(Character.isUpperCase(ch_tJDBCOutput_5) && i_tJDBCOutput_5> 0) {
                	studio_key_tJDBCOutput_5.append('_');
                }
                studio_key_tJDBCOutput_5.append(ch_tJDBCOutput_5);
            }
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", studio_key_tJDBCOutput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_5.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_5", true);
end_Hash.put("tJDBCOutput_5", System.currentTimeMillis());




/**
 * [tJDBCOutput_5 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_5_AGGIN"
							globalMap.remove("tAggregateRow_5");
						
				try{
					
	
	/**
	 * [tJDBCInput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_5")==null){
    if(resourceMap.get("reader_tJDBCInput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_5")).close();
		} catch (java.io.IOException e_tJDBCInput_5) {
			String errorMessage_tJDBCInput_5 = "failed to release the resource in tJDBCInput_5 :" + e_tJDBCInput_5.getMessage();
			System.err.println(errorMessage_tJDBCInput_5);
		}
	}
}
 



/**
 * [tJDBCInput_5 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";

	

 



/**
 * [tAggregateRow_5_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";

	

 



/**
 * [tAggregateRow_5_AGGIN finally ] stop
 */

	
	/**
	 * [tJDBCOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_5")==null){
    if(resourceMap.get("writer_tJDBCOutput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_5")).close();
		} catch (java.io.IOException e_tJDBCOutput_5) {
			String errorMessage_tJDBCOutput_5 = "failed to release the resource in tJDBCOutput_5 :" + e_tJDBCOutput_5.getMessage();
			System.err.println(errorMessage_tJDBCOutput_5);
		}
	}
}
 



/**
 * [tJDBCOutput_5 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public short storage_domain_status;

				public short getStorage_domain_status () {
					return this.storage_domain_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Integer available_disk_size_gb;

				public Integer getAvailable_disk_size_gb () {
					return this.available_disk_size_gb;
				}
				
			    public Integer used_disk_size_gb;

				public Integer getUsed_disk_size_gb () {
					return this.used_disk_size_gb;
				}
				
			    public Integer storage_configuration_version;

				public Integer getStorage_configuration_version () {
					return this.storage_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_status="+String.valueOf(storage_domain_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",available_disk_size_gb="+String.valueOf(available_disk_size_gb));
		sb.append(",used_disk_size_gb="+String.valueOf(used_disk_size_gb));
		sb.append(",storage_configuration_version="+String.valueOf(storage_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_6 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_6> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public short storage_domain_status;

				public short getStorage_domain_status () {
					return this.storage_domain_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Integer available_disk_size_gb;

				public Integer getAvailable_disk_size_gb () {
					return this.available_disk_size_gb;
				}
				
			    public Integer used_disk_size_gb;

				public Integer getUsed_disk_size_gb () {
					return this.used_disk_size_gb;
				}
				
			    public Integer storage_configuration_version;

				public Integer getStorage_configuration_version () {
					return this.storage_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_status="+String.valueOf(storage_domain_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",available_disk_size_gb="+String.valueOf(available_disk_size_gb));
		sb.append(",used_disk_size_gb="+String.valueOf(used_disk_size_gb));
		sb.append(",storage_configuration_version="+String.valueOf(storage_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_6 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class storage_aggregateStruct implements routines.system.IPersistableRow<storage_aggregateStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public short storage_domain_status;

				public short getStorage_domain_status () {
					return this.storage_domain_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Integer available_disk_size_gb;

				public Integer getAvailable_disk_size_gb () {
					return this.available_disk_size_gb;
				}
				
			    public Integer used_disk_size_gb;

				public Integer getUsed_disk_size_gb () {
					return this.used_disk_size_gb;
				}
				
			    public Integer storage_configuration_version;

				public Integer getStorage_configuration_version () {
					return this.storage_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_status="+String.valueOf(storage_domain_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",available_disk_size_gb="+String.valueOf(available_disk_size_gb));
		sb.append(",used_disk_size_gb="+String.valueOf(used_disk_size_gb));
		sb.append(",storage_configuration_version="+String.valueOf(storage_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(storage_aggregateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public short storage_domain_status;

				public short getStorage_domain_status () {
					return this.storage_domain_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public Integer available_disk_size_gb;

				public Integer getAvailable_disk_size_gb () {
					return this.available_disk_size_gb;
				}
				
			    public Integer used_disk_size_gb;

				public Integer getUsed_disk_size_gb () {
					return this.used_disk_size_gb;
				}
				
			    public Integer storage_configuration_version;

				public Integer getStorage_configuration_version () {
					return this.storage_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			        this.storage_domain_status = dis.readShort();
					
			        this.minutes_in_status = dis.readDouble();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// short
				
		            	dos.writeShort(this.storage_domain_status);
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",history_datetime="+String.valueOf(history_datetime));
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_status="+String.valueOf(storage_domain_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",available_disk_size_gb="+String.valueOf(available_disk_size_gb));
		sb.append(",used_disk_size_gb="+String.valueOf(used_disk_size_gb));
		sb.append(",storage_configuration_version="+String.valueOf(storage_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();
storage_aggregateStruct storage_aggregate = new storage_aggregateStruct();
row17Struct row17 = new row17Struct();





	
	/**
	 * [tAggregateRow_6_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_6_AGGOUT", false);
		start_Hash.put("tAggregateRow_6_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"storage_aggregate");
					}
				
		int tos_count_tAggregateRow_6_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_6 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_6 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_6 utilClass_tAggregateRow_6 = new UtilClass_tAggregateRow_6();

	

	class AggOperationStruct_tAggregateRow_6 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object storage_domain_id;
    				short storage_domain_status;BigDecimal minutes_in_status_sum;
           			
         			Integer available_disk_size_gb_max;
         			Integer used_disk_size_gb_max;
         			Integer storage_configuration_version_last;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.storage_domain_id == null) ? 0 : this.storage_domain_id.hashCode());
							
								result = prime * result + (int) this.storage_domain_status;
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_6 other = (AggOperationStruct_tAggregateRow_6) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.storage_domain_id == null) {
								if (other.storage_domain_id != null) 
									return false;
							} else if (!this.storage_domain_id.equals(other.storage_domain_id)) 
								return false;
						
							if (this.storage_domain_status != other.storage_domain_status) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_6 operation_result_tAggregateRow_6 = null;
	AggOperationStruct_tAggregateRow_6 operation_finder_tAggregateRow_6 = new AggOperationStruct_tAggregateRow_6();
	java.util.Map<AggOperationStruct_tAggregateRow_6,AggOperationStruct_tAggregateRow_6> hash_tAggregateRow_6 = new java.util.HashMap<AggOperationStruct_tAggregateRow_6,AggOperationStruct_tAggregateRow_6>();
	

 



/**
 * [tAggregateRow_6_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
storage_aggregateStruct storage_aggregate_tmp = new storage_aggregateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tJDBCInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_11", false);
		start_Hash.put("tJDBCInput_11", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_11";

	
		int tos_count_tJDBCInput_11 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_11 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_11 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_11 = (String)(restRequest_tJDBCInput_11 != null ? restRequest_tJDBCInput_11.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_11 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_11 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_11 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_11 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_11.createRuntimeProperties();
 		                    props_tJDBCInput_11.setValue("sql",
 		                    "SELECT \n  history_id, \n  history_datetime, \n  storage_domain_id, \n  storage_domain_status,\n  minutes_in_status,\n  a"
+"vailable_disk_size_gb, \n  used_disk_size_gb, \n  storage_configuration_version\nFROM storage_domain_hourly_history\nWHE"
+"RE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\nAND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY history_datetime,\n      	 storage_domain_id");
 		                    
 		                    props_tJDBCInput_11.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_11.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_11.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_11_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"storage_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_11\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_11_1_fisrt sst_tJDBCInput_11_1_fisrt = new SchemaSettingTool_tJDBCInput_11_1_fisrt();
 		                    
 		                    props_tJDBCInput_11.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_11_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_11.tableSelection.setValue("tablename",
 		                    "storage_domain_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_11_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_11.trimTable).setValue("trim",tJDBCInput_11_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_11_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_11_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("storage_domain_id");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("storage_domain_status");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("minutes_in_status");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("available_disk_size_gb");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("used_disk_size_gb");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("storage_configuration_version");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_11.trimTable).setValue("columnName",tJDBCInput_11_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_11.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_11 = props_tJDBCInput_11.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_11.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_11);
        }
    }
globalMap.put("tJDBCInput_11_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_11);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_11= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_11_MAPPINGS_URL", mappings_url_tJDBCInput_11);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_11 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_11";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_11 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_11 = null;
topology_tJDBCInput_11 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_11 = def_tJDBCInput_11.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_11, topology_tJDBCInput_11);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_11 = def_tJDBCInput_11.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_11 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_11.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_11 = componentRuntime_tJDBCInput_11.initialize(container_tJDBCInput_11, props_tJDBCInput_11);

if (initVr_tJDBCInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_11.getMessage());
}

if(componentRuntime_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_11 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_11;
	compDriverInitialization_tJDBCInput_11.runAtDriver(container_tJDBCInput_11);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_11 = null;
if(componentRuntime_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_11 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_11;
	if (doesNodeBelongToRequest_tJDBCInput_11) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_11 = sourceOrSink_tJDBCInput_11.validate(container_tJDBCInput_11);
        if (vr_tJDBCInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_11.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_11 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_11;
        reader_tJDBCInput_11 = source_tJDBCInput_11.createReader(container_tJDBCInput_11);
	    reader_tJDBCInput_11 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_11, container_tJDBCInput_11);

            boolean multi_output_is_allowed_tJDBCInput_11 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_11 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_11.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_11 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_11 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_11 = props_tJDBCInput_11.getSchema(c_tJDBCInput_11, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_11 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_11, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_11 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_11 = reader_tJDBCInput_11.start();

        resourceMap.put("reader_tJDBCInput_11", reader_tJDBCInput_11);

        for (; available_tJDBCInput_11; available_tJDBCInput_11 = reader_tJDBCInput_11.advance()) {
			nb_line_tJDBCInput_11++;

			
			if (multi_output_is_allowed_tJDBCInput_11) {
				
					row16 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_11 = reader_tJDBCInput_11.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_11) {
						row16 = new row16Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_11 == null) {
            factory_tJDBCInput_11 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_11.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_11.setWrapped(factory_tJDBCInput_11.convertToAvro(data_tJDBCInput_11));
                Object columnValue_0_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(0);
                    if (columnValue_0_tJDBCInput_11 == null) {
                        row16.history_id = 0;
                    } else {
                            row16.history_id = (long) (columnValue_0_tJDBCInput_11);
                    }
                Object columnValue_1_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(1);
                        row16.history_datetime = (java.util.Date) (columnValue_1_tJDBCInput_11);
                Object columnValue_2_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(2);
                        row16.storage_domain_id = (Object) (columnValue_2_tJDBCInput_11);
                Object columnValue_3_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(3);
                    if (columnValue_3_tJDBCInput_11 == null) {
                        row16.storage_domain_status = 0;
                    } else {
                            row16.storage_domain_status = (short) (columnValue_3_tJDBCInput_11);
                    }
                Object columnValue_4_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(4);
                    if (columnValue_4_tJDBCInput_11 == null) {
                        row16.minutes_in_status = 0;
                    } else {
                            row16.minutes_in_status = (double) (columnValue_4_tJDBCInput_11);
                    }
                Object columnValue_5_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(5);
                        row16.available_disk_size_gb = (Integer) (columnValue_5_tJDBCInput_11);
                Object columnValue_6_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(6);
                        row16.used_disk_size_gb = (Integer) (columnValue_6_tJDBCInput_11);
                Object columnValue_7_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(7);
                        row16.storage_configuration_version = (Integer) (columnValue_7_tJDBCInput_11);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_11) {
				java.util.Map<String,Object> info_tJDBCInput_11 = e_tJDBCInput_11.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_11 = null;
					if(info_tJDBCInput_11.containsKey("error")){
						errorMessage_tJDBCInput_11 = info_tJDBCInput_11.get("error");
					}else if(info_tJDBCInput_11.containsKey("errorMessage")){
						errorMessage_tJDBCInput_11 = info_tJDBCInput_11.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_11 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_11 = "Row "+ nb_line_tJDBCInput_11 + ": "+errorMessage_tJDBCInput_11;
					System.err.println(errorMessage_tJDBCInput_11);
				
					// If the record is reject, the main line record should put NULL
					row16 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_11 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_11 = null;


 



/**
 * [tJDBCInput_11 begin ] stop
 */
	
	/**
	 * [tJDBCInput_11 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 


	tos_count_tJDBCInput_11++;

/**
 * [tJDBCInput_11 main ] stop
 */
	
	/**
	 * [tJDBCInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 



/**
 * [tJDBCInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_11 = false;
		  boolean mainRowRejected_tMap_11 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

storage_aggregate = null;


// # Output table : 'storage_aggregate'
storage_aggregate_tmp.history_datetime = RoutineHistoryETL.startOfDay(row16.history_datetime);
storage_aggregate_tmp.storage_domain_id = row16.storage_domain_id;
storage_aggregate_tmp.storage_domain_status = row16.storage_domain_status;
storage_aggregate_tmp.minutes_in_status = row16.minutes_in_status;
storage_aggregate_tmp.available_disk_size_gb = row16.available_disk_size_gb;
storage_aggregate_tmp.used_disk_size_gb = row16.used_disk_size_gb;
storage_aggregate_tmp.storage_configuration_version = row16.storage_configuration_version;
storage_aggregate = storage_aggregate_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "storage_aggregate"
if(storage_aggregate != null) { 



	
	/**
	 * [tAggregateRow_6_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"storage_aggregate"
						
						);
					}
					
	
operation_finder_tAggregateRow_6.history_datetime = storage_aggregate.history_datetime;
			operation_finder_tAggregateRow_6.storage_domain_id = storage_aggregate.storage_domain_id;
			operation_finder_tAggregateRow_6.storage_domain_status = storage_aggregate.storage_domain_status;
			

	operation_finder_tAggregateRow_6.hashCodeDirty = true;
	
	operation_result_tAggregateRow_6 = hash_tAggregateRow_6.get(operation_finder_tAggregateRow_6);

	
		boolean isFirstAdd_tAggregateRow_6 = false;
	

	if(operation_result_tAggregateRow_6 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_6 = new AggOperationStruct_tAggregateRow_6();

		operation_result_tAggregateRow_6.history_datetime = operation_finder_tAggregateRow_6.history_datetime;
				operation_result_tAggregateRow_6.storage_domain_id = operation_finder_tAggregateRow_6.storage_domain_id;
				operation_result_tAggregateRow_6.storage_domain_status = operation_finder_tAggregateRow_6.storage_domain_status;
				
		
		
			isFirstAdd_tAggregateRow_6 = true;
		

		hash_tAggregateRow_6.put(operation_result_tAggregateRow_6, operation_result_tAggregateRow_6);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_6.minutes_in_status_sum == null) {
						operation_result_tAggregateRow_6.minutes_in_status_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_6.minutes_in_status_sum = operation_result_tAggregateRow_6.minutes_in_status_sum.add(
						new BigDecimal(
							String.valueOf(
								storage_aggregate.minutes_in_status
							)
						)
					);
					
				if(storage_aggregate.available_disk_size_gb != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_6.available_disk_size_gb_max == null || 
						storage_aggregate.available_disk_size_gb > operation_result_tAggregateRow_6.available_disk_size_gb_max
						
					) {
						operation_result_tAggregateRow_6.available_disk_size_gb_max = storage_aggregate.available_disk_size_gb;
					}
					
				} // G_OutMain_AggR_546
				
				if(storage_aggregate.used_disk_size_gb != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_6.used_disk_size_gb_max == null || 
						storage_aggregate.used_disk_size_gb > operation_result_tAggregateRow_6.used_disk_size_gb_max
						
					) {
						operation_result_tAggregateRow_6.used_disk_size_gb_max = storage_aggregate.used_disk_size_gb;
					}
					
				} // G_OutMain_AggR_546
				
				if(storage_aggregate.storage_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_6.storage_configuration_version_last = storage_aggregate.storage_configuration_version;
				
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_6_AGGOUT++;

/**
 * [tAggregateRow_6_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";

	

 



/**
 * [tAggregateRow_6_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";

	

 



/**
 * [tAggregateRow_6_AGGOUT process_data_end ] stop
 */

} // End of branch "storage_aggregate"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 



/**
 * [tJDBCInput_11 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_11 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	
// end of generic


resourceMap.put("finish_tJDBCInput_11", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_11 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_11 = null;
    if (reader_tJDBCInput_11 != null) {
        reader_tJDBCInput_11.close();
        resultMap_tJDBCInput_11 = reader_tJDBCInput_11.getReturnValues();
    }
if(resultMap_tJDBCInput_11!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_11 : resultMap_tJDBCInput_11.entrySet()) {
		switch(entry_tJDBCInput_11.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "ERROR_MESSAGE", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_LINE", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_SUCCESS", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_REJECT", entry_tJDBCInput_11.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_11 = new StringBuilder();
            for (int i_tJDBCInput_11 = 0; i_tJDBCInput_11 < entry_tJDBCInput_11.getKey().length(); i_tJDBCInput_11++) {
                char ch_tJDBCInput_11 = entry_tJDBCInput_11.getKey().charAt(i_tJDBCInput_11);
                if(Character.isUpperCase(ch_tJDBCInput_11) && i_tJDBCInput_11> 0) {
                	studio_key_tJDBCInput_11.append('_');
                }
                studio_key_tJDBCInput_11.append(ch_tJDBCInput_11);
            }
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", studio_key_tJDBCInput_11.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_11.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_11", true);
end_Hash.put("tJDBCInput_11", System.currentTimeMillis());




/**
 * [tJDBCInput_11 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tAggregateRow_6_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"storage_aggregate");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_6_AGGOUT", true);
end_Hash.put("tAggregateRow_6_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_6_AGGOUT end ] stop
 */


	
	/**
	 * [tJDBCOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_11", false);
		start_Hash.put("tJDBCOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_11";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tJDBCOutput_11 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_11 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_11 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_11 = (String)(restRequest_tJDBCOutput_11 != null ? restRequest_tJDBCOutput_11.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_11 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_11 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_11 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_11 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_11.createRuntimeProperties();
 		                    props_tJDBCOutput_11.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_11.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_11.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_11.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_11.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.tableSelection.setValue("tablename",
 		                    "storage_domain_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"storage_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"storage_domain_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_1_fisrt sst_tJDBCOutput_11_1_fisrt = new SchemaSettingTool_tJDBCOutput_11_1_fisrt();
 		                    
 		                    props_tJDBCOutput_11.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"storage_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"storage_domain_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_2_fisrt sst_tJDBCOutput_11_2_fisrt = new SchemaSettingTool_tJDBCOutput_11_2_fisrt();
 		                    
 		                    props_tJDBCOutput_11.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"storage_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"storage_domain_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_3_fisrt sst_tJDBCOutput_11_3_fisrt = new SchemaSettingTool_tJDBCOutput_11_3_fisrt();
 		                    
 		                    props_tJDBCOutput_11.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_11.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_11.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_11.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_11 = props_tJDBCOutput_11.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_11.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_11);
        }
    }
globalMap.put("tJDBCOutput_11_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_11);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_11= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_11_MAPPINGS_URL", mappings_url_tJDBCOutput_11);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_11 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_11";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_11 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_11 = null;
topology_tJDBCOutput_11 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_11 = def_tJDBCOutput_11.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_11, topology_tJDBCOutput_11);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_11 = def_tJDBCOutput_11.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_11 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_11.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_11 = componentRuntime_tJDBCOutput_11.initialize(container_tJDBCOutput_11, props_tJDBCOutput_11);

if (initVr_tJDBCOutput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_11.getMessage());
}

if(componentRuntime_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_11 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_11;
	compDriverInitialization_tJDBCOutput_11.runAtDriver(container_tJDBCOutput_11);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_11 = null;
if(componentRuntime_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_11 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_11;
	if (doesNodeBelongToRequest_tJDBCOutput_11) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_11 = sourceOrSink_tJDBCOutput_11.validate(container_tJDBCOutput_11);
        if (vr_tJDBCOutput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_11.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_11 = null;
    if (sourceOrSink_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_11 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_11;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_11 = sink_tJDBCOutput_11.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_11) {
            writeOperation_tJDBCOutput_11.initialize(container_tJDBCOutput_11);
        }
        writer_tJDBCOutput_11 = writeOperation_tJDBCOutput_11.createWriter(container_tJDBCOutput_11);
        if (doesNodeBelongToRequest_tJDBCOutput_11) {
            writer_tJDBCOutput_11.open("tJDBCOutput_11");
        }

        resourceMap.put("writer_tJDBCOutput_11", writer_tJDBCOutput_11);
    } // end of "sourceOrSink_tJDBCOutput_11 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_11 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_11.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_11 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_11 = props_tJDBCOutput_11.getSchema(c_tJDBCOutput_11, false);
    incomingEnforcer_tJDBCOutput_11 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_11);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_11 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_11 = null;


 



/**
 * [tJDBCOutput_11 begin ] stop
 */



	
	/**
	 * [tAggregateRow_6_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_6_AGGIN", false);
		start_Hash.put("tAggregateRow_6_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";

	
		int tos_count_tAggregateRow_6_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_6> values_tAggregateRow_6 = hash_tAggregateRow_6.values();

globalMap.put("tAggregateRow_6_NB_LINE", values_tAggregateRow_6.size());

for(AggOperationStruct_tAggregateRow_6 aggregated_row_tAggregateRow_6 : values_tAggregateRow_6) { // G_AggR_600



 



/**
 * [tAggregateRow_6_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";

	

            				    row17.history_datetime = aggregated_row_tAggregateRow_6.history_datetime;
            				    
            				    row17.storage_domain_id = aggregated_row_tAggregateRow_6.storage_domain_id;
            				    
            				    row17.storage_domain_status = aggregated_row_tAggregateRow_6.storage_domain_status;
            				    
    								if(aggregated_row_tAggregateRow_6.minutes_in_status_sum != null) {
    								row17.minutes_in_status = aggregated_row_tAggregateRow_6.minutes_in_status_sum.doubleValue();
										
    								}else{
    								
    									row17.minutes_in_status = 0;
    									
    								}
    								
                                row17.available_disk_size_gb = aggregated_row_tAggregateRow_6.available_disk_size_gb_max;
                                row17.used_disk_size_gb = aggregated_row_tAggregateRow_6.used_disk_size_gb_max;
                                row17.storage_configuration_version = aggregated_row_tAggregateRow_6.storage_configuration_version_last;

 


	tos_count_tAggregateRow_6_AGGIN++;

/**
 * [tAggregateRow_6_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";

	

 



/**
 * [tAggregateRow_6_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_11 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_11 != null) {
            incomingEnforcer_tJDBCOutput_11.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_11.put("history_datetime", row17.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_11.put("storage_domain_id", row17.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("storage_domain_status") != null){
                    incomingEnforcer_tJDBCOutput_11.put("storage_domain_status", row17.storage_domain_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("minutes_in_status") != null){
                    incomingEnforcer_tJDBCOutput_11.put("minutes_in_status", row17.minutes_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("available_disk_size_gb") != null){
                    incomingEnforcer_tJDBCOutput_11.put("available_disk_size_gb", row17.available_disk_size_gb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("used_disk_size_gb") != null){
                    incomingEnforcer_tJDBCOutput_11.put("used_disk_size_gb", row17.used_disk_size_gb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("storage_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_11.put("storage_configuration_version", row17.storage_configuration_version);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_11 = null;
        if (incomingEnforcer_tJDBCOutput_11 != null) {
            data_tJDBCOutput_11 = incomingEnforcer_tJDBCOutput_11.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_11 != null && data_tJDBCOutput_11 != null) {
        	writer_tJDBCOutput_11.write(data_tJDBCOutput_11);
        }
        
        nb_line_tJDBCOutput_11++;

 


	tos_count_tJDBCOutput_11++;

/**
 * [tJDBCOutput_11 main ] stop
 */
	
	/**
	 * [tJDBCOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	


 



/**
 * [tJDBCOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	


 



/**
 * [tJDBCOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_6_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";

	

 



/**
 * [tAggregateRow_6_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_6_AGGIN", true);
end_Hash.put("tAggregateRow_6_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_6_AGGIN end ] stop
 */

	
	/**
	 * [tJDBCOutput_11 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_11", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_11 = null;
    if (writer_tJDBCOutput_11 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_11 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_11.close();
        resultMap_tJDBCOutput_11 = writer_tJDBCOutput_11.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_11), container_tJDBCOutput_11);
    }
if(resultMap_tJDBCOutput_11!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_11 : resultMap_tJDBCOutput_11.entrySet()) {
		switch(entry_tJDBCOutput_11.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "ERROR_MESSAGE", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_LINE", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_SUCCESS", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_REJECT", entry_tJDBCOutput_11.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_11 = new StringBuilder();
            for (int i_tJDBCOutput_11 = 0; i_tJDBCOutput_11 < entry_tJDBCOutput_11.getKey().length(); i_tJDBCOutput_11++) {
                char ch_tJDBCOutput_11 = entry_tJDBCOutput_11.getKey().charAt(i_tJDBCOutput_11);
                if(Character.isUpperCase(ch_tJDBCOutput_11) && i_tJDBCOutput_11> 0) {
                	studio_key_tJDBCOutput_11.append('_');
                }
                studio_key_tJDBCOutput_11.append(ch_tJDBCOutput_11);
            }
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", studio_key_tJDBCOutput_11.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_11.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_11", true);
end_Hash.put("tJDBCOutput_11", System.currentTimeMillis());




/**
 * [tJDBCOutput_11 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_6_AGGIN"
							globalMap.remove("tAggregateRow_6");
						
				try{
					
	
	/**
	 * [tJDBCInput_11 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_11")==null){
    if(resourceMap.get("reader_tJDBCInput_11")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_11")).close();
		} catch (java.io.IOException e_tJDBCInput_11) {
			String errorMessage_tJDBCInput_11 = "failed to release the resource in tJDBCInput_11 :" + e_tJDBCInput_11.getMessage();
			System.err.println(errorMessage_tJDBCInput_11);
		}
	}
}
 



/**
 * [tJDBCInput_11 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tAggregateRow_6_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";

	

 



/**
 * [tAggregateRow_6_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_6_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";

	

 



/**
 * [tAggregateRow_6_AGGIN finally ] stop
 */

	
	/**
	 * [tJDBCOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_11")==null){
    if(resourceMap.get("writer_tJDBCOutput_11")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_11")).close();
		} catch (java.io.IOException e_tJDBCOutput_11) {
			String errorMessage_tJDBCOutput_11 = "failed to release the resource in tJDBCOutput_11 :" + e_tJDBCOutput_11.getMessage();
			System.err.println(errorMessage_tJDBCOutput_11);
		}
	}
}
 



/**
 * [tJDBCOutput_11 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public Object image_id;

				public Object getImage_id () {
					return this.image_id;
				}
				
			    public Short vm_disk_status;

				public Short getVm_disk_status () {
					return this.vm_disk_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public int vm_disk_actual_size_mb;

				public int getVm_disk_actual_size_mb () {
					return this.vm_disk_actual_size_mb;
				}
				
			    public Long read_rate_bytes_per_second;

				public Long getRead_rate_bytes_per_second () {
					return this.read_rate_bytes_per_second;
				}
				
			    public Long max_read_rate_bytes_per_second;

				public Long getMax_read_rate_bytes_per_second () {
					return this.max_read_rate_bytes_per_second;
				}
				
			    public Double read_latency_seconds;

				public Double getRead_latency_seconds () {
					return this.read_latency_seconds;
				}
				
			    public Double max_read_latency_seconds;

				public Double getMax_read_latency_seconds () {
					return this.max_read_latency_seconds;
				}
				
			    public Long write_rate_bytes_per_second;

				public Long getWrite_rate_bytes_per_second () {
					return this.write_rate_bytes_per_second;
				}
				
			    public Long max_write_rate_bytes_per_second;

				public Long getMax_write_rate_bytes_per_second () {
					return this.max_write_rate_bytes_per_second;
				}
				
			    public Double write_latency_seconds;

				public Double getWrite_latency_seconds () {
					return this.write_latency_seconds;
				}
				
			    public Double max_write_latency_seconds;

				public Double getMax_write_latency_seconds () {
					return this.max_write_latency_seconds;
				}
				
			    public Long read_ops_per_second;

				public Long getRead_ops_per_second () {
					return this.read_ops_per_second;
				}
				
			    public Long max_read_ops_per_second;

				public Long getMax_read_ops_per_second () {
					return this.max_read_ops_per_second;
				}
				
			    public Long write_ops_per_second;

				public Long getWrite_ops_per_second () {
					return this.write_ops_per_second;
				}
				
			    public Long max_write_ops_per_second;

				public Long getMax_write_ops_per_second () {
					return this.max_write_ops_per_second;
				}
				
			    public Double flush_latency_seconds;

				public Double getFlush_latency_seconds () {
					return this.flush_latency_seconds;
				}
				
			    public Double max_flush_latency_seconds;

				public Double getMax_flush_latency_seconds () {
					return this.max_flush_latency_seconds;
				}
				
			    public Integer vm_disk_configuration_version;

				public Integer getVm_disk_configuration_version () {
					return this.vm_disk_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_rate_bytes_per_second = null;
           				} else {
           			    	this.max_read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_latency_seconds = null;
           				} else {
           			    	this.max_read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_rate_bytes_per_second = null;
           				} else {
           			    	this.max_write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_latency_seconds = null;
           				} else {
           			    	this.max_write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_ops_per_second = null;
           				} else {
           			    	this.max_read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_ops_per_second = null;
           				} else {
           			    	this.max_write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_flush_latency_seconds = null;
           				} else {
           			    	this.max_flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_rate_bytes_per_second = null;
           				} else {
           			    	this.max_read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_latency_seconds = null;
           				} else {
           			    	this.max_read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_rate_bytes_per_second = null;
           				} else {
           			    	this.max_write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_latency_seconds = null;
           				} else {
           			    	this.max_write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_ops_per_second = null;
           				} else {
           			    	this.max_read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_ops_per_second = null;
           				} else {
           			    	this.max_write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_flush_latency_seconds = null;
           				} else {
           			    	this.max_flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",image_id="+String.valueOf(image_id));
		sb.append(",vm_disk_status="+String.valueOf(vm_disk_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",vm_disk_actual_size_mb="+String.valueOf(vm_disk_actual_size_mb));
		sb.append(",read_rate_bytes_per_second="+String.valueOf(read_rate_bytes_per_second));
		sb.append(",max_read_rate_bytes_per_second="+String.valueOf(max_read_rate_bytes_per_second));
		sb.append(",read_latency_seconds="+String.valueOf(read_latency_seconds));
		sb.append(",max_read_latency_seconds="+String.valueOf(max_read_latency_seconds));
		sb.append(",write_rate_bytes_per_second="+String.valueOf(write_rate_bytes_per_second));
		sb.append(",max_write_rate_bytes_per_second="+String.valueOf(max_write_rate_bytes_per_second));
		sb.append(",write_latency_seconds="+String.valueOf(write_latency_seconds));
		sb.append(",max_write_latency_seconds="+String.valueOf(max_write_latency_seconds));
		sb.append(",read_ops_per_second="+String.valueOf(read_ops_per_second));
		sb.append(",max_read_ops_per_second="+String.valueOf(max_read_ops_per_second));
		sb.append(",write_ops_per_second="+String.valueOf(write_ops_per_second));
		sb.append(",max_write_ops_per_second="+String.valueOf(max_write_ops_per_second));
		sb.append(",flush_latency_seconds="+String.valueOf(flush_latency_seconds));
		sb.append(",max_flush_latency_seconds="+String.valueOf(max_flush_latency_seconds));
		sb.append(",vm_disk_configuration_version="+String.valueOf(vm_disk_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_7 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_7> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public Object image_id;

				public Object getImage_id () {
					return this.image_id;
				}
				
			    public Short vm_disk_status;

				public Short getVm_disk_status () {
					return this.vm_disk_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public int vm_disk_actual_size_mb;

				public int getVm_disk_actual_size_mb () {
					return this.vm_disk_actual_size_mb;
				}
				
			    public Long read_rate_bytes_per_second;

				public Long getRead_rate_bytes_per_second () {
					return this.read_rate_bytes_per_second;
				}
				
			    public Long max_read_rate_bytes_per_second;

				public Long getMax_read_rate_bytes_per_second () {
					return this.max_read_rate_bytes_per_second;
				}
				
			    public Double read_latency_seconds;

				public Double getRead_latency_seconds () {
					return this.read_latency_seconds;
				}
				
			    public Double max_read_latency_seconds;

				public Double getMax_read_latency_seconds () {
					return this.max_read_latency_seconds;
				}
				
			    public Long write_rate_bytes_per_second;

				public Long getWrite_rate_bytes_per_second () {
					return this.write_rate_bytes_per_second;
				}
				
			    public Long max_write_rate_bytes_per_second;

				public Long getMax_write_rate_bytes_per_second () {
					return this.max_write_rate_bytes_per_second;
				}
				
			    public Double write_latency_seconds;

				public Double getWrite_latency_seconds () {
					return this.write_latency_seconds;
				}
				
			    public Double max_write_latency_seconds;

				public Double getMax_write_latency_seconds () {
					return this.max_write_latency_seconds;
				}
				
			    public Long read_ops_per_second;

				public Long getRead_ops_per_second () {
					return this.read_ops_per_second;
				}
				
			    public Long max_read_ops_per_second;

				public Long getMax_read_ops_per_second () {
					return this.max_read_ops_per_second;
				}
				
			    public Long write_ops_per_second;

				public Long getWrite_ops_per_second () {
					return this.write_ops_per_second;
				}
				
			    public Long max_write_ops_per_second;

				public Long getMax_write_ops_per_second () {
					return this.max_write_ops_per_second;
				}
				
			    public Double flush_latency_seconds;

				public Double getFlush_latency_seconds () {
					return this.flush_latency_seconds;
				}
				
			    public Double max_flush_latency_seconds;

				public Double getMax_flush_latency_seconds () {
					return this.max_flush_latency_seconds;
				}
				
			    public Integer vm_disk_configuration_version;

				public Integer getVm_disk_configuration_version () {
					return this.vm_disk_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_rate_bytes_per_second = null;
           				} else {
           			    	this.max_read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_latency_seconds = null;
           				} else {
           			    	this.max_read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_rate_bytes_per_second = null;
           				} else {
           			    	this.max_write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_latency_seconds = null;
           				} else {
           			    	this.max_write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_ops_per_second = null;
           				} else {
           			    	this.max_read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_ops_per_second = null;
           				} else {
           			    	this.max_write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_flush_latency_seconds = null;
           				} else {
           			    	this.max_flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_rate_bytes_per_second = null;
           				} else {
           			    	this.max_read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_latency_seconds = null;
           				} else {
           			    	this.max_read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_rate_bytes_per_second = null;
           				} else {
           			    	this.max_write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_latency_seconds = null;
           				} else {
           			    	this.max_write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_read_ops_per_second = null;
           				} else {
           			    	this.max_read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_write_ops_per_second = null;
           				} else {
           			    	this.max_write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_flush_latency_seconds = null;
           				} else {
           			    	this.max_flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Long
				
						if(this.max_write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Long
				
						if(this.max_write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.max_write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Double
				
						if(this.max_flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.max_flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",image_id="+String.valueOf(image_id));
		sb.append(",vm_disk_status="+String.valueOf(vm_disk_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",vm_disk_actual_size_mb="+String.valueOf(vm_disk_actual_size_mb));
		sb.append(",read_rate_bytes_per_second="+String.valueOf(read_rate_bytes_per_second));
		sb.append(",max_read_rate_bytes_per_second="+String.valueOf(max_read_rate_bytes_per_second));
		sb.append(",read_latency_seconds="+String.valueOf(read_latency_seconds));
		sb.append(",max_read_latency_seconds="+String.valueOf(max_read_latency_seconds));
		sb.append(",write_rate_bytes_per_second="+String.valueOf(write_rate_bytes_per_second));
		sb.append(",max_write_rate_bytes_per_second="+String.valueOf(max_write_rate_bytes_per_second));
		sb.append(",write_latency_seconds="+String.valueOf(write_latency_seconds));
		sb.append(",max_write_latency_seconds="+String.valueOf(max_write_latency_seconds));
		sb.append(",read_ops_per_second="+String.valueOf(read_ops_per_second));
		sb.append(",max_read_ops_per_second="+String.valueOf(max_read_ops_per_second));
		sb.append(",write_ops_per_second="+String.valueOf(write_ops_per_second));
		sb.append(",max_write_ops_per_second="+String.valueOf(max_write_ops_per_second));
		sb.append(",flush_latency_seconds="+String.valueOf(flush_latency_seconds));
		sb.append(",max_flush_latency_seconds="+String.valueOf(max_flush_latency_seconds));
		sb.append(",vm_disk_configuration_version="+String.valueOf(vm_disk_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_7 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class vm_disk_aggregateStruct implements routines.system.IPersistableRow<vm_disk_aggregateStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public Object image_id;

				public Object getImage_id () {
					return this.image_id;
				}
				
			    public Short vm_disk_status;

				public Short getVm_disk_status () {
					return this.vm_disk_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public int vm_disk_actual_size_mb;

				public int getVm_disk_actual_size_mb () {
					return this.vm_disk_actual_size_mb;
				}
				
			    public Long read_rate_bytes_per_second;

				public Long getRead_rate_bytes_per_second () {
					return this.read_rate_bytes_per_second;
				}
				
			    public Double read_latency_seconds;

				public Double getRead_latency_seconds () {
					return this.read_latency_seconds;
				}
				
			    public Long write_rate_bytes_per_second;

				public Long getWrite_rate_bytes_per_second () {
					return this.write_rate_bytes_per_second;
				}
				
			    public Double write_latency_seconds;

				public Double getWrite_latency_seconds () {
					return this.write_latency_seconds;
				}
				
			    public Long read_ops_per_second;

				public Long getRead_ops_per_second () {
					return this.read_ops_per_second;
				}
				
			    public Long write_ops_per_second;

				public Long getWrite_ops_per_second () {
					return this.write_ops_per_second;
				}
				
			    public Double flush_latency_seconds;

				public Double getFlush_latency_seconds () {
					return this.flush_latency_seconds;
				}
				
			    public Integer vm_disk_configuration_version;

				public Integer getVm_disk_configuration_version () {
					return this.vm_disk_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",image_id="+String.valueOf(image_id));
		sb.append(",vm_disk_status="+String.valueOf(vm_disk_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",vm_disk_actual_size_mb="+String.valueOf(vm_disk_actual_size_mb));
		sb.append(",read_rate_bytes_per_second="+String.valueOf(read_rate_bytes_per_second));
		sb.append(",read_latency_seconds="+String.valueOf(read_latency_seconds));
		sb.append(",write_rate_bytes_per_second="+String.valueOf(write_rate_bytes_per_second));
		sb.append(",write_latency_seconds="+String.valueOf(write_latency_seconds));
		sb.append(",read_ops_per_second="+String.valueOf(read_ops_per_second));
		sb.append(",write_ops_per_second="+String.valueOf(write_ops_per_second));
		sb.append(",flush_latency_seconds="+String.valueOf(flush_latency_seconds));
		sb.append(",vm_disk_configuration_version="+String.valueOf(vm_disk_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_disk_aggregateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public Object image_id;

				public Object getImage_id () {
					return this.image_id;
				}
				
			    public Short vm_disk_status;

				public Short getVm_disk_status () {
					return this.vm_disk_status;
				}
				
			    public double minutes_in_status;

				public double getMinutes_in_status () {
					return this.minutes_in_status;
				}
				
			    public int vm_disk_actual_size_mb;

				public int getVm_disk_actual_size_mb () {
					return this.vm_disk_actual_size_mb;
				}
				
			    public Long read_rate_bytes_per_second;

				public Long getRead_rate_bytes_per_second () {
					return this.read_rate_bytes_per_second;
				}
				
			    public Double read_latency_seconds;

				public Double getRead_latency_seconds () {
					return this.read_latency_seconds;
				}
				
			    public Long write_rate_bytes_per_second;

				public Long getWrite_rate_bytes_per_second () {
					return this.write_rate_bytes_per_second;
				}
				
			    public Double write_latency_seconds;

				public Double getWrite_latency_seconds () {
					return this.write_latency_seconds;
				}
				
			    public Long read_ops_per_second;

				public Long getRead_ops_per_second () {
					return this.read_ops_per_second;
				}
				
			    public Long write_ops_per_second;

				public Long getWrite_ops_per_second () {
					return this.write_ops_per_second;
				}
				
			    public Double flush_latency_seconds;

				public Double getFlush_latency_seconds () {
					return this.flush_latency_seconds;
				}
				
			    public Integer vm_disk_configuration_version;

				public Integer getVm_disk_configuration_version () {
					return this.vm_disk_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.minutes_in_status = dis.readDouble();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// double
				
		            	dos.writeDouble(this.minutes_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",image_id="+String.valueOf(image_id));
		sb.append(",vm_disk_status="+String.valueOf(vm_disk_status));
		sb.append(",minutes_in_status="+String.valueOf(minutes_in_status));
		sb.append(",vm_disk_actual_size_mb="+String.valueOf(vm_disk_actual_size_mb));
		sb.append(",read_rate_bytes_per_second="+String.valueOf(read_rate_bytes_per_second));
		sb.append(",read_latency_seconds="+String.valueOf(read_latency_seconds));
		sb.append(",write_rate_bytes_per_second="+String.valueOf(write_rate_bytes_per_second));
		sb.append(",write_latency_seconds="+String.valueOf(write_latency_seconds));
		sb.append(",read_ops_per_second="+String.valueOf(read_ops_per_second));
		sb.append(",write_ops_per_second="+String.valueOf(write_ops_per_second));
		sb.append(",flush_latency_seconds="+String.valueOf(flush_latency_seconds));
		sb.append(",vm_disk_configuration_version="+String.valueOf(vm_disk_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();
vm_disk_aggregateStruct vm_disk_aggregate = new vm_disk_aggregateStruct();
row20Struct row20 = new row20Struct();





	
	/**
	 * [tAggregateRow_7_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_7_AGGOUT", false);
		start_Hash.put("tAggregateRow_7_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_disk_aggregate");
					}
				
		int tos_count_tAggregateRow_7_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_7 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_7 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_7 utilClass_tAggregateRow_7 = new UtilClass_tAggregateRow_7();

	

	class AggOperationStruct_tAggregateRow_7 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object vm_disk_id;
    				Short vm_disk_status;BigDecimal minutes_in_status_sum;
           			
           			double vm_disk_actual_size_mb_sum;
					int vm_disk_actual_size_mb_count = 0;
           			BigDecimal read_rate_bytes_per_second_sum;
           			int read_rate_bytes_per_second_count = 0;
           			
         			Long max_read_rate_bytes_per_second_max;BigDecimal read_latency_seconds_sum;
           			int read_latency_seconds_count = 0;
           			
         			Double max_read_latency_seconds_max;BigDecimal write_rate_bytes_per_second_sum;
           			int write_rate_bytes_per_second_count = 0;
           			
         			Long max_write_rate_bytes_per_second_max;BigDecimal write_latency_seconds_sum;
           			int write_latency_seconds_count = 0;
           			
         			Double max_write_latency_seconds_max;BigDecimal read_ops_per_second_sum;
           			int read_ops_per_second_count = 0;
           			
         			Long max_read_ops_per_second_max;BigDecimal write_ops_per_second_sum;
           			int write_ops_per_second_count = 0;
           			
         			Long max_write_ops_per_second_max;BigDecimal flush_latency_seconds_sum;
           			int flush_latency_seconds_count = 0;
           			
         			Double max_flush_latency_seconds_max;
         			Integer vm_disk_configuration_version_last;
         			Object image_id_last;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.vm_disk_id == null) ? 0 : this.vm_disk_id.hashCode());
							
							result = prime * result + ((this.vm_disk_status == null) ? 0 : this.vm_disk_status.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_7 other = (AggOperationStruct_tAggregateRow_7) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.vm_disk_id == null) {
								if (other.vm_disk_id != null) 
									return false;
							} else if (!this.vm_disk_id.equals(other.vm_disk_id)) 
								return false;
						
							if (this.vm_disk_status == null) {
								if (other.vm_disk_status != null) 
									return false;
							} else if (!this.vm_disk_status.equals(other.vm_disk_status)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_7 operation_result_tAggregateRow_7 = null;
	AggOperationStruct_tAggregateRow_7 operation_finder_tAggregateRow_7 = new AggOperationStruct_tAggregateRow_7();
	java.util.Map<AggOperationStruct_tAggregateRow_7,AggOperationStruct_tAggregateRow_7> hash_tAggregateRow_7 = new java.util.HashMap<AggOperationStruct_tAggregateRow_7,AggOperationStruct_tAggregateRow_7>();
	

 



/**
 * [tAggregateRow_7_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_disk_aggregateStruct vm_disk_aggregate_tmp = new vm_disk_aggregateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tJDBCInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_13", false);
		start_Hash.put("tJDBCInput_13", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_13";

	
		int tos_count_tJDBCInput_13 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_13 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_13 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_13 = (String)(restRequest_tJDBCInput_13 != null ? restRequest_tJDBCInput_13.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_13 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_13 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_13 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_13 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_13.createRuntimeProperties();
 		                    props_tJDBCInput_13.setValue("sql",
 		                    "SELECT history_datetime,\n		vm_disk_id,\n        image_id,\n		vm_disk_status, \n		minutes_in_status,\n		vm_disk_actual_size_"
+"mb,\n		read_rate_bytes_per_second,\n		read_latency_seconds,\n		write_rate_bytes_per_second,\n		write_latency_seconds,\n		read"
+"_ops_per_second,\n		write_ops_per_second,\n		flush_latency_seconds,\n		vm_disk_configuration_version \nFROM vm_disk_hourly_h"
+"istory\nWHERE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\nAND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY history_datetime,\n		 vm_disk_id, \n  		 vm_disk_status");
 		                    
 		                    props_tJDBCInput_13.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_13.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_13.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_13_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"7\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_13\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_13_1_fisrt sst_tJDBCInput_13_1_fisrt = new SchemaSettingTool_tJDBCInput_13_1_fisrt();
 		                    
 		                    props_tJDBCInput_13.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_13_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_13.tableSelection.setValue("tablename",
 		                    "vm_disk_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_13_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_13.trimTable).setValue("trim",tJDBCInput_13_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_13_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_13_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("vm_disk_id");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("image_id");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("vm_disk_status");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("minutes_in_status");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("vm_disk_actual_size_mb");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("read_rate_bytes_per_second");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("read_latency_seconds");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("write_rate_bytes_per_second");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("write_latency_seconds");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("read_ops_per_second");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("write_ops_per_second");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("flush_latency_seconds");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("vm_disk_configuration_version");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_13.trimTable).setValue("columnName",tJDBCInput_13_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_13.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_13 = props_tJDBCInput_13.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_13 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_13 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_13 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_13.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_13);
        }
    }
globalMap.put("tJDBCInput_13_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_13);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_13= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_13_MAPPINGS_URL", mappings_url_tJDBCInput_13);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_13 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_13";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_13 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_13 = null;
topology_tJDBCInput_13 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_13 = def_tJDBCInput_13.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_13, topology_tJDBCInput_13);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_13 = def_tJDBCInput_13.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_13 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_13.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_13 = componentRuntime_tJDBCInput_13.initialize(container_tJDBCInput_13, props_tJDBCInput_13);

if (initVr_tJDBCInput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_13.getMessage());
}

if(componentRuntime_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_13 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_13;
	compDriverInitialization_tJDBCInput_13.runAtDriver(container_tJDBCInput_13);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_13 = null;
if(componentRuntime_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_13 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_13;
	if (doesNodeBelongToRequest_tJDBCInput_13) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_13 = sourceOrSink_tJDBCInput_13.validate(container_tJDBCInput_13);
        if (vr_tJDBCInput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_13.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_13 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_13;
        reader_tJDBCInput_13 = source_tJDBCInput_13.createReader(container_tJDBCInput_13);
	    reader_tJDBCInput_13 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_13, container_tJDBCInput_13);

            boolean multi_output_is_allowed_tJDBCInput_13 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_13 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_13.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_13 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_13 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_13 = props_tJDBCInput_13.getSchema(c_tJDBCInput_13, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_13 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_13, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_13 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_13 = reader_tJDBCInput_13.start();

        resourceMap.put("reader_tJDBCInput_13", reader_tJDBCInput_13);

        for (; available_tJDBCInput_13; available_tJDBCInput_13 = reader_tJDBCInput_13.advance()) {
			nb_line_tJDBCInput_13++;

			
			if (multi_output_is_allowed_tJDBCInput_13) {
				
					row19 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_13 = reader_tJDBCInput_13.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_13) {
						row19 = new row19Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_13 == null) {
            factory_tJDBCInput_13 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_13.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_13.setWrapped(factory_tJDBCInput_13.convertToAvro(data_tJDBCInput_13));
                Object columnValue_0_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(0);
                        row19.history_datetime = (java.util.Date) (columnValue_0_tJDBCInput_13);
                Object columnValue_1_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(1);
                        row19.vm_disk_id = (Object) (columnValue_1_tJDBCInput_13);
                Object columnValue_2_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(2);
                        row19.image_id = (Object) (columnValue_2_tJDBCInput_13);
                Object columnValue_3_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(3);
                        row19.vm_disk_status = (Short) (columnValue_3_tJDBCInput_13);
                Object columnValue_4_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(4);
                    if (columnValue_4_tJDBCInput_13 == null) {
                        row19.minutes_in_status = 0;
                    } else {
                            row19.minutes_in_status = (double) (columnValue_4_tJDBCInput_13);
                    }
                Object columnValue_5_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(5);
                    if (columnValue_5_tJDBCInput_13 == null) {
                        row19.vm_disk_actual_size_mb = 0;
                    } else {
                            row19.vm_disk_actual_size_mb = (int) (columnValue_5_tJDBCInput_13);
                    }
                Object columnValue_6_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(6);
                        row19.read_rate_bytes_per_second = (Long) (columnValue_6_tJDBCInput_13);
                Object columnValue_7_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(7);
                        row19.read_latency_seconds = (Double) (columnValue_7_tJDBCInput_13);
                Object columnValue_8_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(8);
                        row19.write_rate_bytes_per_second = (Long) (columnValue_8_tJDBCInput_13);
                Object columnValue_9_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(9);
                        row19.write_latency_seconds = (Double) (columnValue_9_tJDBCInput_13);
                Object columnValue_10_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(10);
                        row19.read_ops_per_second = (Long) (columnValue_10_tJDBCInput_13);
                Object columnValue_11_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(11);
                        row19.write_ops_per_second = (Long) (columnValue_11_tJDBCInput_13);
                Object columnValue_12_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(12);
                        row19.flush_latency_seconds = (Double) (columnValue_12_tJDBCInput_13);
                Object columnValue_13_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(13);
                        row19.vm_disk_configuration_version = (Integer) (columnValue_13_tJDBCInput_13);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_13) {
				java.util.Map<String,Object> info_tJDBCInput_13 = e_tJDBCInput_13.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_13 = null;
					if(info_tJDBCInput_13.containsKey("error")){
						errorMessage_tJDBCInput_13 = info_tJDBCInput_13.get("error");
					}else if(info_tJDBCInput_13.containsKey("errorMessage")){
						errorMessage_tJDBCInput_13 = info_tJDBCInput_13.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_13 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_13 = "Row "+ nb_line_tJDBCInput_13 + ": "+errorMessage_tJDBCInput_13;
					System.err.println(errorMessage_tJDBCInput_13);
				
					// If the record is reject, the main line record should put NULL
					row19 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_13 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_13 = null;


 



/**
 * [tJDBCInput_13 begin ] stop
 */
	
	/**
	 * [tJDBCInput_13 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 


	tos_count_tJDBCInput_13++;

/**
 * [tJDBCInput_13 main ] stop
 */
	
	/**
	 * [tJDBCInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 



/**
 * [tJDBCInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_13 = false;
		  boolean mainRowRejected_tMap_13 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

vm_disk_aggregate = null;


// # Output table : 'vm_disk_aggregate'
vm_disk_aggregate_tmp.history_datetime = RoutineHistoryETL.startOfDay(row19.history_datetime);
vm_disk_aggregate_tmp.vm_disk_id = row19.vm_disk_id;
vm_disk_aggregate_tmp.image_id = row19.image_id;
vm_disk_aggregate_tmp.vm_disk_status = row19.vm_disk_status;
vm_disk_aggregate_tmp.minutes_in_status = row19.minutes_in_status;
vm_disk_aggregate_tmp.vm_disk_actual_size_mb = row19.vm_disk_actual_size_mb;
vm_disk_aggregate_tmp.read_rate_bytes_per_second = row19.read_rate_bytes_per_second;
vm_disk_aggregate_tmp.read_latency_seconds = row19.read_latency_seconds;
vm_disk_aggregate_tmp.write_rate_bytes_per_second = row19.write_rate_bytes_per_second;
vm_disk_aggregate_tmp.write_latency_seconds = row19.write_latency_seconds;
vm_disk_aggregate_tmp.read_ops_per_second = row19.read_ops_per_second ;
vm_disk_aggregate_tmp.write_ops_per_second = row19.write_ops_per_second ;
vm_disk_aggregate_tmp.flush_latency_seconds = row19.flush_latency_seconds;
vm_disk_aggregate_tmp.vm_disk_configuration_version = row19.vm_disk_configuration_version;
vm_disk_aggregate = vm_disk_aggregate_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";

	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "vm_disk_aggregate"
if(vm_disk_aggregate != null) { 



	
	/**
	 * [tAggregateRow_7_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_disk_aggregate"
						
						);
					}
					
	
operation_finder_tAggregateRow_7.history_datetime = vm_disk_aggregate.history_datetime;
			operation_finder_tAggregateRow_7.vm_disk_id = vm_disk_aggregate.vm_disk_id;
			operation_finder_tAggregateRow_7.vm_disk_status = vm_disk_aggregate.vm_disk_status;
			

	operation_finder_tAggregateRow_7.hashCodeDirty = true;
	
	operation_result_tAggregateRow_7 = hash_tAggregateRow_7.get(operation_finder_tAggregateRow_7);

	
		boolean isFirstAdd_tAggregateRow_7 = false;
	

	if(operation_result_tAggregateRow_7 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_7 = new AggOperationStruct_tAggregateRow_7();

		operation_result_tAggregateRow_7.history_datetime = operation_finder_tAggregateRow_7.history_datetime;
				operation_result_tAggregateRow_7.vm_disk_id = operation_finder_tAggregateRow_7.vm_disk_id;
				operation_result_tAggregateRow_7.vm_disk_status = operation_finder_tAggregateRow_7.vm_disk_status;
				
		
		
			isFirstAdd_tAggregateRow_7 = true;
		

		hash_tAggregateRow_7.put(operation_result_tAggregateRow_7, operation_result_tAggregateRow_7);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_7.minutes_in_status_sum == null) {
						operation_result_tAggregateRow_7.minutes_in_status_sum = new BigDecimal(0).setScale(2);
					}
					operation_result_tAggregateRow_7.minutes_in_status_sum = operation_result_tAggregateRow_7.minutes_in_status_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.minutes_in_status
							)
						)
					);
					
				operation_result_tAggregateRow_7.vm_disk_actual_size_mb_count++;
				
						operation_result_tAggregateRow_7.vm_disk_actual_size_mb_sum += vm_disk_aggregate.vm_disk_actual_size_mb;
					
				if(vm_disk_aggregate.read_rate_bytes_per_second != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_7.read_rate_bytes_per_second_count++;
				
					if(operation_result_tAggregateRow_7.read_rate_bytes_per_second_sum == null) {
						operation_result_tAggregateRow_7.read_rate_bytes_per_second_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_7.read_rate_bytes_per_second_sum = operation_result_tAggregateRow_7.read_rate_bytes_per_second_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.read_rate_bytes_per_second
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.read_rate_bytes_per_second != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_7.max_read_rate_bytes_per_second_max == null || 
						vm_disk_aggregate.read_rate_bytes_per_second > operation_result_tAggregateRow_7.max_read_rate_bytes_per_second_max
						
					) {
						operation_result_tAggregateRow_7.max_read_rate_bytes_per_second_max = vm_disk_aggregate.read_rate_bytes_per_second;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.read_latency_seconds != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_7.read_latency_seconds_count++;
				
					if(operation_result_tAggregateRow_7.read_latency_seconds_sum == null) {
						operation_result_tAggregateRow_7.read_latency_seconds_sum = new BigDecimal(0).setScale(9);
					}
					operation_result_tAggregateRow_7.read_latency_seconds_sum = operation_result_tAggregateRow_7.read_latency_seconds_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.read_latency_seconds
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.read_latency_seconds != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_7.max_read_latency_seconds_max == null || 
						vm_disk_aggregate.read_latency_seconds > operation_result_tAggregateRow_7.max_read_latency_seconds_max
						
					) {
						operation_result_tAggregateRow_7.max_read_latency_seconds_max = vm_disk_aggregate.read_latency_seconds;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.write_rate_bytes_per_second != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_7.write_rate_bytes_per_second_count++;
				
					if(operation_result_tAggregateRow_7.write_rate_bytes_per_second_sum == null) {
						operation_result_tAggregateRow_7.write_rate_bytes_per_second_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_7.write_rate_bytes_per_second_sum = operation_result_tAggregateRow_7.write_rate_bytes_per_second_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.write_rate_bytes_per_second
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.write_rate_bytes_per_second != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_7.max_write_rate_bytes_per_second_max == null || 
						vm_disk_aggregate.write_rate_bytes_per_second > operation_result_tAggregateRow_7.max_write_rate_bytes_per_second_max
						
					) {
						operation_result_tAggregateRow_7.max_write_rate_bytes_per_second_max = vm_disk_aggregate.write_rate_bytes_per_second;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.write_latency_seconds != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_7.write_latency_seconds_count++;
				
					if(operation_result_tAggregateRow_7.write_latency_seconds_sum == null) {
						operation_result_tAggregateRow_7.write_latency_seconds_sum = new BigDecimal(0).setScale(9);
					}
					operation_result_tAggregateRow_7.write_latency_seconds_sum = operation_result_tAggregateRow_7.write_latency_seconds_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.write_latency_seconds
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.write_latency_seconds != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_7.max_write_latency_seconds_max == null || 
						vm_disk_aggregate.write_latency_seconds > operation_result_tAggregateRow_7.max_write_latency_seconds_max
						
					) {
						operation_result_tAggregateRow_7.max_write_latency_seconds_max = vm_disk_aggregate.write_latency_seconds;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.read_ops_per_second != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_7.read_ops_per_second_count++;
				
					if(operation_result_tAggregateRow_7.read_ops_per_second_sum == null) {
						operation_result_tAggregateRow_7.read_ops_per_second_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_7.read_ops_per_second_sum = operation_result_tAggregateRow_7.read_ops_per_second_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.read_ops_per_second
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.read_ops_per_second != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_7.max_read_ops_per_second_max == null || 
						vm_disk_aggregate.read_ops_per_second > operation_result_tAggregateRow_7.max_read_ops_per_second_max
						
					) {
						operation_result_tAggregateRow_7.max_read_ops_per_second_max = vm_disk_aggregate.read_ops_per_second;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.write_ops_per_second != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_7.write_ops_per_second_count++;
				
					if(operation_result_tAggregateRow_7.write_ops_per_second_sum == null) {
						operation_result_tAggregateRow_7.write_ops_per_second_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_7.write_ops_per_second_sum = operation_result_tAggregateRow_7.write_ops_per_second_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.write_ops_per_second
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.write_ops_per_second != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_7.max_write_ops_per_second_max == null || 
						vm_disk_aggregate.write_ops_per_second > operation_result_tAggregateRow_7.max_write_ops_per_second_max
						
					) {
						operation_result_tAggregateRow_7.max_write_ops_per_second_max = vm_disk_aggregate.write_ops_per_second;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.flush_latency_seconds != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_7.flush_latency_seconds_count++;
				
					if(operation_result_tAggregateRow_7.flush_latency_seconds_sum == null) {
						operation_result_tAggregateRow_7.flush_latency_seconds_sum = new BigDecimal(0).setScale(9);
					}
					operation_result_tAggregateRow_7.flush_latency_seconds_sum = operation_result_tAggregateRow_7.flush_latency_seconds_sum.add(
						new BigDecimal(
							String.valueOf(
								vm_disk_aggregate.flush_latency_seconds
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.flush_latency_seconds != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_7.max_flush_latency_seconds_max == null || 
						vm_disk_aggregate.flush_latency_seconds > operation_result_tAggregateRow_7.max_flush_latency_seconds_max
						
					) {
						operation_result_tAggregateRow_7.max_flush_latency_seconds_max = vm_disk_aggregate.flush_latency_seconds;
					}
					
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.vm_disk_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_7.vm_disk_configuration_version_last = vm_disk_aggregate.vm_disk_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(vm_disk_aggregate.image_id != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_7.image_id_last = vm_disk_aggregate.image_id;
				
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_7_AGGOUT++;

/**
 * [tAggregateRow_7_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_7_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGOUT";

	

 



/**
 * [tAggregateRow_7_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_7_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGOUT";

	

 



/**
 * [tAggregateRow_7_AGGOUT process_data_end ] stop
 */

} // End of branch "vm_disk_aggregate"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";

	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 



/**
 * [tJDBCInput_13 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_13 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	
// end of generic


resourceMap.put("finish_tJDBCInput_13", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_13 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_13 = null;
    if (reader_tJDBCInput_13 != null) {
        reader_tJDBCInput_13.close();
        resultMap_tJDBCInput_13 = reader_tJDBCInput_13.getReturnValues();
    }
if(resultMap_tJDBCInput_13!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_13 : resultMap_tJDBCInput_13.entrySet()) {
		switch(entry_tJDBCInput_13.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "ERROR_MESSAGE", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_LINE", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_SUCCESS", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_REJECT", entry_tJDBCInput_13.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_13 = new StringBuilder();
            for (int i_tJDBCInput_13 = 0; i_tJDBCInput_13 < entry_tJDBCInput_13.getKey().length(); i_tJDBCInput_13++) {
                char ch_tJDBCInput_13 = entry_tJDBCInput_13.getKey().charAt(i_tJDBCInput_13);
                if(Character.isUpperCase(ch_tJDBCInput_13) && i_tJDBCInput_13> 0) {
                	studio_key_tJDBCInput_13.append('_');
                }
                studio_key_tJDBCInput_13.append(ch_tJDBCInput_13);
            }
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", studio_key_tJDBCInput_13.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_13.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_13", true);
end_Hash.put("tJDBCInput_13", System.currentTimeMillis());




/**
 * [tJDBCInput_13 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tAggregateRow_7_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_disk_aggregate");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_7_AGGOUT", true);
end_Hash.put("tAggregateRow_7_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_7_AGGOUT end ] stop
 */


	
	/**
	 * [tJDBCOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_13", false);
		start_Hash.put("tJDBCOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_13";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tJDBCOutput_13 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_13 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_13 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_13 = (String)(restRequest_tJDBCOutput_13 != null ? restRequest_tJDBCOutput_13.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_13 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_13 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_13 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_13 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_13.createRuntimeProperties();
 		                    props_tJDBCOutput_13.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_13.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_13.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_13.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_13.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_13.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_13.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_13.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.tableSelection.setValue("tablename",
 		                    "vm_disk_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_13_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"7\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_13\",\"di.table.label\":\"vm_disk_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_13_1_fisrt sst_tJDBCOutput_13_1_fisrt = new SchemaSettingTool_tJDBCOutput_13_1_fisrt();
 		                    
 		                    props_tJDBCOutput_13.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_13_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_13_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"7\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_13\",\"di.table.label\":\"vm_disk_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_13_2_fisrt sst_tJDBCOutput_13_2_fisrt = new SchemaSettingTool_tJDBCOutput_13_2_fisrt();
 		                    
 		                    props_tJDBCOutput_13.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_13_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_13_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"minutes_in_status\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"minutes_in_status\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"7\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"minutes_in_status\",\"talend.field.precision\":\"2\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"max_write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_rate_bytes_per_second\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"max_write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"max_flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_13\",\"di.table.label\":\"vm_disk_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_13_3_fisrt sst_tJDBCOutput_13_3_fisrt = new SchemaSettingTool_tJDBCOutput_13_3_fisrt();
 		                    
 		                    props_tJDBCOutput_13.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_13_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_13.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_13.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_13.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_13 = props_tJDBCOutput_13.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_13 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_13 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_13 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_13.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_13);
        }
    }
globalMap.put("tJDBCOutput_13_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_13);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_13= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_13_MAPPINGS_URL", mappings_url_tJDBCOutput_13);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_13 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_13";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_13 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_13 = null;
topology_tJDBCOutput_13 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_13 = def_tJDBCOutput_13.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_13, topology_tJDBCOutput_13);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_13 = def_tJDBCOutput_13.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_13 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_13.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_13 = componentRuntime_tJDBCOutput_13.initialize(container_tJDBCOutput_13, props_tJDBCOutput_13);

if (initVr_tJDBCOutput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_13.getMessage());
}

if(componentRuntime_tJDBCOutput_13 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_13 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_13;
	compDriverInitialization_tJDBCOutput_13.runAtDriver(container_tJDBCOutput_13);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_13 = null;
if(componentRuntime_tJDBCOutput_13 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_13 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_13;
	if (doesNodeBelongToRequest_tJDBCOutput_13) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_13 = sourceOrSink_tJDBCOutput_13.validate(container_tJDBCOutput_13);
        if (vr_tJDBCOutput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_13.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_13 = null;
    if (sourceOrSink_tJDBCOutput_13 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_13 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_13;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_13 = sink_tJDBCOutput_13.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_13) {
            writeOperation_tJDBCOutput_13.initialize(container_tJDBCOutput_13);
        }
        writer_tJDBCOutput_13 = writeOperation_tJDBCOutput_13.createWriter(container_tJDBCOutput_13);
        if (doesNodeBelongToRequest_tJDBCOutput_13) {
            writer_tJDBCOutput_13.open("tJDBCOutput_13");
        }

        resourceMap.put("writer_tJDBCOutput_13", writer_tJDBCOutput_13);
    } // end of "sourceOrSink_tJDBCOutput_13 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_13 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_13.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_13 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_13 = props_tJDBCOutput_13.getSchema(c_tJDBCOutput_13, false);
    incomingEnforcer_tJDBCOutput_13 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_13);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_13 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_13 = null;


 



/**
 * [tJDBCOutput_13 begin ] stop
 */



	
	/**
	 * [tAggregateRow_7_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_7_AGGIN", false);
		start_Hash.put("tAggregateRow_7_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGIN";

	
		int tos_count_tAggregateRow_7_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_7> values_tAggregateRow_7 = hash_tAggregateRow_7.values();

globalMap.put("tAggregateRow_7_NB_LINE", values_tAggregateRow_7.size());

for(AggOperationStruct_tAggregateRow_7 aggregated_row_tAggregateRow_7 : values_tAggregateRow_7) { // G_AggR_600



 



/**
 * [tAggregateRow_7_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_7_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGIN";

	

            				    row20.history_datetime = aggregated_row_tAggregateRow_7.history_datetime;
            				    
            				    row20.vm_disk_id = aggregated_row_tAggregateRow_7.vm_disk_id;
            				    
                                row20.image_id = aggregated_row_tAggregateRow_7.image_id_last;
            				    row20.vm_disk_status = aggregated_row_tAggregateRow_7.vm_disk_status;
            				    
    								if(aggregated_row_tAggregateRow_7.minutes_in_status_sum != null) {
    								row20.minutes_in_status = aggregated_row_tAggregateRow_7.minutes_in_status_sum.doubleValue();
										
    								}else{
    								
    									row20.minutes_in_status = 0;
    									
    								}
    								
                                if(aggregated_row_tAggregateRow_7.vm_disk_actual_size_mb_count > 0){
                                	
	    								double row20_vm_disk_actual_size_mb_temp = (double) aggregated_row_tAggregateRow_7.vm_disk_actual_size_mb_sum / (double) aggregated_row_tAggregateRow_7.vm_disk_actual_size_mb_count;
	    								
	    								row20.vm_disk_actual_size_mb = (int) row20_vm_disk_actual_size_mb_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.vm_disk_actual_size_mb = ParserUtils.parseTo_int(count);
    									
                                }
                                if(aggregated_row_tAggregateRow_7.read_rate_bytes_per_second_count > 0){
                                	
	    								row20.read_rate_bytes_per_second = aggregated_row_tAggregateRow_7.read_rate_bytes_per_second_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_7.read_rate_bytes_per_second_count)), 10, BigDecimal.ROUND_HALF_UP)
	    								
	    									.longValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.read_rate_bytes_per_second = ParserUtils.parseTo_Long(count);
    									
                                }
                                row20.max_read_rate_bytes_per_second = aggregated_row_tAggregateRow_7.max_read_rate_bytes_per_second_max;
                                if(aggregated_row_tAggregateRow_7.read_latency_seconds_count > 0){
                                	
	    								row20.read_latency_seconds = aggregated_row_tAggregateRow_7.read_latency_seconds_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_7.read_latency_seconds_count)), 9, BigDecimal.ROUND_HALF_UP)
	    								
	    									.doubleValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.read_latency_seconds = ParserUtils.parseTo_Double(count);
    									
                                }
                                row20.max_read_latency_seconds = aggregated_row_tAggregateRow_7.max_read_latency_seconds_max;
                                if(aggregated_row_tAggregateRow_7.write_rate_bytes_per_second_count > 0){
                                	
	    								row20.write_rate_bytes_per_second = aggregated_row_tAggregateRow_7.write_rate_bytes_per_second_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_7.write_rate_bytes_per_second_count)), 10, BigDecimal.ROUND_HALF_UP)
	    								
	    									.longValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.write_rate_bytes_per_second = ParserUtils.parseTo_Long(count);
    									
                                }
                                row20.max_write_rate_bytes_per_second = aggregated_row_tAggregateRow_7.max_write_rate_bytes_per_second_max;
                                if(aggregated_row_tAggregateRow_7.write_latency_seconds_count > 0){
                                	
	    								row20.write_latency_seconds = aggregated_row_tAggregateRow_7.write_latency_seconds_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_7.write_latency_seconds_count)), 9, BigDecimal.ROUND_HALF_UP)
	    								
	    									.doubleValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.write_latency_seconds = ParserUtils.parseTo_Double(count);
    									
                                }
                                row20.max_write_latency_seconds = aggregated_row_tAggregateRow_7.max_write_latency_seconds_max;
                                if(aggregated_row_tAggregateRow_7.read_ops_per_second_count > 0){
                                	
	    								row20.read_ops_per_second = aggregated_row_tAggregateRow_7.read_ops_per_second_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_7.read_ops_per_second_count)), 10, BigDecimal.ROUND_HALF_UP)
	    								
	    									.longValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.read_ops_per_second = ParserUtils.parseTo_Long(count);
    									
                                }
                                row20.max_read_ops_per_second = aggregated_row_tAggregateRow_7.max_read_ops_per_second_max;
                                if(aggregated_row_tAggregateRow_7.write_ops_per_second_count > 0){
                                	
	    								row20.write_ops_per_second = aggregated_row_tAggregateRow_7.write_ops_per_second_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_7.write_ops_per_second_count)), 10, BigDecimal.ROUND_HALF_UP)
	    								
	    									.longValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.write_ops_per_second = ParserUtils.parseTo_Long(count);
    									
                                }
                                row20.max_write_ops_per_second = aggregated_row_tAggregateRow_7.max_write_ops_per_second_max;
                                if(aggregated_row_tAggregateRow_7.flush_latency_seconds_count > 0){
                                	
	    								row20.flush_latency_seconds = aggregated_row_tAggregateRow_7.flush_latency_seconds_sum.divide(new BigDecimal(String.valueOf(aggregated_row_tAggregateRow_7.flush_latency_seconds_count)), 9, BigDecimal.ROUND_HALF_UP)
	    								
	    									.doubleValue()
	    								
	    								;
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row20.flush_latency_seconds = ParserUtils.parseTo_Double(count);
    									
                                }
                                row20.max_flush_latency_seconds = aggregated_row_tAggregateRow_7.max_flush_latency_seconds_max;
                                row20.vm_disk_configuration_version = aggregated_row_tAggregateRow_7.vm_disk_configuration_version_last;

 


	tos_count_tAggregateRow_7_AGGIN++;

/**
 * [tAggregateRow_7_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_7_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGIN";

	

 



/**
 * [tAggregateRow_7_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_13 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_13 != null) {
            incomingEnforcer_tJDBCOutput_13.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_13.put("history_datetime", row20.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("vm_disk_id") != null){
                    incomingEnforcer_tJDBCOutput_13.put("vm_disk_id", row20.vm_disk_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("image_id") != null){
                    incomingEnforcer_tJDBCOutput_13.put("image_id", row20.image_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("vm_disk_status") != null){
                    incomingEnforcer_tJDBCOutput_13.put("vm_disk_status", row20.vm_disk_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("minutes_in_status") != null){
                    incomingEnforcer_tJDBCOutput_13.put("minutes_in_status", row20.minutes_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("vm_disk_actual_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_13.put("vm_disk_actual_size_mb", row20.vm_disk_actual_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("read_rate_bytes_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("read_rate_bytes_per_second", row20.read_rate_bytes_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("max_read_rate_bytes_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("max_read_rate_bytes_per_second", row20.max_read_rate_bytes_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("read_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_13.put("read_latency_seconds", row20.read_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("max_read_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_13.put("max_read_latency_seconds", row20.max_read_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("write_rate_bytes_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("write_rate_bytes_per_second", row20.write_rate_bytes_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("max_write_rate_bytes_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("max_write_rate_bytes_per_second", row20.max_write_rate_bytes_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("write_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_13.put("write_latency_seconds", row20.write_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("max_write_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_13.put("max_write_latency_seconds", row20.max_write_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("read_ops_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("read_ops_per_second", row20.read_ops_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("max_read_ops_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("max_read_ops_per_second", row20.max_read_ops_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("write_ops_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("write_ops_per_second", row20.write_ops_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("max_write_ops_per_second") != null){
                    incomingEnforcer_tJDBCOutput_13.put("max_write_ops_per_second", row20.max_write_ops_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("flush_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_13.put("flush_latency_seconds", row20.flush_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("max_flush_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_13.put("max_flush_latency_seconds", row20.max_flush_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("vm_disk_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_13.put("vm_disk_configuration_version", row20.vm_disk_configuration_version);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_13 = null;
        if (incomingEnforcer_tJDBCOutput_13 != null) {
            data_tJDBCOutput_13 = incomingEnforcer_tJDBCOutput_13.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_13 != null && data_tJDBCOutput_13 != null) {
        	writer_tJDBCOutput_13.write(data_tJDBCOutput_13);
        }
        
        nb_line_tJDBCOutput_13++;

 


	tos_count_tJDBCOutput_13++;

/**
 * [tJDBCOutput_13 main ] stop
 */
	
	/**
	 * [tJDBCOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	


 



/**
 * [tJDBCOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	


 



/**
 * [tJDBCOutput_13 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_7_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGIN";

	

 



/**
 * [tAggregateRow_7_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_7_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_7_AGGIN", true);
end_Hash.put("tAggregateRow_7_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_7_AGGIN end ] stop
 */

	
	/**
	 * [tJDBCOutput_13 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_13", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_13 = null;
    if (writer_tJDBCOutput_13 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_13 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_13.close();
        resultMap_tJDBCOutput_13 = writer_tJDBCOutput_13.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_13), container_tJDBCOutput_13);
    }
if(resultMap_tJDBCOutput_13!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_13 : resultMap_tJDBCOutput_13.entrySet()) {
		switch(entry_tJDBCOutput_13.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "ERROR_MESSAGE", entry_tJDBCOutput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "NB_LINE", entry_tJDBCOutput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "NB_SUCCESS", entry_tJDBCOutput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "NB_REJECT", entry_tJDBCOutput_13.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_13 = new StringBuilder();
            for (int i_tJDBCOutput_13 = 0; i_tJDBCOutput_13 < entry_tJDBCOutput_13.getKey().length(); i_tJDBCOutput_13++) {
                char ch_tJDBCOutput_13 = entry_tJDBCOutput_13.getKey().charAt(i_tJDBCOutput_13);
                if(Character.isUpperCase(ch_tJDBCOutput_13) && i_tJDBCOutput_13> 0) {
                	studio_key_tJDBCOutput_13.append('_');
                }
                studio_key_tJDBCOutput_13.append(ch_tJDBCOutput_13);
            }
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", studio_key_tJDBCOutput_13.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_13.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_13", true);
end_Hash.put("tJDBCOutput_13", System.currentTimeMillis());




/**
 * [tJDBCOutput_13 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_7_AGGIN"
							globalMap.remove("tAggregateRow_7");
						
				try{
					
	
	/**
	 * [tJDBCInput_13 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_13")==null){
    if(resourceMap.get("reader_tJDBCInput_13")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_13")).close();
		} catch (java.io.IOException e_tJDBCInput_13) {
			String errorMessage_tJDBCInput_13 = "failed to release the resource in tJDBCInput_13 :" + e_tJDBCInput_13.getMessage();
			System.err.println(errorMessage_tJDBCInput_13);
		}
	}
}
 



/**
 * [tJDBCInput_13 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";

	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tAggregateRow_7_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGOUT";

	

 



/**
 * [tAggregateRow_7_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_7_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_7";
	
	currentComponent="tAggregateRow_7_AGGIN";

	

 



/**
 * [tAggregateRow_7_AGGIN finally ] stop
 */

	
	/**
	 * [tJDBCOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_13")==null){
    if(resourceMap.get("writer_tJDBCOutput_13")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_13")).close();
		} catch (java.io.IOException e_tJDBCOutput_13) {
			String errorMessage_tJDBCOutput_13 = "failed to release the resource in tJDBCOutput_13 :" + e_tJDBCOutput_13.getMessage();
			System.err.println(errorMessage_tJDBCOutput_13);
		}
	}
}
 



/**
 * [tJDBCOutput_13 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", 1);
	}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";

	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJDBCConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	

public void tJDBCConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJDBCConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCConnection_1", false);
		start_Hash.put("tJDBCConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCConnection_1";

	
		int tos_count_tJDBCConnection_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCConnection_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCConnection_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCConnection_1 = (String)(restRequest_tJDBCConnection_1 != null ? restRequest_tJDBCConnection_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCConnection_1 =
        new org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCConnection_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCConnection_1 = null;


org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties props_tJDBCConnection_1 =
        (org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties) def_tJDBCConnection_1.createRuntimeProperties();
 		                    props_tJDBCConnection_1.setValue("shareConnection",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("sharedConnectionName",
 		                    "daily_ovirt_engine_history");
 		                    
 		                    props_tJDBCConnection_1.setValue("useAutoCommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("autocommit",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("jdbcUrl",
 		                    context.ovirtEngineHistoryDbJdbcConnection);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("driverClass",
 		                    context.ovirtEngineHistoryDbDriverClass);
 		                    
 		                    java.util.List<Object> tJDBCConnection_1_connection_driverTable_drivers = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCConnection_1_connection_driverTable_drivers.add("mvn:postgresql/postgresql/8.4-703.jdbc4/jar");
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCConnection_1.connection.driverTable).setValue("drivers",tJDBCConnection_1_connection_driverTable_drivers);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("userId",
 		                    context.ovirtEngineHistoryDbUser);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("password",
 		                    context.ovirtEngineHistoryDbPassword);
 		                    
globalMap.put("tJDBCConnection_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCConnection_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCConnection_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCConnection_1_MAPPINGS_URL", mappings_url_tJDBCConnection_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCConnection_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCConnection_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCConnection_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCConnection_1 = null;
topology_tJDBCConnection_1 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCConnection_1 = def_tJDBCConnection_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCConnection_1, topology_tJDBCConnection_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCConnection_1 = def_tJDBCConnection_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCConnection_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCConnection_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCConnection_1 = componentRuntime_tJDBCConnection_1.initialize(container_tJDBCConnection_1, props_tJDBCConnection_1);

if (initVr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCConnection_1.getMessage());
}

if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCConnection_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCConnection_1;
	compDriverInitialization_tJDBCConnection_1.runAtDriver(container_tJDBCConnection_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCConnection_1 = null;
if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCConnection_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCConnection_1;
	if (doesNodeBelongToRequest_tJDBCConnection_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCConnection_1 = sourceOrSink_tJDBCConnection_1.validate(container_tJDBCConnection_1);
        if (vr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCConnection_1.getMessage());
        }
	}
}

 



/**
 * [tJDBCConnection_1 begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 


	tos_count_tJDBCConnection_1++;

/**
 * [tJDBCConnection_1 main ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCConnection_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// end of generic

 

ok_Hash.put("tJDBCConnection_1", true);
end_Hash.put("tJDBCConnection_1", System.currentTimeMillis());




/**
 * [tJDBCConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// finally of generic

 



/**
 * [tJDBCConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 1);
	}
	

public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";

	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tRowGenerator_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String var_name;

				public String getVar_name () {
					return this.var_name;
				}
				
			    public java.util.Date var_datetime;

				public java.util.Date getVar_datetime () {
					return this.var_datetime;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.var_name == null) ? 0 : this.var_name.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.var_name == null) {
							if (other.var_name != null)
								return false;
						
						} else if (!this.var_name.equals(other.var_name))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.var_name = this.var_name;
	            other.var_datetime = this.var_datetime;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.var_name = this.var_name;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("var_name="+var_name);
		sb.append(",var_datetime="+String.valueOf(var_datetime));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.var_name, other.var_name);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tJDBCOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_6", false);
		start_Hash.put("tJDBCOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tJDBCOutput_6 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_6 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_6 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_6 = (String)(restRequest_tJDBCOutput_6 != null ? restRequest_tJDBCOutput_6.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_6 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_6 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_6 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_6 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_6.createRuntimeProperties();
 		                    props_tJDBCOutput_6.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE);
 		                    
 		                    props_tJDBCOutput_6.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_6.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.tableSelection.setValue("tablename",
 		                    "history_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_6\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"tJDBCOutput_6\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_1_fisrt sst_tJDBCOutput_6_1_fisrt = new SchemaSettingTool_tJDBCOutput_6_1_fisrt();
 		                    
 		                    props_tJDBCOutput_6.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_6\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"tJDBCOutput_6\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_2_fisrt sst_tJDBCOutput_6_2_fisrt = new SchemaSettingTool_tJDBCOutput_6_2_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"tJDBCOutput_6\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_3_fisrt sst_tJDBCOutput_6_3_fisrt = new SchemaSettingTool_tJDBCOutput_6_3_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("referenceColumns",
 		                    "var_name");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_6.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_6 = props_tJDBCOutput_6.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_6 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_6 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_6 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_6.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_6);
        }
    }
globalMap.put("tJDBCOutput_6_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_6);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_6= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_6_MAPPINGS_URL", mappings_url_tJDBCOutput_6);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_6 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_6";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_6 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_6 = null;
topology_tJDBCOutput_6 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_6 = def_tJDBCOutput_6.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_6, topology_tJDBCOutput_6);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_6 = def_tJDBCOutput_6.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_6 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_6.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_6 = componentRuntime_tJDBCOutput_6.initialize(container_tJDBCOutput_6, props_tJDBCOutput_6);

if (initVr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_6.getMessage());
}

if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_6 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_6;
	compDriverInitialization_tJDBCOutput_6.runAtDriver(container_tJDBCOutput_6);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_6 = null;
if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_6 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_6;
	if (doesNodeBelongToRequest_tJDBCOutput_6) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_6 = sourceOrSink_tJDBCOutput_6.validate(container_tJDBCOutput_6);
        if (vr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_6.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_6 = null;
    if (sourceOrSink_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_6 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_6;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_6 = sink_tJDBCOutput_6.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_6) {
            writeOperation_tJDBCOutput_6.initialize(container_tJDBCOutput_6);
        }
        writer_tJDBCOutput_6 = writeOperation_tJDBCOutput_6.createWriter(container_tJDBCOutput_6);
        if (doesNodeBelongToRequest_tJDBCOutput_6) {
            writer_tJDBCOutput_6.open("tJDBCOutput_6");
        }

        resourceMap.put("writer_tJDBCOutput_6", writer_tJDBCOutput_6);
    } // end of "sourceOrSink_tJDBCOutput_6 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_6 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_6.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_6 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_6 = props_tJDBCOutput_6.getSchema(c_tJDBCOutput_6, false);
    incomingEnforcer_tJDBCOutput_6 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_6);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_6 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_6 = null;


 



/**
 * [tJDBCOutput_6 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";

	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public String getRandomvar_name() {
		 
		return "lastDayAggr"   ;
		
	}
	public java.util.Date getRandomvar_datetime() {
		
		return TalendDate.addDate(context.lastDayAggr,1,"dd")  ;
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row11.var_name = randtRowGenerator_1.getRandomvar_name();
		row11.var_datetime = randtRowGenerator_1.getRandomvar_datetime();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";

	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";

	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_6 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_6 != null) {
            incomingEnforcer_tJDBCOutput_6.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("var_name") != null){
                    incomingEnforcer_tJDBCOutput_6.put("var_name", row11.var_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("var_datetime") != null){
                    incomingEnforcer_tJDBCOutput_6.put("var_datetime", row11.var_datetime);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_6 = null;
        if (incomingEnforcer_tJDBCOutput_6 != null) {
            data_tJDBCOutput_6 = incomingEnforcer_tJDBCOutput_6.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_6 != null && data_tJDBCOutput_6 != null) {
        	writer_tJDBCOutput_6.write(data_tJDBCOutput_6);
        }
        
        nb_line_tJDBCOutput_6++;

 


	tos_count_tJDBCOutput_6++;

/**
 * [tJDBCOutput_6 main ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";

	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";

	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tJDBCOutput_6 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_6", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_6 = null;
    if (writer_tJDBCOutput_6 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_6 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_6.close();
        resultMap_tJDBCOutput_6 = writer_tJDBCOutput_6.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_6), container_tJDBCOutput_6);
    }
if(resultMap_tJDBCOutput_6!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_6 : resultMap_tJDBCOutput_6.entrySet()) {
		switch(entry_tJDBCOutput_6.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "ERROR_MESSAGE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_LINE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_SUCCESS", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_REJECT", entry_tJDBCOutput_6.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_6 = new StringBuilder();
            for (int i_tJDBCOutput_6 = 0; i_tJDBCOutput_6 < entry_tJDBCOutput_6.getKey().length(); i_tJDBCOutput_6++) {
                char ch_tJDBCOutput_6 = entry_tJDBCOutput_6.getKey().charAt(i_tJDBCOutput_6);
                if(Character.isUpperCase(ch_tJDBCOutput_6) && i_tJDBCOutput_6> 0) {
                	studio_key_tJDBCOutput_6.append('_');
                }
                studio_key_tJDBCOutput_6.append(ch_tJDBCOutput_6);
            }
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", studio_key_tJDBCOutput_6.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_6.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_6", true);
end_Hash.put("tJDBCOutput_6", System.currentTimeMillis());




/**
 * [tJDBCOutput_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";

	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_6")==null){
    if(resourceMap.get("writer_tJDBCOutput_6")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_6")).close();
		} catch (java.io.IOException e_tJDBCOutput_6) {
			String errorMessage_tJDBCOutput_6 = "failed to release the resource in tJDBCOutput_6 :" + e_tJDBCOutput_6.getMessage();
			System.err.println(errorMessage_tJDBCOutput_6);
		}
	}
}
 



/**
 * [tJDBCOutput_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String disks_usage;

				public String getDisks_usage () {
					return this.disks_usage;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",disks_usage="+disks_usage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_9 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_9> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String disks_usage;

				public String getDisks_usage () {
					return this.disks_usage;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",disks_usage="+disks_usage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_9 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class disks_usage_aggregateStruct implements routines.system.IPersistableRow<disks_usage_aggregateStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String disks_usage;

				public String getDisks_usage () {
					return this.disks_usage;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",disks_usage="+disks_usage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(disks_usage_aggregateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String disks_usage;

				public String getDisks_usage () {
					return this.disks_usage;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",disks_usage="+disks_usage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();
disks_usage_aggregateStruct disks_usage_aggregate = new disks_usage_aggregateStruct();
row15Struct row15 = new row15Struct();





	
	/**
	 * [tAggregateRow_9_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_9_AGGOUT", false);
		start_Hash.put("tAggregateRow_9_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"disks_usage_aggregate");
					}
				
		int tos_count_tAggregateRow_9_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_9 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_9 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_9 utilClass_tAggregateRow_9 = new UtilClass_tAggregateRow_9();

	

	class AggOperationStruct_tAggregateRow_9 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object vm_id;
         			String disks_usage_first;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.vm_id == null) ? 0 : this.vm_id.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_9 other = (AggOperationStruct_tAggregateRow_9) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.vm_id == null) {
								if (other.vm_id != null) 
									return false;
							} else if (!this.vm_id.equals(other.vm_id)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_9 operation_result_tAggregateRow_9 = null;
	AggOperationStruct_tAggregateRow_9 operation_finder_tAggregateRow_9 = new AggOperationStruct_tAggregateRow_9();
	java.util.Map<AggOperationStruct_tAggregateRow_9,AggOperationStruct_tAggregateRow_9> hash_tAggregateRow_9 = new java.util.HashMap<AggOperationStruct_tAggregateRow_9,AggOperationStruct_tAggregateRow_9>();
	

 



/**
 * [tAggregateRow_9_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
disks_usage_aggregateStruct disks_usage_aggregate_tmp = new disks_usage_aggregateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tJDBCInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_9", false);
		start_Hash.put("tJDBCInput_9", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_9";

	
		int tos_count_tJDBCInput_9 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_9 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_9 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_9 = (String)(restRequest_tJDBCInput_9 != null ? restRequest_tJDBCInput_9.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_9 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_9 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_9 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_9 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_9.createRuntimeProperties();
 		                    props_tJDBCInput_9.setValue("sql",
 		                    "SELECT\n  history_datetime,\n  vm_id,\n  disks_usage\nFROM vm_disks_usage_hourly_history\nWHERE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\nAND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY history_id DESC,\n         vm_id");
 		                    
 		                    props_tJDBCInput_9.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_9.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_9.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_9_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disks_usage_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_9\",\"di.table.label\":\"vm_disks_usage_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_9_1_fisrt sst_tJDBCInput_9_1_fisrt = new SchemaSettingTool_tJDBCInput_9_1_fisrt();
 		                    
 		                    props_tJDBCInput_9.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_9_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_9.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("trim",tJDBCInput_9_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_9_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("disks_usage");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("columnName",tJDBCInput_9_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_9.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_9 = props_tJDBCInput_9.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_9 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_9 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_9 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_9.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_9);
        }
    }
globalMap.put("tJDBCInput_9_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_9);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_9= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_9_MAPPINGS_URL", mappings_url_tJDBCInput_9);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_9 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_9";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_9 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_9 = null;
topology_tJDBCInput_9 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_9 = def_tJDBCInput_9.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_9, topology_tJDBCInput_9);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_9 = def_tJDBCInput_9.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_9 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_9.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_9 = componentRuntime_tJDBCInput_9.initialize(container_tJDBCInput_9, props_tJDBCInput_9);

if (initVr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_9.getMessage());
}

if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_9 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_9;
	compDriverInitialization_tJDBCInput_9.runAtDriver(container_tJDBCInput_9);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_9 = null;
if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_9 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_9;
	if (doesNodeBelongToRequest_tJDBCInput_9) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_9 = sourceOrSink_tJDBCInput_9.validate(container_tJDBCInput_9);
        if (vr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_9.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_9 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_9;
        reader_tJDBCInput_9 = source_tJDBCInput_9.createReader(container_tJDBCInput_9);
	    reader_tJDBCInput_9 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_9, container_tJDBCInput_9);

            boolean multi_output_is_allowed_tJDBCInput_9 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_9 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_9.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_9 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_9 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_9 = props_tJDBCInput_9.getSchema(c_tJDBCInput_9, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_9 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_9, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_9 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_9 = reader_tJDBCInput_9.start();

        resourceMap.put("reader_tJDBCInput_9", reader_tJDBCInput_9);

        for (; available_tJDBCInput_9; available_tJDBCInput_9 = reader_tJDBCInput_9.advance()) {
			nb_line_tJDBCInput_9++;

			
			if (multi_output_is_allowed_tJDBCInput_9) {
				
					row12 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_9 = reader_tJDBCInput_9.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_9) {
						row12 = new row12Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_9 == null) {
            factory_tJDBCInput_9 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_9.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_9.setWrapped(factory_tJDBCInput_9.convertToAvro(data_tJDBCInput_9));
                Object columnValue_0_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(0);
                        row12.history_datetime = (java.util.Date) (columnValue_0_tJDBCInput_9);
                Object columnValue_1_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(1);
                        row12.vm_id = (Object) (columnValue_1_tJDBCInput_9);
                Object columnValue_2_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(2);
                        row12.disks_usage = (String) (columnValue_2_tJDBCInput_9);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_9) {
				java.util.Map<String,Object> info_tJDBCInput_9 = e_tJDBCInput_9.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_9 = null;
					if(info_tJDBCInput_9.containsKey("error")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("error");
					}else if(info_tJDBCInput_9.containsKey("errorMessage")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_9 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_9 = "Row "+ nb_line_tJDBCInput_9 + ": "+errorMessage_tJDBCInput_9;
					System.err.println(errorMessage_tJDBCInput_9);
				
					// If the record is reject, the main line record should put NULL
					row12 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_9 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_9 = null;


 



/**
 * [tJDBCInput_9 begin ] stop
 */
	
	/**
	 * [tJDBCInput_9 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 


	tos_count_tJDBCInput_9++;

/**
 * [tJDBCInput_9 main ] stop
 */
	
	/**
	 * [tJDBCInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_9 = false;
		  boolean mainRowRejected_tMap_9 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

disks_usage_aggregate = null;


// # Output table : 'disks_usage_aggregate'
disks_usage_aggregate_tmp.history_datetime = RoutineHistoryETL.startOfDay(row12.history_datetime);
disks_usage_aggregate_tmp.vm_id = row12.vm_id ;
disks_usage_aggregate_tmp.disks_usage = row12.disks_usage ;
disks_usage_aggregate = disks_usage_aggregate_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "disks_usage_aggregate"
if(disks_usage_aggregate != null) { 



	
	/**
	 * [tAggregateRow_9_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"disks_usage_aggregate"
						
						);
					}
					
	
operation_finder_tAggregateRow_9.history_datetime = disks_usage_aggregate.history_datetime;
			operation_finder_tAggregateRow_9.vm_id = disks_usage_aggregate.vm_id;
			

	operation_finder_tAggregateRow_9.hashCodeDirty = true;
	
	operation_result_tAggregateRow_9 = hash_tAggregateRow_9.get(operation_finder_tAggregateRow_9);

	
		boolean isFirstAdd_tAggregateRow_9 = false;
	

	if(operation_result_tAggregateRow_9 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_9 = new AggOperationStruct_tAggregateRow_9();

		operation_result_tAggregateRow_9.history_datetime = operation_finder_tAggregateRow_9.history_datetime;
				operation_result_tAggregateRow_9.vm_id = operation_finder_tAggregateRow_9.vm_id;
				
		
		
			isFirstAdd_tAggregateRow_9 = true;
		

		hash_tAggregateRow_9.put(operation_result_tAggregateRow_9, operation_result_tAggregateRow_9);
	
	} // G_OutMain_AggR_001


	
				if(disks_usage_aggregate.disks_usage != null) { // G_OutMain_AggR_546
				
				if(isFirstAdd_tAggregateRow_9  || operation_result_tAggregateRow_9.disks_usage_first == null) {
					operation_result_tAggregateRow_9.disks_usage_first = disks_usage_aggregate.disks_usage;
				}
				
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_9_AGGOUT++;

/**
 * [tAggregateRow_9_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_9_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGOUT";

	

 



/**
 * [tAggregateRow_9_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_9_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGOUT";

	

 



/**
 * [tAggregateRow_9_AGGOUT process_data_end ] stop
 */

} // End of branch "disks_usage_aggregate"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_9 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// end of generic


resourceMap.put("finish_tJDBCInput_9", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_9 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_9 = null;
    if (reader_tJDBCInput_9 != null) {
        reader_tJDBCInput_9.close();
        resultMap_tJDBCInput_9 = reader_tJDBCInput_9.getReturnValues();
    }
if(resultMap_tJDBCInput_9!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_9 : resultMap_tJDBCInput_9.entrySet()) {
		switch(entry_tJDBCInput_9.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "ERROR_MESSAGE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_LINE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_SUCCESS", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_REJECT", entry_tJDBCInput_9.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_9 = new StringBuilder();
            for (int i_tJDBCInput_9 = 0; i_tJDBCInput_9 < entry_tJDBCInput_9.getKey().length(); i_tJDBCInput_9++) {
                char ch_tJDBCInput_9 = entry_tJDBCInput_9.getKey().charAt(i_tJDBCInput_9);
                if(Character.isUpperCase(ch_tJDBCInput_9) && i_tJDBCInput_9> 0) {
                	studio_key_tJDBCInput_9.append('_');
                }
                studio_key_tJDBCInput_9.append(ch_tJDBCInput_9);
            }
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", studio_key_tJDBCInput_9.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_9.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_9", true);
end_Hash.put("tJDBCInput_9", System.currentTimeMillis());




/**
 * [tJDBCInput_9 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tAggregateRow_9_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"disks_usage_aggregate");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_9_AGGOUT", true);
end_Hash.put("tAggregateRow_9_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_9_AGGOUT end ] stop
 */


	
	/**
	 * [tJDBCOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_9", false);
		start_Hash.put("tJDBCOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_9";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tJDBCOutput_9 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_9 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_9 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_9 = (String)(restRequest_tJDBCOutput_9 != null ? restRequest_tJDBCOutput_9.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_9 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_9 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_9 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_9 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_9.createRuntimeProperties();
 		                    props_tJDBCOutput_9.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_9.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_9.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_9.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_9.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disks_usage_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"vm_disks_usage_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_1_fisrt sst_tJDBCOutput_9_1_fisrt = new SchemaSettingTool_tJDBCOutput_9_1_fisrt();
 		                    
 		                    props_tJDBCOutput_9.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disks_usage_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"vm_disks_usage_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_2_fisrt sst_tJDBCOutput_9_2_fisrt = new SchemaSettingTool_tJDBCOutput_9_2_fisrt();
 		                    
 		                    props_tJDBCOutput_9.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"vm_disks_usage_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_3_fisrt sst_tJDBCOutput_9_3_fisrt = new SchemaSettingTool_tJDBCOutput_9_3_fisrt();
 		                    
 		                    props_tJDBCOutput_9.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_9.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_9.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_9.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_9 = props_tJDBCOutput_9.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_9 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_9 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_9 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_9.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_9);
        }
    }
globalMap.put("tJDBCOutput_9_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_9);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_9= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_9_MAPPINGS_URL", mappings_url_tJDBCOutput_9);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_9 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_9";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_9 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_9 = null;
topology_tJDBCOutput_9 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_9 = def_tJDBCOutput_9.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_9, topology_tJDBCOutput_9);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_9 = def_tJDBCOutput_9.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_9 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_9.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_9 = componentRuntime_tJDBCOutput_9.initialize(container_tJDBCOutput_9, props_tJDBCOutput_9);

if (initVr_tJDBCOutput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_9.getMessage());
}

if(componentRuntime_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_9 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_9;
	compDriverInitialization_tJDBCOutput_9.runAtDriver(container_tJDBCOutput_9);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_9 = null;
if(componentRuntime_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_9 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_9;
	if (doesNodeBelongToRequest_tJDBCOutput_9) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_9 = sourceOrSink_tJDBCOutput_9.validate(container_tJDBCOutput_9);
        if (vr_tJDBCOutput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_9.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_9 = null;
    if (sourceOrSink_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_9 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_9;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_9 = sink_tJDBCOutput_9.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_9) {
            writeOperation_tJDBCOutput_9.initialize(container_tJDBCOutput_9);
        }
        writer_tJDBCOutput_9 = writeOperation_tJDBCOutput_9.createWriter(container_tJDBCOutput_9);
        if (doesNodeBelongToRequest_tJDBCOutput_9) {
            writer_tJDBCOutput_9.open("tJDBCOutput_9");
        }

        resourceMap.put("writer_tJDBCOutput_9", writer_tJDBCOutput_9);
    } // end of "sourceOrSink_tJDBCOutput_9 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_9 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_9.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_9 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_9 = props_tJDBCOutput_9.getSchema(c_tJDBCOutput_9, false);
    incomingEnforcer_tJDBCOutput_9 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_9);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_9 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_9 = null;


 



/**
 * [tJDBCOutput_9 begin ] stop
 */



	
	/**
	 * [tAggregateRow_9_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_9_AGGIN", false);
		start_Hash.put("tAggregateRow_9_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGIN";

	
		int tos_count_tAggregateRow_9_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_9> values_tAggregateRow_9 = hash_tAggregateRow_9.values();

globalMap.put("tAggregateRow_9_NB_LINE", values_tAggregateRow_9.size());

for(AggOperationStruct_tAggregateRow_9 aggregated_row_tAggregateRow_9 : values_tAggregateRow_9) { // G_AggR_600



 



/**
 * [tAggregateRow_9_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_9_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGIN";

	

            				    row15.history_datetime = aggregated_row_tAggregateRow_9.history_datetime;
            				    
            				    row15.vm_id = aggregated_row_tAggregateRow_9.vm_id;
            				    
                                row15.disks_usage = aggregated_row_tAggregateRow_9.disks_usage_first;

 


	tos_count_tAggregateRow_9_AGGIN++;

/**
 * [tAggregateRow_9_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_9_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGIN";

	

 



/**
 * [tAggregateRow_9_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_9 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_9 != null) {
            incomingEnforcer_tJDBCOutput_9.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_9.put("history_datetime", row15.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_9.put("vm_id", row15.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("disks_usage") != null){
                    incomingEnforcer_tJDBCOutput_9.put("disks_usage", row15.disks_usage);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_9 = null;
        if (incomingEnforcer_tJDBCOutput_9 != null) {
            data_tJDBCOutput_9 = incomingEnforcer_tJDBCOutput_9.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_9 != null && data_tJDBCOutput_9 != null) {
        	writer_tJDBCOutput_9.write(data_tJDBCOutput_9);
        }
        
        nb_line_tJDBCOutput_9++;

 


	tos_count_tJDBCOutput_9++;

/**
 * [tJDBCOutput_9 main ] stop
 */
	
	/**
	 * [tJDBCOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	


 



/**
 * [tJDBCOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	


 



/**
 * [tJDBCOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_9_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGIN";

	

 



/**
 * [tAggregateRow_9_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_9_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_9_AGGIN", true);
end_Hash.put("tAggregateRow_9_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_9_AGGIN end ] stop
 */

	
	/**
	 * [tJDBCOutput_9 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_9", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_9 = null;
    if (writer_tJDBCOutput_9 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_9 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_9.close();
        resultMap_tJDBCOutput_9 = writer_tJDBCOutput_9.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_9), container_tJDBCOutput_9);
    }
if(resultMap_tJDBCOutput_9!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_9 : resultMap_tJDBCOutput_9.entrySet()) {
		switch(entry_tJDBCOutput_9.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "ERROR_MESSAGE", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_LINE", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_SUCCESS", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_REJECT", entry_tJDBCOutput_9.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_9 = new StringBuilder();
            for (int i_tJDBCOutput_9 = 0; i_tJDBCOutput_9 < entry_tJDBCOutput_9.getKey().length(); i_tJDBCOutput_9++) {
                char ch_tJDBCOutput_9 = entry_tJDBCOutput_9.getKey().charAt(i_tJDBCOutput_9);
                if(Character.isUpperCase(ch_tJDBCOutput_9) && i_tJDBCOutput_9> 0) {
                	studio_key_tJDBCOutput_9.append('_');
                }
                studio_key_tJDBCOutput_9.append(ch_tJDBCOutput_9);
            }
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", studio_key_tJDBCOutput_9.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_9.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_9", true);
end_Hash.put("tJDBCOutput_9", System.currentTimeMillis());




/**
 * [tJDBCOutput_9 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_9_AGGIN"
							globalMap.remove("tAggregateRow_9");
						
				try{
					
	
	/**
	 * [tJDBCInput_9 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_9")==null){
    if(resourceMap.get("reader_tJDBCInput_9")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_9")).close();
		} catch (java.io.IOException e_tJDBCInput_9) {
			String errorMessage_tJDBCInput_9 = "failed to release the resource in tJDBCInput_9 :" + e_tJDBCInput_9.getMessage();
			System.err.println(errorMessage_tJDBCInput_9);
		}
	}
}
 



/**
 * [tJDBCInput_9 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tAggregateRow_9_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGOUT";

	

 



/**
 * [tAggregateRow_9_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_9_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_9";
	
	currentComponent="tAggregateRow_9_AGGIN";

	

 



/**
 * [tAggregateRow_9_AGGIN finally ] stop
 */

	
	/**
	 * [tJDBCOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_9")==null){
    if(resourceMap.get("writer_tJDBCOutput_9")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_9")).close();
		} catch (java.io.IOException e_tJDBCOutput_9) {
			String errorMessage_tJDBCOutput_9 = "failed to release the resource in tJDBCOutput_9 :" + e_tJDBCOutput_9.getMessage();
			System.err.println(errorMessage_tJDBCOutput_9);
		}
	}
}
 



/**
 * [tJDBCOutput_9 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class complete_aggregate_usersStruct implements routines.system.IPersistableRow<complete_aggregate_usersStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String user_name;

				public String getUser_name () {
					return this.user_name;
				}
				
			    public Boolean user_logged_in_to_guest;

				public Boolean getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public double session_time_in_minutes;

				public double getSession_time_in_minutes () {
					return this.session_time_in_minutes;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short max_cpu_usage;

				public Short getMax_cpu_usage () {
					return this.max_cpu_usage;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short max_memory_usage;

				public Short getMax_memory_usage () {
					return this.max_memory_usage;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short max_user_cpu_usage_percent;

				public Short getMax_user_cpu_usage_percent () {
					return this.max_user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short max_system_cpu_usage_percent;

				public Short getMax_system_cpu_usage_percent () {
					return this.max_system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",user_id="+String.valueOf(user_id));
		sb.append(",user_name="+user_name);
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",session_time_in_minutes="+String.valueOf(session_time_in_minutes));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",max_cpu_usage="+String.valueOf(max_cpu_usage));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",max_memory_usage="+String.valueOf(max_memory_usage));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",max_user_cpu_usage_percent="+String.valueOf(max_user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",max_system_cpu_usage_percent="+String.valueOf(max_system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(complete_aggregate_usersStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String user_name;

				public String getUser_name () {
					return this.user_name;
				}
				
			    public Short user_logged_in_to_guest;

				public Short getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public double session_time_in_minutes;

				public double getSession_time_in_minutes () {
					return this.session_time_in_minutes;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short max_cpu_usage;

				public Short getMax_cpu_usage () {
					return this.max_cpu_usage;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short max_memory_usage;

				public Short getMax_memory_usage () {
					return this.max_memory_usage;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short max_user_cpu_usage_percent;

				public Short getMax_user_cpu_usage_percent () {
					return this.max_user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short max_system_cpu_usage_percent;

				public Short getMax_system_cpu_usage_percent () {
					return this.max_system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",user_id="+String.valueOf(user_id));
		sb.append(",user_name="+user_name);
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",session_time_in_minutes="+String.valueOf(session_time_in_minutes));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",max_cpu_usage="+String.valueOf(max_cpu_usage));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",max_memory_usage="+String.valueOf(max_memory_usage));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",max_user_cpu_usage_percent="+String.valueOf(max_user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",max_system_cpu_usage_percent="+String.valueOf(max_system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_8 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_8> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String user_name;

				public String getUser_name () {
					return this.user_name;
				}
				
			    public Short user_logged_in_to_guest;

				public Short getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public double session_time_in_minutes;

				public double getSession_time_in_minutes () {
					return this.session_time_in_minutes;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short max_cpu_usage;

				public Short getMax_cpu_usage () {
					return this.max_cpu_usage;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short max_memory_usage;

				public Short getMax_memory_usage () {
					return this.max_memory_usage;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short max_user_cpu_usage_percent;

				public Short getMax_user_cpu_usage_percent () {
					return this.max_user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short max_system_cpu_usage_percent;

				public Short getMax_system_cpu_usage_percent () {
					return this.max_system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_cpu_usage = null;
           				} else {
           			    	this.max_cpu_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_memory_usage = null;
           				} else {
           			    	this.max_memory_usage = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_user_cpu_usage_percent = null;
           				} else {
           			    	this.max_user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.max_system_cpu_usage_percent = null;
           				} else {
           			    	this.max_system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_cpu_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_cpu_usage);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.max_memory_usage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_memory_usage);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.max_system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.max_system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",user_id="+String.valueOf(user_id));
		sb.append(",user_name="+user_name);
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",session_time_in_minutes="+String.valueOf(session_time_in_minutes));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",max_cpu_usage="+String.valueOf(max_cpu_usage));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",max_memory_usage="+String.valueOf(max_memory_usage));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",max_user_cpu_usage_percent="+String.valueOf(max_user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",max_system_cpu_usage_percent="+String.valueOf(max_system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_8 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfvm_aggregate_historyStruct implements routines.system.IPersistableRow<copyOfvm_aggregate_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String user_name;

				public String getUser_name () {
					return this.user_name;
				}
				
			    public Short user_logged_in_to_guest;

				public Short getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public double session_time_in_minutes;

				public double getSession_time_in_minutes () {
					return this.session_time_in_minutes;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",user_id="+String.valueOf(user_id));
		sb.append(",user_name="+user_name);
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",session_time_in_minutes="+String.valueOf(session_time_in_minutes));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfvm_aggregate_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String user_name;

				public String getUser_name () {
					return this.user_name;
				}
				
			    public Short user_logged_in_to_guest;

				public Short getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public double session_time_in_minutes;

				public double getSession_time_in_minutes () {
					return this.session_time_in_minutes;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
					this.history_datetime = readDate(dis);
					
						this.user_id = (Object) dis.readObject();
					
					this.user_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readShort();
           				}
					
						this.vm_id = (Object) dis.readObject();
					
			        this.session_time_in_minutes = dis.readDouble();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_name,dos);
					
					// Short
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// double
				
		            	dos.writeDouble(this.session_time_in_minutes);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",history_datetime="+String.valueOf(history_datetime));
		sb.append(",user_id="+String.valueOf(user_id));
		sb.append(",user_name="+user_name);
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",session_time_in_minutes="+String.valueOf(session_time_in_minutes));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();
copyOfvm_aggregate_historyStruct copyOfvm_aggregate_history = new copyOfvm_aggregate_historyStruct();
row14Struct row14 = new row14Struct();
complete_aggregate_usersStruct complete_aggregate_users = new complete_aggregate_usersStruct();





	
	/**
	 * [tAggregateRow_8_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_8_AGGOUT", false);
		start_Hash.put("tAggregateRow_8_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfvm_aggregate_history");
					}
				
		int tos_count_tAggregateRow_8_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_8 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_8 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_8 utilClass_tAggregateRow_8 = new UtilClass_tAggregateRow_8();

	

	class AggOperationStruct_tAggregateRow_8 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				java.util.Date history_datetime;
    				Object user_id;
    				String user_name;
    				Object vm_id;BigDecimal session_time_in_minutes_sum;
           			
           			Double cpu_usage_percent_sum;
					int cpu_usage_percent_count = 0;
           			
         			Short max_cpu_usage_max;
           			Double memory_usage_percent_sum;
					int memory_usage_percent_count = 0;
           			
         			Short max_memory_usage_max;
           			Double user_cpu_usage_percent_sum;
					int user_cpu_usage_percent_count = 0;
           			
         			Short max_user_cpu_usage_percent_max;
           			Double system_cpu_usage_percent_sum;
					int system_cpu_usage_percent_count = 0;
           			
         			Short max_system_cpu_usage_percent_max;
         			String vm_ip_last;
         			String vm_client_ip_last;
         			Object currently_running_on_host_last;
         			Integer vm_configuration_version_last;
         			Integer current_host_configuration_version_last;
         			Short user_logged_in_to_guest_last;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.history_datetime == null) ? 0 : this.history_datetime.hashCode());
							
							result = prime * result + ((this.user_id == null) ? 0 : this.user_id.hashCode());
							
							result = prime * result + ((this.user_name == null) ? 0 : this.user_name.hashCode());
							
							result = prime * result + ((this.vm_id == null) ? 0 : this.vm_id.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_8 other = (AggOperationStruct_tAggregateRow_8) obj;
			
							if (this.history_datetime == null) {
								if (other.history_datetime != null) 
									return false;
							} else if (!this.history_datetime.equals(other.history_datetime)) 
								return false;
						
							if (this.user_id == null) {
								if (other.user_id != null) 
									return false;
							} else if (!this.user_id.equals(other.user_id)) 
								return false;
						
							if (this.user_name == null) {
								if (other.user_name != null) 
									return false;
							} else if (!this.user_name.equals(other.user_name)) 
								return false;
						
							if (this.vm_id == null) {
								if (other.vm_id != null) 
									return false;
							} else if (!this.vm_id.equals(other.vm_id)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_8 operation_result_tAggregateRow_8 = null;
	AggOperationStruct_tAggregateRow_8 operation_finder_tAggregateRow_8 = new AggOperationStruct_tAggregateRow_8();
	java.util.Map<AggOperationStruct_tAggregateRow_8,AggOperationStruct_tAggregateRow_8> hash_tAggregateRow_8 = new java.util.HashMap<AggOperationStruct_tAggregateRow_8,AggOperationStruct_tAggregateRow_8>();
	

 



/**
 * [tAggregateRow_8_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfvm_aggregate_historyStruct copyOfvm_aggregate_history_tmp = new copyOfvm_aggregate_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tJDBCInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_10", false);
		start_Hash.put("tJDBCInput_10", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_10";

	
		int tos_count_tJDBCInput_10 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_10 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_10 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_10 = (String)(restRequest_tJDBCInput_10 != null ? restRequest_tJDBCInput_10.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_10 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_10 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_10 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_10 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_10.createRuntimeProperties();
 		                    props_tJDBCInput_10.setValue("sql",
 		                    "SELECT\n  history_id,\n  history_datetime,\n  user_id,\n  user_name,\n  cast(user_logged_in_to_guest as int),\n  vm_id,\n "
+" session_time_in_minutes,\n  cpu_usage_percent,\n  memory_usage_percent,\n  user_cpu_usage_percent,\n  system_cpu_usage_"
+"percent,\n  vm_ip,\n  vm_client_ip,\n  currently_running_on_host,\n  vm_configuration_version,\n  current_host_configurat"
+"ion_version\nFROM statistics_vms_users_usage_hourly\nWHERE history_datetime >= '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.lastDayAggr)+"'\n	AND history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.lastDayAggr, 1,"dd"))+"'\nORDER BY\n    history_datetime,\n    user_name,\n    vm_id");
 		                    
 		                    props_tJDBCInput_10.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_10.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_10.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_10_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"session_time_in_minutes\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"session_time_in_minutes\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"session_time_in_minutes\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_10\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_10_1_fisrt sst_tJDBCInput_10_1_fisrt = new SchemaSettingTool_tJDBCInput_10_1_fisrt();
 		                    
 		                    props_tJDBCInput_10.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_10_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_10.tableSelection.setValue("tablename",
 		                    "statistics_vms_users_usage_hourly");
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("trim",tJDBCInput_10_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_10_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("history_datetime");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("user_id");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("user_name");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("user_logged_in_to_guest");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("session_time_in_minutes");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("cpu_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("memory_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("user_cpu_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("system_cpu_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_ip");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_client_ip");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("currently_running_on_host");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_configuration_version");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("current_host_configuration_version");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("columnName",tJDBCInput_10_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_10.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_10 = props_tJDBCInput_10.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_10 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_10 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_10 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_10.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_10);
        }
    }
globalMap.put("tJDBCInput_10_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_10);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_10= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_10_MAPPINGS_URL", mappings_url_tJDBCInput_10);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_10 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_10";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_10 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_10 = null;
topology_tJDBCInput_10 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_10 = def_tJDBCInput_10.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_10, topology_tJDBCInput_10);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_10 = def_tJDBCInput_10.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_10 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_10.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_10 = componentRuntime_tJDBCInput_10.initialize(container_tJDBCInput_10, props_tJDBCInput_10);

if (initVr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_10.getMessage());
}

if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_10 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_10;
	compDriverInitialization_tJDBCInput_10.runAtDriver(container_tJDBCInput_10);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_10 = null;
if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_10 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_10;
	if (doesNodeBelongToRequest_tJDBCInput_10) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_10 = sourceOrSink_tJDBCInput_10.validate(container_tJDBCInput_10);
        if (vr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_10.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_10 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_10;
        reader_tJDBCInput_10 = source_tJDBCInput_10.createReader(container_tJDBCInput_10);
	    reader_tJDBCInput_10 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_10, container_tJDBCInput_10);

            boolean multi_output_is_allowed_tJDBCInput_10 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_10 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_10.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_10 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_10 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_10 = props_tJDBCInput_10.getSchema(c_tJDBCInput_10, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_10 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_10, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_10 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_10 = reader_tJDBCInput_10.start();

        resourceMap.put("reader_tJDBCInput_10", reader_tJDBCInput_10);

        for (; available_tJDBCInput_10; available_tJDBCInput_10 = reader_tJDBCInput_10.advance()) {
			nb_line_tJDBCInput_10++;

			
			if (multi_output_is_allowed_tJDBCInput_10) {
				
					row13 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_10 = reader_tJDBCInput_10.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_10) {
						row13 = new row13Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_10 == null) {
            factory_tJDBCInput_10 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_10.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_10.setWrapped(factory_tJDBCInput_10.convertToAvro(data_tJDBCInput_10));
                Object columnValue_0_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(0);
                    if (columnValue_0_tJDBCInput_10 == null) {
                        row13.history_id = 0;
                    } else {
                            row13.history_id = (long) (columnValue_0_tJDBCInput_10);
                    }
                Object columnValue_1_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(1);
                        row13.history_datetime = (java.util.Date) (columnValue_1_tJDBCInput_10);
                Object columnValue_2_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(2);
                        row13.user_id = (Object) (columnValue_2_tJDBCInput_10);
                Object columnValue_3_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(3);
                        row13.user_name = (String) (columnValue_3_tJDBCInput_10);
                Object columnValue_4_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(4);
                        row13.user_logged_in_to_guest = (Short) (columnValue_4_tJDBCInput_10);
                Object columnValue_5_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(5);
                        row13.vm_id = (Object) (columnValue_5_tJDBCInput_10);
                Object columnValue_6_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(6);
                    if (columnValue_6_tJDBCInput_10 == null) {
                        row13.session_time_in_minutes = 0;
                    } else {
                            row13.session_time_in_minutes = (double) (columnValue_6_tJDBCInput_10);
                    }
                Object columnValue_7_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(7);
                        row13.cpu_usage_percent = (Short) (columnValue_7_tJDBCInput_10);
                Object columnValue_8_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(8);
                        row13.memory_usage_percent = (Short) (columnValue_8_tJDBCInput_10);
                Object columnValue_9_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(9);
                        row13.user_cpu_usage_percent = (Short) (columnValue_9_tJDBCInput_10);
                Object columnValue_10_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(10);
                        row13.system_cpu_usage_percent = (Short) (columnValue_10_tJDBCInput_10);
                Object columnValue_11_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(11);
                        row13.vm_ip = (String) (columnValue_11_tJDBCInput_10);
                Object columnValue_12_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(12);
                        row13.vm_client_ip = (String) (columnValue_12_tJDBCInput_10);
                Object columnValue_13_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(13);
                        row13.currently_running_on_host = (Object) (columnValue_13_tJDBCInput_10);
                Object columnValue_14_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(14);
                        row13.vm_configuration_version = (Integer) (columnValue_14_tJDBCInput_10);
                Object columnValue_15_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(15);
                        row13.current_host_configuration_version = (Integer) (columnValue_15_tJDBCInput_10);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_10) {
				java.util.Map<String,Object> info_tJDBCInput_10 = e_tJDBCInput_10.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_10 = null;
					if(info_tJDBCInput_10.containsKey("error")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("error");
					}else if(info_tJDBCInput_10.containsKey("errorMessage")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_10 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_10 = "Row "+ nb_line_tJDBCInput_10 + ": "+errorMessage_tJDBCInput_10;
					System.err.println(errorMessage_tJDBCInput_10);
				
					// If the record is reject, the main line record should put NULL
					row13 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_10 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_10 = null;


 



/**
 * [tJDBCInput_10 begin ] stop
 */
	
	/**
	 * [tJDBCInput_10 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 


	tos_count_tJDBCInput_10++;

/**
 * [tJDBCInput_10 main ] stop
 */
	
	/**
	 * [tJDBCInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_10 = false;
		  boolean mainRowRejected_tMap_10 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

copyOfvm_aggregate_history = null;


// # Output table : 'copyOfvm_aggregate_history'
copyOfvm_aggregate_history_tmp.history_datetime = RoutineHistoryETL.startOfDay(row13.history_datetime) ;
copyOfvm_aggregate_history_tmp.user_id = row13.user_id ;
copyOfvm_aggregate_history_tmp.user_name = row13.user_name ;
copyOfvm_aggregate_history_tmp.user_logged_in_to_guest = row13.user_logged_in_to_guest;
copyOfvm_aggregate_history_tmp.vm_id = row13.vm_id;
copyOfvm_aggregate_history_tmp.session_time_in_minutes = row13.session_time_in_minutes;
copyOfvm_aggregate_history_tmp.cpu_usage_percent = row13.cpu_usage_percent;
copyOfvm_aggregate_history_tmp.memory_usage_percent = row13.memory_usage_percent;
copyOfvm_aggregate_history_tmp.user_cpu_usage_percent = row13.user_cpu_usage_percent ;
copyOfvm_aggregate_history_tmp.system_cpu_usage_percent = row13.system_cpu_usage_percent ;
copyOfvm_aggregate_history_tmp.vm_ip = row13.vm_ip;
copyOfvm_aggregate_history_tmp.vm_client_ip = row13.vm_client_ip ;
copyOfvm_aggregate_history_tmp.currently_running_on_host = row13.currently_running_on_host;
copyOfvm_aggregate_history_tmp.vm_configuration_version = row13.vm_configuration_version;
copyOfvm_aggregate_history_tmp.current_host_configuration_version = row13.current_host_configuration_version;
copyOfvm_aggregate_history = copyOfvm_aggregate_history_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";

	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "copyOfvm_aggregate_history"
if(copyOfvm_aggregate_history != null) { 



	
	/**
	 * [tAggregateRow_8_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfvm_aggregate_history"
						
						);
					}
					
	
operation_finder_tAggregateRow_8.history_datetime = copyOfvm_aggregate_history.history_datetime;
			operation_finder_tAggregateRow_8.user_id = copyOfvm_aggregate_history.user_id;
			operation_finder_tAggregateRow_8.user_name = copyOfvm_aggregate_history.user_name;
			operation_finder_tAggregateRow_8.vm_id = copyOfvm_aggregate_history.vm_id;
			

	operation_finder_tAggregateRow_8.hashCodeDirty = true;
	
	operation_result_tAggregateRow_8 = hash_tAggregateRow_8.get(operation_finder_tAggregateRow_8);

	
		boolean isFirstAdd_tAggregateRow_8 = false;
	

	if(operation_result_tAggregateRow_8 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_8 = new AggOperationStruct_tAggregateRow_8();

		operation_result_tAggregateRow_8.history_datetime = operation_finder_tAggregateRow_8.history_datetime;
				operation_result_tAggregateRow_8.user_id = operation_finder_tAggregateRow_8.user_id;
				operation_result_tAggregateRow_8.user_name = operation_finder_tAggregateRow_8.user_name;
				operation_result_tAggregateRow_8.vm_id = operation_finder_tAggregateRow_8.vm_id;
				
		
		
			isFirstAdd_tAggregateRow_8 = true;
		

		hash_tAggregateRow_8.put(operation_result_tAggregateRow_8, operation_result_tAggregateRow_8);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_8.session_time_in_minutes_sum == null) {
						operation_result_tAggregateRow_8.session_time_in_minutes_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_8.session_time_in_minutes_sum = operation_result_tAggregateRow_8.session_time_in_minutes_sum.add(
						new BigDecimal(
							String.valueOf(
								copyOfvm_aggregate_history.session_time_in_minutes
							)
						)
					);
					
				if(copyOfvm_aggregate_history.cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_8.cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_8.cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_8.cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_8.cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_8.cpu_usage_percent_sum.doubleValue() + copyOfvm_aggregate_history.cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_8.max_cpu_usage_max == null || 
						copyOfvm_aggregate_history.cpu_usage_percent > operation_result_tAggregateRow_8.max_cpu_usage_max
						
					) {
						operation_result_tAggregateRow_8.max_cpu_usage_max = copyOfvm_aggregate_history.cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.memory_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_8.memory_usage_percent_count++;
				
					if(operation_result_tAggregateRow_8.memory_usage_percent_sum == null) {
						operation_result_tAggregateRow_8.memory_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_8.memory_usage_percent_sum = (double)(operation_result_tAggregateRow_8.memory_usage_percent_sum.doubleValue() + copyOfvm_aggregate_history.memory_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.memory_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_8.max_memory_usage_max == null || 
						copyOfvm_aggregate_history.memory_usage_percent > operation_result_tAggregateRow_8.max_memory_usage_max
						
					) {
						operation_result_tAggregateRow_8.max_memory_usage_max = copyOfvm_aggregate_history.memory_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.user_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_8.user_cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_8.user_cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_8.user_cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_8.user_cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_8.user_cpu_usage_percent_sum.doubleValue() + copyOfvm_aggregate_history.user_cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.user_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_8.max_user_cpu_usage_percent_max == null || 
						copyOfvm_aggregate_history.user_cpu_usage_percent > operation_result_tAggregateRow_8.max_user_cpu_usage_percent_max
						
					) {
						operation_result_tAggregateRow_8.max_user_cpu_usage_percent_max = copyOfvm_aggregate_history.user_cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.system_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_8.system_cpu_usage_percent_count++;
				
					if(operation_result_tAggregateRow_8.system_cpu_usage_percent_sum == null) {
						operation_result_tAggregateRow_8.system_cpu_usage_percent_sum = (double) 0;
					}
					operation_result_tAggregateRow_8.system_cpu_usage_percent_sum = (double)(operation_result_tAggregateRow_8.system_cpu_usage_percent_sum.doubleValue() + copyOfvm_aggregate_history.system_cpu_usage_percent.shortValue());
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.system_cpu_usage_percent != null) { // G_OutMain_AggR_546
				
					if(
						operation_result_tAggregateRow_8.max_system_cpu_usage_percent_max == null || 
						copyOfvm_aggregate_history.system_cpu_usage_percent > operation_result_tAggregateRow_8.max_system_cpu_usage_percent_max
						
					) {
						operation_result_tAggregateRow_8.max_system_cpu_usage_percent_max = copyOfvm_aggregate_history.system_cpu_usage_percent;
					}
					
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.vm_ip != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_8.vm_ip_last = copyOfvm_aggregate_history.vm_ip;
				
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.vm_client_ip != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_8.vm_client_ip_last = copyOfvm_aggregate_history.vm_client_ip;
				
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.currently_running_on_host != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_8.currently_running_on_host_last = copyOfvm_aggregate_history.currently_running_on_host;
				
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.vm_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_8.vm_configuration_version_last = copyOfvm_aggregate_history.vm_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.current_host_configuration_version != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_8.current_host_configuration_version_last = copyOfvm_aggregate_history.current_host_configuration_version;
				
				} // G_OutMain_AggR_546
				
				if(copyOfvm_aggregate_history.user_logged_in_to_guest != null) { // G_OutMain_AggR_546
				
					operation_result_tAggregateRow_8.user_logged_in_to_guest_last = copyOfvm_aggregate_history.user_logged_in_to_guest;
				
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_8_AGGOUT++;

/**
 * [tAggregateRow_8_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_8_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGOUT";

	

 



/**
 * [tAggregateRow_8_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_8_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGOUT";

	

 



/**
 * [tAggregateRow_8_AGGOUT process_data_end ] stop
 */

} // End of branch "copyOfvm_aggregate_history"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";

	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_10 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// end of generic


resourceMap.put("finish_tJDBCInput_10", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_10 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_10 = null;
    if (reader_tJDBCInput_10 != null) {
        reader_tJDBCInput_10.close();
        resultMap_tJDBCInput_10 = reader_tJDBCInput_10.getReturnValues();
    }
if(resultMap_tJDBCInput_10!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_10 : resultMap_tJDBCInput_10.entrySet()) {
		switch(entry_tJDBCInput_10.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "ERROR_MESSAGE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_LINE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_SUCCESS", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_REJECT", entry_tJDBCInput_10.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_10 = new StringBuilder();
            for (int i_tJDBCInput_10 = 0; i_tJDBCInput_10 < entry_tJDBCInput_10.getKey().length(); i_tJDBCInput_10++) {
                char ch_tJDBCInput_10 = entry_tJDBCInput_10.getKey().charAt(i_tJDBCInput_10);
                if(Character.isUpperCase(ch_tJDBCInput_10) && i_tJDBCInput_10> 0) {
                	studio_key_tJDBCInput_10.append('_');
                }
                studio_key_tJDBCInput_10.append(ch_tJDBCInput_10);
            }
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", studio_key_tJDBCInput_10.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_10.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_10", true);
end_Hash.put("tJDBCInput_10", System.currentTimeMillis());




/**
 * [tJDBCInput_10 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tAggregateRow_8_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfvm_aggregate_history");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_8_AGGOUT", true);
end_Hash.put("tAggregateRow_8_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_8_AGGOUT end ] stop
 */



	
	/**
	 * [tJDBCOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_10", false);
		start_Hash.put("tJDBCOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_10";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"complete_aggregate_users");
					}
				
		int tos_count_tJDBCOutput_10 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_10 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_10 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_10 = (String)(restRequest_tJDBCOutput_10 != null ? restRequest_tJDBCOutput_10.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_10 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_10 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_10 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_10 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_10.createRuntimeProperties();
 		                    props_tJDBCOutput_10.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_10.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_10.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_10.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_10.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.tableSelection.setValue("tablename",
 		                    "statistics_vms_users_usage_daily");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"session_time_in_minutes\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"session_time_in_minutes\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"session_time_in_minutes\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"vm_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_1_fisrt sst_tJDBCOutput_10_1_fisrt = new SchemaSettingTool_tJDBCOutput_10_1_fisrt();
 		                    
 		                    props_tJDBCOutput_10.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_daily_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"session_time_in_minutes\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"session_time_in_minutes\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"session_time_in_minutes\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"vm_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_2_fisrt sst_tJDBCOutput_10_2_fisrt = new SchemaSettingTool_tJDBCOutput_10_2_fisrt();
 		                    
 		                    props_tJDBCOutput_10.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"session_time_in_minutes\",\"type\":\"double\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.default\":\"\\\"1\\\"\",\"talend.field.dbColumnName\":\"session_time_in_minutes\",\"di.column.talendType\":\"id_Double\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"session_time_in_minutes\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_cpu_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_cpu_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_cpu_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_memory_usage\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"max_memory_usage\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"max_memory_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"max_system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"max_system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"max_system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"vm_daily_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_3_fisrt sst_tJDBCOutput_10_3_fisrt = new SchemaSettingTool_tJDBCOutput_10_3_fisrt();
 		                    
 		                    props_tJDBCOutput_10.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_10.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_10.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_10.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_10 = props_tJDBCOutput_10.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_10 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_10 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_10 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_10.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_10);
        }
    }
globalMap.put("tJDBCOutput_10_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_10);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_10= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_10_MAPPINGS_URL", mappings_url_tJDBCOutput_10);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_10 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_10";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_10 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_10 = null;
topology_tJDBCOutput_10 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_10 = def_tJDBCOutput_10.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_10, topology_tJDBCOutput_10);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_10 = def_tJDBCOutput_10.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_10 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_10.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_10 = componentRuntime_tJDBCOutput_10.initialize(container_tJDBCOutput_10, props_tJDBCOutput_10);

if (initVr_tJDBCOutput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_10.getMessage());
}

if(componentRuntime_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_10 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_10;
	compDriverInitialization_tJDBCOutput_10.runAtDriver(container_tJDBCOutput_10);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_10 = null;
if(componentRuntime_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_10 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_10;
	if (doesNodeBelongToRequest_tJDBCOutput_10) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_10 = sourceOrSink_tJDBCOutput_10.validate(container_tJDBCOutput_10);
        if (vr_tJDBCOutput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_10.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_10 = null;
    if (sourceOrSink_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_10 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_10;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_10 = sink_tJDBCOutput_10.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_10) {
            writeOperation_tJDBCOutput_10.initialize(container_tJDBCOutput_10);
        }
        writer_tJDBCOutput_10 = writeOperation_tJDBCOutput_10.createWriter(container_tJDBCOutput_10);
        if (doesNodeBelongToRequest_tJDBCOutput_10) {
            writer_tJDBCOutput_10.open("tJDBCOutput_10");
        }

        resourceMap.put("writer_tJDBCOutput_10", writer_tJDBCOutput_10);
    } // end of "sourceOrSink_tJDBCOutput_10 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_10 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_10.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_10 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_10 = props_tJDBCOutput_10.getSchema(c_tJDBCOutput_10, false);
    incomingEnforcer_tJDBCOutput_10 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_10);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_10 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_10 = null;


 



/**
 * [tJDBCOutput_10 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
complete_aggregate_usersStruct complete_aggregate_users_tmp = new complete_aggregate_usersStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tAggregateRow_8_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_8_AGGIN", false);
		start_Hash.put("tAggregateRow_8_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGIN";

	
		int tos_count_tAggregateRow_8_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_8> values_tAggregateRow_8 = hash_tAggregateRow_8.values();

globalMap.put("tAggregateRow_8_NB_LINE", values_tAggregateRow_8.size());

for(AggOperationStruct_tAggregateRow_8 aggregated_row_tAggregateRow_8 : values_tAggregateRow_8) { // G_AggR_600



 



/**
 * [tAggregateRow_8_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_8_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGIN";

	

            				    row14.history_datetime = aggregated_row_tAggregateRow_8.history_datetime;
            				    
            				    row14.user_id = aggregated_row_tAggregateRow_8.user_id;
            				    
            				    row14.user_name = aggregated_row_tAggregateRow_8.user_name;
            				    
                                row14.user_logged_in_to_guest = aggregated_row_tAggregateRow_8.user_logged_in_to_guest_last;
            				    row14.vm_id = aggregated_row_tAggregateRow_8.vm_id;
            				    
    								if(aggregated_row_tAggregateRow_8.session_time_in_minutes_sum != null) {
    								row14.session_time_in_minutes = aggregated_row_tAggregateRow_8.session_time_in_minutes_sum.doubleValue();
										
    								}else{
    								
    									row14.session_time_in_minutes = 0;
    									
    								}
    								
                                if(aggregated_row_tAggregateRow_8.cpu_usage_percent_count > 0){
                                	
	    								double row14_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_8.cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_8.cpu_usage_percent_count;
	    								
	    								row14.cpu_usage_percent = (short) row14_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row14.cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row14.max_cpu_usage = aggregated_row_tAggregateRow_8.max_cpu_usage_max;
                                if(aggregated_row_tAggregateRow_8.memory_usage_percent_count > 0){
                                	
	    								double row14_memory_usage_percent_temp = (double) aggregated_row_tAggregateRow_8.memory_usage_percent_sum / (double) aggregated_row_tAggregateRow_8.memory_usage_percent_count;
	    								
	    								row14.memory_usage_percent = (short) row14_memory_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row14.memory_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row14.max_memory_usage = aggregated_row_tAggregateRow_8.max_memory_usage_max;
                                if(aggregated_row_tAggregateRow_8.user_cpu_usage_percent_count > 0){
                                	
	    								double row14_user_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_8.user_cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_8.user_cpu_usage_percent_count;
	    								
	    								row14.user_cpu_usage_percent = (short) row14_user_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row14.user_cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row14.max_user_cpu_usage_percent = aggregated_row_tAggregateRow_8.max_user_cpu_usage_percent_max;
                                if(aggregated_row_tAggregateRow_8.system_cpu_usage_percent_count > 0){
                                	
	    								double row14_system_cpu_usage_percent_temp = (double) aggregated_row_tAggregateRow_8.system_cpu_usage_percent_sum / (double) aggregated_row_tAggregateRow_8.system_cpu_usage_percent_count;
	    								
	    								row14.system_cpu_usage_percent = (short) row14_system_cpu_usage_percent_temp;
										
    								
                                } else {
                                		String count = "0";
   	    								
    		    							row14.system_cpu_usage_percent = ParserUtils.parseTo_Short(count);
    									
                                }
                                row14.max_system_cpu_usage_percent = aggregated_row_tAggregateRow_8.max_system_cpu_usage_percent_max;
                                row14.vm_ip = aggregated_row_tAggregateRow_8.vm_ip_last;
                                row14.vm_client_ip = aggregated_row_tAggregateRow_8.vm_client_ip_last;
                                row14.currently_running_on_host = aggregated_row_tAggregateRow_8.currently_running_on_host_last;
                                row14.vm_configuration_version = aggregated_row_tAggregateRow_8.vm_configuration_version_last;
                                row14.current_host_configuration_version = aggregated_row_tAggregateRow_8.current_host_configuration_version_last;

 


	tos_count_tAggregateRow_8_AGGIN++;

/**
 * [tAggregateRow_8_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_8_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGIN";

	

 



/**
 * [tAggregateRow_8_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_12 = false;
		  boolean mainRowRejected_tMap_12 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

complete_aggregate_users = null;


// # Output table : 'complete_aggregate_users'
complete_aggregate_users_tmp.history_datetime = row14.history_datetime;
complete_aggregate_users_tmp.user_id = row14.user_id ;
complete_aggregate_users_tmp.user_name = row14.user_name ;
complete_aggregate_users_tmp.user_logged_in_to_guest = row14.user_logged_in_to_guest != null ?row14.user_logged_in_to_guest > 0 : null;
complete_aggregate_users_tmp.vm_id = row14.vm_id;
complete_aggregate_users_tmp.session_time_in_minutes = row14.session_time_in_minutes;
complete_aggregate_users_tmp.cpu_usage_percent = row14.cpu_usage_percent;
complete_aggregate_users_tmp.max_cpu_usage = row14.max_cpu_usage;
complete_aggregate_users_tmp.memory_usage_percent = row14.memory_usage_percent;
complete_aggregate_users_tmp.max_memory_usage = row14.max_memory_usage;
complete_aggregate_users_tmp.user_cpu_usage_percent = row14.user_cpu_usage_percent;
complete_aggregate_users_tmp.max_user_cpu_usage_percent = row14.max_user_cpu_usage_percent;
complete_aggregate_users_tmp.system_cpu_usage_percent = row14.system_cpu_usage_percent;
complete_aggregate_users_tmp.max_system_cpu_usage_percent = row14.max_system_cpu_usage_percent;
complete_aggregate_users_tmp.vm_ip = row14.vm_ip;
complete_aggregate_users_tmp.vm_client_ip = row14.vm_client_ip;
complete_aggregate_users_tmp.currently_running_on_host = row14.currently_running_on_host;
complete_aggregate_users_tmp.vm_configuration_version = row14.vm_configuration_version;
complete_aggregate_users_tmp.current_host_configuration_version = row14.current_host_configuration_version;
complete_aggregate_users = complete_aggregate_users_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";

	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "complete_aggregate_users"
if(complete_aggregate_users != null) { 



	
	/**
	 * [tJDBCOutput_10 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"complete_aggregate_users"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_10 != null) {
            incomingEnforcer_tJDBCOutput_10.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_10.put("history_datetime", complete_aggregate_users.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("user_id") != null){
                    incomingEnforcer_tJDBCOutput_10.put("user_id", complete_aggregate_users.user_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("user_name") != null){
                    incomingEnforcer_tJDBCOutput_10.put("user_name", complete_aggregate_users.user_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("user_logged_in_to_guest") != null){
                    incomingEnforcer_tJDBCOutput_10.put("user_logged_in_to_guest", complete_aggregate_users.user_logged_in_to_guest);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_10.put("vm_id", complete_aggregate_users.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("session_time_in_minutes") != null){
                    incomingEnforcer_tJDBCOutput_10.put("session_time_in_minutes", complete_aggregate_users.session_time_in_minutes);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_10.put("cpu_usage_percent", complete_aggregate_users.cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("max_cpu_usage") != null){
                    incomingEnforcer_tJDBCOutput_10.put("max_cpu_usage", complete_aggregate_users.max_cpu_usage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("memory_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_10.put("memory_usage_percent", complete_aggregate_users.memory_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("max_memory_usage") != null){
                    incomingEnforcer_tJDBCOutput_10.put("max_memory_usage", complete_aggregate_users.max_memory_usage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_10.put("user_cpu_usage_percent", complete_aggregate_users.user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("max_user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_10.put("max_user_cpu_usage_percent", complete_aggregate_users.max_user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_10.put("system_cpu_usage_percent", complete_aggregate_users.system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("max_system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_10.put("max_system_cpu_usage_percent", complete_aggregate_users.max_system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("vm_ip") != null){
                    incomingEnforcer_tJDBCOutput_10.put("vm_ip", complete_aggregate_users.vm_ip);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("vm_client_ip") != null){
                    incomingEnforcer_tJDBCOutput_10.put("vm_client_ip", complete_aggregate_users.vm_client_ip);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("currently_running_on_host") != null){
                    incomingEnforcer_tJDBCOutput_10.put("currently_running_on_host", complete_aggregate_users.currently_running_on_host);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("vm_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_10.put("vm_configuration_version", complete_aggregate_users.vm_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("current_host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_10.put("current_host_configuration_version", complete_aggregate_users.current_host_configuration_version);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_10 = null;
        if (incomingEnforcer_tJDBCOutput_10 != null) {
            data_tJDBCOutput_10 = incomingEnforcer_tJDBCOutput_10.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_10 != null && data_tJDBCOutput_10 != null) {
        	writer_tJDBCOutput_10.write(data_tJDBCOutput_10);
        }
        
        nb_line_tJDBCOutput_10++;

 


	tos_count_tJDBCOutput_10++;

/**
 * [tJDBCOutput_10 main ] stop
 */
	
	/**
	 * [tJDBCOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	


 



/**
 * [tJDBCOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	


 



/**
 * [tJDBCOutput_10 process_data_end ] stop
 */

} // End of branch "complete_aggregate_users"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";

	

 



/**
 * [tMap_12 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_8_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGIN";

	

 



/**
 * [tAggregateRow_8_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_8_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_8_AGGIN", true);
end_Hash.put("tAggregateRow_8_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_8_AGGIN end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tJDBCOutput_10 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_10", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_10 = null;
    if (writer_tJDBCOutput_10 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_10 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_10.close();
        resultMap_tJDBCOutput_10 = writer_tJDBCOutput_10.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_10), container_tJDBCOutput_10);
    }
if(resultMap_tJDBCOutput_10!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_10 : resultMap_tJDBCOutput_10.entrySet()) {
		switch(entry_tJDBCOutput_10.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "ERROR_MESSAGE", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_LINE", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_SUCCESS", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_REJECT", entry_tJDBCOutput_10.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_10 = new StringBuilder();
            for (int i_tJDBCOutput_10 = 0; i_tJDBCOutput_10 < entry_tJDBCOutput_10.getKey().length(); i_tJDBCOutput_10++) {
                char ch_tJDBCOutput_10 = entry_tJDBCOutput_10.getKey().charAt(i_tJDBCOutput_10);
                if(Character.isUpperCase(ch_tJDBCOutput_10) && i_tJDBCOutput_10> 0) {
                	studio_key_tJDBCOutput_10.append('_');
                }
                studio_key_tJDBCOutput_10.append(ch_tJDBCOutput_10);
            }
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", studio_key_tJDBCOutput_10.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_10.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"complete_aggregate_users");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_10", true);
end_Hash.put("tJDBCOutput_10", System.currentTimeMillis());




/**
 * [tJDBCOutput_10 end ] stop
 */















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_8_AGGIN"
							globalMap.remove("tAggregateRow_8");
						
				try{
					
	
	/**
	 * [tJDBCInput_10 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_10")==null){
    if(resourceMap.get("reader_tJDBCInput_10")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_10")).close();
		} catch (java.io.IOException e_tJDBCInput_10) {
			String errorMessage_tJDBCInput_10 = "failed to release the resource in tJDBCInput_10 :" + e_tJDBCInput_10.getMessage();
			System.err.println(errorMessage_tJDBCInput_10);
		}
	}
}
 



/**
 * [tJDBCInput_10 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";

	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tAggregateRow_8_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGOUT";

	

 



/**
 * [tAggregateRow_8_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_8_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_8";
	
	currentComponent="tAggregateRow_8_AGGIN";

	

 



/**
 * [tAggregateRow_8_AGGIN finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";

	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_10")==null){
    if(resourceMap.get("writer_tJDBCOutput_10")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_10")).close();
		} catch (java.io.IOException e_tJDBCOutput_10) {
			String errorMessage_tJDBCOutput_10 = "failed to release the resource in tJDBCOutput_10 :" + e_tJDBCOutput_10.getMessage();
			System.err.println(errorMessage_tJDBCOutput_10);
		}
	}
}
 



/**
 * [tJDBCOutput_10 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row_talendLogs_LOGSStruct implements routines.system.IPersistableRow<row_talendLogs_LOGSStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_AggregationToDaily, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_AggregationToDaily) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row_talendLogs_LOGSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void talendLogs_LOGSProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row_talendLogs_LOGSStruct row_talendLogs_LOGS = new row_talendLogs_LOGSStruct();




	
	/**
	 * [talendLogs_CONSOLE begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_CONSOLE", false);
		start_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Main");
					}
				
		int tos_count_talendLogs_CONSOLE = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_talendLogs_CONSOLE = "|";
		java.io.PrintStream consoleOut_talendLogs_CONSOLE = null;	

 		StringBuilder strBuffer_talendLogs_CONSOLE = null;
		int nb_line_talendLogs_CONSOLE = 0;
///////////////////////    			



 



/**
 * [talendLogs_CONSOLE begin ] stop
 */



	
	/**
	 * [talendLogs_LOGS begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_LOGS", false);
		start_Hash.put("talendLogs_LOGS", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
		int tos_count_talendLogs_LOGS = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : talendLogs_LOGS.getMessages()) {
		row_talendLogs_LOGS.type = lcm.getType();
		row_talendLogs_LOGS.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row_talendLogs_LOGS.priority = lcm.getPriority();
		row_talendLogs_LOGS.message = lcm.getMessage();
		row_talendLogs_LOGS.code = lcm.getCode();
		
		row_talendLogs_LOGS.moment = java.util.Calendar.getInstance().getTime();
	
    	row_talendLogs_LOGS.pid = pid;
		row_talendLogs_LOGS.root_pid = rootPid;
		row_talendLogs_LOGS.father_pid = fatherPid;
	
    	row_talendLogs_LOGS.project = projectName;
    	row_talendLogs_LOGS.job = jobName;
    	row_talendLogs_LOGS.context = contextStr;
    		
 



/**
 * [talendLogs_LOGS begin ] stop
 */
	
	/**
	 * [talendLogs_LOGS main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 


	tos_count_talendLogs_LOGS++;

/**
 * [talendLogs_LOGS main ] stop
 */
	
	/**
	 * [talendLogs_LOGS process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_begin ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Main"
						
						);
					}
					
///////////////////////		
						



				strBuffer_talendLogs_CONSOLE = new StringBuilder();




   				
	    		if(row_talendLogs_LOGS.moment != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
								FormatterUtils.format_Date(row_talendLogs_LOGS.moment, "yyyy-MM-dd HH:mm:ss")				
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.root_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.root_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.father_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.father_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.project != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.project)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.job != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.job)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.context != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.context)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.priority != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.priority)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.type != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.type)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.origin != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.origin)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.message != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.message)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.code != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.code)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_talendLogs_CONSOLE = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_talendLogs_CONSOLE = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_talendLogs_CONSOLE);
                    }
                    consoleOut_talendLogs_CONSOLE.println(strBuffer_talendLogs_CONSOLE.toString());
                    consoleOut_talendLogs_CONSOLE.flush();
                    nb_line_talendLogs_CONSOLE++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_talendLogs_CONSOLE++;

/**
 * [talendLogs_CONSOLE main ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_begin ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_end ] stop
 */



	
	/**
	 * [talendLogs_LOGS process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_end ] stop
 */
	
	/**
	 * [talendLogs_LOGS end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
	}
} catch (Exception e_talendLogs_LOGS) {
globalMap.put("talendLogs_LOGS_ERROR_MESSAGE",e_talendLogs_LOGS.getMessage());
	logIgnoredError(String.format("talendLogs_LOGS - tLogCatcher failed to process log message(s) due to internal error: %s", e_talendLogs_LOGS), e_talendLogs_LOGS);
}

 

ok_Hash.put("talendLogs_LOGS", true);
end_Hash.put("talendLogs_LOGS", System.currentTimeMillis());




/**
 * [talendLogs_LOGS end ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	


//////
//////
globalMap.put("talendLogs_CONSOLE_NB_LINE",nb_line_talendLogs_CONSOLE);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Main");
			  	}
			  	
 

ok_Hash.put("talendLogs_CONSOLE", true);
end_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());




/**
 * [talendLogs_CONSOLE end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [talendLogs_LOGS finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS finally ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
    	public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
        }

    	public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
        }
    };
    
    private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";
    
    {
    	globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
    }

    public static void main(String[] args){
        final AggregationToDaily AggregationToDailyClass = new AggregationToDaily();

        int exitCode = AggregationToDailyClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        if (inOSGi) {
            java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

            if (jobProperties != null && jobProperties.get("context") != null) {
                contextStr = (String)jobProperties.get("context");
            }
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = AggregationToDaily.class.getClassLoader().getResourceAsStream("ovirt_engine_dwh/aggregationtodaily_4_5/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = AggregationToDaily.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("ovirtEngineHistoryDbJdbcConnection", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbJdbcConnection") == null) {
                            context.ovirtEngineHistoryDbJdbcConnection = null;
                        } else {
                            context.ovirtEngineHistoryDbJdbcConnection=(String) context.getProperty("ovirtEngineHistoryDbJdbcConnection");
                        }
                        context.setContextType("ovirtEngineHistoryDbDriverClass", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbDriverClass") == null) {
                            context.ovirtEngineHistoryDbDriverClass = null;
                        } else {
                            context.ovirtEngineHistoryDbDriverClass=(String) context.getProperty("ovirtEngineHistoryDbDriverClass");
                        }
                        context.setContextType("ovirtEngineHistoryDbPassword", "id_Password");
                        if(context.getStringValue("ovirtEngineHistoryDbPassword") == null) {
                            context.ovirtEngineHistoryDbPassword = null;
                        } else {
                            String pwd_ovirtEngineHistoryDbPassword_value = context.getProperty("ovirtEngineHistoryDbPassword");
                            context.ovirtEngineHistoryDbPassword = null;
                            if(pwd_ovirtEngineHistoryDbPassword_value!=null) {
                                if(context_param.containsKey("ovirtEngineHistoryDbPassword")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.ovirtEngineHistoryDbPassword = pwd_ovirtEngineHistoryDbPassword_value;
                                } else if (!pwd_ovirtEngineHistoryDbPassword_value.isEmpty()) {
                                    try {
                                        context.ovirtEngineHistoryDbPassword = routines.system.PasswordEncryptUtil.decryptPassword(pwd_ovirtEngineHistoryDbPassword_value);
                                        context.put("ovirtEngineHistoryDbPassword",context.ovirtEngineHistoryDbPassword);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("ovirtEngineHistoryDbUser", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbUser") == null) {
                            context.ovirtEngineHistoryDbUser = null;
                        } else {
                            context.ovirtEngineHistoryDbUser=(String) context.getProperty("ovirtEngineHistoryDbUser");
                        }
                        context.setContextType("runTime", "id_Date");
                        if(context.getStringValue("runTime") == null) {
                            context.runTime = null;
                        } else {
                            String context_runTime_value = context.getProperty("runTime");
                            try{
                                if (context_runTime_value == null){
                                    context_runTime_value = "";
                                }
                                int context_runTime_pos = context_runTime_value.indexOf(";");
                                String context_runTime_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_runTime_pos > -1){
                                    context_runTime_pattern = context_runTime_value.substring(0, context_runTime_pos);
                                    context_runTime_value = context_runTime_value.substring(context_runTime_pos + 1);
                                }

                                context.runTime=(java.util.Date)(new java.text.SimpleDateFormat(context_runTime_pattern).parse(context_runTime_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_runTime_longValue = Long.valueOf(context_runTime_value);
                                    context.runTime = new java.util.Date(context_runTime_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "runTime", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.runTime=null;
                                }
                            }
                        }
                        context.setContextType("lastDayAggr", "id_Date");
                        if(context.getStringValue("lastDayAggr") == null) {
                            context.lastDayAggr = null;
                        } else {
                            String context_lastDayAggr_value = context.getProperty("lastDayAggr");
                            try{
                                if (context_lastDayAggr_value == null){
                                    context_lastDayAggr_value = "";
                                }
                                int context_lastDayAggr_pos = context_lastDayAggr_value.indexOf(";");
                                String context_lastDayAggr_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_lastDayAggr_pos > -1){
                                    context_lastDayAggr_pattern = context_lastDayAggr_value.substring(0, context_lastDayAggr_pos);
                                    context_lastDayAggr_value = context_lastDayAggr_value.substring(context_lastDayAggr_pos + 1);
                                }

                                context.lastDayAggr=(java.util.Date)(new java.text.SimpleDateFormat(context_lastDayAggr_pattern).parse(context_lastDayAggr_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_lastDayAggr_longValue = Long.valueOf(context_lastDayAggr_value);
                                    context.lastDayAggr = new java.util.Date(context_lastDayAggr_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "lastDayAggr", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.lastDayAggr=null;
                                }
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("ovirtEngineHistoryDbJdbcConnection")) {
                context.ovirtEngineHistoryDbJdbcConnection = (String) parentContextMap.get("ovirtEngineHistoryDbJdbcConnection");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbDriverClass")) {
                context.ovirtEngineHistoryDbDriverClass = (String) parentContextMap.get("ovirtEngineHistoryDbDriverClass");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbPassword")) {
                context.ovirtEngineHistoryDbPassword = (java.lang.String) parentContextMap.get("ovirtEngineHistoryDbPassword");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbUser")) {
                context.ovirtEngineHistoryDbUser = (String) parentContextMap.get("ovirtEngineHistoryDbUser");
            }if (parentContextMap.containsKey("runTime")) {
                context.runTime = (java.util.Date) parentContextMap.get("runTime");
            }if (parentContextMap.containsKey("lastDayAggr")) {
                context.lastDayAggr = (java.util.Date) parentContextMap.get("lastDayAggr");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("ovirtEngineHistoryDbPassword");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_2) {
globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", -1);

e_tJDBCInput_2.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_2) {
globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_3Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_3) {
globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", -1);

e_tJDBCInput_3.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_3) {
globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_3;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_4Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_4) {
globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", -1);

e_tJDBCInput_4.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_4) {
globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_4;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_5Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_5) {
globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", -1);

e_tJDBCInput_5.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_5) {
globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_5;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_11Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_11) {
globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", -1);

e_tJDBCInput_11.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_11) {
globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_11;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_13Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_13) {
globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", -1);

e_tJDBCInput_13.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_13) {
globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_13;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_9Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_9) {
globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", -1);

e_tJDBCInput_9.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_9) {
globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_9;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_10Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_10) {
globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", -1);

e_tJDBCInput_10.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_10) {
globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_10;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : AggregationToDaily");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tJDBCConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tJDBCConnection_1", globalMap.get("conn_tJDBCConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1543743 characters generated by Talend Open Studio for Data Integration 
 *     on the January 6, 2022 at 1:14:39 PM IST
 ************************************************************************************************/