// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package ovirt_engine_dwh.configurationsync_4_5;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.RoutineHistoryETL;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: ConfigurationSync Purpose: <br>
 * Description:  <br>
 * @author ydary@redhat.com
 * @version 8.0.1.20211109_1610
 * @status 
 */
public class ConfigurationSync implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(ovirtEngineDbDriverClass != null){
				
					this.setProperty("ovirtEngineDbDriverClass", ovirtEngineDbDriverClass.toString());
				
			}
			
			if(ovirtEngineDbPassword != null){
				
					this.setProperty("ovirtEngineDbPassword", ovirtEngineDbPassword.toString());
				
			}
			
			if(ovirtEngineDbUser != null){
				
					this.setProperty("ovirtEngineDbUser", ovirtEngineDbUser.toString());
				
			}
			
			if(ovirtEngineDbJdbcConnection != null){
				
					this.setProperty("ovirtEngineDbJdbcConnection", ovirtEngineDbJdbcConnection.toString());
				
			}
			
			if(ovirtEngineHistoryDbJdbcConnection != null){
				
					this.setProperty("ovirtEngineHistoryDbJdbcConnection", ovirtEngineHistoryDbJdbcConnection.toString());
				
			}
			
			if(ovirtEngineHistoryDbDriverClass != null){
				
					this.setProperty("ovirtEngineHistoryDbDriverClass", ovirtEngineHistoryDbDriverClass.toString());
				
			}
			
			if(ovirtEngineHistoryDbPassword != null){
				
					this.setProperty("ovirtEngineHistoryDbPassword", ovirtEngineHistoryDbPassword.toString());
				
			}
			
			if(ovirtEngineHistoryDbUser != null){
				
					this.setProperty("ovirtEngineHistoryDbUser", ovirtEngineHistoryDbUser.toString());
				
			}
			
			if(runTime != null){
				
					String pattern_runTime = "yyyy-MM-dd HH:mm:ss";
					String value_runTime = "yyyy-MM-dd HH:mm:ss.SSSSSS;2011-07-03 12:46:47.000000";
					String[] parts_runTime = value_runTime.split(";");
					if(parts_runTime.length > 1){
						pattern_runTime = parts_runTime[0];
						this.setProperty("runTime", pattern_runTime + ";" + FormatterUtils.format_Date(runTime, pattern_runTime));
					}else{
						this.setProperty("runTime", FormatterUtils.format_Date(runTime, pattern_runTime));
					}
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String ovirtEngineDbDriverClass;
public String getOvirtEngineDbDriverClass(){
	return this.ovirtEngineDbDriverClass;
}
public java.lang.String ovirtEngineDbPassword;
public java.lang.String getOvirtEngineDbPassword(){
	return this.ovirtEngineDbPassword;
}
public String ovirtEngineDbUser;
public String getOvirtEngineDbUser(){
	return this.ovirtEngineDbUser;
}
public String ovirtEngineDbJdbcConnection;
public String getOvirtEngineDbJdbcConnection(){
	return this.ovirtEngineDbJdbcConnection;
}
public String ovirtEngineHistoryDbJdbcConnection;
public String getOvirtEngineHistoryDbJdbcConnection(){
	return this.ovirtEngineHistoryDbJdbcConnection;
}
public String ovirtEngineHistoryDbDriverClass;
public String getOvirtEngineHistoryDbDriverClass(){
	return this.ovirtEngineHistoryDbDriverClass;
}
public java.lang.String ovirtEngineHistoryDbPassword;
public java.lang.String getOvirtEngineHistoryDbPassword(){
	return this.ovirtEngineHistoryDbPassword;
}
public String ovirtEngineHistoryDbUser;
public String getOvirtEngineHistoryDbUser(){
	return this.ovirtEngineHistoryDbUser;
}
public java.util.Date runTime;
public java.util.Date getRunTime(){
	return this.runTime;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "4.5";
	private final String jobName = "ConfigurationSync";
	private final String projectName = "OVIRT_ENGINE_DWH";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils talendLogs_LOGS = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				ConfigurationSync.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(ConfigurationSync.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				talendLogs_LOGS.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				talendLogs_LOGSProcess(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_33_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_33_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_33_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_53_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_56_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_56_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_56_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_56_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_45_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_45_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_45_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_48_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_48_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_48_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_48_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_46_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_46_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_46_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_46_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_46_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_50_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_50_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_50_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCRow_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_52_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_52_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_52_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_52_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_33_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_58_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_45_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_48_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_59_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_46_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_49_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_50_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_55_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_56_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_65_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_66_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_33_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_45_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_48_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_46_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_50_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_56_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row46_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row53_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_53_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row58_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void talendLogs_LOGS_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							talendLogs_CONSOLE_error(exception, errorComponent, globalMap);
						
						}
					
			public void talendLogs_CONSOLE_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					talendLogs_LOGS_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_20_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_33_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_34_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_22_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_24_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_26_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_28_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_30_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_53_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_56_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_45_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_48_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_46_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_50_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCRow_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_52_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void talendLogs_LOGS_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	





public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";

	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tJDBCConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	

public void tJDBCConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJDBCConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCConnection_1", false);
		start_Hash.put("tJDBCConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCConnection_1";

	
		int tos_count_tJDBCConnection_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCConnection_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCConnection_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCConnection_1 = (String)(restRequest_tJDBCConnection_1 != null ? restRequest_tJDBCConnection_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCConnection_1 =
        new org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCConnection_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCConnection_1 = null;


org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties props_tJDBCConnection_1 =
        (org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties) def_tJDBCConnection_1.createRuntimeProperties();
 		                    props_tJDBCConnection_1.setValue("shareConnection",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("sharedConnectionName",
 		                    "engine");
 		                    
 		                    props_tJDBCConnection_1.setValue("useAutoCommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("autocommit",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("jdbcUrl",
 		                    context.ovirtEngineDbJdbcConnection);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("driverClass",
 		                    context.ovirtEngineDbDriverClass);
 		                    
 		                    java.util.List<Object> tJDBCConnection_1_connection_driverTable_drivers = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCConnection_1_connection_driverTable_drivers.add("mvn:postgresql/postgresql/8.4-703.jdbc4/jar");
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCConnection_1.connection.driverTable).setValue("drivers",tJDBCConnection_1_connection_driverTable_drivers);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("userId",
 		                    context.ovirtEngineDbUser);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("password",
 		                    context.ovirtEngineDbPassword);
 		                    
globalMap.put("tJDBCConnection_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCConnection_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCConnection_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCConnection_1_MAPPINGS_URL", mappings_url_tJDBCConnection_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCConnection_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCConnection_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCConnection_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCConnection_1 = null;
topology_tJDBCConnection_1 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCConnection_1 = def_tJDBCConnection_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCConnection_1, topology_tJDBCConnection_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCConnection_1 = def_tJDBCConnection_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCConnection_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCConnection_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCConnection_1 = componentRuntime_tJDBCConnection_1.initialize(container_tJDBCConnection_1, props_tJDBCConnection_1);

if (initVr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCConnection_1.getMessage());
}

if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCConnection_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCConnection_1;
	compDriverInitialization_tJDBCConnection_1.runAtDriver(container_tJDBCConnection_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCConnection_1 = null;
if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCConnection_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCConnection_1;
	if (doesNodeBelongToRequest_tJDBCConnection_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCConnection_1 = sourceOrSink_tJDBCConnection_1.validate(container_tJDBCConnection_1);
        if (vr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCConnection_1.getMessage());
        }
	}
}

 



/**
 * [tJDBCConnection_1 begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 


	tos_count_tJDBCConnection_1++;

/**
 * [tJDBCConnection_1 main ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCConnection_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// end of generic

 

ok_Hash.put("tJDBCConnection_1", true);
end_Hash.put("tJDBCConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJDBCConnection_2Process(globalMap);



/**
 * [tJDBCConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// finally of generic

 



/**
 * [tJDBCConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 1);
	}
	

public void tJDBCConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJDBCConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCConnection_2", false);
		start_Hash.put("tJDBCConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCConnection_2";

	
		int tos_count_tJDBCConnection_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCConnection_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCConnection_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCConnection_2 = (String)(restRequest_tJDBCConnection_2 != null ? restRequest_tJDBCConnection_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCConnection_2 =
        new org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCConnection_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCConnection_2 = null;


org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties props_tJDBCConnection_2 =
        (org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties) def_tJDBCConnection_2.createRuntimeProperties();
 		                    props_tJDBCConnection_2.setValue("shareConnection",
 		                    true);
 		                    
 		                    props_tJDBCConnection_2.setValue("sharedConnectionName",
 		                    "sample_ovirt_engine_history");
 		                    
 		                    props_tJDBCConnection_2.setValue("useAutoCommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_2.setValue("autocommit",
 		                    false);
 		                    
 		                    props_tJDBCConnection_2.connection.setValue("jdbcUrl",
 		                    context.ovirtEngineHistoryDbJdbcConnection);
 		                    
 		                    props_tJDBCConnection_2.connection.setValue("driverClass",
 		                    context.ovirtEngineHistoryDbDriverClass);
 		                    
 		                    java.util.List<Object> tJDBCConnection_2_connection_driverTable_drivers = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCConnection_2_connection_driverTable_drivers.add("mvn:postgresql/postgresql/8.4-703.jdbc4/jar");
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCConnection_2.connection.driverTable).setValue("drivers",tJDBCConnection_2_connection_driverTable_drivers);
 		                    
 		                    props_tJDBCConnection_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCConnection_2.connection.userPassword.setValue("userId",
 		                    context.ovirtEngineHistoryDbUser);
 		                    
 		                    props_tJDBCConnection_2.connection.userPassword.setValue("password",
 		                    context.ovirtEngineHistoryDbPassword);
 		                    
globalMap.put("tJDBCConnection_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCConnection_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCConnection_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCConnection_2_MAPPINGS_URL", mappings_url_tJDBCConnection_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCConnection_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCConnection_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCConnection_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCConnection_2 = null;
topology_tJDBCConnection_2 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCConnection_2 = def_tJDBCConnection_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCConnection_2, topology_tJDBCConnection_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCConnection_2 = def_tJDBCConnection_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCConnection_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCConnection_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCConnection_2 = componentRuntime_tJDBCConnection_2.initialize(container_tJDBCConnection_2, props_tJDBCConnection_2);

if (initVr_tJDBCConnection_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCConnection_2.getMessage());
}

if(componentRuntime_tJDBCConnection_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCConnection_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCConnection_2;
	compDriverInitialization_tJDBCConnection_2.runAtDriver(container_tJDBCConnection_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCConnection_2 = null;
if(componentRuntime_tJDBCConnection_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCConnection_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCConnection_2;
	if (doesNodeBelongToRequest_tJDBCConnection_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCConnection_2 = sourceOrSink_tJDBCConnection_2.validate(container_tJDBCConnection_2);
        if (vr_tJDBCConnection_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCConnection_2.getMessage());
        }
	}
}

 



/**
 * [tJDBCConnection_2 begin ] stop
 */
	
	/**
	 * [tJDBCConnection_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	


 


	tos_count_tJDBCConnection_2++;

/**
 * [tJDBCConnection_2 main ] stop
 */
	
	/**
	 * [tJDBCConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	


 



/**
 * [tJDBCConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	


 



/**
 * [tJDBCConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tJDBCConnection_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	
// end of generic

 

ok_Hash.put("tJDBCConnection_2", true);
end_Hash.put("tJDBCConnection_2", System.currentTimeMillis());




/**
 * [tJDBCConnection_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	
// finally of generic

 



/**
 * [tJDBCConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCConnection_2_SUBPROCESS_STATE", 1);
	}
	


public static class insert_new_usersStruct implements routines.system.IPersistableRow<insert_new_usersStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String first_name;

				public String getFirst_name () {
					return this.first_name;
				}
				
			    public String last_name;

				public String getLast_name () {
					return this.last_name;
				}
				
			    public String domain;

				public String getDomain () {
					return this.domain;
				}
				
			    public String username;

				public String getUsername () {
					return this.username;
				}
				
			    public String department;

				public String getDepartment () {
					return this.department;
				}
				
			    public String user_role_title;

				public String getUser_role_title () {
					return this.user_role_title;
				}
				
			    public String email;

				public String getEmail () {
					return this.email;
				}
				
			    public String external_id;

				public String getExternal_id () {
					return this.external_id;
				}
				
			    public Boolean active;

				public Boolean getActive () {
					return this.active;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.user_id == null) ? 0 : this.user_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final insert_new_usersStruct other = (insert_new_usersStruct) obj;
		
						if (this.user_id == null) {
							if (other.user_id != null)
								return false;
						
						} else if (!this.user_id.equals(other.user_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(insert_new_usersStruct other) {

		other.user_id = this.user_id;
	            other.first_name = this.first_name;
	            other.last_name = this.last_name;
	            other.domain = this.domain;
	            other.username = this.username;
	            other.department = this.department;
	            other.user_role_title = this.user_role_title;
	            other.email = this.email;
	            other.external_id = this.external_id;
	            other.active = this.active;
	            other.create_date = this.create_date;
	            other.update_date = this.update_date;
	            
	}

	public void copyKeysDataTo(insert_new_usersStruct other) {

		other.user_id = this.user_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("user_id="+String.valueOf(user_id));
		sb.append(",first_name="+first_name);
		sb.append(",last_name="+last_name);
		sb.append(",domain="+domain);
		sb.append(",username="+username);
		sb.append(",department="+department);
		sb.append(",user_role_title="+user_role_title);
		sb.append(",email="+email);
		sb.append(",external_id="+external_id);
		sb.append(",active="+String.valueOf(active));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_new_usersStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.user_id, other.user_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row55Struct implements routines.system.IPersistableRow<row55Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String first_name;

				public String getFirst_name () {
					return this.first_name;
				}
				
			    public String last_name;

				public String getLast_name () {
					return this.last_name;
				}
				
			    public String domain;

				public String getDomain () {
					return this.domain;
				}
				
			    public String username;

				public String getUsername () {
					return this.username;
				}
				
			    public String department;

				public String getDepartment () {
					return this.department;
				}
				
			    public String user_role_title;

				public String getUser_role_title () {
					return this.user_role_title;
				}
				
			    public String email;

				public String getEmail () {
					return this.email;
				}
				
			    public String external_id;

				public String getExternal_id () {
					return this.external_id;
				}
				
			    public Boolean active;

				public Boolean getActive () {
					return this.active;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("user_id="+String.valueOf(user_id));
		sb.append(",first_name="+first_name);
		sb.append(",last_name="+last_name);
		sb.append(",domain="+domain);
		sb.append(",username="+username);
		sb.append(",department="+department);
		sb.append(",user_role_title="+user_role_title);
		sb.append(",email="+email);
		sb.append(",external_id="+external_id);
		sb.append(",active="+String.valueOf(active));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row55Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row55Struct row55 = new row55Struct();
insert_new_usersStruct insert_new_users = new insert_new_usersStruct();





	
	/**
	 * [tJDBCOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_9", false);
		start_Hash.put("tJDBCOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_9";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_new_users");
					}
				
		int tos_count_tJDBCOutput_9 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_9 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_9 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_9 = (String)(restRequest_tJDBCOutput_9 != null ? restRequest_tJDBCOutput_9.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_9 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_9 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_9 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_9 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_9.createRuntimeProperties();
 		                    props_tJDBCOutput_9.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT_OR_UPDATE);
 		                    
 		                    props_tJDBCOutput_9.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_9.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_9.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.tableSelection.setValue("tablename",
 		                    "users_details_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_9\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_id\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"first_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"last_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"domain\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"username\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"department\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_role_title\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"email\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"external_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"active\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"create_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"update_date\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"tJDBCOutput_9\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_1_fisrt sst_tJDBCOutput_9_1_fisrt = new SchemaSettingTool_tJDBCOutput_9_1_fisrt();
 		                    
 		                    props_tJDBCOutput_9.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_9\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_id\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"first_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"last_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"domain\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"username\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"department\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_role_title\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"email\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"external_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"active\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"create_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"update_date\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"tJDBCOutput_9\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_2_fisrt sst_tJDBCOutput_9_2_fisrt = new SchemaSettingTool_tJDBCOutput_9_2_fisrt();
 		                    
 		                    props_tJDBCOutput_9.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_id\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"first_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"last_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"domain\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"username\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"department\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_role_title\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"email\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"external_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"active\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"create_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"update_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"tJDBCOutput_9\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_3_fisrt sst_tJDBCOutput_9_3_fisrt = new SchemaSettingTool_tJDBCOutput_9_3_fisrt();
 		                    
 		                    props_tJDBCOutput_9.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_9.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_9.additionalColumns.setValue("referenceColumns",
 		                    "user_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_9.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_9 = props_tJDBCOutput_9.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_9 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_9 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_9 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_9.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_9);
        }
    }
globalMap.put("tJDBCOutput_9_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_9);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_9= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_9_MAPPINGS_URL", mappings_url_tJDBCOutput_9);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_9 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_9";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_9 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_9 = null;
topology_tJDBCOutput_9 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_9 = def_tJDBCOutput_9.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_9, topology_tJDBCOutput_9);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_9 = def_tJDBCOutput_9.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_9 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_9.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_9 = componentRuntime_tJDBCOutput_9.initialize(container_tJDBCOutput_9, props_tJDBCOutput_9);

if (initVr_tJDBCOutput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_9.getMessage());
}

if(componentRuntime_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_9 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_9;
	compDriverInitialization_tJDBCOutput_9.runAtDriver(container_tJDBCOutput_9);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_9 = null;
if(componentRuntime_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_9 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_9;
	if (doesNodeBelongToRequest_tJDBCOutput_9) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_9 = sourceOrSink_tJDBCOutput_9.validate(container_tJDBCOutput_9);
        if (vr_tJDBCOutput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_9.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_9 = null;
    if (sourceOrSink_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_9 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_9;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_9 = sink_tJDBCOutput_9.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_9) {
            writeOperation_tJDBCOutput_9.initialize(container_tJDBCOutput_9);
        }
        writer_tJDBCOutput_9 = writeOperation_tJDBCOutput_9.createWriter(container_tJDBCOutput_9);
        if (doesNodeBelongToRequest_tJDBCOutput_9) {
            writer_tJDBCOutput_9.open("tJDBCOutput_9");
        }

        resourceMap.put("writer_tJDBCOutput_9", writer_tJDBCOutput_9);
    } // end of "sourceOrSink_tJDBCOutput_9 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_9 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_9.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_9 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_9 = props_tJDBCOutput_9.getSchema(c_tJDBCOutput_9, false);
    incomingEnforcer_tJDBCOutput_9 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_9);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_9 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_9 = null;


 



/**
 * [tJDBCOutput_9 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row55");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_new_usersStruct insert_new_users_tmp = new insert_new_usersStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tJDBCInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_9", false);
		start_Hash.put("tJDBCInput_9", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_9";

	
		int tos_count_tJDBCInput_9 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_9 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_9 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_9 = (String)(restRequest_tJDBCInput_9 != null ? restRequest_tJDBCInput_9.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_9 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_9 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_9 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_9 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_9.createRuntimeProperties();
 		                    props_tJDBCInput_9.setValue("sql",
 		                    "SELECT\n    user_id,\n    first_name,\n    last_name,\n    domain,\n    username,\n    department,\n    user_role_title,\n    e"
+"mail,\n    external_id,\n    active,\n    create_date,\n    update_date\nFROM dwh_users_history_view");
 		                    
 		                    props_tJDBCInput_9.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_9.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_9.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_9_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCInput_9\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":[\"string\",\"null\"],\"default\":\"\",\"talend.field.dbType\":\"\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"first_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"last_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"domain\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"username\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"department\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_role_title\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"email\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"external_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"talend.field.dbType\":\"\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_9\",\"di.table.label\":\"tJDBCInput_9\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_9_1_fisrt sst_tJDBCInput_9_1_fisrt = new SchemaSettingTool_tJDBCInput_9_1_fisrt();
 		                    
 		                    props_tJDBCInput_9.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_9_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_9.tableSelection.setValue("tablename",
 		                    "dwh_users_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("trim",tJDBCInput_9_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_9_trimTable_columnName.add("user_id");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("first_name");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("last_name");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("domain");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("username");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("department");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("user_role_title");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("email");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("external_id");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("active");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("columnName",tJDBCInput_9_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_9.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_9 = props_tJDBCInput_9.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_9 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_9 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_9 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_9.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_9);
        }
    }
globalMap.put("tJDBCInput_9_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_9);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_9= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_9_MAPPINGS_URL", mappings_url_tJDBCInput_9);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_9 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_9";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_9 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_9 = null;
topology_tJDBCInput_9 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_9 = def_tJDBCInput_9.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_9, topology_tJDBCInput_9);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_9 = def_tJDBCInput_9.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_9 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_9.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_9 = componentRuntime_tJDBCInput_9.initialize(container_tJDBCInput_9, props_tJDBCInput_9);

if (initVr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_9.getMessage());
}

if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_9 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_9;
	compDriverInitialization_tJDBCInput_9.runAtDriver(container_tJDBCInput_9);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_9 = null;
if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_9 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_9;
	if (doesNodeBelongToRequest_tJDBCInput_9) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_9 = sourceOrSink_tJDBCInput_9.validate(container_tJDBCInput_9);
        if (vr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_9.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_9 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_9;
        reader_tJDBCInput_9 = source_tJDBCInput_9.createReader(container_tJDBCInput_9);
	    reader_tJDBCInput_9 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_9, container_tJDBCInput_9);

            boolean multi_output_is_allowed_tJDBCInput_9 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_9 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_9.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_9 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_9 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_9 = props_tJDBCInput_9.getSchema(c_tJDBCInput_9, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_9 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_9, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_9 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_9 = reader_tJDBCInput_9.start();

        resourceMap.put("reader_tJDBCInput_9", reader_tJDBCInput_9);

        for (; available_tJDBCInput_9; available_tJDBCInput_9 = reader_tJDBCInput_9.advance()) {
			nb_line_tJDBCInput_9++;

			
			if (multi_output_is_allowed_tJDBCInput_9) {
				
					row55 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_9 = reader_tJDBCInput_9.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_9) {
						row55 = new row55Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_9 == null) {
            factory_tJDBCInput_9 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_9.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_9.setWrapped(factory_tJDBCInput_9.convertToAvro(data_tJDBCInput_9));
                Object columnValue_0_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(0);
                        row55.user_id = (Object) (columnValue_0_tJDBCInput_9);
                Object columnValue_1_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(1);
                        row55.first_name = (String) (columnValue_1_tJDBCInput_9);
                Object columnValue_2_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(2);
                        row55.last_name = (String) (columnValue_2_tJDBCInput_9);
                Object columnValue_3_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(3);
                        row55.domain = (String) (columnValue_3_tJDBCInput_9);
                Object columnValue_4_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(4);
                        row55.username = (String) (columnValue_4_tJDBCInput_9);
                Object columnValue_5_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(5);
                        row55.department = (String) (columnValue_5_tJDBCInput_9);
                Object columnValue_6_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(6);
                        row55.user_role_title = (String) (columnValue_6_tJDBCInput_9);
                Object columnValue_7_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(7);
                        row55.email = (String) (columnValue_7_tJDBCInput_9);
                Object columnValue_8_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(8);
                        row55.external_id = (String) (columnValue_8_tJDBCInput_9);
                Object columnValue_9_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(9);
                        row55.active = (Boolean) (columnValue_9_tJDBCInput_9);
                Object columnValue_10_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(10);
                        row55.create_date = (java.util.Date) (columnValue_10_tJDBCInput_9);
                Object columnValue_11_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(11);
                        row55.update_date = (java.util.Date) (columnValue_11_tJDBCInput_9);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_9) {
				java.util.Map<String,Object> info_tJDBCInput_9 = e_tJDBCInput_9.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_9 = null;
					if(info_tJDBCInput_9.containsKey("error")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("error");
					}else if(info_tJDBCInput_9.containsKey("errorMessage")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_9 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_9 = "Row "+ nb_line_tJDBCInput_9 + ": "+errorMessage_tJDBCInput_9;
					System.err.println(errorMessage_tJDBCInput_9);
				
					// If the record is reject, the main line record should put NULL
					row55 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_9 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_9 = null;


 



/**
 * [tJDBCInput_9 begin ] stop
 */
	
	/**
	 * [tJDBCInput_9 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 


	tos_count_tJDBCInput_9++;

/**
 * [tJDBCInput_9 main ] stop
 */
	
	/**
	 * [tJDBCInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row55"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_9 = false;
		  boolean mainRowRejected_tMap_9 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row55.update_date == null ? TalendDate.compareDate(row55.create_date,context.runTime) <=0 : TalendDate.compareDate(row55.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row55'
							// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

insert_new_users = null;


// # Output table : 'insert_new_users'
insert_new_users_tmp.user_id = row55.user_id ;
insert_new_users_tmp.first_name = row55.first_name ;
insert_new_users_tmp.last_name = row55.last_name ;
insert_new_users_tmp.domain = row55.domain ;
insert_new_users_tmp.username = row55.username ;
insert_new_users_tmp.department = row55.department ;
insert_new_users_tmp.user_role_title = row55.user_role_title ;
insert_new_users_tmp.email = row55.email ;
insert_new_users_tmp.external_id = row55.external_id ;
insert_new_users_tmp.active = row55.active ;
insert_new_users_tmp.create_date = row55.create_date ;
insert_new_users_tmp.update_date = row55.update_date ;
insert_new_users = insert_new_users_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "insert_new_users"
if(insert_new_users != null) { 



	
	/**
	 * [tJDBCOutput_9 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_new_users"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_9 != null) {
            incomingEnforcer_tJDBCOutput_9.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("user_id") != null){
                    incomingEnforcer_tJDBCOutput_9.put("user_id", insert_new_users.user_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("first_name") != null){
                    incomingEnforcer_tJDBCOutput_9.put("first_name", insert_new_users.first_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("last_name") != null){
                    incomingEnforcer_tJDBCOutput_9.put("last_name", insert_new_users.last_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("domain") != null){
                    incomingEnforcer_tJDBCOutput_9.put("domain", insert_new_users.domain);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("username") != null){
                    incomingEnforcer_tJDBCOutput_9.put("username", insert_new_users.username);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("department") != null){
                    incomingEnforcer_tJDBCOutput_9.put("department", insert_new_users.department);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("user_role_title") != null){
                    incomingEnforcer_tJDBCOutput_9.put("user_role_title", insert_new_users.user_role_title);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("email") != null){
                    incomingEnforcer_tJDBCOutput_9.put("email", insert_new_users.email);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("external_id") != null){
                    incomingEnforcer_tJDBCOutput_9.put("external_id", insert_new_users.external_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("active") != null){
                    incomingEnforcer_tJDBCOutput_9.put("active", insert_new_users.active);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_9.put("create_date", insert_new_users.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_9.put("update_date", insert_new_users.update_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_9 = null;
        if (incomingEnforcer_tJDBCOutput_9 != null) {
            data_tJDBCOutput_9 = incomingEnforcer_tJDBCOutput_9.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_9 != null && data_tJDBCOutput_9 != null) {
        	writer_tJDBCOutput_9.write(data_tJDBCOutput_9);
        }
        
        nb_line_tJDBCOutput_9++;

 


	tos_count_tJDBCOutput_9++;

/**
 * [tJDBCOutput_9 main ] stop
 */
	
	/**
	 * [tJDBCOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	


 



/**
 * [tJDBCOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	


 



/**
 * [tJDBCOutput_9 process_data_end ] stop
 */

} // End of branch "insert_new_users"



	
		} // G_TM_M_280 close main tMap filter for table 'row55'
	
	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_9 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// end of generic


resourceMap.put("finish_tJDBCInput_9", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_9 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_9 = null;
    if (reader_tJDBCInput_9 != null) {
        reader_tJDBCInput_9.close();
        resultMap_tJDBCInput_9 = reader_tJDBCInput_9.getReturnValues();
    }
if(resultMap_tJDBCInput_9!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_9 : resultMap_tJDBCInput_9.entrySet()) {
		switch(entry_tJDBCInput_9.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "ERROR_MESSAGE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_LINE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_SUCCESS", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_REJECT", entry_tJDBCInput_9.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_9 = new StringBuilder();
            for (int i_tJDBCInput_9 = 0; i_tJDBCInput_9 < entry_tJDBCInput_9.getKey().length(); i_tJDBCInput_9++) {
                char ch_tJDBCInput_9 = entry_tJDBCInput_9.getKey().charAt(i_tJDBCInput_9);
                if(Character.isUpperCase(ch_tJDBCInput_9) && i_tJDBCInput_9> 0) {
                	studio_key_tJDBCInput_9.append('_');
                }
                studio_key_tJDBCInput_9.append(ch_tJDBCInput_9);
            }
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", studio_key_tJDBCInput_9.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_9.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_9", true);
end_Hash.put("tJDBCInput_9", System.currentTimeMillis());




/**
 * [tJDBCInput_9 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row55");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tJDBCOutput_9 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_9", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_9 = null;
    if (writer_tJDBCOutput_9 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_9 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_9.close();
        resultMap_tJDBCOutput_9 = writer_tJDBCOutput_9.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_9), container_tJDBCOutput_9);
    }
if(resultMap_tJDBCOutput_9!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_9 : resultMap_tJDBCOutput_9.entrySet()) {
		switch(entry_tJDBCOutput_9.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "ERROR_MESSAGE", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_LINE", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_SUCCESS", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_REJECT", entry_tJDBCOutput_9.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_9 = new StringBuilder();
            for (int i_tJDBCOutput_9 = 0; i_tJDBCOutput_9 < entry_tJDBCOutput_9.getKey().length(); i_tJDBCOutput_9++) {
                char ch_tJDBCOutput_9 = entry_tJDBCOutput_9.getKey().charAt(i_tJDBCOutput_9);
                if(Character.isUpperCase(ch_tJDBCOutput_9) && i_tJDBCOutput_9> 0) {
                	studio_key_tJDBCOutput_9.append('_');
                }
                studio_key_tJDBCOutput_9.append(ch_tJDBCOutput_9);
            }
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", studio_key_tJDBCOutput_9.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_9.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_new_users");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_9", true);
end_Hash.put("tJDBCOutput_9", System.currentTimeMillis());




/**
 * [tJDBCOutput_9 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk251", 0, "ok");
								} 
							
							tJDBCInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_9 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_9")==null){
    if(resourceMap.get("reader_tJDBCInput_9")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_9")).close();
		} catch (java.io.IOException e_tJDBCInput_9) {
			String errorMessage_tJDBCInput_9 = "failed to release the resource in tJDBCInput_9 :" + e_tJDBCInput_9.getMessage();
			System.err.println(errorMessage_tJDBCInput_9);
		}
	}
}
 



/**
 * [tJDBCInput_9 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_9")==null){
    if(resourceMap.get("writer_tJDBCOutput_9")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_9")).close();
		} catch (java.io.IOException e_tJDBCOutput_9) {
			String errorMessage_tJDBCOutput_9 = "failed to release the resource in tJDBCOutput_9 :" + e_tJDBCOutput_9.getMessage();
			System.err.println(errorMessage_tJDBCOutput_9);
		}
	}
}
 



/**
 * [tJDBCOutput_9 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class delete_usersStruct implements routines.system.IPersistableRow<delete_usersStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String first_name;

				public String getFirst_name () {
					return this.first_name;
				}
				
			    public String last_name;

				public String getLast_name () {
					return this.last_name;
				}
				
			    public String domain;

				public String getDomain () {
					return this.domain;
				}
				
			    public String username;

				public String getUsername () {
					return this.username;
				}
				
			    public String department;

				public String getDepartment () {
					return this.department;
				}
				
			    public String user_role_title;

				public String getUser_role_title () {
					return this.user_role_title;
				}
				
			    public String email;

				public String getEmail () {
					return this.email;
				}
				
			    public String external_id;

				public String getExternal_id () {
					return this.external_id;
				}
				
			    public Boolean active;

				public Boolean getActive () {
					return this.active;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.user_id == null) ? 0 : this.user_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final delete_usersStruct other = (delete_usersStruct) obj;
		
						if (this.user_id == null) {
							if (other.user_id != null)
								return false;
						
						} else if (!this.user_id.equals(other.user_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(delete_usersStruct other) {

		other.user_id = this.user_id;
	            other.first_name = this.first_name;
	            other.last_name = this.last_name;
	            other.domain = this.domain;
	            other.username = this.username;
	            other.department = this.department;
	            other.user_role_title = this.user_role_title;
	            other.email = this.email;
	            other.external_id = this.external_id;
	            other.active = this.active;
	            other.create_date = this.create_date;
	            other.update_date = this.update_date;
	            other.delete_date = this.delete_date;
	            
	}

	public void copyKeysDataTo(delete_usersStruct other) {

		other.user_id = this.user_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("user_id="+String.valueOf(user_id));
		sb.append(",first_name="+first_name);
		sb.append(",last_name="+last_name);
		sb.append(",domain="+domain);
		sb.append(",username="+username);
		sb.append(",department="+department);
		sb.append(",user_role_title="+user_role_title);
		sb.append(",email="+email);
		sb.append(",external_id="+external_id);
		sb.append(",active="+String.valueOf(active));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_usersStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.user_id, other.user_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row57Struct implements routines.system.IPersistableRow<row57Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String user_join_id;

				public String getUser_join_id () {
					return this.user_join_id;
				}
				
			    public String first_name;

				public String getFirst_name () {
					return this.first_name;
				}
				
			    public String last_name;

				public String getLast_name () {
					return this.last_name;
				}
				
			    public String domain;

				public String getDomain () {
					return this.domain;
				}
				
			    public String username;

				public String getUsername () {
					return this.username;
				}
				
			    public String department;

				public String getDepartment () {
					return this.department;
				}
				
			    public String user_role_title;

				public String getUser_role_title () {
					return this.user_role_title;
				}
				
			    public String email;

				public String getEmail () {
					return this.email;
				}
				
			    public String external_id;

				public String getExternal_id () {
					return this.external_id;
				}
				
			    public Boolean active;

				public Boolean getActive () {
					return this.active;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.user_join_id = readString(dis);
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.user_join_id = readString(dis);
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_join_id,dos);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_join_id,dos);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("user_id="+String.valueOf(user_id));
		sb.append(",user_join_id="+user_join_id);
		sb.append(",first_name="+first_name);
		sb.append(",last_name="+last_name);
		sb.append(",domain="+domain);
		sb.append(",username="+username);
		sb.append(",department="+department);
		sb.append(",user_role_title="+user_role_title);
		sb.append(",email="+email);
		sb.append(",external_id="+external_id);
		sb.append(",active="+String.valueOf(active));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row57Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_11Struct implements routines.system.IPersistableRow<after_tJDBCInput_11Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object user_id;

				public Object getUser_id () {
					return this.user_id;
				}
				
			    public String user_join_id;

				public String getUser_join_id () {
					return this.user_join_id;
				}
				
			    public String first_name;

				public String getFirst_name () {
					return this.first_name;
				}
				
			    public String last_name;

				public String getLast_name () {
					return this.last_name;
				}
				
			    public String domain;

				public String getDomain () {
					return this.domain;
				}
				
			    public String username;

				public String getUsername () {
					return this.username;
				}
				
			    public String department;

				public String getDepartment () {
					return this.department;
				}
				
			    public String user_role_title;

				public String getUser_role_title () {
					return this.user_role_title;
				}
				
			    public String email;

				public String getEmail () {
					return this.email;
				}
				
			    public String external_id;

				public String getExternal_id () {
					return this.external_id;
				}
				
			    public Boolean active;

				public Boolean getActive () {
					return this.active;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.user_join_id == null) ? 0 : this.user_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tJDBCInput_11Struct other = (after_tJDBCInput_11Struct) obj;
		
						if (this.user_join_id == null) {
							if (other.user_join_id != null)
								return false;
						
						} else if (!this.user_join_id.equals(other.user_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tJDBCInput_11Struct other) {

		other.user_id = this.user_id;
	            other.user_join_id = this.user_join_id;
	            other.first_name = this.first_name;
	            other.last_name = this.last_name;
	            other.domain = this.domain;
	            other.username = this.username;
	            other.department = this.department;
	            other.user_role_title = this.user_role_title;
	            other.email = this.email;
	            other.external_id = this.external_id;
	            other.active = this.active;
	            other.create_date = this.create_date;
	            other.update_date = this.update_date;
	            
	}

	public void copyKeysDataTo(after_tJDBCInput_11Struct other) {

		other.user_join_id = this.user_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.user_join_id = readString(dis);
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.user_id = (Object) dis.readObject();
					
					this.user_join_id = readString(dis);
					
					this.first_name = readString(dis);
					
					this.last_name = readString(dis);
					
					this.domain = readString(dis);
					
					this.username = readString(dis);
					
					this.department = readString(dis);
					
					this.user_role_title = readString(dis);
					
					this.email = readString(dis);
					
					this.external_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active = null;
           				} else {
           			    	this.active = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_join_id,dos);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.user_id);
					
					// String
				
						writeString(this.user_join_id,dos);
					
					// String
				
						writeString(this.first_name,dos);
					
					// String
				
						writeString(this.last_name,dos);
					
					// String
				
						writeString(this.domain,dos);
					
					// String
				
						writeString(this.username,dos);
					
					// String
				
						writeString(this.department,dos);
					
					// String
				
						writeString(this.user_role_title,dos);
					
					// String
				
						writeString(this.email,dos);
					
					// String
				
						writeString(this.external_id,dos);
					
					// Boolean
				
						if(this.active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.active);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("user_id="+String.valueOf(user_id));
		sb.append(",user_join_id="+user_join_id);
		sb.append(",first_name="+first_name);
		sb.append(",last_name="+last_name);
		sb.append(",domain="+domain);
		sb.append(",username="+username);
		sb.append(",department="+department);
		sb.append(",user_role_title="+user_role_title);
		sb.append(",email="+email);
		sb.append(",external_id="+external_id);
		sb.append(",active="+String.valueOf(active));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.user_join_id, other.user_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_12Process(globalMap);

		row57Struct row57 = new row57Struct();
delete_usersStruct delete_users = new delete_usersStruct();





	
	/**
	 * [tJDBCOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_10", false);
		start_Hash.put("tJDBCOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_10";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_users");
					}
				
		int tos_count_tJDBCOutput_10 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_10 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_10 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_10 = (String)(restRequest_tJDBCOutput_10 != null ? restRequest_tJDBCOutput_10.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_10 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_10 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_10 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_10 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_10.createRuntimeProperties();
 		                    props_tJDBCOutput_10.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE);
 		                    
 		                    props_tJDBCOutput_10.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_10.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_10.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_10.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.tableSelection.setValue("tablename",
 		                    "users_details_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_10\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"36\",\"di.table.label\":\"user_id\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"first_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"last_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"domain\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"username\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"department\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_role_title\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"email\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"external_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"active\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"create_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"update_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"delete_date\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"tJDBCOutput_10\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_1_fisrt sst_tJDBCOutput_10_1_fisrt = new SchemaSettingTool_tJDBCOutput_10_1_fisrt();
 		                    
 		                    props_tJDBCOutput_10.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_10\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"36\",\"di.table.label\":\"user_id\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"first_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"last_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"domain\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"username\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"department\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_role_title\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"email\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"external_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"active\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"create_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"update_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"delete_date\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"tJDBCOutput_10\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_2_fisrt sst_tJDBCOutput_10_2_fisrt = new SchemaSettingTool_tJDBCOutput_10_2_fisrt();
 		                    
 		                    props_tJDBCOutput_10.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"36\",\"di.table.label\":\"user_id\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"first_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"last_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"domain\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"username\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"department\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_role_title\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"email\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"external_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"active\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"create_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"update_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"delete_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"tJDBCOutput_10\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_3_fisrt sst_tJDBCOutput_10_3_fisrt = new SchemaSettingTool_tJDBCOutput_10_3_fisrt();
 		                    
 		                    props_tJDBCOutput_10.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_10.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_10.additionalColumns.setValue("referenceColumns",
 		                    "user_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_10.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_10 = props_tJDBCOutput_10.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_10 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_10 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_10 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_10.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_10);
        }
    }
globalMap.put("tJDBCOutput_10_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_10);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_10= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_10_MAPPINGS_URL", mappings_url_tJDBCOutput_10);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_10 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_10";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_10 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_10 = null;
topology_tJDBCOutput_10 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_10 = def_tJDBCOutput_10.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_10, topology_tJDBCOutput_10);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_10 = def_tJDBCOutput_10.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_10 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_10.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_10 = componentRuntime_tJDBCOutput_10.initialize(container_tJDBCOutput_10, props_tJDBCOutput_10);

if (initVr_tJDBCOutput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_10.getMessage());
}

if(componentRuntime_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_10 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_10;
	compDriverInitialization_tJDBCOutput_10.runAtDriver(container_tJDBCOutput_10);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_10 = null;
if(componentRuntime_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_10 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_10;
	if (doesNodeBelongToRequest_tJDBCOutput_10) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_10 = sourceOrSink_tJDBCOutput_10.validate(container_tJDBCOutput_10);
        if (vr_tJDBCOutput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_10.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_10 = null;
    if (sourceOrSink_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_10 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_10;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_10 = sink_tJDBCOutput_10.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_10) {
            writeOperation_tJDBCOutput_10.initialize(container_tJDBCOutput_10);
        }
        writer_tJDBCOutput_10 = writeOperation_tJDBCOutput_10.createWriter(container_tJDBCOutput_10);
        if (doesNodeBelongToRequest_tJDBCOutput_10) {
            writer_tJDBCOutput_10.open("tJDBCOutput_10");
        }

        resourceMap.put("writer_tJDBCOutput_10", writer_tJDBCOutput_10);
    } // end of "sourceOrSink_tJDBCOutput_10 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_10 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_10.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_10 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_10 = props_tJDBCOutput_10.getSchema(c_tJDBCOutput_10, false);
    incomingEnforcer_tJDBCOutput_10 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_10);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_10 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_10 = null;


 



/**
 * [tJDBCOutput_10 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row57");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct> tHash_Lookup_row58 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct>) 
					globalMap.get( "tHash_Lookup_row58" ))
					;					
					
	

row58Struct row58HashKey = new row58Struct();
row58Struct row58Default = new row58Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_usersStruct delete_users_tmp = new delete_usersStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tJDBCInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_11", false);
		start_Hash.put("tJDBCInput_11", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_11";

	
		int tos_count_tJDBCInput_11 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_11 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_11 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_11 = (String)(restRequest_tJDBCInput_11 != null ? restRequest_tJDBCInput_11.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_11 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_11 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_11 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_11 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_11.createRuntimeProperties();
 		                    props_tJDBCInput_11.setValue("sql",
 		                    "SELECT\n    user_id,\n    upper(cast(user_id as char(36))) as user_join_id,\n    first_name,\n    last_name,\n    domain,\n  "
+"  username,\n    department,\n    user_role_title,\n    email,\n    external_id,\n    active,\n    create_date,\n    update_dat"
+"e\nFROM v4_5_latest_users_details");
 		                    
 		                    props_tJDBCInput_11.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_11.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_11.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_11_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCInput_11\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"36\",\"di.table.label\":\"user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"user_join_id\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"first_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"first_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"first_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"last_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"last_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"last_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"domain\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"domain\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"domain\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"username\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"username\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"username\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"department\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"department\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"department\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_role_title\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_role_title\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"user_role_title\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"email\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"email\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"email\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"external_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"external_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"external_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"active\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"active\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"create_date\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"35\",\"di.table.label\":\"update_date\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_11\",\"di.table.label\":\"tJDBCInput_11\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_11_1_fisrt sst_tJDBCInput_11_1_fisrt = new SchemaSettingTool_tJDBCInput_11_1_fisrt();
 		                    
 		                    props_tJDBCInput_11.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_11_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_11.tableSelection.setValue("tablename",
 		                    "v4_5_latest_users_details");
 		                    
 		                    java.util.List<Object> tJDBCInput_11_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_11.trimTable).setValue("trim",tJDBCInput_11_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_11_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_11_trimTable_columnName.add("user_id");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("user_join_id");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("first_name");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("last_name");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("domain");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("username");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("department");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("user_role_title");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("email");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("external_id");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("active");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_11_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_11.trimTable).setValue("columnName",tJDBCInput_11_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_11.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_11 = props_tJDBCInput_11.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_11.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_11);
        }
    }
globalMap.put("tJDBCInput_11_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_11);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_11= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_11_MAPPINGS_URL", mappings_url_tJDBCInput_11);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_11 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_11";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_11 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_11 = null;
topology_tJDBCInput_11 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_11 = def_tJDBCInput_11.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_11, topology_tJDBCInput_11);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_11 = def_tJDBCInput_11.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_11 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_11.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_11 = componentRuntime_tJDBCInput_11.initialize(container_tJDBCInput_11, props_tJDBCInput_11);

if (initVr_tJDBCInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_11.getMessage());
}

if(componentRuntime_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_11 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_11;
	compDriverInitialization_tJDBCInput_11.runAtDriver(container_tJDBCInput_11);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_11 = null;
if(componentRuntime_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_11 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_11;
	if (doesNodeBelongToRequest_tJDBCInput_11) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_11 = sourceOrSink_tJDBCInput_11.validate(container_tJDBCInput_11);
        if (vr_tJDBCInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_11.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_11 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_11;
        reader_tJDBCInput_11 = source_tJDBCInput_11.createReader(container_tJDBCInput_11);
	    reader_tJDBCInput_11 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_11, container_tJDBCInput_11);

            boolean multi_output_is_allowed_tJDBCInput_11 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_11 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_11.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_11 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_11 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_11 = props_tJDBCInput_11.getSchema(c_tJDBCInput_11, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_11 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_11, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_11 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_11 = reader_tJDBCInput_11.start();

        resourceMap.put("reader_tJDBCInput_11", reader_tJDBCInput_11);

        for (; available_tJDBCInput_11; available_tJDBCInput_11 = reader_tJDBCInput_11.advance()) {
			nb_line_tJDBCInput_11++;

			
			if (multi_output_is_allowed_tJDBCInput_11) {
				
					row57 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_11 = reader_tJDBCInput_11.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_11) {
						row57 = new row57Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_11 == null) {
            factory_tJDBCInput_11 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_11.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_11.setWrapped(factory_tJDBCInput_11.convertToAvro(data_tJDBCInput_11));
                Object columnValue_0_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(0);
                        row57.user_id = (Object) (columnValue_0_tJDBCInput_11);
                Object columnValue_1_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(1);
                        row57.user_join_id = (String) (columnValue_1_tJDBCInput_11);
                Object columnValue_2_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(2);
                        row57.first_name = (String) (columnValue_2_tJDBCInput_11);
                Object columnValue_3_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(3);
                        row57.last_name = (String) (columnValue_3_tJDBCInput_11);
                Object columnValue_4_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(4);
                        row57.domain = (String) (columnValue_4_tJDBCInput_11);
                Object columnValue_5_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(5);
                        row57.username = (String) (columnValue_5_tJDBCInput_11);
                Object columnValue_6_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(6);
                        row57.department = (String) (columnValue_6_tJDBCInput_11);
                Object columnValue_7_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(7);
                        row57.user_role_title = (String) (columnValue_7_tJDBCInput_11);
                Object columnValue_8_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(8);
                        row57.email = (String) (columnValue_8_tJDBCInput_11);
                Object columnValue_9_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(9);
                        row57.external_id = (String) (columnValue_9_tJDBCInput_11);
                Object columnValue_10_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(10);
                        row57.active = (Boolean) (columnValue_10_tJDBCInput_11);
                Object columnValue_11_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(11);
                        row57.create_date = (java.util.Date) (columnValue_11_tJDBCInput_11);
                Object columnValue_12_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(12);
                        row57.update_date = (java.util.Date) (columnValue_12_tJDBCInput_11);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_11) {
				java.util.Map<String,Object> info_tJDBCInput_11 = e_tJDBCInput_11.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_11 = null;
					if(info_tJDBCInput_11.containsKey("error")){
						errorMessage_tJDBCInput_11 = info_tJDBCInput_11.get("error");
					}else if(info_tJDBCInput_11.containsKey("errorMessage")){
						errorMessage_tJDBCInput_11 = info_tJDBCInput_11.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_11 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_11 = "Row "+ nb_line_tJDBCInput_11 + ": "+errorMessage_tJDBCInput_11;
					System.err.println(errorMessage_tJDBCInput_11);
				
					// If the record is reject, the main line record should put NULL
					row57 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_11 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_11 = null;


 



/**
 * [tJDBCInput_11 begin ] stop
 */
	
	/**
	 * [tJDBCInput_11 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 


	tos_count_tJDBCInput_11++;

/**
 * [tJDBCInput_11 main ] stop
 */
	
	/**
	 * [tJDBCInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 



/**
 * [tJDBCInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row57"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_10 = false;
		  boolean mainRowRejected_tMap_10 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row58" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow58 = false;
       		  	    	
       		  	    	
 							row58Struct row58ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row58HashKey.user_join_id = row57.user_join_id ;
                        		    		

								
		                        	row58HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row58.lookup( row58HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row58.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_10 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row58 != null && tHash_Lookup_row58.getCount(row58HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row58' and it contains more one result from keys :  row58.user_join_id = '" + row58HashKey.user_join_id + "'");
								} // G 071
							

							row58Struct row58 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row58Struct fromLookup_row58 = null;
							row58 = row58Default;
										 
							
								 
							
							
								if (tHash_Lookup_row58 !=null && tHash_Lookup_row58.hasNext()) { // G 099
								
							
								
								fromLookup_row58 = tHash_Lookup_row58.next();

							
							
								} // G 099
							
							

							if(fromLookup_row58 != null) {
								row58 = fromLookup_row58;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

delete_users = null;

if(!rejectedInnerJoin_tMap_10 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_users'
// # Filter conditions 
if( rejectedInnerJoin_tMap_10 ) {
delete_users_tmp.user_id = row57.user_id ;
delete_users_tmp.first_name = row57.first_name ;
delete_users_tmp.last_name = row57.last_name ;
delete_users_tmp.domain = row57.domain ;
delete_users_tmp.username = row57.username ;
delete_users_tmp.department = row57.department ;
delete_users_tmp.user_role_title = row57.user_role_title ;
delete_users_tmp.email = row57.email ;
delete_users_tmp.external_id = row57.external_id ;
delete_users_tmp.active = row57.active ;
delete_users_tmp.create_date = row57.create_date ;
delete_users_tmp.update_date = context.runTime;
delete_users_tmp.delete_date = context.runTime;
delete_users = delete_users_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";

	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "delete_users"
if(delete_users != null) { 



	
	/**
	 * [tJDBCOutput_10 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_users"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_10 != null) {
            incomingEnforcer_tJDBCOutput_10.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("user_id") != null){
                    incomingEnforcer_tJDBCOutput_10.put("user_id", delete_users.user_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("first_name") != null){
                    incomingEnforcer_tJDBCOutput_10.put("first_name", delete_users.first_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("last_name") != null){
                    incomingEnforcer_tJDBCOutput_10.put("last_name", delete_users.last_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("domain") != null){
                    incomingEnforcer_tJDBCOutput_10.put("domain", delete_users.domain);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("username") != null){
                    incomingEnforcer_tJDBCOutput_10.put("username", delete_users.username);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("department") != null){
                    incomingEnforcer_tJDBCOutput_10.put("department", delete_users.department);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("user_role_title") != null){
                    incomingEnforcer_tJDBCOutput_10.put("user_role_title", delete_users.user_role_title);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("email") != null){
                    incomingEnforcer_tJDBCOutput_10.put("email", delete_users.email);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("external_id") != null){
                    incomingEnforcer_tJDBCOutput_10.put("external_id", delete_users.external_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("active") != null){
                    incomingEnforcer_tJDBCOutput_10.put("active", delete_users.active);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_10.put("create_date", delete_users.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_10.put("update_date", delete_users.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_10.put("delete_date", delete_users.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_10 = null;
        if (incomingEnforcer_tJDBCOutput_10 != null) {
            data_tJDBCOutput_10 = incomingEnforcer_tJDBCOutput_10.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_10 != null && data_tJDBCOutput_10 != null) {
        	writer_tJDBCOutput_10.write(data_tJDBCOutput_10);
        }
        
        nb_line_tJDBCOutput_10++;

 


	tos_count_tJDBCOutput_10++;

/**
 * [tJDBCOutput_10 main ] stop
 */
	
	/**
	 * [tJDBCOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	


 



/**
 * [tJDBCOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	


 



/**
 * [tJDBCOutput_10 process_data_end ] stop
 */

} // End of branch "delete_users"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";

	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 



/**
 * [tJDBCInput_11 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_11 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	
// end of generic


resourceMap.put("finish_tJDBCInput_11", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_11 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_11 = null;
    if (reader_tJDBCInput_11 != null) {
        reader_tJDBCInput_11.close();
        resultMap_tJDBCInput_11 = reader_tJDBCInput_11.getReturnValues();
    }
if(resultMap_tJDBCInput_11!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_11 : resultMap_tJDBCInput_11.entrySet()) {
		switch(entry_tJDBCInput_11.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "ERROR_MESSAGE", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_LINE", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_SUCCESS", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_REJECT", entry_tJDBCInput_11.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_11 = new StringBuilder();
            for (int i_tJDBCInput_11 = 0; i_tJDBCInput_11 < entry_tJDBCInput_11.getKey().length(); i_tJDBCInput_11++) {
                char ch_tJDBCInput_11 = entry_tJDBCInput_11.getKey().charAt(i_tJDBCInput_11);
                if(Character.isUpperCase(ch_tJDBCInput_11) && i_tJDBCInput_11> 0) {
                	studio_key_tJDBCInput_11.append('_');
                }
                studio_key_tJDBCInput_11.append(ch_tJDBCInput_11);
            }
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", studio_key_tJDBCInput_11.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_11.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_11", true);
end_Hash.put("tJDBCInput_11", System.currentTimeMillis());




/**
 * [tJDBCInput_11 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row58 != null) {
						tHash_Lookup_row58.endGet();
					}
					globalMap.remove( "tHash_Lookup_row58" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row57");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tJDBCOutput_10 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_10", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_10 = null;
    if (writer_tJDBCOutput_10 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_10 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_10.close();
        resultMap_tJDBCOutput_10 = writer_tJDBCOutput_10.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_10), container_tJDBCOutput_10);
    }
if(resultMap_tJDBCOutput_10!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_10 : resultMap_tJDBCOutput_10.entrySet()) {
		switch(entry_tJDBCOutput_10.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "ERROR_MESSAGE", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_LINE", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_SUCCESS", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_REJECT", entry_tJDBCOutput_10.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_10 = new StringBuilder();
            for (int i_tJDBCOutput_10 = 0; i_tJDBCOutput_10 < entry_tJDBCOutput_10.getKey().length(); i_tJDBCOutput_10++) {
                char ch_tJDBCOutput_10 = entry_tJDBCOutput_10.getKey().charAt(i_tJDBCOutput_10);
                if(Character.isUpperCase(ch_tJDBCOutput_10) && i_tJDBCOutput_10> 0) {
                	studio_key_tJDBCOutput_10.append('_');
                }
                studio_key_tJDBCOutput_10.append(ch_tJDBCOutput_10);
            }
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", studio_key_tJDBCOutput_10.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_10.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_users");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_10", true);
end_Hash.put("tJDBCOutput_10", System.currentTimeMillis());




/**
 * [tJDBCOutput_10 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk36", 0, "ok");
								} 
							
							tJDBCInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row58"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_11 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_11")==null){
    if(resourceMap.get("reader_tJDBCInput_11")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_11")).close();
		} catch (java.io.IOException e_tJDBCInput_11) {
			String errorMessage_tJDBCInput_11 = "failed to release the resource in tJDBCInput_11 :" + e_tJDBCInput_11.getMessage();
			System.err.println(errorMessage_tJDBCInput_11);
		}
	}
}
 



/**
 * [tJDBCInput_11 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";

	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_10")==null){
    if(resourceMap.get("writer_tJDBCOutput_10")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_10")).close();
		} catch (java.io.IOException e_tJDBCOutput_10) {
			String errorMessage_tJDBCOutput_10 = "failed to release the resource in tJDBCOutput_10 :" + e_tJDBCOutput_10.getMessage();
			System.err.println(errorMessage_tJDBCOutput_10);
		}
	}
}
 



/**
 * [tJDBCOutput_10 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class datacenter_configurationStruct implements routines.system.IPersistableRow<datacenter_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_name;

				public String getDatacenter_name () {
					return this.datacenter_name;
				}
				
			    public String datacenter_description;

				public String getDatacenter_description () {
					return this.datacenter_description;
				}
				
			    public Boolean is_local_storage;

				public Boolean getIs_local_storage () {
					return this.is_local_storage;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_name="+datacenter_name);
		sb.append(",datacenter_description="+datacenter_description);
		sb.append(",is_local_storage="+String.valueOf(is_local_storage));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(datacenter_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_name;

				public String getDatacenter_name () {
					return this.datacenter_name;
				}
				
			    public String datacenter_description;

				public String getDatacenter_description () {
					return this.datacenter_description;
				}
				
			    public Boolean is_local_storage;

				public Boolean getIs_local_storage () {
					return this.is_local_storage;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_name="+datacenter_name);
		sb.append(",datacenter_description="+datacenter_description);
		sb.append(",is_local_storage="+String.valueOf(is_local_storage));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
datacenter_configurationStruct datacenter_configuration = new datacenter_configurationStruct();





	
	/**
	 * [tJDBCOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_2", false);
		start_Hash.put("tJDBCOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"datacenter_configuration");
					}
				
		int tos_count_tJDBCOutput_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_2 = (String)(restRequest_tJDBCOutput_2 != null ? restRequest_tJDBCOutput_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_2 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_2 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_2 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_2.createRuntimeProperties();
 		                    props_tJDBCOutput_2.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_2.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.tableSelection.setValue("tablename",
 		                    "datacenter_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"datacenter_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_1_fisrt sst_tJDBCOutput_2_1_fisrt = new SchemaSettingTool_tJDBCOutput_2_1_fisrt();
 		                    
 		                    props_tJDBCOutput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"datacenter_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_2_fisrt sst_tJDBCOutput_2_2_fisrt = new SchemaSettingTool_tJDBCOutput_2_2_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"datacenter_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_3_fisrt sst_tJDBCOutput_2_3_fisrt = new SchemaSettingTool_tJDBCOutput_2_3_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("referenceColumns",
 		                    "datacenter_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_2 = props_tJDBCOutput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_2);
        }
    }
globalMap.put("tJDBCOutput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_2_MAPPINGS_URL", mappings_url_tJDBCOutput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_2 = null;
topology_tJDBCOutput_2 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_2 = def_tJDBCOutput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_2, topology_tJDBCOutput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_2 = def_tJDBCOutput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_2 = componentRuntime_tJDBCOutput_2.initialize(container_tJDBCOutput_2, props_tJDBCOutput_2);

if (initVr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_2.getMessage());
}

if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_2;
	compDriverInitialization_tJDBCOutput_2.runAtDriver(container_tJDBCOutput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_2 = null;
if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_2;
	if (doesNodeBelongToRequest_tJDBCOutput_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_2 = sourceOrSink_tJDBCOutput_2.validate(container_tJDBCOutput_2);
        if (vr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_2.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_2 = null;
    if (sourceOrSink_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_2 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_2;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_2 = sink_tJDBCOutput_2.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writeOperation_tJDBCOutput_2.initialize(container_tJDBCOutput_2);
        }
        writer_tJDBCOutput_2 = writeOperation_tJDBCOutput_2.createWriter(container_tJDBCOutput_2);
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writer_tJDBCOutput_2.open("tJDBCOutput_2");
        }

        resourceMap.put("writer_tJDBCOutput_2", writer_tJDBCOutput_2);
    } // end of "sourceOrSink_tJDBCOutput_2 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_2 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_2.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_2 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_2 = props_tJDBCOutput_2.getSchema(c_tJDBCOutput_2, false);
    incomingEnforcer_tJDBCOutput_2 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_2);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_2 = null;


 



/**
 * [tJDBCOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
datacenter_configurationStruct datacenter_configuration_tmp = new datacenter_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJDBCInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_2", false);
		start_Hash.put("tJDBCInput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_2";

	
		int tos_count_tJDBCInput_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_2 = (String)(restRequest_tJDBCInput_2 != null ? restRequest_tJDBCInput_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_2 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_2 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_2 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_2.createRuntimeProperties();
 		                    props_tJDBCInput_2.setValue("sql",
 		                    "SELECT \n  datacenter_id, \n  datacenter_name, \n  datacenter_description, \n  is_local_storage, \n  create_date, \n  u"
+"pdate_date\nFROM dwh_datacenter_configuration_history_view");
 		                    
 		                    props_tJDBCInput_2.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_2.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_datacenter_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_2\",\"di.table.label\":\"dwh_datacenter_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_2_1_fisrt sst_tJDBCInput_2_1_fisrt = new SchemaSettingTool_tJDBCInput_2_1_fisrt();
 		                    
 		                    props_tJDBCInput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_2.tableSelection.setValue("tablename",
 		                    "dwh_datacenter_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_2_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_2.trimTable).setValue("trim",tJDBCInput_2_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_2_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_2_trimTable_columnName.add("datacenter_id");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("datacenter_name");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("datacenter_description");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("is_local_storage");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_2_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_2.trimTable).setValue("columnName",tJDBCInput_2_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_2 = props_tJDBCInput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_2);
        }
    }
globalMap.put("tJDBCInput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_2_MAPPINGS_URL", mappings_url_tJDBCInput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_2 = null;
topology_tJDBCInput_2 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_2 = def_tJDBCInput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_2, topology_tJDBCInput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_2 = def_tJDBCInput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_2 = componentRuntime_tJDBCInput_2.initialize(container_tJDBCInput_2, props_tJDBCInput_2);

if (initVr_tJDBCInput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_2.getMessage());
}

if(componentRuntime_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_2;
	compDriverInitialization_tJDBCInput_2.runAtDriver(container_tJDBCInput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_2 = null;
if(componentRuntime_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_2;
	if (doesNodeBelongToRequest_tJDBCInput_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_2 = sourceOrSink_tJDBCInput_2.validate(container_tJDBCInput_2);
        if (vr_tJDBCInput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_2.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_2 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_2;
        reader_tJDBCInput_2 = source_tJDBCInput_2.createReader(container_tJDBCInput_2);
	    reader_tJDBCInput_2 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_2, container_tJDBCInput_2);

            boolean multi_output_is_allowed_tJDBCInput_2 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_2 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_2.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_2 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_2 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_2 = props_tJDBCInput_2.getSchema(c_tJDBCInput_2, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_2 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_2, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_2 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_2 = reader_tJDBCInput_2.start();

        resourceMap.put("reader_tJDBCInput_2", reader_tJDBCInput_2);

        for (; available_tJDBCInput_2; available_tJDBCInput_2 = reader_tJDBCInput_2.advance()) {
			nb_line_tJDBCInput_2++;

			
			if (multi_output_is_allowed_tJDBCInput_2) {
				
					row3 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_2 = reader_tJDBCInput_2.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_2) {
						row3 = new row3Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_2 == null) {
            factory_tJDBCInput_2 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_2.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_2.setWrapped(factory_tJDBCInput_2.convertToAvro(data_tJDBCInput_2));
                Object columnValue_0_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(0);
                        row3.datacenter_id = (Object) (columnValue_0_tJDBCInput_2);
                Object columnValue_1_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(1);
                        row3.datacenter_name = (String) (columnValue_1_tJDBCInput_2);
                Object columnValue_2_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(2);
                        row3.datacenter_description = (String) (columnValue_2_tJDBCInput_2);
                Object columnValue_3_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(3);
                        row3.is_local_storage = (Boolean) (columnValue_3_tJDBCInput_2);
                Object columnValue_4_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(4);
                        row3.create_date = (java.util.Date) (columnValue_4_tJDBCInput_2);
                Object columnValue_5_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(5);
                        row3.update_date = (java.util.Date) (columnValue_5_tJDBCInput_2);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_2) {
				java.util.Map<String,Object> info_tJDBCInput_2 = e_tJDBCInput_2.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_2 = null;
					if(info_tJDBCInput_2.containsKey("error")){
						errorMessage_tJDBCInput_2 = info_tJDBCInput_2.get("error");
					}else if(info_tJDBCInput_2.containsKey("errorMessage")){
						errorMessage_tJDBCInput_2 = info_tJDBCInput_2.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_2 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_2 = "Row "+ nb_line_tJDBCInput_2 + ": "+errorMessage_tJDBCInput_2;
					System.err.println(errorMessage_tJDBCInput_2);
				
					// If the record is reject, the main line record should put NULL
					row3 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_2 = null;


 



/**
 * [tJDBCInput_2 begin ] stop
 */
	
	/**
	 * [tJDBCInput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 


	tos_count_tJDBCInput_2++;

/**
 * [tJDBCInput_2 main ] stop
 */
	
	/**
	 * [tJDBCInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 



/**
 * [tJDBCInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_2 = false;
		  boolean mainRowRejected_tMap_2 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row3.update_date == null ? TalendDate.compareDate(row3.create_date,context.runTime) <=0 : TalendDate.compareDate(row3.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row3'
							// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

datacenter_configuration = null;


// # Output table : 'datacenter_configuration'
datacenter_configuration_tmp.datacenter_id = row3.datacenter_id;
datacenter_configuration_tmp.datacenter_name = StringHandling.TRIM(row3.datacenter_name) ;
datacenter_configuration_tmp.datacenter_description = StringHandling.TRIM(row3.datacenter_description);
datacenter_configuration_tmp.is_local_storage = row3.is_local_storage ;
datacenter_configuration_tmp.create_date = row3.create_date;
datacenter_configuration_tmp.update_date = row3.update_date;
datacenter_configuration = datacenter_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "datacenter_configuration"
if(datacenter_configuration != null) { 



	
	/**
	 * [tJDBCOutput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"datacenter_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_2 != null) {
            incomingEnforcer_tJDBCOutput_2.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("datacenter_id") != null){
                    incomingEnforcer_tJDBCOutput_2.put("datacenter_id", datacenter_configuration.datacenter_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("datacenter_name") != null){
                    incomingEnforcer_tJDBCOutput_2.put("datacenter_name", datacenter_configuration.datacenter_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("datacenter_description") != null){
                    incomingEnforcer_tJDBCOutput_2.put("datacenter_description", datacenter_configuration.datacenter_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("is_local_storage") != null){
                    incomingEnforcer_tJDBCOutput_2.put("is_local_storage", datacenter_configuration.is_local_storage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_2.put("create_date", datacenter_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_2.put("update_date", datacenter_configuration.update_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_2 = null;
        if (incomingEnforcer_tJDBCOutput_2 != null) {
            data_tJDBCOutput_2 = incomingEnforcer_tJDBCOutput_2.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_2 != null && data_tJDBCOutput_2 != null) {
        	writer_tJDBCOutput_2.write(data_tJDBCOutput_2);
        }
        
        nb_line_tJDBCOutput_2++;

 


	tos_count_tJDBCOutput_2++;

/**
 * [tJDBCOutput_2 main ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_end ] stop
 */

} // End of branch "datacenter_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row3'
	
	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 



/**
 * [tJDBCInput_2 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	
// end of generic


resourceMap.put("finish_tJDBCInput_2", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_2 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_2 = null;
    if (reader_tJDBCInput_2 != null) {
        reader_tJDBCInput_2.close();
        resultMap_tJDBCInput_2 = reader_tJDBCInput_2.getReturnValues();
    }
if(resultMap_tJDBCInput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_2 : resultMap_tJDBCInput_2.entrySet()) {
		switch(entry_tJDBCInput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "ERROR_MESSAGE", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_LINE", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_SUCCESS", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_REJECT", entry_tJDBCInput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_2 = new StringBuilder();
            for (int i_tJDBCInput_2 = 0; i_tJDBCInput_2 < entry_tJDBCInput_2.getKey().length(); i_tJDBCInput_2++) {
                char ch_tJDBCInput_2 = entry_tJDBCInput_2.getKey().charAt(i_tJDBCInput_2);
                if(Character.isUpperCase(ch_tJDBCInput_2) && i_tJDBCInput_2> 0) {
                	studio_key_tJDBCInput_2.append('_');
                }
                studio_key_tJDBCInput_2.append(ch_tJDBCInput_2);
            }
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", studio_key_tJDBCInput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_2.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_2", true);
end_Hash.put("tJDBCInput_2", System.currentTimeMillis());




/**
 * [tJDBCInput_2 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tJDBCOutput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_2", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_2 = null;
    if (writer_tJDBCOutput_2 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_2 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_2.close();
        resultMap_tJDBCOutput_2 = writer_tJDBCOutput_2.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_2), container_tJDBCOutput_2);
    }
if(resultMap_tJDBCOutput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_2 : resultMap_tJDBCOutput_2.entrySet()) {
		switch(entry_tJDBCOutput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "ERROR_MESSAGE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_LINE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_SUCCESS", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_REJECT", entry_tJDBCOutput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_2 = new StringBuilder();
            for (int i_tJDBCOutput_2 = 0; i_tJDBCOutput_2 < entry_tJDBCOutput_2.getKey().length(); i_tJDBCOutput_2++) {
                char ch_tJDBCOutput_2 = entry_tJDBCOutput_2.getKey().charAt(i_tJDBCOutput_2);
                if(Character.isUpperCase(ch_tJDBCOutput_2) && i_tJDBCOutput_2> 0) {
                	studio_key_tJDBCOutput_2.append('_');
                }
                studio_key_tJDBCOutput_2.append(ch_tJDBCOutput_2);
            }
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", studio_key_tJDBCOutput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_2.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"datacenter_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_2", true);
end_Hash.put("tJDBCOutput_2", System.currentTimeMillis());




/**
 * [tJDBCOutput_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tJDBCInput_15Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_2")==null){
    if(resourceMap.get("reader_tJDBCInput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_2")).close();
		} catch (java.io.IOException e_tJDBCInput_2) {
			String errorMessage_tJDBCInput_2 = "failed to release the resource in tJDBCInput_2 :" + e_tJDBCInput_2.getMessage();
			System.err.println(errorMessage_tJDBCInput_2);
		}
	}
}
 



/**
 * [tJDBCInput_2 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_2")==null){
    if(resourceMap.get("writer_tJDBCOutput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_2")).close();
		} catch (java.io.IOException e_tJDBCOutput_2) {
			String errorMessage_tJDBCOutput_2 = "failed to release the resource in tJDBCOutput_2 :" + e_tJDBCOutput_2.getMessage();
			System.err.println(errorMessage_tJDBCOutput_2);
		}
	}
}
 



/**
 * [tJDBCOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class delete_datacentersStruct implements routines.system.IPersistableRow<delete_datacentersStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_name;

				public String getDatacenter_name () {
					return this.datacenter_name;
				}
				
			    public String datacenter_description;

				public String getDatacenter_description () {
					return this.datacenter_description;
				}
				
			    public Boolean is_local_storage;

				public Boolean getIs_local_storage () {
					return this.is_local_storage;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_name="+datacenter_name);
		sb.append(",datacenter_description="+datacenter_description);
		sb.append(",is_local_storage="+String.valueOf(is_local_storage));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_datacentersStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				
			    public String datacenter_name;

				public String getDatacenter_name () {
					return this.datacenter_name;
				}
				
			    public String datacenter_description;

				public String getDatacenter_description () {
					return this.datacenter_description;
				}
				
			    public Boolean is_local_storage;

				public Boolean getIs_local_storage () {
					return this.is_local_storage;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
		sb.append(",datacenter_name="+datacenter_name);
		sb.append(",datacenter_description="+datacenter_description);
		sb.append(",is_local_storage="+String.valueOf(is_local_storage));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_15Struct implements routines.system.IPersistableRow<after_tJDBCInput_15Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				
			    public String datacenter_name;

				public String getDatacenter_name () {
					return this.datacenter_name;
				}
				
			    public String datacenter_description;

				public String getDatacenter_description () {
					return this.datacenter_description;
				}
				
			    public Boolean is_local_storage;

				public Boolean getIs_local_storage () {
					return this.is_local_storage;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.datacenter_name = readString(dis);
					
					this.datacenter_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_local_storage = null;
           				} else {
           			    	this.is_local_storage = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.datacenter_name,dos);
					
					// String
				
						writeString(this.datacenter_description,dos);
					
					// Boolean
				
						if(this.is_local_storage == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_local_storage);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
		sb.append(",datacenter_name="+datacenter_name);
		sb.append(",datacenter_description="+datacenter_description);
		sb.append(",is_local_storage="+String.valueOf(is_local_storage));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_14Process(globalMap);

		row14Struct row14 = new row14Struct();
delete_datacentersStruct delete_datacenters = new delete_datacentersStruct();





	
	/**
	 * [tJDBCOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_14", false);
		start_Hash.put("tJDBCOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_14";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_datacenters");
					}
				
		int tos_count_tJDBCOutput_14 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_14 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_14 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_14 = (String)(restRequest_tJDBCOutput_14 != null ? restRequest_tJDBCOutput_14.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_14 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_14 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_14 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_14 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_14.createRuntimeProperties();
 		                    props_tJDBCOutput_14.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_14.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_14.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_14.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_14.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_14.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_14.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_14.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.tableSelection.setValue("tablename",
 		                    "datacenter_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_14_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_14\",\"di.table.label\":\"datacenter_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_14_1_fisrt sst_tJDBCOutput_14_1_fisrt = new SchemaSettingTool_tJDBCOutput_14_1_fisrt();
 		                    
 		                    props_tJDBCOutput_14.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_14_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_14_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_14\",\"di.table.label\":\"datacenter_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_14_2_fisrt sst_tJDBCOutput_14_2_fisrt = new SchemaSettingTool_tJDBCOutput_14_2_fisrt();
 		                    
 		                    props_tJDBCOutput_14.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_14_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_14_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_14\",\"di.table.label\":\"datacenter_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_14_3_fisrt sst_tJDBCOutput_14_3_fisrt = new SchemaSettingTool_tJDBCOutput_14_3_fisrt();
 		                    
 		                    props_tJDBCOutput_14.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_14_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_14.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_14.additionalColumns.setValue("referenceColumns",
 		                    "datacenter_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_14.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_14 = props_tJDBCOutput_14.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_14 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_14 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_14 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_14.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_14);
        }
    }
globalMap.put("tJDBCOutput_14_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_14);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_14= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_14_MAPPINGS_URL", mappings_url_tJDBCOutput_14);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_14 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_14";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_14 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_14 = null;
topology_tJDBCOutput_14 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_14 = def_tJDBCOutput_14.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_14, topology_tJDBCOutput_14);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_14 = def_tJDBCOutput_14.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_14 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_14.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_14 = componentRuntime_tJDBCOutput_14.initialize(container_tJDBCOutput_14, props_tJDBCOutput_14);

if (initVr_tJDBCOutput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_14.getMessage());
}

if(componentRuntime_tJDBCOutput_14 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_14 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_14;
	compDriverInitialization_tJDBCOutput_14.runAtDriver(container_tJDBCOutput_14);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_14 = null;
if(componentRuntime_tJDBCOutput_14 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_14 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_14;
	if (doesNodeBelongToRequest_tJDBCOutput_14) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_14 = sourceOrSink_tJDBCOutput_14.validate(container_tJDBCOutput_14);
        if (vr_tJDBCOutput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_14.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_14 = null;
    if (sourceOrSink_tJDBCOutput_14 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_14 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_14;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_14 = sink_tJDBCOutput_14.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_14) {
            writeOperation_tJDBCOutput_14.initialize(container_tJDBCOutput_14);
        }
        writer_tJDBCOutput_14 = writeOperation_tJDBCOutput_14.createWriter(container_tJDBCOutput_14);
        if (doesNodeBelongToRequest_tJDBCOutput_14) {
            writer_tJDBCOutput_14.open("tJDBCOutput_14");
        }

        resourceMap.put("writer_tJDBCOutput_14", writer_tJDBCOutput_14);
    } // end of "sourceOrSink_tJDBCOutput_14 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_14 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_14.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_14 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_14 = props_tJDBCOutput_14.getSchema(c_tJDBCOutput_14, false);
    incomingEnforcer_tJDBCOutput_14 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_14);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_14 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_14 = null;


 



/**
 * [tJDBCOutput_14 begin ] stop
 */



	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_datacentersStruct delete_datacenters_tmp = new delete_datacentersStruct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tJDBCInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_15", false);
		start_Hash.put("tJDBCInput_15", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_15";

	
		int tos_count_tJDBCInput_15 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_15 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_15 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_15 = (String)(restRequest_tJDBCInput_15 != null ? restRequest_tJDBCInput_15.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_15 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_15 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_15 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_15 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_15.createRuntimeProperties();
 		                    props_tJDBCInput_15.setValue("sql",
 		                    "SELECT history_id, \n		datacenter_id, \n		upper(cast(datacenter_id as char(36))) as datacenter_join_id,\n		datacenter_n"
+"ame, \n		datacenter_description, \n       	is_local_storage, \n		create_date, \n		update_date\nFROM  v4_5_latest_configu"
+"ration_datacenters");
 		                    
 		                    props_tJDBCInput_15.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_15.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_15.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_15.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_15.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_15_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_datacenters\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_local_storage\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"is_local_storage\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_local_storage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_15\",\"di.table.label\":\"v4_5_latest_configuration_datacenters\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_15_1_fisrt sst_tJDBCInput_15_1_fisrt = new SchemaSettingTool_tJDBCInput_15_1_fisrt();
 		                    
 		                    props_tJDBCInput_15.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_15_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_15.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_datacenters");
 		                    
 		                    java.util.List<Object> tJDBCInput_15_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_15.trimTable).setValue("trim",tJDBCInput_15_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_15_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_15_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("datacenter_id");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("datacenter_name");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("datacenter_description");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("is_local_storage");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_15.trimTable).setValue("columnName",tJDBCInput_15_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_15.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_15 = props_tJDBCInput_15.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_15 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_15 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_15 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_15.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_15);
        }
    }
globalMap.put("tJDBCInput_15_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_15);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_15= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_15_MAPPINGS_URL", mappings_url_tJDBCInput_15);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_15 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_15";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_15 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_15 = null;
topology_tJDBCInput_15 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_15 = def_tJDBCInput_15.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_15, topology_tJDBCInput_15);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_15 = def_tJDBCInput_15.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_15 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_15.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_15 = componentRuntime_tJDBCInput_15.initialize(container_tJDBCInput_15, props_tJDBCInput_15);

if (initVr_tJDBCInput_15.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_15.getMessage());
}

if(componentRuntime_tJDBCInput_15 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_15 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_15;
	compDriverInitialization_tJDBCInput_15.runAtDriver(container_tJDBCInput_15);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_15 = null;
if(componentRuntime_tJDBCInput_15 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_15 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_15;
	if (doesNodeBelongToRequest_tJDBCInput_15) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_15 = sourceOrSink_tJDBCInput_15.validate(container_tJDBCInput_15);
        if (vr_tJDBCInput_15.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_15.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_15 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_15 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_15;
        reader_tJDBCInput_15 = source_tJDBCInput_15.createReader(container_tJDBCInput_15);
	    reader_tJDBCInput_15 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_15, container_tJDBCInput_15);

            boolean multi_output_is_allowed_tJDBCInput_15 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_15 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_15.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_15 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_15 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_15 = props_tJDBCInput_15.getSchema(c_tJDBCInput_15, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_15 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_15, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_15 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_15 = reader_tJDBCInput_15.start();

        resourceMap.put("reader_tJDBCInput_15", reader_tJDBCInput_15);

        for (; available_tJDBCInput_15; available_tJDBCInput_15 = reader_tJDBCInput_15.advance()) {
			nb_line_tJDBCInput_15++;

			
			if (multi_output_is_allowed_tJDBCInput_15) {
				
					row14 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_15 = reader_tJDBCInput_15.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_15) {
						row14 = new row14Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_15 == null) {
            factory_tJDBCInput_15 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_15.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_15.setWrapped(factory_tJDBCInput_15.convertToAvro(data_tJDBCInput_15));
                Object columnValue_0_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(0);
                        row14.history_id = (Integer) (columnValue_0_tJDBCInput_15);
                Object columnValue_1_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(1);
                        row14.datacenter_id = (Object) (columnValue_1_tJDBCInput_15);
                Object columnValue_2_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(2);
                        row14.datacenter_join_id = (String) (columnValue_2_tJDBCInput_15);
                Object columnValue_3_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(3);
                        row14.datacenter_name = (String) (columnValue_3_tJDBCInput_15);
                Object columnValue_4_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(4);
                        row14.datacenter_description = (String) (columnValue_4_tJDBCInput_15);
                Object columnValue_5_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(5);
                        row14.is_local_storage = (Boolean) (columnValue_5_tJDBCInput_15);
                Object columnValue_6_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(6);
                        row14.create_date = (java.util.Date) (columnValue_6_tJDBCInput_15);
                Object columnValue_7_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(7);
                        row14.update_date = (java.util.Date) (columnValue_7_tJDBCInput_15);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_15) {
				java.util.Map<String,Object> info_tJDBCInput_15 = e_tJDBCInput_15.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_15 = null;
					if(info_tJDBCInput_15.containsKey("error")){
						errorMessage_tJDBCInput_15 = info_tJDBCInput_15.get("error");
					}else if(info_tJDBCInput_15.containsKey("errorMessage")){
						errorMessage_tJDBCInput_15 = info_tJDBCInput_15.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_15 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_15 = "Row "+ nb_line_tJDBCInput_15 + ": "+errorMessage_tJDBCInput_15;
					System.err.println(errorMessage_tJDBCInput_15);
				
					// If the record is reject, the main line record should put NULL
					row14 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_15 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_15 = null;


 



/**
 * [tJDBCInput_15 begin ] stop
 */
	
	/**
	 * [tJDBCInput_15 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	


 


	tos_count_tJDBCInput_15++;

/**
 * [tJDBCInput_15 main ] stop
 */
	
	/**
	 * [tJDBCInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	


 



/**
 * [tJDBCInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_14 = false;
		  boolean mainRowRejected_tMap_14 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_14) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_14 = false;
								
                        		    		    row15HashKey.datacenter_join_id = row14.datacenter_join_id ;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row15.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_14 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row15 != null && tHash_Lookup_row15.getCount(row15HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row15' and it contains more one result from keys :  row15.datacenter_join_id = '" + row15HashKey.datacenter_join_id + "'");
								} // G 071
							

							row15Struct row15 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								 
							
							
								if (tHash_Lookup_row15 !=null && tHash_Lookup_row15.hasNext()) { // G 099
								
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							
							
								} // G 099
							
							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
        // ###############################
        // # Output tables

delete_datacenters = null;

if(!rejectedInnerJoin_tMap_14 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_datacenters'
// # Filter conditions 
if( rejectedInnerJoin_tMap_14 ) {
delete_datacenters_tmp.datacenter_id = row14.datacenter_id;
delete_datacenters_tmp.datacenter_name = row14.datacenter_name;
delete_datacenters_tmp.datacenter_description = row14.datacenter_description;
delete_datacenters_tmp.is_local_storage = row14.is_local_storage;
delete_datacenters_tmp.create_date = row14.create_date;
delete_datacenters_tmp.update_date = context.runTime;
delete_datacenters_tmp.delete_date = context.runTime;
delete_datacenters = delete_datacenters_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";

	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "delete_datacenters"
if(delete_datacenters != null) { 



	
	/**
	 * [tJDBCOutput_14 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_datacenters"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_14 != null) {
            incomingEnforcer_tJDBCOutput_14.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("datacenter_id") != null){
                    incomingEnforcer_tJDBCOutput_14.put("datacenter_id", delete_datacenters.datacenter_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("datacenter_name") != null){
                    incomingEnforcer_tJDBCOutput_14.put("datacenter_name", delete_datacenters.datacenter_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("datacenter_description") != null){
                    incomingEnforcer_tJDBCOutput_14.put("datacenter_description", delete_datacenters.datacenter_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("is_local_storage") != null){
                    incomingEnforcer_tJDBCOutput_14.put("is_local_storage", delete_datacenters.is_local_storage);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_14.put("create_date", delete_datacenters.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_14.put("update_date", delete_datacenters.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_14.put("delete_date", delete_datacenters.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_14 = null;
        if (incomingEnforcer_tJDBCOutput_14 != null) {
            data_tJDBCOutput_14 = incomingEnforcer_tJDBCOutput_14.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_14 != null && data_tJDBCOutput_14 != null) {
        	writer_tJDBCOutput_14.write(data_tJDBCOutput_14);
        }
        
        nb_line_tJDBCOutput_14++;

 


	tos_count_tJDBCOutput_14++;

/**
 * [tJDBCOutput_14 main ] stop
 */
	
	/**
	 * [tJDBCOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	


 



/**
 * [tJDBCOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	


 



/**
 * [tJDBCOutput_14 process_data_end ] stop
 */

} // End of branch "delete_datacenters"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";

	

 



/**
 * [tMap_14 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	


 



/**
 * [tJDBCInput_15 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_15 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	
// end of generic


resourceMap.put("finish_tJDBCInput_15", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_15 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_15 = null;
    if (reader_tJDBCInput_15 != null) {
        reader_tJDBCInput_15.close();
        resultMap_tJDBCInput_15 = reader_tJDBCInput_15.getReturnValues();
    }
if(resultMap_tJDBCInput_15!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_15 : resultMap_tJDBCInput_15.entrySet()) {
		switch(entry_tJDBCInput_15.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "ERROR_MESSAGE", entry_tJDBCInput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "NB_LINE", entry_tJDBCInput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "NB_SUCCESS", entry_tJDBCInput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "NB_REJECT", entry_tJDBCInput_15.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_15 = new StringBuilder();
            for (int i_tJDBCInput_15 = 0; i_tJDBCInput_15 < entry_tJDBCInput_15.getKey().length(); i_tJDBCInput_15++) {
                char ch_tJDBCInput_15 = entry_tJDBCInput_15.getKey().charAt(i_tJDBCInput_15);
                if(Character.isUpperCase(ch_tJDBCInput_15) && i_tJDBCInput_15> 0) {
                	studio_key_tJDBCInput_15.append('_');
                }
                studio_key_tJDBCInput_15.append(ch_tJDBCInput_15);
            }
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", studio_key_tJDBCInput_15.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_15.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_15", true);
end_Hash.put("tJDBCInput_15", System.currentTimeMillis());




/**
 * [tJDBCInput_15 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */

	
	/**
	 * [tJDBCOutput_14 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_14", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_14 = null;
    if (writer_tJDBCOutput_14 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_14 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_14.close();
        resultMap_tJDBCOutput_14 = writer_tJDBCOutput_14.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_14), container_tJDBCOutput_14);
    }
if(resultMap_tJDBCOutput_14!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_14 : resultMap_tJDBCOutput_14.entrySet()) {
		switch(entry_tJDBCOutput_14.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "ERROR_MESSAGE", entry_tJDBCOutput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "NB_LINE", entry_tJDBCOutput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "NB_SUCCESS", entry_tJDBCOutput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "NB_REJECT", entry_tJDBCOutput_14.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_14 = new StringBuilder();
            for (int i_tJDBCOutput_14 = 0; i_tJDBCOutput_14 < entry_tJDBCOutput_14.getKey().length(); i_tJDBCOutput_14++) {
                char ch_tJDBCOutput_14 = entry_tJDBCOutput_14.getKey().charAt(i_tJDBCOutput_14);
                if(Character.isUpperCase(ch_tJDBCOutput_14) && i_tJDBCOutput_14> 0) {
                	studio_key_tJDBCOutput_14.append('_');
                }
                studio_key_tJDBCOutput_14.append(ch_tJDBCOutput_14);
            }
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", studio_key_tJDBCOutput_14.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_14.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_datacenters");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_14", true);
end_Hash.put("tJDBCOutput_14", System.currentTimeMillis());




/**
 * [tJDBCOutput_14 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_15:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk10", 0, "ok");
								} 
							
							tJDBCInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_14"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_15 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_15")==null){
    if(resourceMap.get("reader_tJDBCInput_15")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_15")).close();
		} catch (java.io.IOException e_tJDBCInput_15) {
			String errorMessage_tJDBCInput_15 = "failed to release the resource in tJDBCInput_15 :" + e_tJDBCInput_15.getMessage();
			System.err.println(errorMessage_tJDBCInput_15);
		}
	}
}
 



/**
 * [tJDBCInput_15 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";

	

 



/**
 * [tMap_14 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_14")==null){
    if(resourceMap.get("writer_tJDBCOutput_14")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_14")).close();
		} catch (java.io.IOException e_tJDBCOutput_14) {
			String errorMessage_tJDBCOutput_14 = "failed to release the resource in tJDBCOutput_14 :" + e_tJDBCOutput_14.getMessage();
			System.err.println(errorMessage_tJDBCOutput_14);
		}
	}
}
 



/**
 * [tJDBCOutput_14 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class cluster_configurationStruct implements routines.system.IPersistableRow<cluster_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_name;

				public String getCluster_name () {
					return this.cluster_name;
				}
				
			    public String cluster_description;

				public String getCluster_description () {
					return this.cluster_description;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String cpu_name;

				public String getCpu_name () {
					return this.cpu_name;
				}
				
			    public Boolean count_threads_as_cores;

				public Boolean getCount_threads_as_cores () {
					return this.count_threads_as_cores;
				}
				
			    public String compatibility_version;

				public String getCompatibility_version () {
					return this.compatibility_version;
				}
				
			    public Integer datacenter_configuration_version;

				public Integer getDatacenter_configuration_version () {
					return this.datacenter_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_name="+cluster_name);
		sb.append(",cluster_description="+cluster_description);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",cpu_name="+cpu_name);
		sb.append(",count_threads_as_cores="+String.valueOf(count_threads_as_cores));
		sb.append(",compatibility_version="+compatibility_version);
		sb.append(",datacenter_configuration_version="+String.valueOf(datacenter_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(cluster_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_name;

				public String getCluster_name () {
					return this.cluster_name;
				}
				
			    public String cluster_description;

				public String getCluster_description () {
					return this.cluster_description;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				
			    public String cpu_name;

				public String getCpu_name () {
					return this.cpu_name;
				}
				
			    public Boolean count_threads_as_cores;

				public Boolean getCount_threads_as_cores () {
					return this.count_threads_as_cores;
				}
				
			    public String compatibility_version;

				public String getCompatibility_version () {
					return this.compatibility_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_name="+cluster_name);
		sb.append(",cluster_description="+cluster_description);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
		sb.append(",cpu_name="+cpu_name);
		sb.append(",count_threads_as_cores="+String.valueOf(count_threads_as_cores));
		sb.append(",compatibility_version="+compatibility_version);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_1Struct implements routines.system.IPersistableRow<after_tJDBCInput_1Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_name;

				public String getCluster_name () {
					return this.cluster_name;
				}
				
			    public String cluster_description;

				public String getCluster_description () {
					return this.cluster_description;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				
			    public String cpu_name;

				public String getCpu_name () {
					return this.cpu_name;
				}
				
			    public Boolean count_threads_as_cores;

				public Boolean getCount_threads_as_cores () {
					return this.count_threads_as_cores;
				}
				
			    public String compatibility_version;

				public String getCompatibility_version () {
					return this.compatibility_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_name="+cluster_name);
		sb.append(",cluster_description="+cluster_description);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
		sb.append(",cpu_name="+cpu_name);
		sb.append(",count_threads_as_cores="+String.valueOf(count_threads_as_cores));
		sb.append(",compatibility_version="+compatibility_version);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_39Process(globalMap);

		row1Struct row1 = new row1Struct();
cluster_configurationStruct cluster_configuration = new cluster_configurationStruct();





	
	/**
	 * [tJDBCOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_1", false);
		start_Hash.put("tJDBCOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"cluster_configuration");
					}
				
		int tos_count_tJDBCOutput_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_1 = (String)(restRequest_tJDBCOutput_1 != null ? restRequest_tJDBCOutput_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_1 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_1 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_1 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_1.createRuntimeProperties();
 		                    props_tJDBCOutput_1.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_1.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_1.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_1.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_1.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_1.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_1.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.tableSelection.setValue("tablename",
 		                    "cluster_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":\"string\",\"default\":\"\\\"'2.2'::character varying\\\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.default\":\"\\\"'2.2'::character varying\\\"\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"datacenter_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_1\",\"di.table.label\":\"cluster_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_1_1_fisrt sst_tJDBCOutput_1_1_fisrt = new SchemaSettingTool_tJDBCOutput_1_1_fisrt();
 		                    
 		                    props_tJDBCOutput_1.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_1_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_1_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":\"string\",\"default\":\"\\\"'2.2'::character varying\\\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.default\":\"\\\"'2.2'::character varying\\\"\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"datacenter_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_1\",\"di.table.label\":\"cluster_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_1_2_fisrt sst_tJDBCOutput_1_2_fisrt = new SchemaSettingTool_tJDBCOutput_1_2_fisrt();
 		                    
 		                    props_tJDBCOutput_1.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_1_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_1_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":\"string\",\"default\":\"\\\"'2.2'::character varying\\\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.default\":\"\\\"'2.2'::character varying\\\"\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"datacenter_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_1\",\"di.table.label\":\"cluster_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_1_3_fisrt sst_tJDBCOutput_1_3_fisrt = new SchemaSettingTool_tJDBCOutput_1_3_fisrt();
 		                    
 		                    props_tJDBCOutput_1.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_1_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_1.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_1.additionalColumns.setValue("referenceColumns",
 		                    "cluster_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_1.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_1 = props_tJDBCOutput_1.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_1.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_1);
        }
    }
globalMap.put("tJDBCOutput_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_1_MAPPINGS_URL", mappings_url_tJDBCOutput_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_1 = null;
topology_tJDBCOutput_1 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_1 = def_tJDBCOutput_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_1, topology_tJDBCOutput_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_1 = def_tJDBCOutput_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_1 = componentRuntime_tJDBCOutput_1.initialize(container_tJDBCOutput_1, props_tJDBCOutput_1);

if (initVr_tJDBCOutput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_1.getMessage());
}

if(componentRuntime_tJDBCOutput_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_1;
	compDriverInitialization_tJDBCOutput_1.runAtDriver(container_tJDBCOutput_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_1 = null;
if(componentRuntime_tJDBCOutput_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_1;
	if (doesNodeBelongToRequest_tJDBCOutput_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_1 = sourceOrSink_tJDBCOutput_1.validate(container_tJDBCOutput_1);
        if (vr_tJDBCOutput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_1.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_1 = null;
    if (sourceOrSink_tJDBCOutput_1 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_1 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_1;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_1 = sink_tJDBCOutput_1.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_1) {
            writeOperation_tJDBCOutput_1.initialize(container_tJDBCOutput_1);
        }
        writer_tJDBCOutput_1 = writeOperation_tJDBCOutput_1.createWriter(container_tJDBCOutput_1);
        if (doesNodeBelongToRequest_tJDBCOutput_1) {
            writer_tJDBCOutput_1.open("tJDBCOutput_1");
        }

        resourceMap.put("writer_tJDBCOutput_1", writer_tJDBCOutput_1);
    } // end of "sourceOrSink_tJDBCOutput_1 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_1 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_1.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_1 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_1 = props_tJDBCOutput_1.getSchema(c_tJDBCOutput_1, false);
    incomingEnforcer_tJDBCOutput_1 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_1);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_1 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_1 = null;


 



/**
 * [tJDBCOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct> tHash_Lookup_row35 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct>) 
					globalMap.get( "tHash_Lookup_row35" ))
					;					
					
	

row35Struct row35HashKey = new row35Struct();
row35Struct row35Default = new row35Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
cluster_configurationStruct cluster_configuration_tmp = new cluster_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tJDBCInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_1", false);
		start_Hash.put("tJDBCInput_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_1";

	
		int tos_count_tJDBCInput_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_1 = (String)(restRequest_tJDBCInput_1 != null ? restRequest_tJDBCInput_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_1 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_1 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_1 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_1.createRuntimeProperties();
 		                    props_tJDBCInput_1.setValue("sql",
 		                    "SELECT \n  cluster_id, \n  cluster_name, \n  cluster_description, \n  datacenter_id, \n  upper(cast(datacenter_id as ch"
+"ar(36))) as datacenter_join_id,\n  cpu_name,\n  count_threads_as_cores,\n  compatibility_version, \n  create_date, \n  up"
+"date_date\nFROM dwh_cluster_configuration_history_view");
 		                    
 		                    props_tJDBCInput_1.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_1.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_1.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_1.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_cluster_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"38\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_1\",\"di.table.label\":\"dwh_cluster_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_1_1_fisrt sst_tJDBCInput_1_1_fisrt = new SchemaSettingTool_tJDBCInput_1_1_fisrt();
 		                    
 		                    props_tJDBCInput_1.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_1_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_1.tableSelection.setValue("tablename",
 		                    "dwh_cluster_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_1_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_1.trimTable).setValue("trim",tJDBCInput_1_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_1_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_1_trimTable_columnName.add("cluster_id");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("cluster_name");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("cluster_description");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("datacenter_id");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("cpu_name");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("count_threads_as_cores");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("compatibility_version");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_1.trimTable).setValue("columnName",tJDBCInput_1_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_1.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_1 = props_tJDBCInput_1.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_1.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_1);
        }
    }
globalMap.put("tJDBCInput_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_1_MAPPINGS_URL", mappings_url_tJDBCInput_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_1 = null;
topology_tJDBCInput_1 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_1 = def_tJDBCInput_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_1, topology_tJDBCInput_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_1 = def_tJDBCInput_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_1 = componentRuntime_tJDBCInput_1.initialize(container_tJDBCInput_1, props_tJDBCInput_1);

if (initVr_tJDBCInput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_1.getMessage());
}

if(componentRuntime_tJDBCInput_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_1;
	compDriverInitialization_tJDBCInput_1.runAtDriver(container_tJDBCInput_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_1 = null;
if(componentRuntime_tJDBCInput_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_1;
	if (doesNodeBelongToRequest_tJDBCInput_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_1 = sourceOrSink_tJDBCInput_1.validate(container_tJDBCInput_1);
        if (vr_tJDBCInput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_1.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_1 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_1 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_1;
        reader_tJDBCInput_1 = source_tJDBCInput_1.createReader(container_tJDBCInput_1);
	    reader_tJDBCInput_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_1, container_tJDBCInput_1);

            boolean multi_output_is_allowed_tJDBCInput_1 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_1 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_1.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_1 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_1 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_1 = props_tJDBCInput_1.getSchema(c_tJDBCInput_1, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_1 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_1, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_1 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_1 = reader_tJDBCInput_1.start();

        resourceMap.put("reader_tJDBCInput_1", reader_tJDBCInput_1);

        for (; available_tJDBCInput_1; available_tJDBCInput_1 = reader_tJDBCInput_1.advance()) {
			nb_line_tJDBCInput_1++;

			
			if (multi_output_is_allowed_tJDBCInput_1) {
				
					row1 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_1 = reader_tJDBCInput_1.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_1) {
						row1 = new row1Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_1 == null) {
            factory_tJDBCInput_1 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_1.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_1.setWrapped(factory_tJDBCInput_1.convertToAvro(data_tJDBCInput_1));
                Object columnValue_0_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(0);
                        row1.cluster_id = (Object) (columnValue_0_tJDBCInput_1);
                Object columnValue_1_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(1);
                        row1.cluster_name = (String) (columnValue_1_tJDBCInput_1);
                Object columnValue_2_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(2);
                        row1.cluster_description = (String) (columnValue_2_tJDBCInput_1);
                Object columnValue_3_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(3);
                        row1.datacenter_id = (Object) (columnValue_3_tJDBCInput_1);
                Object columnValue_4_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(4);
                        row1.datacenter_join_id = (String) (columnValue_4_tJDBCInput_1);
                Object columnValue_5_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(5);
                        row1.cpu_name = (String) (columnValue_5_tJDBCInput_1);
                Object columnValue_6_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(6);
                        row1.count_threads_as_cores = (Boolean) (columnValue_6_tJDBCInput_1);
                Object columnValue_7_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(7);
                        row1.compatibility_version = (String) (columnValue_7_tJDBCInput_1);
                Object columnValue_8_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(8);
                        row1.create_date = (java.util.Date) (columnValue_8_tJDBCInput_1);
                Object columnValue_9_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(9);
                        row1.update_date = (java.util.Date) (columnValue_9_tJDBCInput_1);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_1) {
				java.util.Map<String,Object> info_tJDBCInput_1 = e_tJDBCInput_1.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_1 = null;
					if(info_tJDBCInput_1.containsKey("error")){
						errorMessage_tJDBCInput_1 = info_tJDBCInput_1.get("error");
					}else if(info_tJDBCInput_1.containsKey("errorMessage")){
						errorMessage_tJDBCInput_1 = info_tJDBCInput_1.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_1 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_1 = "Row "+ nb_line_tJDBCInput_1 + ": "+errorMessage_tJDBCInput_1;
					System.err.println(errorMessage_tJDBCInput_1);
				
					// If the record is reject, the main line record should put NULL
					row1 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_1 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_1 = null;


 



/**
 * [tJDBCInput_1 begin ] stop
 */
	
	/**
	 * [tJDBCInput_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	


 


	tos_count_tJDBCInput_1++;

/**
 * [tJDBCInput_1 main ] stop
 */
	
	/**
	 * [tJDBCInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	


 



/**
 * [tJDBCInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_1 = false;
		  boolean mainRowRejected_tMap_1 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row1.update_date == null ? TalendDate.compareDate(row1.create_date,context.runTime) <=0 : TalendDate.compareDate(row1.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row1'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row35" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow35 = false;
       		  	    	
       		  	    	
 							row35Struct row35ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row35HashKey.datacenter_join_id = row1.datacenter_join_id ;
                        		    		

								
		                        	row35HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row35.lookup( row35HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row35 != null && tHash_Lookup_row35.getCount(row35HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row35' and it contains more one result from keys :  row35.datacenter_join_id = '" + row35HashKey.datacenter_join_id + "'");
								} // G 071
							

							row35Struct row35 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row35Struct fromLookup_row35 = null;
							row35 = row35Default;
										 
							
								 
							
							
								if (tHash_Lookup_row35 !=null && tHash_Lookup_row35.hasNext()) { // G 099
								
							
								
								fromLookup_row35 = tHash_Lookup_row35.next();

							
							
								} // G 099
							
							

							if(fromLookup_row35 != null) {
								row35 = fromLookup_row35;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

cluster_configuration = null;


// # Output table : 'cluster_configuration'
cluster_configuration_tmp.cluster_id = row1.cluster_id;
cluster_configuration_tmp.cluster_name = StringHandling.TRIM(row1.cluster_name);
cluster_configuration_tmp.cluster_description = StringHandling.TRIM(row1.cluster_description);
cluster_configuration_tmp.datacenter_id = row1.datacenter_id;
cluster_configuration_tmp.cpu_name = StringHandling.TRIM(row1.cpu_name);
cluster_configuration_tmp.count_threads_as_cores = row1.count_threads_as_cores ;
cluster_configuration_tmp.compatibility_version = StringHandling.TRIM(row1.compatibility_version);
cluster_configuration_tmp.datacenter_configuration_version = row35.history_id ;
cluster_configuration_tmp.create_date = row1.create_date;
cluster_configuration_tmp.update_date = row1.update_date;
cluster_configuration_tmp.delete_date = null;
cluster_configuration = cluster_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "cluster_configuration"
if(cluster_configuration != null) { 



	
	/**
	 * [tJDBCOutput_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"cluster_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_1 != null) {
            incomingEnforcer_tJDBCOutput_1.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("cluster_id") != null){
                    incomingEnforcer_tJDBCOutput_1.put("cluster_id", cluster_configuration.cluster_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("cluster_name") != null){
                    incomingEnforcer_tJDBCOutput_1.put("cluster_name", cluster_configuration.cluster_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("cluster_description") != null){
                    incomingEnforcer_tJDBCOutput_1.put("cluster_description", cluster_configuration.cluster_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("datacenter_id") != null){
                    incomingEnforcer_tJDBCOutput_1.put("datacenter_id", cluster_configuration.datacenter_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("cpu_name") != null){
                    incomingEnforcer_tJDBCOutput_1.put("cpu_name", cluster_configuration.cpu_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("count_threads_as_cores") != null){
                    incomingEnforcer_tJDBCOutput_1.put("count_threads_as_cores", cluster_configuration.count_threads_as_cores);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("compatibility_version") != null){
                    incomingEnforcer_tJDBCOutput_1.put("compatibility_version", cluster_configuration.compatibility_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("datacenter_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_1.put("datacenter_configuration_version", cluster_configuration.datacenter_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_1.put("create_date", cluster_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_1.put("update_date", cluster_configuration.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1 != null && incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_1.put("delete_date", cluster_configuration.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_1 = null;
        if (incomingEnforcer_tJDBCOutput_1 != null) {
            data_tJDBCOutput_1 = incomingEnforcer_tJDBCOutput_1.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_1 != null && data_tJDBCOutput_1 != null) {
        	writer_tJDBCOutput_1.write(data_tJDBCOutput_1);
        }
        
        nb_line_tJDBCOutput_1++;

 


	tos_count_tJDBCOutput_1++;

/**
 * [tJDBCOutput_1 main ] stop
 */
	
	/**
	 * [tJDBCOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	


 



/**
 * [tJDBCOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	


 



/**
 * [tJDBCOutput_1 process_data_end ] stop
 */

} // End of branch "cluster_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row1'
	
	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	


 



/**
 * [tJDBCInput_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	
// end of generic


resourceMap.put("finish_tJDBCInput_1", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_1 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_1 = null;
    if (reader_tJDBCInput_1 != null) {
        reader_tJDBCInput_1.close();
        resultMap_tJDBCInput_1 = reader_tJDBCInput_1.getReturnValues();
    }
if(resultMap_tJDBCInput_1!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_1 : resultMap_tJDBCInput_1.entrySet()) {
		switch(entry_tJDBCInput_1.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "ERROR_MESSAGE", entry_tJDBCInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "NB_LINE", entry_tJDBCInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "NB_SUCCESS", entry_tJDBCInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "NB_REJECT", entry_tJDBCInput_1.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_1 = new StringBuilder();
            for (int i_tJDBCInput_1 = 0; i_tJDBCInput_1 < entry_tJDBCInput_1.getKey().length(); i_tJDBCInput_1++) {
                char ch_tJDBCInput_1 = entry_tJDBCInput_1.getKey().charAt(i_tJDBCInput_1);
                if(Character.isUpperCase(ch_tJDBCInput_1) && i_tJDBCInput_1> 0) {
                	studio_key_tJDBCInput_1.append('_');
                }
                studio_key_tJDBCInput_1.append(ch_tJDBCInput_1);
            }
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", studio_key_tJDBCInput_1.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_1.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_1", true);
end_Hash.put("tJDBCInput_1", System.currentTimeMillis());




/**
 * [tJDBCInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row35 != null) {
						tHash_Lookup_row35.endGet();
					}
					globalMap.remove( "tHash_Lookup_row35" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tJDBCOutput_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_1", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_1 = null;
    if (writer_tJDBCOutput_1 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_1 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_1.close();
        resultMap_tJDBCOutput_1 = writer_tJDBCOutput_1.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_1), container_tJDBCOutput_1);
    }
if(resultMap_tJDBCOutput_1!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_1 : resultMap_tJDBCOutput_1.entrySet()) {
		switch(entry_tJDBCOutput_1.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "ERROR_MESSAGE", entry_tJDBCOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "NB_LINE", entry_tJDBCOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "NB_SUCCESS", entry_tJDBCOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "NB_REJECT", entry_tJDBCOutput_1.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_1 = new StringBuilder();
            for (int i_tJDBCOutput_1 = 0; i_tJDBCOutput_1 < entry_tJDBCOutput_1.getKey().length(); i_tJDBCOutput_1++) {
                char ch_tJDBCOutput_1 = entry_tJDBCOutput_1.getKey().charAt(i_tJDBCOutput_1);
                if(Character.isUpperCase(ch_tJDBCOutput_1) && i_tJDBCOutput_1> 0) {
                	studio_key_tJDBCOutput_1.append('_');
                }
                studio_key_tJDBCOutput_1.append(ch_tJDBCOutput_1);
            }
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", studio_key_tJDBCOutput_1.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_1.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"cluster_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_1", true);
end_Hash.put("tJDBCOutput_1", System.currentTimeMillis());




/**
 * [tJDBCOutput_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tJDBCInput_18Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row35"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_1")==null){
    if(resourceMap.get("reader_tJDBCInput_1")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_1")).close();
		} catch (java.io.IOException e_tJDBCInput_1) {
			String errorMessage_tJDBCInput_1 = "failed to release the resource in tJDBCInput_1 :" + e_tJDBCInput_1.getMessage();
			System.err.println(errorMessage_tJDBCInput_1);
		}
	}
}
 



/**
 * [tJDBCInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_1")==null){
    if(resourceMap.get("writer_tJDBCOutput_1")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_1")).close();
		} catch (java.io.IOException e_tJDBCOutput_1) {
			String errorMessage_tJDBCOutput_1 = "failed to release the resource in tJDBCOutput_1 :" + e_tJDBCOutput_1.getMessage();
			System.err.println(errorMessage_tJDBCOutput_1);
		}
	}
}
 



/**
 * [tJDBCOutput_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class delete_clusterStruct implements routines.system.IPersistableRow<delete_clusterStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_name;

				public String getCluster_name () {
					return this.cluster_name;
				}
				
			    public String cluster_description;

				public String getCluster_description () {
					return this.cluster_description;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String cpu_name;

				public String getCpu_name () {
					return this.cpu_name;
				}
				
			    public Boolean count_threads_as_cores;

				public Boolean getCount_threads_as_cores () {
					return this.count_threads_as_cores;
				}
				
			    public String compatibility_version;

				public String getCompatibility_version () {
					return this.compatibility_version;
				}
				
			    public Integer datacenter_configuration_version;

				public Integer getDatacenter_configuration_version () {
					return this.datacenter_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_name="+cluster_name);
		sb.append(",cluster_description="+cluster_description);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",cpu_name="+cpu_name);
		sb.append(",count_threads_as_cores="+String.valueOf(count_threads_as_cores));
		sb.append(",compatibility_version="+compatibility_version);
		sb.append(",datacenter_configuration_version="+String.valueOf(datacenter_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_clusterStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				
			    public String cluster_name;

				public String getCluster_name () {
					return this.cluster_name;
				}
				
			    public String cluster_description;

				public String getCluster_description () {
					return this.cluster_description;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String cpu_name;

				public String getCpu_name () {
					return this.cpu_name;
				}
				
			    public Boolean count_threads_as_cores;

				public Boolean getCount_threads_as_cores () {
					return this.count_threads_as_cores;
				}
				
			    public String compatibility_version;

				public String getCompatibility_version () {
					return this.compatibility_version;
				}
				
			    public Integer datacenter_configuration_version;

				public Integer getDatacenter_configuration_version () {
					return this.datacenter_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_join_id="+cluster_join_id);
		sb.append(",cluster_name="+cluster_name);
		sb.append(",cluster_description="+cluster_description);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",cpu_name="+cpu_name);
		sb.append(",count_threads_as_cores="+String.valueOf(count_threads_as_cores));
		sb.append(",compatibility_version="+compatibility_version);
		sb.append(",datacenter_configuration_version="+String.valueOf(datacenter_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_18Struct implements routines.system.IPersistableRow<after_tJDBCInput_18Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				
			    public String cluster_name;

				public String getCluster_name () {
					return this.cluster_name;
				}
				
			    public String cluster_description;

				public String getCluster_description () {
					return this.cluster_description;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String cpu_name;

				public String getCpu_name () {
					return this.cpu_name;
				}
				
			    public Boolean count_threads_as_cores;

				public Boolean getCount_threads_as_cores () {
					return this.count_threads_as_cores;
				}
				
			    public String compatibility_version;

				public String getCompatibility_version () {
					return this.compatibility_version;
				}
				
			    public Integer datacenter_configuration_version;

				public Integer getDatacenter_configuration_version () {
					return this.datacenter_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
					this.cluster_name = readString(dis);
					
					this.cluster_description = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.cpu_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.count_threads_as_cores = null;
           				} else {
           			    	this.count_threads_as_cores = dis.readBoolean();
           				}
					
					this.compatibility_version = readString(dis);
					
						this.datacenter_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// String
				
						writeString(this.cluster_name,dos);
					
					// String
				
						writeString(this.cluster_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.cpu_name,dos);
					
					// Boolean
				
						if(this.count_threads_as_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.count_threads_as_cores);
		            	}
					
					// String
				
						writeString(this.compatibility_version,dos);
					
					// Integer
				
						writeInteger(this.datacenter_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_join_id="+cluster_join_id);
		sb.append(",cluster_name="+cluster_name);
		sb.append(",cluster_description="+cluster_description);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",cpu_name="+cpu_name);
		sb.append(",count_threads_as_cores="+String.valueOf(count_threads_as_cores));
		sb.append(",compatibility_version="+compatibility_version);
		sb.append(",datacenter_configuration_version="+String.valueOf(datacenter_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_17Process(globalMap);

		row17Struct row17 = new row17Struct();
delete_clusterStruct delete_cluster = new delete_clusterStruct();





	
	/**
	 * [tJDBCOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_15", false);
		start_Hash.put("tJDBCOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_15";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_cluster");
					}
				
		int tos_count_tJDBCOutput_15 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_15 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_15 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_15 = (String)(restRequest_tJDBCOutput_15 != null ? restRequest_tJDBCOutput_15.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_15 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_15 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_15 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_15 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_15.createRuntimeProperties();
 		                    props_tJDBCOutput_15.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_15.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_15.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_15.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_15.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_15.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_15.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_15.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_15.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_15.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_15.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_15.tableSelection.setValue("tablename",
 		                    "cluster_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_15_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":\"string\",\"default\":\"\\\"'2.2'::character varying\\\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.default\":\"\\\"'2.2'::character varying\\\"\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"datacenter_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_15\",\"di.table.label\":\"cluster_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_15_1_fisrt sst_tJDBCOutput_15_1_fisrt = new SchemaSettingTool_tJDBCOutput_15_1_fisrt();
 		                    
 		                    props_tJDBCOutput_15.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_15_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_15_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":\"string\",\"default\":\"\\\"'2.2'::character varying\\\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.default\":\"\\\"'2.2'::character varying\\\"\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"datacenter_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_15\",\"di.table.label\":\"cluster_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_15_2_fisrt sst_tJDBCOutput_15_2_fisrt = new SchemaSettingTool_tJDBCOutput_15_2_fisrt();
 		                    
 		                    props_tJDBCOutput_15.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_15_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_15_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":\"string\",\"default\":\"\\\"'2.2'::character varying\\\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.default\":\"\\\"'2.2'::character varying\\\"\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"datacenter_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_15\",\"di.table.label\":\"cluster_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_15_3_fisrt sst_tJDBCOutput_15_3_fisrt = new SchemaSettingTool_tJDBCOutput_15_3_fisrt();
 		                    
 		                    props_tJDBCOutput_15.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_15_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_15.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_15.additionalColumns.setValue("referenceColumns",
 		                    "cluster_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_15.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_15 = props_tJDBCOutput_15.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_15 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_15 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_15 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_15.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_15);
        }
    }
globalMap.put("tJDBCOutput_15_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_15);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_15= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_15_MAPPINGS_URL", mappings_url_tJDBCOutput_15);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_15 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_15";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_15 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_15 = null;
topology_tJDBCOutput_15 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_15 = def_tJDBCOutput_15.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_15, topology_tJDBCOutput_15);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_15 = def_tJDBCOutput_15.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_15 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_15.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_15 = componentRuntime_tJDBCOutput_15.initialize(container_tJDBCOutput_15, props_tJDBCOutput_15);

if (initVr_tJDBCOutput_15.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_15.getMessage());
}

if(componentRuntime_tJDBCOutput_15 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_15 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_15;
	compDriverInitialization_tJDBCOutput_15.runAtDriver(container_tJDBCOutput_15);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_15 = null;
if(componentRuntime_tJDBCOutput_15 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_15 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_15;
	if (doesNodeBelongToRequest_tJDBCOutput_15) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_15 = sourceOrSink_tJDBCOutput_15.validate(container_tJDBCOutput_15);
        if (vr_tJDBCOutput_15.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_15.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_15 = null;
    if (sourceOrSink_tJDBCOutput_15 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_15 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_15;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_15 = sink_tJDBCOutput_15.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_15) {
            writeOperation_tJDBCOutput_15.initialize(container_tJDBCOutput_15);
        }
        writer_tJDBCOutput_15 = writeOperation_tJDBCOutput_15.createWriter(container_tJDBCOutput_15);
        if (doesNodeBelongToRequest_tJDBCOutput_15) {
            writer_tJDBCOutput_15.open("tJDBCOutput_15");
        }

        resourceMap.put("writer_tJDBCOutput_15", writer_tJDBCOutput_15);
    } // end of "sourceOrSink_tJDBCOutput_15 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_15 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_15.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_15 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_15 = props_tJDBCOutput_15.getSchema(c_tJDBCOutput_15, false);
    incomingEnforcer_tJDBCOutput_15 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_15);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_15 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_15 = null;


 



/**
 * [tJDBCOutput_15 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
					globalMap.get( "tHash_Lookup_row16" ))
					;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_clusterStruct delete_cluster_tmp = new delete_clusterStruct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tJDBCInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_18", false);
		start_Hash.put("tJDBCInput_18", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_18";

	
		int tos_count_tJDBCInput_18 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_18 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_18 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_18 = (String)(restRequest_tJDBCInput_18 != null ? restRequest_tJDBCInput_18.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_18 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_18 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_18 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_18 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_18.createRuntimeProperties();
 		                    props_tJDBCInput_18.setValue("sql",
 		                    "SELECT history_id, \n  		cluster_id, \n  		upper(cast(cluster_id as char(36))) as cluster_join_id,\n  		cluster_name, \n  "
+"		cluster_description, \n  		datacenter_id, \n  		cpu_name,\n        count_threads_as_cores,\n  		compatibility_version, \n  "
+"		datacenter_configuration_version, \n  		create_date, \n  		update_date\nFROM v4_5_latest_configuration_clusters");
 		                    
 		                    props_tJDBCInput_18.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_18.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_18.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_18_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_clusters\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"cluster_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cluster_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"count_threads_as_cores\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"count_threads_as_cores\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"1\",\"di.table.label\":\"count_threads_as_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"compatibility_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"compatibility_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"compatibility_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"datacenter_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_18\",\"di.table.label\":\"v4_5_latest_configuration_clusters\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_18_1_fisrt sst_tJDBCInput_18_1_fisrt = new SchemaSettingTool_tJDBCInput_18_1_fisrt();
 		                    
 		                    props_tJDBCInput_18.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_18_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_18.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_clusters");
 		                    
 		                    java.util.List<Object> tJDBCInput_18_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_18.trimTable).setValue("trim",tJDBCInput_18_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_18_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_18_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("cluster_id");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("cluster_join_id");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("cluster_name");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("cluster_description");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("datacenter_id");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("cpu_name");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("count_threads_as_cores");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("compatibility_version");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("datacenter_configuration_version");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_18.trimTable).setValue("columnName",tJDBCInput_18_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_18.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_18 = props_tJDBCInput_18.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_18 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_18 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_18 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_18.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_18);
        }
    }
globalMap.put("tJDBCInput_18_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_18);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_18= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_18_MAPPINGS_URL", mappings_url_tJDBCInput_18);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_18 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_18";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_18 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_18 = null;
topology_tJDBCInput_18 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_18 = def_tJDBCInput_18.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_18, topology_tJDBCInput_18);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_18 = def_tJDBCInput_18.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_18 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_18.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_18 = componentRuntime_tJDBCInput_18.initialize(container_tJDBCInput_18, props_tJDBCInput_18);

if (initVr_tJDBCInput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_18.getMessage());
}

if(componentRuntime_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_18 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_18;
	compDriverInitialization_tJDBCInput_18.runAtDriver(container_tJDBCInput_18);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_18 = null;
if(componentRuntime_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_18 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_18;
	if (doesNodeBelongToRequest_tJDBCInput_18) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_18 = sourceOrSink_tJDBCInput_18.validate(container_tJDBCInput_18);
        if (vr_tJDBCInput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_18.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_18 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_18;
        reader_tJDBCInput_18 = source_tJDBCInput_18.createReader(container_tJDBCInput_18);
	    reader_tJDBCInput_18 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_18, container_tJDBCInput_18);

            boolean multi_output_is_allowed_tJDBCInput_18 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_18 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_18.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_18 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_18 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_18 = props_tJDBCInput_18.getSchema(c_tJDBCInput_18, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_18 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_18, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_18 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_18 = reader_tJDBCInput_18.start();

        resourceMap.put("reader_tJDBCInput_18", reader_tJDBCInput_18);

        for (; available_tJDBCInput_18; available_tJDBCInput_18 = reader_tJDBCInput_18.advance()) {
			nb_line_tJDBCInput_18++;

			
			if (multi_output_is_allowed_tJDBCInput_18) {
				
					row17 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_18 = reader_tJDBCInput_18.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_18) {
						row17 = new row17Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_18 == null) {
            factory_tJDBCInput_18 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_18.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_18.setWrapped(factory_tJDBCInput_18.convertToAvro(data_tJDBCInput_18));
                Object columnValue_0_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(0);
                        row17.history_id = (Integer) (columnValue_0_tJDBCInput_18);
                Object columnValue_1_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(1);
                        row17.cluster_id = (Object) (columnValue_1_tJDBCInput_18);
                Object columnValue_2_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(2);
                        row17.cluster_join_id = (String) (columnValue_2_tJDBCInput_18);
                Object columnValue_3_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(3);
                        row17.cluster_name = (String) (columnValue_3_tJDBCInput_18);
                Object columnValue_4_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(4);
                        row17.cluster_description = (String) (columnValue_4_tJDBCInput_18);
                Object columnValue_5_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(5);
                        row17.datacenter_id = (Object) (columnValue_5_tJDBCInput_18);
                Object columnValue_6_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(6);
                        row17.cpu_name = (String) (columnValue_6_tJDBCInput_18);
                Object columnValue_7_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(7);
                        row17.count_threads_as_cores = (Boolean) (columnValue_7_tJDBCInput_18);
                Object columnValue_8_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(8);
                        row17.compatibility_version = (String) (columnValue_8_tJDBCInput_18);
                Object columnValue_9_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(9);
                        row17.datacenter_configuration_version = (Integer) (columnValue_9_tJDBCInput_18);
                Object columnValue_10_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(10);
                        row17.create_date = (java.util.Date) (columnValue_10_tJDBCInput_18);
                Object columnValue_11_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(11);
                        row17.update_date = (java.util.Date) (columnValue_11_tJDBCInput_18);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_18) {
				java.util.Map<String,Object> info_tJDBCInput_18 = e_tJDBCInput_18.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_18 = null;
					if(info_tJDBCInput_18.containsKey("error")){
						errorMessage_tJDBCInput_18 = info_tJDBCInput_18.get("error");
					}else if(info_tJDBCInput_18.containsKey("errorMessage")){
						errorMessage_tJDBCInput_18 = info_tJDBCInput_18.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_18 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_18 = "Row "+ nb_line_tJDBCInput_18 + ": "+errorMessage_tJDBCInput_18;
					System.err.println(errorMessage_tJDBCInput_18);
				
					// If the record is reject, the main line record should put NULL
					row17 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_18 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_18 = null;


 



/**
 * [tJDBCInput_18 begin ] stop
 */
	
	/**
	 * [tJDBCInput_18 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 


	tos_count_tJDBCInput_18++;

/**
 * [tJDBCInput_18 main ] stop
 */
	
	/**
	 * [tJDBCInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 



/**
 * [tJDBCInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_15 = false;
		  boolean mainRowRejected_tMap_15 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row16HashKey.cluster_join_id = row17.cluster_join_id ;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row16.lookup( row16HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row16.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_15 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row16 != null && tHash_Lookup_row16.getCount(row16HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row16' and it contains more one result from keys :  row16.cluster_join_id = '" + row16HashKey.cluster_join_id + "'");
								} // G 071
							

							row16Struct row16 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								 
							
							
								if (tHash_Lookup_row16 !=null && tHash_Lookup_row16.hasNext()) { // G 099
								
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							
							
								} // G 099
							
							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

delete_cluster = null;

if(!rejectedInnerJoin_tMap_15 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_cluster'
// # Filter conditions 
if( rejectedInnerJoin_tMap_15 ) {
delete_cluster_tmp.cluster_id = row17.cluster_id;
delete_cluster_tmp.cluster_name = row17.cluster_name;
delete_cluster_tmp.cluster_description = row17.cluster_description;
delete_cluster_tmp.datacenter_id = row17.datacenter_id;
delete_cluster_tmp.cpu_name = row17.cpu_name;
delete_cluster_tmp.count_threads_as_cores = row17.count_threads_as_cores ;
delete_cluster_tmp.compatibility_version = row17.compatibility_version;
delete_cluster_tmp.datacenter_configuration_version = row17.datacenter_configuration_version;
delete_cluster_tmp.create_date = row17.create_date ;
delete_cluster_tmp.update_date = context.runTime;
delete_cluster_tmp.delete_date = context.runTime;
delete_cluster = delete_cluster_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";

	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "delete_cluster"
if(delete_cluster != null) { 



	
	/**
	 * [tJDBCOutput_15 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_15";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_cluster"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_15 != null) {
            incomingEnforcer_tJDBCOutput_15.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("cluster_id") != null){
                    incomingEnforcer_tJDBCOutput_15.put("cluster_id", delete_cluster.cluster_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("cluster_name") != null){
                    incomingEnforcer_tJDBCOutput_15.put("cluster_name", delete_cluster.cluster_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("cluster_description") != null){
                    incomingEnforcer_tJDBCOutput_15.put("cluster_description", delete_cluster.cluster_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("datacenter_id") != null){
                    incomingEnforcer_tJDBCOutput_15.put("datacenter_id", delete_cluster.datacenter_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("cpu_name") != null){
                    incomingEnforcer_tJDBCOutput_15.put("cpu_name", delete_cluster.cpu_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("count_threads_as_cores") != null){
                    incomingEnforcer_tJDBCOutput_15.put("count_threads_as_cores", delete_cluster.count_threads_as_cores);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("compatibility_version") != null){
                    incomingEnforcer_tJDBCOutput_15.put("compatibility_version", delete_cluster.compatibility_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("datacenter_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_15.put("datacenter_configuration_version", delete_cluster.datacenter_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_15.put("create_date", delete_cluster.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_15.put("update_date", delete_cluster.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_15 != null && incomingEnforcer_tJDBCOutput_15.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_15.put("delete_date", delete_cluster.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_15 = null;
        if (incomingEnforcer_tJDBCOutput_15 != null) {
            data_tJDBCOutput_15 = incomingEnforcer_tJDBCOutput_15.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_15 != null && data_tJDBCOutput_15 != null) {
        	writer_tJDBCOutput_15.write(data_tJDBCOutput_15);
        }
        
        nb_line_tJDBCOutput_15++;

 


	tos_count_tJDBCOutput_15++;

/**
 * [tJDBCOutput_15 main ] stop
 */
	
	/**
	 * [tJDBCOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_15";

	


 



/**
 * [tJDBCOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_15";

	


 



/**
 * [tJDBCOutput_15 process_data_end ] stop
 */

} // End of branch "delete_cluster"




	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";

	

 



/**
 * [tMap_15 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 



/**
 * [tJDBCInput_18 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_18 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	
// end of generic


resourceMap.put("finish_tJDBCInput_18", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_18 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_18 = null;
    if (reader_tJDBCInput_18 != null) {
        reader_tJDBCInput_18.close();
        resultMap_tJDBCInput_18 = reader_tJDBCInput_18.getReturnValues();
    }
if(resultMap_tJDBCInput_18!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_18 : resultMap_tJDBCInput_18.entrySet()) {
		switch(entry_tJDBCInput_18.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "ERROR_MESSAGE", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_LINE", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_SUCCESS", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_REJECT", entry_tJDBCInput_18.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_18 = new StringBuilder();
            for (int i_tJDBCInput_18 = 0; i_tJDBCInput_18 < entry_tJDBCInput_18.getKey().length(); i_tJDBCInput_18++) {
                char ch_tJDBCInput_18 = entry_tJDBCInput_18.getKey().charAt(i_tJDBCInput_18);
                if(Character.isUpperCase(ch_tJDBCInput_18) && i_tJDBCInput_18> 0) {
                	studio_key_tJDBCInput_18.append('_');
                }
                studio_key_tJDBCInput_18.append(ch_tJDBCInput_18);
            }
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", studio_key_tJDBCInput_18.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_18.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_18", true);
end_Hash.put("tJDBCInput_18", System.currentTimeMillis());




/**
 * [tJDBCInput_18 end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tJDBCOutput_15 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_15";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_15", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_15 = null;
    if (writer_tJDBCOutput_15 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_15 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_15.close();
        resultMap_tJDBCOutput_15 = writer_tJDBCOutput_15.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_15), container_tJDBCOutput_15);
    }
if(resultMap_tJDBCOutput_15!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_15 : resultMap_tJDBCOutput_15.entrySet()) {
		switch(entry_tJDBCOutput_15.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_15.setComponentData("tJDBCOutput_15", "ERROR_MESSAGE", entry_tJDBCOutput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_15.setComponentData("tJDBCOutput_15", "NB_LINE", entry_tJDBCOutput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_15.setComponentData("tJDBCOutput_15", "NB_SUCCESS", entry_tJDBCOutput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_15.setComponentData("tJDBCOutput_15", "NB_REJECT", entry_tJDBCOutput_15.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_15 = new StringBuilder();
            for (int i_tJDBCOutput_15 = 0; i_tJDBCOutput_15 < entry_tJDBCOutput_15.getKey().length(); i_tJDBCOutput_15++) {
                char ch_tJDBCOutput_15 = entry_tJDBCOutput_15.getKey().charAt(i_tJDBCOutput_15);
                if(Character.isUpperCase(ch_tJDBCOutput_15) && i_tJDBCOutput_15> 0) {
                	studio_key_tJDBCOutput_15.append('_');
                }
                studio_key_tJDBCOutput_15.append(ch_tJDBCOutput_15);
            }
			container_tJDBCOutput_15.setComponentData("tJDBCOutput_15", studio_key_tJDBCOutput_15.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_15.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_cluster");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_15", true);
end_Hash.put("tJDBCOutput_15", System.currentTimeMillis());




/**
 * [tJDBCOutput_15 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_18:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tJDBCInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_18 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_18")==null){
    if(resourceMap.get("reader_tJDBCInput_18")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_18")).close();
		} catch (java.io.IOException e_tJDBCInput_18) {
			String errorMessage_tJDBCInput_18 = "failed to release the resource in tJDBCInput_18 :" + e_tJDBCInput_18.getMessage();
			System.err.println(errorMessage_tJDBCInput_18);
		}
	}
}
 



/**
 * [tJDBCInput_18 finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";

	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_15";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_15")==null){
    if(resourceMap.get("writer_tJDBCOutput_15")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_15")).close();
		} catch (java.io.IOException e_tJDBCOutput_15) {
			String errorMessage_tJDBCOutput_15 = "failed to release the resource in tJDBCOutput_15 :" + e_tJDBCOutput_15.getMessage();
			System.err.println(errorMessage_tJDBCOutput_15);
		}
	}
}
 



/**
 * [tJDBCOutput_15 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class storage_configurationStruct implements routines.system.IPersistableRow<storage_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_name;

				public String getStorage_domain_name () {
					return this.storage_domain_name;
				}
				
			    public short storage_domain_type;

				public short getStorage_domain_type () {
					return this.storage_domain_type;
				}
				
			    public short storage_type;

				public short getStorage_type () {
					return this.storage_type;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_name = readString(dis);
					
			        this.storage_domain_type = dis.readShort();
					
			        this.storage_type = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_name = readString(dis);
					
			        this.storage_domain_type = dis.readShort();
					
			        this.storage_type = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// short
				
		            	dos.writeShort(this.storage_domain_type);
					
					// short
				
		            	dos.writeShort(this.storage_type);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// short
				
		            	dos.writeShort(this.storage_domain_type);
					
					// short
				
		            	dos.writeShort(this.storage_type);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_name="+storage_domain_name);
		sb.append(",storage_domain_type="+String.valueOf(storage_domain_type));
		sb.append(",storage_type="+String.valueOf(storage_type));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(storage_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_name;

				public String getStorage_domain_name () {
					return this.storage_domain_name;
				}
				
			    public Short storage_domain_type;

				public Short getStorage_domain_type () {
					return this.storage_domain_type;
				}
				
			    public Short storage_type;

				public Short getStorage_type () {
					return this.storage_type;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_type = null;
           				} else {
           			    	this.storage_domain_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_type = null;
           				} else {
           			    	this.storage_type = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_type = null;
           				} else {
           			    	this.storage_domain_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_type = null;
           				} else {
           			    	this.storage_type = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// Short
				
						if(this.storage_domain_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_type);
		            	}
					
					// Short
				
						if(this.storage_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_type);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// Short
				
						if(this.storage_domain_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_type);
		            	}
					
					// Short
				
						if(this.storage_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_type);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_name="+storage_domain_name);
		sb.append(",storage_domain_type="+String.valueOf(storage_domain_type));
		sb.append(",storage_type="+String.valueOf(storage_type));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();
storage_configurationStruct storage_configuration = new storage_configurationStruct();





	
	/**
	 * [tJDBCOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_3", false);
		start_Hash.put("tJDBCOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"storage_configuration");
					}
				
		int tos_count_tJDBCOutput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_3 = (String)(restRequest_tJDBCOutput_3 != null ? restRequest_tJDBCOutput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_3 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_3 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_3 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_3.createRuntimeProperties();
 		                    props_tJDBCOutput_3.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_3.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.tableSelection.setValue("tablename",
 		                    "storage_domain_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"storage_domain_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_1_fisrt sst_tJDBCOutput_3_1_fisrt = new SchemaSettingTool_tJDBCOutput_3_1_fisrt();
 		                    
 		                    props_tJDBCOutput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"storage_domain_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_2_fisrt sst_tJDBCOutput_3_2_fisrt = new SchemaSettingTool_tJDBCOutput_3_2_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"storage_domain_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_3_fisrt sst_tJDBCOutput_3_3_fisrt = new SchemaSettingTool_tJDBCOutput_3_3_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("referenceColumns",
 		                    "storage_domain_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_3 = props_tJDBCOutput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_3);
        }
    }
globalMap.put("tJDBCOutput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_3_MAPPINGS_URL", mappings_url_tJDBCOutput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_3 = null;
topology_tJDBCOutput_3 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_3 = def_tJDBCOutput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_3, topology_tJDBCOutput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_3 = def_tJDBCOutput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_3 = componentRuntime_tJDBCOutput_3.initialize(container_tJDBCOutput_3, props_tJDBCOutput_3);

if (initVr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_3.getMessage());
}

if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_3;
	compDriverInitialization_tJDBCOutput_3.runAtDriver(container_tJDBCOutput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_3 = null;
if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_3;
	if (doesNodeBelongToRequest_tJDBCOutput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_3 = sourceOrSink_tJDBCOutput_3.validate(container_tJDBCOutput_3);
        if (vr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_3.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_3 = null;
    if (sourceOrSink_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_3 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_3;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_3 = sink_tJDBCOutput_3.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writeOperation_tJDBCOutput_3.initialize(container_tJDBCOutput_3);
        }
        writer_tJDBCOutput_3 = writeOperation_tJDBCOutput_3.createWriter(container_tJDBCOutput_3);
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writer_tJDBCOutput_3.open("tJDBCOutput_3");
        }

        resourceMap.put("writer_tJDBCOutput_3", writer_tJDBCOutput_3);
    } // end of "sourceOrSink_tJDBCOutput_3 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_3 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_3.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_3 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_3 = props_tJDBCOutput_3.getSchema(c_tJDBCOutput_3, false);
    incomingEnforcer_tJDBCOutput_3 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_3);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_3 = null;


 



/**
 * [tJDBCOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
storage_configurationStruct storage_configuration_tmp = new storage_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tJDBCInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_3", false);
		start_Hash.put("tJDBCInput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_3";

	
		int tos_count_tJDBCInput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_3 = (String)(restRequest_tJDBCInput_3 != null ? restRequest_tJDBCInput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_3 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_3 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_3 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_3.createRuntimeProperties();
 		                    props_tJDBCInput_3.setValue("sql",
 		                    "SELECT \n  storage_domain_id, \n  storage_domain_name, \n  storage_domain_type, \n  storage_type, \n  create_date, \n  update"
+"_date\nFROM dwh_storage_domain_configuration_history_view");
 		                    
 		                    props_tJDBCInput_3.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_3.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_storage_domain_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_3\",\"di.table.label\":\"dwh_storage_domain_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_3_1_fisrt sst_tJDBCInput_3_1_fisrt = new SchemaSettingTool_tJDBCInput_3_1_fisrt();
 		                    
 		                    props_tJDBCInput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_3.tableSelection.setValue("tablename",
 		                    "dwh_storage_domain_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("trim",tJDBCInput_3_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_3_trimTable_columnName.add("storage_domain_id");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("storage_domain_name");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("storage_domain_type");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("storage_type");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("columnName",tJDBCInput_3_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_3 = props_tJDBCInput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_3);
        }
    }
globalMap.put("tJDBCInput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_3_MAPPINGS_URL", mappings_url_tJDBCInput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_3 = null;
topology_tJDBCInput_3 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_3 = def_tJDBCInput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_3, topology_tJDBCInput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_3 = def_tJDBCInput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_3 = componentRuntime_tJDBCInput_3.initialize(container_tJDBCInput_3, props_tJDBCInput_3);

if (initVr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_3.getMessage());
}

if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_3;
	compDriverInitialization_tJDBCInput_3.runAtDriver(container_tJDBCInput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_3 = null;
if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_3;
	if (doesNodeBelongToRequest_tJDBCInput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_3 = sourceOrSink_tJDBCInput_3.validate(container_tJDBCInput_3);
        if (vr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_3.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_3 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_3;
        reader_tJDBCInput_3 = source_tJDBCInput_3.createReader(container_tJDBCInput_3);
	    reader_tJDBCInput_3 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_3, container_tJDBCInput_3);

            boolean multi_output_is_allowed_tJDBCInput_3 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_3 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_3.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_3 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_3 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_3 = props_tJDBCInput_3.getSchema(c_tJDBCInput_3, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_3 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_3, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_3 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_3 = reader_tJDBCInput_3.start();

        resourceMap.put("reader_tJDBCInput_3", reader_tJDBCInput_3);

        for (; available_tJDBCInput_3; available_tJDBCInput_3 = reader_tJDBCInput_3.advance()) {
			nb_line_tJDBCInput_3++;

			
			if (multi_output_is_allowed_tJDBCInput_3) {
				
					row5 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_3 = reader_tJDBCInput_3.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_3) {
						row5 = new row5Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_3 == null) {
            factory_tJDBCInput_3 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_3.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_3.setWrapped(factory_tJDBCInput_3.convertToAvro(data_tJDBCInput_3));
                Object columnValue_0_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(0);
                        row5.storage_domain_id = (Object) (columnValue_0_tJDBCInput_3);
                Object columnValue_1_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(1);
                        row5.storage_domain_name = (String) (columnValue_1_tJDBCInput_3);
                Object columnValue_2_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(2);
                        row5.storage_domain_type = (Short) (columnValue_2_tJDBCInput_3);
                Object columnValue_3_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(3);
                        row5.storage_type = (Short) (columnValue_3_tJDBCInput_3);
                Object columnValue_4_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(4);
                        row5.create_date = (java.util.Date) (columnValue_4_tJDBCInput_3);
                Object columnValue_5_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(5);
                        row5.update_date = (java.util.Date) (columnValue_5_tJDBCInput_3);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_3) {
				java.util.Map<String,Object> info_tJDBCInput_3 = e_tJDBCInput_3.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_3 = null;
					if(info_tJDBCInput_3.containsKey("error")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("error");
					}else if(info_tJDBCInput_3.containsKey("errorMessage")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_3 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_3 = "Row "+ nb_line_tJDBCInput_3 + ": "+errorMessage_tJDBCInput_3;
					System.err.println(errorMessage_tJDBCInput_3);
				
					// If the record is reject, the main line record should put NULL
					row5 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_3 = null;


 



/**
 * [tJDBCInput_3 begin ] stop
 */
	
	/**
	 * [tJDBCInput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 


	tos_count_tJDBCInput_3++;

/**
 * [tJDBCInput_3 main ] stop
 */
	
	/**
	 * [tJDBCInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_3 = false;
		  boolean mainRowRejected_tMap_3 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row5.update_date == null ? TalendDate.compareDate(row5.create_date,context.runTime) <=0 : TalendDate.compareDate(row5.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row5'
							// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

storage_configuration = null;


// # Output table : 'storage_configuration'
storage_configuration_tmp.storage_domain_id = row5.storage_domain_id;
storage_configuration_tmp.storage_domain_name = StringHandling.TRIM(row5.storage_domain_name);
storage_configuration_tmp.storage_domain_type = row5.storage_domain_type;
storage_configuration_tmp.storage_type = row5.storage_type;
storage_configuration_tmp.create_date = row5.create_date;
storage_configuration_tmp.update_date = row5.update_date;
storage_configuration_tmp.delete_date = null;
storage_configuration = storage_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "storage_configuration"
if(storage_configuration != null) { 



	
	/**
	 * [tJDBCOutput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"storage_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_3 != null) {
            incomingEnforcer_tJDBCOutput_3.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("storage_domain_id", storage_configuration.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("storage_domain_name") != null){
                    incomingEnforcer_tJDBCOutput_3.put("storage_domain_name", storage_configuration.storage_domain_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("storage_domain_type") != null){
                    incomingEnforcer_tJDBCOutput_3.put("storage_domain_type", storage_configuration.storage_domain_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("storage_type") != null){
                    incomingEnforcer_tJDBCOutput_3.put("storage_type", storage_configuration.storage_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("create_date", storage_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("update_date", storage_configuration.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("delete_date", storage_configuration.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_3 = null;
        if (incomingEnforcer_tJDBCOutput_3 != null) {
            data_tJDBCOutput_3 = incomingEnforcer_tJDBCOutput_3.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_3 != null && data_tJDBCOutput_3 != null) {
        	writer_tJDBCOutput_3.write(data_tJDBCOutput_3);
        }
        
        nb_line_tJDBCOutput_3++;

 


	tos_count_tJDBCOutput_3++;

/**
 * [tJDBCOutput_3 main ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_end ] stop
 */

} // End of branch "storage_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row5'
	
	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// end of generic


resourceMap.put("finish_tJDBCInput_3", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_3 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_3 = null;
    if (reader_tJDBCInput_3 != null) {
        reader_tJDBCInput_3.close();
        resultMap_tJDBCInput_3 = reader_tJDBCInput_3.getReturnValues();
    }
if(resultMap_tJDBCInput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_3 : resultMap_tJDBCInput_3.entrySet()) {
		switch(entry_tJDBCInput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "ERROR_MESSAGE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_LINE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_SUCCESS", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_REJECT", entry_tJDBCInput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_3 = new StringBuilder();
            for (int i_tJDBCInput_3 = 0; i_tJDBCInput_3 < entry_tJDBCInput_3.getKey().length(); i_tJDBCInput_3++) {
                char ch_tJDBCInput_3 = entry_tJDBCInput_3.getKey().charAt(i_tJDBCInput_3);
                if(Character.isUpperCase(ch_tJDBCInput_3) && i_tJDBCInput_3> 0) {
                	studio_key_tJDBCInput_3.append('_');
                }
                studio_key_tJDBCInput_3.append(ch_tJDBCInput_3);
            }
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", studio_key_tJDBCInput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_3.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_3", true);
end_Hash.put("tJDBCInput_3", System.currentTimeMillis());




/**
 * [tJDBCInput_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJDBCOutput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_3", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_3 = null;
    if (writer_tJDBCOutput_3 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_3 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_3.close();
        resultMap_tJDBCOutput_3 = writer_tJDBCOutput_3.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_3), container_tJDBCOutput_3);
    }
if(resultMap_tJDBCOutput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_3 : resultMap_tJDBCOutput_3.entrySet()) {
		switch(entry_tJDBCOutput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "ERROR_MESSAGE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_LINE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_SUCCESS", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_REJECT", entry_tJDBCOutput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_3 = new StringBuilder();
            for (int i_tJDBCOutput_3 = 0; i_tJDBCOutput_3 < entry_tJDBCOutput_3.getKey().length(); i_tJDBCOutput_3++) {
                char ch_tJDBCOutput_3 = entry_tJDBCOutput_3.getKey().charAt(i_tJDBCOutput_3);
                if(Character.isUpperCase(ch_tJDBCOutput_3) && i_tJDBCOutput_3> 0) {
                	studio_key_tJDBCOutput_3.append('_');
                }
                studio_key_tJDBCOutput_3.append(ch_tJDBCOutput_3);
            }
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", studio_key_tJDBCOutput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_3.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"storage_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_3", true);
end_Hash.put("tJDBCOutput_3", System.currentTimeMillis());




/**
 * [tJDBCOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tJDBCInput_20Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_3")==null){
    if(resourceMap.get("reader_tJDBCInput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_3")).close();
		} catch (java.io.IOException e_tJDBCInput_3) {
			String errorMessage_tJDBCInput_3 = "failed to release the resource in tJDBCInput_3 :" + e_tJDBCInput_3.getMessage();
			System.err.println(errorMessage_tJDBCInput_3);
		}
	}
}
 



/**
 * [tJDBCInput_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_3")==null){
    if(resourceMap.get("writer_tJDBCOutput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_3")).close();
		} catch (java.io.IOException e_tJDBCOutput_3) {
			String errorMessage_tJDBCOutput_3 = "failed to release the resource in tJDBCOutput_3 :" + e_tJDBCOutput_3.getMessage();
			System.err.println(errorMessage_tJDBCOutput_3);
		}
	}
}
 



/**
 * [tJDBCOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class delete_storageStruct implements routines.system.IPersistableRow<delete_storageStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_name;

				public String getStorage_domain_name () {
					return this.storage_domain_name;
				}
				
			    public short storage_domain_type;

				public short getStorage_domain_type () {
					return this.storage_domain_type;
				}
				
			    public short storage_type;

				public short getStorage_type () {
					return this.storage_type;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_name = readString(dis);
					
			        this.storage_domain_type = dis.readShort();
					
			        this.storage_type = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_name = readString(dis);
					
			        this.storage_domain_type = dis.readShort();
					
			        this.storage_type = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// short
				
		            	dos.writeShort(this.storage_domain_type);
					
					// short
				
		            	dos.writeShort(this.storage_type);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// short
				
		            	dos.writeShort(this.storage_domain_type);
					
					// short
				
		            	dos.writeShort(this.storage_type);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_name="+storage_domain_name);
		sb.append(",storage_domain_type="+String.valueOf(storage_domain_type));
		sb.append(",storage_type="+String.valueOf(storage_type));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_storageStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public String storage_domain_name;

				public String getStorage_domain_name () {
					return this.storage_domain_name;
				}
				
			    public Short storage_domain_type;

				public Short getStorage_domain_type () {
					return this.storage_domain_type;
				}
				
			    public Short storage_type;

				public Short getStorage_type () {
					return this.storage_type;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
					this.storage_domain_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_type = null;
           				} else {
           			    	this.storage_domain_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_type = null;
           				} else {
           			    	this.storage_type = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
					this.storage_domain_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_type = null;
           				} else {
           			    	this.storage_domain_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_type = null;
           				} else {
           			    	this.storage_type = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// Short
				
						if(this.storage_domain_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_type);
		            	}
					
					// Short
				
						if(this.storage_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_type);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// Short
				
						if(this.storage_domain_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_type);
		            	}
					
					// Short
				
						if(this.storage_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_type);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",storage_domain_name="+storage_domain_name);
		sb.append(",storage_domain_type="+String.valueOf(storage_domain_type));
		sb.append(",storage_type="+String.valueOf(storage_type));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_20Struct implements routines.system.IPersistableRow<after_tJDBCInput_20Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public String storage_domain_name;

				public String getStorage_domain_name () {
					return this.storage_domain_name;
				}
				
			    public Short storage_domain_type;

				public Short getStorage_domain_type () {
					return this.storage_domain_type;
				}
				
			    public Short storage_type;

				public Short getStorage_type () {
					return this.storage_type;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
					this.storage_domain_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_type = null;
           				} else {
           			    	this.storage_domain_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_type = null;
           				} else {
           			    	this.storage_type = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
					this.storage_domain_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_type = null;
           				} else {
           			    	this.storage_domain_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_type = null;
           				} else {
           			    	this.storage_type = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// Short
				
						if(this.storage_domain_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_type);
		            	}
					
					// Short
				
						if(this.storage_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_type);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.storage_domain_name,dos);
					
					// Short
				
						if(this.storage_domain_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_type);
		            	}
					
					// Short
				
						if(this.storage_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_type);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",storage_domain_name="+storage_domain_name);
		sb.append(",storage_domain_type="+String.valueOf(storage_domain_type));
		sb.append(",storage_type="+String.valueOf(storage_type));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_19Process(globalMap);

		row19Struct row19 = new row19Struct();
delete_storageStruct delete_storage = new delete_storageStruct();





	
	/**
	 * [tJDBCOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_16", false);
		start_Hash.put("tJDBCOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_16";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_storage");
					}
				
		int tos_count_tJDBCOutput_16 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_16 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_16 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_16 = (String)(restRequest_tJDBCOutput_16 != null ? restRequest_tJDBCOutput_16.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_16 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_16 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_16 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_16 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_16.createRuntimeProperties();
 		                    props_tJDBCOutput_16.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_16.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_16.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_16.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_16.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_16.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_16.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_16.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.tableSelection.setValue("tablename",
 		                    "storage_domain_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_16_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_16\",\"di.table.label\":\"storage_domain_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_16_1_fisrt sst_tJDBCOutput_16_1_fisrt = new SchemaSettingTool_tJDBCOutput_16_1_fisrt();
 		                    
 		                    props_tJDBCOutput_16.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_16_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_16_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_16\",\"di.table.label\":\"storage_domain_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_16_2_fisrt sst_tJDBCOutput_16_2_fisrt = new SchemaSettingTool_tJDBCOutput_16_2_fisrt();
 		                    
 		                    props_tJDBCOutput_16.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_16_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_16_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_16\",\"di.table.label\":\"storage_domain_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_16_3_fisrt sst_tJDBCOutput_16_3_fisrt = new SchemaSettingTool_tJDBCOutput_16_3_fisrt();
 		                    
 		                    props_tJDBCOutput_16.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_16_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_16.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_16.additionalColumns.setValue("referenceColumns",
 		                    "storage_domain_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_16.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_16 = props_tJDBCOutput_16.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_16 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_16 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_16 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_16.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_16);
        }
    }
globalMap.put("tJDBCOutput_16_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_16);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_16= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_16_MAPPINGS_URL", mappings_url_tJDBCOutput_16);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_16 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_16";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_16 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_16 = null;
topology_tJDBCOutput_16 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_16 = def_tJDBCOutput_16.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_16, topology_tJDBCOutput_16);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_16 = def_tJDBCOutput_16.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_16 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_16.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_16 = componentRuntime_tJDBCOutput_16.initialize(container_tJDBCOutput_16, props_tJDBCOutput_16);

if (initVr_tJDBCOutput_16.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_16.getMessage());
}

if(componentRuntime_tJDBCOutput_16 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_16 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_16;
	compDriverInitialization_tJDBCOutput_16.runAtDriver(container_tJDBCOutput_16);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_16 = null;
if(componentRuntime_tJDBCOutput_16 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_16 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_16;
	if (doesNodeBelongToRequest_tJDBCOutput_16) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_16 = sourceOrSink_tJDBCOutput_16.validate(container_tJDBCOutput_16);
        if (vr_tJDBCOutput_16.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_16.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_16 = null;
    if (sourceOrSink_tJDBCOutput_16 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_16 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_16;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_16 = sink_tJDBCOutput_16.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_16) {
            writeOperation_tJDBCOutput_16.initialize(container_tJDBCOutput_16);
        }
        writer_tJDBCOutput_16 = writeOperation_tJDBCOutput_16.createWriter(container_tJDBCOutput_16);
        if (doesNodeBelongToRequest_tJDBCOutput_16) {
            writer_tJDBCOutput_16.open("tJDBCOutput_16");
        }

        resourceMap.put("writer_tJDBCOutput_16", writer_tJDBCOutput_16);
    } // end of "sourceOrSink_tJDBCOutput_16 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_16 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_16.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_16 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_16 = props_tJDBCOutput_16.getSchema(c_tJDBCOutput_16, false);
    incomingEnforcer_tJDBCOutput_16 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_16);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_16 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_16 = null;


 



/**
 * [tJDBCOutput_16 begin ] stop
 */



	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
					globalMap.get( "tHash_Lookup_row18" ))
					;					
					
	

row18Struct row18HashKey = new row18Struct();
row18Struct row18Default = new row18Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_storageStruct delete_storage_tmp = new delete_storageStruct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tJDBCInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_20", false);
		start_Hash.put("tJDBCInput_20", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_20";

	
		int tos_count_tJDBCInput_20 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_20 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_20 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_20 = (String)(restRequest_tJDBCInput_20 != null ? restRequest_tJDBCInput_20.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_20 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_20 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_20 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_20 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_20.createRuntimeProperties();
 		                    props_tJDBCInput_20.setValue("sql",
 		                    "SELECT history_id, \n  		storage_domain_id, \n		upper(cast(storage_domain_id as char(36))) as storage_domain_join_id,\n 	"
+"	storage_domain_name, \n 		storage_domain_type, \n  		storage_type, \n  		create_date, \n  		update_date\nFROM v4_5_latest_co"
+"nfiguration_storage_domains");
 		                    
 		                    props_tJDBCInput_20.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_20.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_20.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_20_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_storage_domains\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"storage_domain_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"250\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_domain_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"storage_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_20\",\"di.table.label\":\"v4_5_latest_configuration_storage_domains\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_20_1_fisrt sst_tJDBCInput_20_1_fisrt = new SchemaSettingTool_tJDBCInput_20_1_fisrt();
 		                    
 		                    props_tJDBCInput_20.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_20_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_20.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_storage_domains");
 		                    
 		                    java.util.List<Object> tJDBCInput_20_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_20.trimTable).setValue("trim",tJDBCInput_20_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_20_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_20_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("storage_domain_id");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("storage_domain_name");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("storage_domain_type");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("storage_type");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_20.trimTable).setValue("columnName",tJDBCInput_20_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_20.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_20 = props_tJDBCInput_20.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_20 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_20 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_20 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_20.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_20);
        }
    }
globalMap.put("tJDBCInput_20_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_20);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_20= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_20_MAPPINGS_URL", mappings_url_tJDBCInput_20);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_20 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_20";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_20 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_20 = null;
topology_tJDBCInput_20 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_20 = def_tJDBCInput_20.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_20, topology_tJDBCInput_20);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_20 = def_tJDBCInput_20.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_20 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_20.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_20 = componentRuntime_tJDBCInput_20.initialize(container_tJDBCInput_20, props_tJDBCInput_20);

if (initVr_tJDBCInput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_20.getMessage());
}

if(componentRuntime_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_20 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_20;
	compDriverInitialization_tJDBCInput_20.runAtDriver(container_tJDBCInput_20);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_20 = null;
if(componentRuntime_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_20 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_20;
	if (doesNodeBelongToRequest_tJDBCInput_20) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_20 = sourceOrSink_tJDBCInput_20.validate(container_tJDBCInput_20);
        if (vr_tJDBCInput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_20.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_20 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_20;
        reader_tJDBCInput_20 = source_tJDBCInput_20.createReader(container_tJDBCInput_20);
	    reader_tJDBCInput_20 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_20, container_tJDBCInput_20);

            boolean multi_output_is_allowed_tJDBCInput_20 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_20 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_20.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_20 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_20 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_20 = props_tJDBCInput_20.getSchema(c_tJDBCInput_20, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_20 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_20, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_20 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_20 = reader_tJDBCInput_20.start();

        resourceMap.put("reader_tJDBCInput_20", reader_tJDBCInput_20);

        for (; available_tJDBCInput_20; available_tJDBCInput_20 = reader_tJDBCInput_20.advance()) {
			nb_line_tJDBCInput_20++;

			
			if (multi_output_is_allowed_tJDBCInput_20) {
				
					row19 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_20 = reader_tJDBCInput_20.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_20) {
						row19 = new row19Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_20 == null) {
            factory_tJDBCInput_20 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_20.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_20.setWrapped(factory_tJDBCInput_20.convertToAvro(data_tJDBCInput_20));
                Object columnValue_0_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(0);
                        row19.history_id = (Integer) (columnValue_0_tJDBCInput_20);
                Object columnValue_1_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(1);
                        row19.storage_domain_id = (Object) (columnValue_1_tJDBCInput_20);
                Object columnValue_2_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(2);
                        row19.storage_domain_join_id = (String) (columnValue_2_tJDBCInput_20);
                Object columnValue_3_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(3);
                        row19.storage_domain_name = (String) (columnValue_3_tJDBCInput_20);
                Object columnValue_4_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(4);
                        row19.storage_domain_type = (Short) (columnValue_4_tJDBCInput_20);
                Object columnValue_5_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(5);
                        row19.storage_type = (Short) (columnValue_5_tJDBCInput_20);
                Object columnValue_6_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(6);
                        row19.create_date = (java.util.Date) (columnValue_6_tJDBCInput_20);
                Object columnValue_7_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(7);
                        row19.update_date = (java.util.Date) (columnValue_7_tJDBCInput_20);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_20) {
				java.util.Map<String,Object> info_tJDBCInput_20 = e_tJDBCInput_20.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_20 = null;
					if(info_tJDBCInput_20.containsKey("error")){
						errorMessage_tJDBCInput_20 = info_tJDBCInput_20.get("error");
					}else if(info_tJDBCInput_20.containsKey("errorMessage")){
						errorMessage_tJDBCInput_20 = info_tJDBCInput_20.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_20 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_20 = "Row "+ nb_line_tJDBCInput_20 + ": "+errorMessage_tJDBCInput_20;
					System.err.println(errorMessage_tJDBCInput_20);
				
					// If the record is reject, the main line record should put NULL
					row19 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_20 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_20 = null;


 



/**
 * [tJDBCInput_20 begin ] stop
 */
	
	/**
	 * [tJDBCInput_20 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 


	tos_count_tJDBCInput_20++;

/**
 * [tJDBCInput_20 main ] stop
 */
	
	/**
	 * [tJDBCInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 



/**
 * [tJDBCInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_16 = false;
		  boolean mainRowRejected_tMap_16 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row18" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow18 = false;
       		  	    	
       		  	    	
 							row18Struct row18ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_16) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_16 = false;
								
                        		    		    row18HashKey.storage_domain_join_id = row19.storage_domain_join_id ;
                        		    		

								
		                        	row18HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row18.lookup( row18HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row18.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_16 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row18 != null && tHash_Lookup_row18.getCount(row18HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row18' and it contains more one result from keys :  row18.storage_domain_join_id = '" + row18HashKey.storage_domain_join_id + "'");
								} // G 071
							

							row18Struct row18 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row18Struct fromLookup_row18 = null;
							row18 = row18Default;
										 
							
								 
							
							
								if (tHash_Lookup_row18 !=null && tHash_Lookup_row18.hasNext()) { // G 099
								
							
								
								fromLookup_row18 = tHash_Lookup_row18.next();

							
							
								} // G 099
							
							

							if(fromLookup_row18 != null) {
								row18 = fromLookup_row18;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
        // ###############################
        // # Output tables

delete_storage = null;

if(!rejectedInnerJoin_tMap_16 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_storage'
// # Filter conditions 
if( rejectedInnerJoin_tMap_16 ) {
delete_storage_tmp.storage_domain_id = row19.storage_domain_id;
delete_storage_tmp.storage_domain_name = row19.storage_domain_name;
delete_storage_tmp.storage_domain_type = row19.storage_domain_type;
delete_storage_tmp.storage_type = row19.storage_type;
delete_storage_tmp.create_date = row19.create_date;
delete_storage_tmp.update_date = context.runTime;
delete_storage_tmp.delete_date = context.runTime;
delete_storage = delete_storage_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";

	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "delete_storage"
if(delete_storage != null) { 



	
	/**
	 * [tJDBCOutput_16 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_storage"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_16 != null) {
            incomingEnforcer_tJDBCOutput_16.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_16.put("storage_domain_id", delete_storage.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("storage_domain_name") != null){
                    incomingEnforcer_tJDBCOutput_16.put("storage_domain_name", delete_storage.storage_domain_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("storage_domain_type") != null){
                    incomingEnforcer_tJDBCOutput_16.put("storage_domain_type", delete_storage.storage_domain_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("storage_type") != null){
                    incomingEnforcer_tJDBCOutput_16.put("storage_type", delete_storage.storage_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_16.put("create_date", delete_storage.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_16.put("update_date", delete_storage.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_16.put("delete_date", delete_storage.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_16 = null;
        if (incomingEnforcer_tJDBCOutput_16 != null) {
            data_tJDBCOutput_16 = incomingEnforcer_tJDBCOutput_16.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_16 != null && data_tJDBCOutput_16 != null) {
        	writer_tJDBCOutput_16.write(data_tJDBCOutput_16);
        }
        
        nb_line_tJDBCOutput_16++;

 


	tos_count_tJDBCOutput_16++;

/**
 * [tJDBCOutput_16 main ] stop
 */
	
	/**
	 * [tJDBCOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	


 



/**
 * [tJDBCOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	


 



/**
 * [tJDBCOutput_16 process_data_end ] stop
 */

} // End of branch "delete_storage"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";

	

 



/**
 * [tMap_16 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 



/**
 * [tJDBCInput_20 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_20 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	
// end of generic


resourceMap.put("finish_tJDBCInput_20", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_20 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_20 = null;
    if (reader_tJDBCInput_20 != null) {
        reader_tJDBCInput_20.close();
        resultMap_tJDBCInput_20 = reader_tJDBCInput_20.getReturnValues();
    }
if(resultMap_tJDBCInput_20!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_20 : resultMap_tJDBCInput_20.entrySet()) {
		switch(entry_tJDBCInput_20.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "ERROR_MESSAGE", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_LINE", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_SUCCESS", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_REJECT", entry_tJDBCInput_20.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_20 = new StringBuilder();
            for (int i_tJDBCInput_20 = 0; i_tJDBCInput_20 < entry_tJDBCInput_20.getKey().length(); i_tJDBCInput_20++) {
                char ch_tJDBCInput_20 = entry_tJDBCInput_20.getKey().charAt(i_tJDBCInput_20);
                if(Character.isUpperCase(ch_tJDBCInput_20) && i_tJDBCInput_20> 0) {
                	studio_key_tJDBCInput_20.append('_');
                }
                studio_key_tJDBCInput_20.append(ch_tJDBCInput_20);
            }
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", studio_key_tJDBCInput_20.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_20.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_20", true);
end_Hash.put("tJDBCInput_20", System.currentTimeMillis());




/**
 * [tJDBCInput_20 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row18 != null) {
						tHash_Lookup_row18.endGet();
					}
					globalMap.remove( "tHash_Lookup_row18" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */

	
	/**
	 * [tJDBCOutput_16 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_16", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_16 = null;
    if (writer_tJDBCOutput_16 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_16 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_16.close();
        resultMap_tJDBCOutput_16 = writer_tJDBCOutput_16.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_16), container_tJDBCOutput_16);
    }
if(resultMap_tJDBCOutput_16!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_16 : resultMap_tJDBCOutput_16.entrySet()) {
		switch(entry_tJDBCOutput_16.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "ERROR_MESSAGE", entry_tJDBCOutput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "NB_LINE", entry_tJDBCOutput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "NB_SUCCESS", entry_tJDBCOutput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "NB_REJECT", entry_tJDBCOutput_16.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_16 = new StringBuilder();
            for (int i_tJDBCOutput_16 = 0; i_tJDBCOutput_16 < entry_tJDBCOutput_16.getKey().length(); i_tJDBCOutput_16++) {
                char ch_tJDBCOutput_16 = entry_tJDBCOutput_16.getKey().charAt(i_tJDBCOutput_16);
                if(Character.isUpperCase(ch_tJDBCOutput_16) && i_tJDBCOutput_16> 0) {
                	studio_key_tJDBCOutput_16.append('_');
                }
                studio_key_tJDBCOutput_16.append(ch_tJDBCOutput_16);
            }
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", studio_key_tJDBCOutput_16.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_16.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_storage");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_16", true);
end_Hash.put("tJDBCOutput_16", System.currentTimeMillis());




/**
 * [tJDBCOutput_16 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_20:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tJDBCInput_33Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_16"
					     			globalMap.remove("tHash_Lookup_row18"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_20 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_20")==null){
    if(resourceMap.get("reader_tJDBCInput_20")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_20")).close();
		} catch (java.io.IOException e_tJDBCInput_20) {
			String errorMessage_tJDBCInput_20 = "failed to release the resource in tJDBCInput_20 :" + e_tJDBCInput_20.getMessage();
			System.err.println(errorMessage_tJDBCInput_20);
		}
	}
}
 



/**
 * [tJDBCInput_20 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";

	

 



/**
 * [tMap_16 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_16")==null){
    if(resourceMap.get("writer_tJDBCOutput_16")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_16")).close();
		} catch (java.io.IOException e_tJDBCOutput_16) {
			String errorMessage_tJDBCOutput_16 = "failed to release the resource in tJDBCOutput_16 :" + e_tJDBCOutput_16.getMessage();
			System.err.println(errorMessage_tJDBCOutput_16);
		}
	}
}
 



/**
 * [tJDBCOutput_16 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", 1);
	}
	


public static class insert_new_dc_storage_connectionStruct implements routines.system.IPersistableRow<insert_new_dc_storage_connectionStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date detach_date;

				public java.util.Date getDetach_date () {
					return this.detach_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.storage_domain_id == null) ? 0 : this.storage_domain_id.hashCode());
					
						result = prime * result + ((this.datacenter_id == null) ? 0 : this.datacenter_id.hashCode());
					
						result = prime * result + ((this.attach_date == null) ? 0 : this.attach_date.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final insert_new_dc_storage_connectionStruct other = (insert_new_dc_storage_connectionStruct) obj;
		
						if (this.storage_domain_id == null) {
							if (other.storage_domain_id != null)
								return false;
						
						} else if (!this.storage_domain_id.equals(other.storage_domain_id))
						
							return false;
					
						if (this.datacenter_id == null) {
							if (other.datacenter_id != null)
								return false;
						
						} else if (!this.datacenter_id.equals(other.datacenter_id))
						
							return false;
					
						if (this.attach_date == null) {
							if (other.attach_date != null)
								return false;
						
						} else if (!this.attach_date.equals(other.attach_date))
						
							return false;
					

		return true;
    }

	public void copyDataTo(insert_new_dc_storage_connectionStruct other) {

		other.storage_domain_id = this.storage_domain_id;
	            other.datacenter_id = this.datacenter_id;
	            other.attach_date = this.attach_date;
	            other.detach_date = this.detach_date;
	            
	}

	public void copyKeysDataTo(insert_new_dc_storage_connectionStruct other) {

		other.storage_domain_id = this.storage_domain_id;
	            	other.datacenter_id = this.datacenter_id;
	            	other.attach_date = this.attach_date;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",detach_date="+String.valueOf(detach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_new_dc_storage_connectionStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.storage_domain_id, other.storage_domain_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.datacenter_id, other.datacenter_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.attach_date, other.attach_date);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_id;

				public Object getStorage_id () {
					return this.storage_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public Object storage_pool_id;

				public Object getStorage_pool_id () {
					return this.storage_pool_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.storage_pool_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.storage_pool_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_pool_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_pool_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_id="+String.valueOf(storage_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",storage_pool_id="+String.valueOf(storage_pool_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_33Struct implements routines.system.IPersistableRow<after_tJDBCInput_33Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object storage_id;

				public Object getStorage_id () {
					return this.storage_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public Object storage_pool_id;

				public Object getStorage_pool_id () {
					return this.storage_pool_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.storage_id == null) ? 0 : this.storage_id.hashCode());
					
						result = prime * result + ((this.storage_pool_id == null) ? 0 : this.storage_pool_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tJDBCInput_33Struct other = (after_tJDBCInput_33Struct) obj;
		
						if (this.storage_id == null) {
							if (other.storage_id != null)
								return false;
						
						} else if (!this.storage_id.equals(other.storage_id))
						
							return false;
					
						if (this.storage_pool_id == null) {
							if (other.storage_pool_id != null)
								return false;
						
						} else if (!this.storage_pool_id.equals(other.storage_pool_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tJDBCInput_33Struct other) {

		other.storage_id = this.storage_id;
	            other.storage_domain_join_id = this.storage_domain_join_id;
	            other.storage_pool_id = this.storage_pool_id;
	            other.datacenter_join_id = this.datacenter_join_id;
	            
	}

	public void copyKeysDataTo(after_tJDBCInput_33Struct other) {

		other.storage_id = this.storage_id;
	            	other.storage_pool_id = this.storage_pool_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.storage_pool_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.storage_pool_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_pool_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_pool_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_id="+String.valueOf(storage_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",storage_pool_id="+String.valueOf(storage_pool_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_33Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.storage_id, other.storage_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.storage_pool_id, other.storage_pool_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_33Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_33_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_35Process(globalMap);

		row31Struct row31 = new row31Struct();
insert_new_dc_storage_connectionStruct insert_new_dc_storage_connection = new insert_new_dc_storage_connectionStruct();





	
	/**
	 * [tJDBCOutput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_23", false);
		start_Hash.put("tJDBCOutput_23", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_23";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_new_dc_storage_connection");
					}
				
		int tos_count_tJDBCOutput_23 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_23 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_23 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_23 = (String)(restRequest_tJDBCOutput_23 != null ? restRequest_tJDBCOutput_23.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_23 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_23 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_23 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_23 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_23.createRuntimeProperties();
 		                    props_tJDBCOutput_23.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_23.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_23.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_23.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_23.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_23.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_23.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_23.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.tableSelection.setValue("tablename",
 		                    "datacenter_storage_domain_map");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_23_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"disks_vm_map\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_23\",\"di.table.label\":\"disks_vm_map\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_23_1_fisrt sst_tJDBCOutput_23_1_fisrt = new SchemaSettingTool_tJDBCOutput_23_1_fisrt();
 		                    
 		                    props_tJDBCOutput_23.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_23_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_23_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"disks_vm_map\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_23\",\"di.table.label\":\"disks_vm_map\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_23_2_fisrt sst_tJDBCOutput_23_2_fisrt = new SchemaSettingTool_tJDBCOutput_23_2_fisrt();
 		                    
 		                    props_tJDBCOutput_23.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_23_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_23_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_23\",\"di.table.label\":\"disks_vm_map\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_23_3_fisrt sst_tJDBCOutput_23_3_fisrt = new SchemaSettingTool_tJDBCOutput_23_3_fisrt();
 		                    
 		                    props_tJDBCOutput_23.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_23_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_23.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_23.additionalColumns.setValue("referenceColumns",
 		                    "storage_domain_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_23.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_23 = props_tJDBCOutput_23.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_23 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_23 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_23 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_23.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_23);
        }
    }
globalMap.put("tJDBCOutput_23_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_23);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_23= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_23_MAPPINGS_URL", mappings_url_tJDBCOutput_23);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_23 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_23";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_23 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_23 = null;
topology_tJDBCOutput_23 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_23 = def_tJDBCOutput_23.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_23, topology_tJDBCOutput_23);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_23 = def_tJDBCOutput_23.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_23 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_23.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_23 = componentRuntime_tJDBCOutput_23.initialize(container_tJDBCOutput_23, props_tJDBCOutput_23);

if (initVr_tJDBCOutput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_23.getMessage());
}

if(componentRuntime_tJDBCOutput_23 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_23 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_23;
	compDriverInitialization_tJDBCOutput_23.runAtDriver(container_tJDBCOutput_23);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_23 = null;
if(componentRuntime_tJDBCOutput_23 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_23 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_23;
	if (doesNodeBelongToRequest_tJDBCOutput_23) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_23 = sourceOrSink_tJDBCOutput_23.validate(container_tJDBCOutput_23);
        if (vr_tJDBCOutput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_23.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_23 = null;
    if (sourceOrSink_tJDBCOutput_23 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_23 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_23;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_23 = sink_tJDBCOutput_23.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_23) {
            writeOperation_tJDBCOutput_23.initialize(container_tJDBCOutput_23);
        }
        writer_tJDBCOutput_23 = writeOperation_tJDBCOutput_23.createWriter(container_tJDBCOutput_23);
        if (doesNodeBelongToRequest_tJDBCOutput_23) {
            writer_tJDBCOutput_23.open("tJDBCOutput_23");
        }

        resourceMap.put("writer_tJDBCOutput_23", writer_tJDBCOutput_23);
    } // end of "sourceOrSink_tJDBCOutput_23 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_23 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_23.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_23 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_23 = props_tJDBCOutput_23.getSchema(c_tJDBCOutput_23, false);
    incomingEnforcer_tJDBCOutput_23 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_23);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_23 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_23 = null;


 



/**
 * [tJDBCOutput_23 begin ] stop
 */



	
	/**
	 * [tMap_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_23", false);
		start_Hash.put("tMap_23", System.currentTimeMillis());
		
	
	currentComponent="tMap_23";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_23 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct> tHash_Lookup_row33 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct>) 
					globalMap.get( "tHash_Lookup_row33" ))
					;					
					
	

row33Struct row33HashKey = new row33Struct();
row33Struct row33Default = new row33Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_23__Struct  {
}
Var__tMap_23__Struct Var__tMap_23 = new Var__tMap_23__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_new_dc_storage_connectionStruct insert_new_dc_storage_connection_tmp = new insert_new_dc_storage_connectionStruct();
// ###############################

        
        



        









 



/**
 * [tMap_23 begin ] stop
 */



	
	/**
	 * [tJDBCInput_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_33", false);
		start_Hash.put("tJDBCInput_33", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_33";

	
		int tos_count_tJDBCInput_33 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_33 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_33 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_33 = (String)(restRequest_tJDBCInput_33 != null ? restRequest_tJDBCInput_33.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_33 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_33 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_33 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_33 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_33.createRuntimeProperties();
 		                    props_tJDBCInput_33.setValue("sql",
 		                    "SELECT storage_id,\n		upper(cast(storage_id as char(36))) as storage_domain_join_id,\n		storage_pool_id,\n		upper(cast("
+"storage_pool_id as char(36))) as datacenter_join_id\nFROM  storage_pool_iso_map");
 		                    
 		                    props_tJDBCInput_33.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_33.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_33.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_33.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_33.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_33.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_33.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_33.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_33.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_33_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_disk_vm_map_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"storage_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_pool_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"storage_pool_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_pool_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_33\",\"di.table.label\":\"dwh_disk_vm_map_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_33_1_fisrt sst_tJDBCInput_33_1_fisrt = new SchemaSettingTool_tJDBCInput_33_1_fisrt();
 		                    
 		                    props_tJDBCInput_33.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_33_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_33.tableSelection.setValue("tablename",
 		                    "storage_pool_iso_map");
 		                    
 		                    java.util.List<Object> tJDBCInput_33_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_33_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_33_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_33_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_33_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_33.trimTable).setValue("trim",tJDBCInput_33_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_33_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_33_trimTable_columnName.add("storage_id");
 		                            
 		                            tJDBCInput_33_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                            tJDBCInput_33_trimTable_columnName.add("storage_pool_id");
 		                            
 		                            tJDBCInput_33_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_33.trimTable).setValue("columnName",tJDBCInput_33_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_33.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_33 = props_tJDBCInput_33.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_33 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_33 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_33 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_33.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_33);
        }
    }
globalMap.put("tJDBCInput_33_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_33);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_33= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_33_MAPPINGS_URL", mappings_url_tJDBCInput_33);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_33 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_33";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_33 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_33 = null;
topology_tJDBCInput_33 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_33 = def_tJDBCInput_33.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_33, topology_tJDBCInput_33);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_33 = def_tJDBCInput_33.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_33 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_33.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_33 = componentRuntime_tJDBCInput_33.initialize(container_tJDBCInput_33, props_tJDBCInput_33);

if (initVr_tJDBCInput_33.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_33.getMessage());
}

if(componentRuntime_tJDBCInput_33 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_33 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_33;
	compDriverInitialization_tJDBCInput_33.runAtDriver(container_tJDBCInput_33);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_33 = null;
if(componentRuntime_tJDBCInput_33 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_33 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_33;
	if (doesNodeBelongToRequest_tJDBCInput_33) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_33 = sourceOrSink_tJDBCInput_33.validate(container_tJDBCInput_33);
        if (vr_tJDBCInput_33.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_33.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_33 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_33 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_33;
        reader_tJDBCInput_33 = source_tJDBCInput_33.createReader(container_tJDBCInput_33);
	    reader_tJDBCInput_33 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_33, container_tJDBCInput_33);

            boolean multi_output_is_allowed_tJDBCInput_33 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_33 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_33.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_33 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_33 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_33 = props_tJDBCInput_33.getSchema(c_tJDBCInput_33, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_33 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_33, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_33 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_33 = reader_tJDBCInput_33.start();

        resourceMap.put("reader_tJDBCInput_33", reader_tJDBCInput_33);

        for (; available_tJDBCInput_33; available_tJDBCInput_33 = reader_tJDBCInput_33.advance()) {
			nb_line_tJDBCInput_33++;

			
			if (multi_output_is_allowed_tJDBCInput_33) {
				
					row31 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_33 = reader_tJDBCInput_33.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_33) {
						row31 = new row31Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_33 == null) {
            factory_tJDBCInput_33 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_33.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_33.setWrapped(factory_tJDBCInput_33.convertToAvro(data_tJDBCInput_33));
                Object columnValue_0_tJDBCInput_33 = outgoingEnforcer_tJDBCInput_33.get(0);
                        row31.storage_id = (Object) (columnValue_0_tJDBCInput_33);
                Object columnValue_1_tJDBCInput_33 = outgoingEnforcer_tJDBCInput_33.get(1);
                        row31.storage_domain_join_id = (String) (columnValue_1_tJDBCInput_33);
                Object columnValue_2_tJDBCInput_33 = outgoingEnforcer_tJDBCInput_33.get(2);
                        row31.storage_pool_id = (Object) (columnValue_2_tJDBCInput_33);
                Object columnValue_3_tJDBCInput_33 = outgoingEnforcer_tJDBCInput_33.get(3);
                        row31.datacenter_join_id = (String) (columnValue_3_tJDBCInput_33);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_33) {
				java.util.Map<String,Object> info_tJDBCInput_33 = e_tJDBCInput_33.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_33 = null;
					if(info_tJDBCInput_33.containsKey("error")){
						errorMessage_tJDBCInput_33 = info_tJDBCInput_33.get("error");
					}else if(info_tJDBCInput_33.containsKey("errorMessage")){
						errorMessage_tJDBCInput_33 = info_tJDBCInput_33.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_33 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_33 = "Row "+ nb_line_tJDBCInput_33 + ": "+errorMessage_tJDBCInput_33;
					System.err.println(errorMessage_tJDBCInput_33);
				
					// If the record is reject, the main line record should put NULL
					row31 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_33 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_33 = null;


 



/**
 * [tJDBCInput_33 begin ] stop
 */
	
	/**
	 * [tJDBCInput_33 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_33";

	


 


	tos_count_tJDBCInput_33++;

/**
 * [tJDBCInput_33 main ] stop
 */
	
	/**
	 * [tJDBCInput_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_33";

	


 



/**
 * [tJDBCInput_33 process_data_begin ] stop
 */

	
	/**
	 * [tMap_23 main ] start
	 */

	

	
	
	currentComponent="tMap_23";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_23 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_23 = false;
		  boolean mainRowRejected_tMap_23 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row33" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow33 = false;
       		  	    	
       		  	    	
 							row33Struct row33ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_23) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_23 = false;
								
                        		    		    row33HashKey.storage_domain_join_id = row31.storage_domain_join_id ;
                        		    		
                        		    		    row33HashKey.datacenter_join_id = row31.datacenter_join_id ;
                        		    		

								
		                        	row33HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row33.lookup( row33HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row33.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_23 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row33 != null && tHash_Lookup_row33.getCount(row33HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row33' and it contains more one result from keys :  row33.storage_domain_join_id = '" + row33HashKey.storage_domain_join_id + "', row33.datacenter_join_id = '" + row33HashKey.datacenter_join_id + "'");
								} // G 071
							

							row33Struct row33 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row33Struct fromLookup_row33 = null;
							row33 = row33Default;
										 
							
								 
							
							
								if (tHash_Lookup_row33 !=null && tHash_Lookup_row33.hasNext()) { // G 099
								
							
								
								fromLookup_row33 = tHash_Lookup_row33.next();

							
							
								} // G 099
							
							

							if(fromLookup_row33 != null) {
								row33 = fromLookup_row33;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_23__Struct Var = Var__tMap_23;// ###############################
        // ###############################
        // # Output tables

insert_new_dc_storage_connection = null;

if(!rejectedInnerJoin_tMap_23 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'insert_new_dc_storage_connection'
// # Filter conditions 
if( rejectedInnerJoin_tMap_23 ) {
insert_new_dc_storage_connection_tmp.storage_domain_id = row31.storage_id ;
insert_new_dc_storage_connection_tmp.datacenter_id = row31.storage_pool_id ;
insert_new_dc_storage_connection_tmp.attach_date = context.runTime;
insert_new_dc_storage_connection_tmp.detach_date = null;
insert_new_dc_storage_connection = insert_new_dc_storage_connection_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_23 = false;










 


	tos_count_tMap_23++;

/**
 * [tMap_23 main ] stop
 */
	
	/**
	 * [tMap_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_23";

	

 



/**
 * [tMap_23 process_data_begin ] stop
 */
// Start of branch "insert_new_dc_storage_connection"
if(insert_new_dc_storage_connection != null) { 



	
	/**
	 * [tJDBCOutput_23 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_new_dc_storage_connection"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_23 != null) {
            incomingEnforcer_tJDBCOutput_23.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_23 != null && incomingEnforcer_tJDBCOutput_23.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_23.put("storage_domain_id", insert_new_dc_storage_connection.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_23 != null && incomingEnforcer_tJDBCOutput_23.getRuntimeSchema().getField("datacenter_id") != null){
                    incomingEnforcer_tJDBCOutput_23.put("datacenter_id", insert_new_dc_storage_connection.datacenter_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_23 != null && incomingEnforcer_tJDBCOutput_23.getRuntimeSchema().getField("attach_date") != null){
                    incomingEnforcer_tJDBCOutput_23.put("attach_date", insert_new_dc_storage_connection.attach_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_23 != null && incomingEnforcer_tJDBCOutput_23.getRuntimeSchema().getField("detach_date") != null){
                    incomingEnforcer_tJDBCOutput_23.put("detach_date", insert_new_dc_storage_connection.detach_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_23 = null;
        if (incomingEnforcer_tJDBCOutput_23 != null) {
            data_tJDBCOutput_23 = incomingEnforcer_tJDBCOutput_23.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_23 != null && data_tJDBCOutput_23 != null) {
        	writer_tJDBCOutput_23.write(data_tJDBCOutput_23);
        }
        
        nb_line_tJDBCOutput_23++;

 


	tos_count_tJDBCOutput_23++;

/**
 * [tJDBCOutput_23 main ] stop
 */
	
	/**
	 * [tJDBCOutput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	


 



/**
 * [tJDBCOutput_23 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	


 



/**
 * [tJDBCOutput_23 process_data_end ] stop
 */

} // End of branch "insert_new_dc_storage_connection"




	
	/**
	 * [tMap_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_23";

	

 



/**
 * [tMap_23 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_33";

	


 



/**
 * [tJDBCInput_33 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_33 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_33";

	
// end of generic


resourceMap.put("finish_tJDBCInput_33", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_33 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_33 = null;
    if (reader_tJDBCInput_33 != null) {
        reader_tJDBCInput_33.close();
        resultMap_tJDBCInput_33 = reader_tJDBCInput_33.getReturnValues();
    }
if(resultMap_tJDBCInput_33!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_33 : resultMap_tJDBCInput_33.entrySet()) {
		switch(entry_tJDBCInput_33.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_33.setComponentData("tJDBCInput_33", "ERROR_MESSAGE", entry_tJDBCInput_33.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_33.setComponentData("tJDBCInput_33", "NB_LINE", entry_tJDBCInput_33.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_33.setComponentData("tJDBCInput_33", "NB_SUCCESS", entry_tJDBCInput_33.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_33.setComponentData("tJDBCInput_33", "NB_REJECT", entry_tJDBCInput_33.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_33 = new StringBuilder();
            for (int i_tJDBCInput_33 = 0; i_tJDBCInput_33 < entry_tJDBCInput_33.getKey().length(); i_tJDBCInput_33++) {
                char ch_tJDBCInput_33 = entry_tJDBCInput_33.getKey().charAt(i_tJDBCInput_33);
                if(Character.isUpperCase(ch_tJDBCInput_33) && i_tJDBCInput_33> 0) {
                	studio_key_tJDBCInput_33.append('_');
                }
                studio_key_tJDBCInput_33.append(ch_tJDBCInput_33);
            }
			container_tJDBCInput_33.setComponentData("tJDBCInput_33", studio_key_tJDBCInput_33.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_33.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_33", true);
end_Hash.put("tJDBCInput_33", System.currentTimeMillis());




/**
 * [tJDBCInput_33 end ] stop
 */

	
	/**
	 * [tMap_23 end ] start
	 */

	

	
	
	currentComponent="tMap_23";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row33 != null) {
						tHash_Lookup_row33.endGet();
					}
					globalMap.remove( "tHash_Lookup_row33" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_23", true);
end_Hash.put("tMap_23", System.currentTimeMillis());




/**
 * [tMap_23 end ] stop
 */

	
	/**
	 * [tJDBCOutput_23 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_23", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_23 = null;
    if (writer_tJDBCOutput_23 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_23 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_23.close();
        resultMap_tJDBCOutput_23 = writer_tJDBCOutput_23.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_23), container_tJDBCOutput_23);
    }
if(resultMap_tJDBCOutput_23!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_23 : resultMap_tJDBCOutput_23.entrySet()) {
		switch(entry_tJDBCOutput_23.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "ERROR_MESSAGE", entry_tJDBCOutput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "NB_LINE", entry_tJDBCOutput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "NB_SUCCESS", entry_tJDBCOutput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "NB_REJECT", entry_tJDBCOutput_23.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_23 = new StringBuilder();
            for (int i_tJDBCOutput_23 = 0; i_tJDBCOutput_23 < entry_tJDBCOutput_23.getKey().length(); i_tJDBCOutput_23++) {
                char ch_tJDBCOutput_23 = entry_tJDBCOutput_23.getKey().charAt(i_tJDBCOutput_23);
                if(Character.isUpperCase(ch_tJDBCOutput_23) && i_tJDBCOutput_23> 0) {
                	studio_key_tJDBCOutput_23.append('_');
                }
                studio_key_tJDBCOutput_23.append(ch_tJDBCOutput_23);
            }
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", studio_key_tJDBCOutput_23.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_23.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_new_dc_storage_connection");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_23", true);
end_Hash.put("tJDBCOutput_23", System.currentTimeMillis());




/**
 * [tJDBCOutput_23 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_33:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tJDBCInput_34Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_23"
					     			globalMap.remove("tHash_Lookup_row33"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_33 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_33";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_33")==null){
    if(resourceMap.get("reader_tJDBCInput_33")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_33")).close();
		} catch (java.io.IOException e_tJDBCInput_33) {
			String errorMessage_tJDBCInput_33 = "failed to release the resource in tJDBCInput_33 :" + e_tJDBCInput_33.getMessage();
			System.err.println(errorMessage_tJDBCInput_33);
		}
	}
}
 



/**
 * [tJDBCInput_33 finally ] stop
 */

	
	/**
	 * [tMap_23 finally ] start
	 */

	

	
	
	currentComponent="tMap_23";

	

 



/**
 * [tMap_23 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_23 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_23")==null){
    if(resourceMap.get("writer_tJDBCOutput_23")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_23")).close();
		} catch (java.io.IOException e_tJDBCOutput_23) {
			String errorMessage_tJDBCOutput_23 = "failed to release the resource in tJDBCOutput_23 :" + e_tJDBCOutput_23.getMessage();
			System.err.println(errorMessage_tJDBCOutput_23);
		}
	}
}
 



/**
 * [tJDBCOutput_23 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_33_SUBPROCESS_STATE", 1);
	}
	


public static class delete_dc_storage_connectionStruct implements routines.system.IPersistableRow<delete_dc_storage_connectionStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date detach_date;

				public java.util.Date getDetach_date () {
					return this.detach_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.storage_domain_id == null) ? 0 : this.storage_domain_id.hashCode());
					
						result = prime * result + ((this.datacenter_id == null) ? 0 : this.datacenter_id.hashCode());
					
						result = prime * result + ((this.attach_date == null) ? 0 : this.attach_date.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final delete_dc_storage_connectionStruct other = (delete_dc_storage_connectionStruct) obj;
		
						if (this.storage_domain_id == null) {
							if (other.storage_domain_id != null)
								return false;
						
						} else if (!this.storage_domain_id.equals(other.storage_domain_id))
						
							return false;
					
						if (this.datacenter_id == null) {
							if (other.datacenter_id != null)
								return false;
						
						} else if (!this.datacenter_id.equals(other.datacenter_id))
						
							return false;
					
						if (this.attach_date == null) {
							if (other.attach_date != null)
								return false;
						
						} else if (!this.attach_date.equals(other.attach_date))
						
							return false;
					

		return true;
    }

	public void copyDataTo(delete_dc_storage_connectionStruct other) {

		other.storage_domain_id = this.storage_domain_id;
	            other.datacenter_id = this.datacenter_id;
	            other.attach_date = this.attach_date;
	            other.detach_date = this.detach_date;
	            
	}

	public void copyKeysDataTo(delete_dc_storage_connectionStruct other) {

		other.storage_domain_id = this.storage_domain_id;
	            	other.datacenter_id = this.datacenter_id;
	            	other.attach_date = this.attach_date;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",detach_date="+String.valueOf(detach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_dc_storage_connectionStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.storage_domain_id, other.storage_domain_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.datacenter_id, other.datacenter_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.attach_date, other.attach_date);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
		sb.append(",attach_date="+String.valueOf(attach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_34Struct implements routines.system.IPersistableRow<after_tJDBCInput_34Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public Object datacenter_id;

				public Object getDatacenter_id () {
					return this.datacenter_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
						this.datacenter_id = (Object) dis.readObject();
					
					this.datacenter_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.datacenter_id);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",datacenter_id="+String.valueOf(datacenter_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
		sb.append(",attach_date="+String.valueOf(attach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_34Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_34_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_32Process(globalMap);

		row30Struct row30 = new row30Struct();
delete_dc_storage_connectionStruct delete_dc_storage_connection = new delete_dc_storage_connectionStruct();





	
	/**
	 * [tJDBCOutput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_24", false);
		start_Hash.put("tJDBCOutput_24", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_24";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_dc_storage_connection");
					}
				
		int tos_count_tJDBCOutput_24 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_24 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_24 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_24 = (String)(restRequest_tJDBCOutput_24 != null ? restRequest_tJDBCOutput_24.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_24 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_24 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_24 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_24 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_24.createRuntimeProperties();
 		                    props_tJDBCOutput_24.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE);
 		                    
 		                    props_tJDBCOutput_24.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_24.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_24.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_24.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_24.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_24.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_24.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.tableSelection.setValue("tablename",
 		                    "datacenter_storage_domain_map");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_24_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"disks_vm_map\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_24\",\"di.table.label\":\"disks_vm_map\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_24_1_fisrt sst_tJDBCOutput_24_1_fisrt = new SchemaSettingTool_tJDBCOutput_24_1_fisrt();
 		                    
 		                    props_tJDBCOutput_24.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_24_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_24_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"disks_vm_map\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_24\",\"di.table.label\":\"disks_vm_map\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_24_2_fisrt sst_tJDBCOutput_24_2_fisrt = new SchemaSettingTool_tJDBCOutput_24_2_fisrt();
 		                    
 		                    props_tJDBCOutput_24.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_24_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_24_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_24\",\"di.table.label\":\"disks_vm_map\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_24_3_fisrt sst_tJDBCOutput_24_3_fisrt = new SchemaSettingTool_tJDBCOutput_24_3_fisrt();
 		                    
 		                    props_tJDBCOutput_24.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_24_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_24.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_24.additionalColumns.setValue("referenceColumns",
 		                    "storage_domain_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_24.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_24 = props_tJDBCOutput_24.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_24 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_24 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_24 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_24.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_24);
        }
    }
globalMap.put("tJDBCOutput_24_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_24);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_24= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_24_MAPPINGS_URL", mappings_url_tJDBCOutput_24);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_24 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_24";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_24 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_24 = null;
topology_tJDBCOutput_24 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_24 = def_tJDBCOutput_24.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_24, topology_tJDBCOutput_24);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_24 = def_tJDBCOutput_24.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_24 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_24.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_24 = componentRuntime_tJDBCOutput_24.initialize(container_tJDBCOutput_24, props_tJDBCOutput_24);

if (initVr_tJDBCOutput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_24.getMessage());
}

if(componentRuntime_tJDBCOutput_24 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_24 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_24;
	compDriverInitialization_tJDBCOutput_24.runAtDriver(container_tJDBCOutput_24);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_24 = null;
if(componentRuntime_tJDBCOutput_24 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_24 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_24;
	if (doesNodeBelongToRequest_tJDBCOutput_24) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_24 = sourceOrSink_tJDBCOutput_24.validate(container_tJDBCOutput_24);
        if (vr_tJDBCOutput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_24.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_24 = null;
    if (sourceOrSink_tJDBCOutput_24 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_24 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_24;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_24 = sink_tJDBCOutput_24.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_24) {
            writeOperation_tJDBCOutput_24.initialize(container_tJDBCOutput_24);
        }
        writer_tJDBCOutput_24 = writeOperation_tJDBCOutput_24.createWriter(container_tJDBCOutput_24);
        if (doesNodeBelongToRequest_tJDBCOutput_24) {
            writer_tJDBCOutput_24.open("tJDBCOutput_24");
        }

        resourceMap.put("writer_tJDBCOutput_24", writer_tJDBCOutput_24);
    } // end of "sourceOrSink_tJDBCOutput_24 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_24 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_24.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_24 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_24 = props_tJDBCOutput_24.getSchema(c_tJDBCOutput_24, false);
    incomingEnforcer_tJDBCOutput_24 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_24);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_24 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_24 = null;


 



/**
 * [tJDBCOutput_24 begin ] stop
 */



	
	/**
	 * [tMap_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_22", false);
		start_Hash.put("tMap_22", System.currentTimeMillis());
		
	
	currentComponent="tMap_22";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tMap_22 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
					globalMap.get( "tHash_Lookup_row32" ))
					;					
					
	

row32Struct row32HashKey = new row32Struct();
row32Struct row32Default = new row32Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_22__Struct  {
}
Var__tMap_22__Struct Var__tMap_22 = new Var__tMap_22__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_dc_storage_connectionStruct delete_dc_storage_connection_tmp = new delete_dc_storage_connectionStruct();
// ###############################

        
        



        









 



/**
 * [tMap_22 begin ] stop
 */



	
	/**
	 * [tJDBCInput_34 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_34", false);
		start_Hash.put("tJDBCInput_34", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_34";

	
		int tos_count_tJDBCInput_34 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_34 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_34 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_34 = (String)(restRequest_tJDBCInput_34 != null ? restRequest_tJDBCInput_34.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_34 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_34 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_34 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_34 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_34.createRuntimeProperties();
 		                    props_tJDBCInput_34.setValue("sql",
 		                    "SELECT storage_domain_id, \n		upper(cast(storage_domain_id as char(36))) as storage_domain_join_id, \n		datacenter_id, "
+"\n		upper(cast(datacenter_id as char(36))) as datacenter_join_id,\n		attach_date\nFROM  v4_5_latest_map_datacenters_storage"
+"_domains");
 		                    
 		                    props_tJDBCInput_34.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_34.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_34.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_34.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_34.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_34.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_34.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_34.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_34.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_34_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_map_datacenters_storage_domains\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_34\",\"di.table.label\":\"v4_5_latest_map_datacenters_storage_domains\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_34_1_fisrt sst_tJDBCInput_34_1_fisrt = new SchemaSettingTool_tJDBCInput_34_1_fisrt();
 		                    
 		                    props_tJDBCInput_34.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_34_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_34.tableSelection.setValue("tablename",
 		                    "v4_5_latest_map_datacenters_storage_domains");
 		                    
 		                    java.util.List<Object> tJDBCInput_34_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_34_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_34_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_34_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_34_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_34_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_34.trimTable).setValue("trim",tJDBCInput_34_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_34_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_34_trimTable_columnName.add("storage_domain_id");
 		                            
 		                            tJDBCInput_34_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                            tJDBCInput_34_trimTable_columnName.add("datacenter_id");
 		                            
 		                            tJDBCInput_34_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                            tJDBCInput_34_trimTable_columnName.add("attach_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_34.trimTable).setValue("columnName",tJDBCInput_34_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_34.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_34 = props_tJDBCInput_34.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_34 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_34 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_34 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_34.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_34);
        }
    }
globalMap.put("tJDBCInput_34_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_34);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_34= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_34_MAPPINGS_URL", mappings_url_tJDBCInput_34);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_34 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_34";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_34 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_34 = null;
topology_tJDBCInput_34 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_34 = def_tJDBCInput_34.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_34, topology_tJDBCInput_34);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_34 = def_tJDBCInput_34.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_34 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_34.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_34 = componentRuntime_tJDBCInput_34.initialize(container_tJDBCInput_34, props_tJDBCInput_34);

if (initVr_tJDBCInput_34.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_34.getMessage());
}

if(componentRuntime_tJDBCInput_34 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_34 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_34;
	compDriverInitialization_tJDBCInput_34.runAtDriver(container_tJDBCInput_34);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_34 = null;
if(componentRuntime_tJDBCInput_34 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_34 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_34;
	if (doesNodeBelongToRequest_tJDBCInput_34) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_34 = sourceOrSink_tJDBCInput_34.validate(container_tJDBCInput_34);
        if (vr_tJDBCInput_34.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_34.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_34 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_34 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_34;
        reader_tJDBCInput_34 = source_tJDBCInput_34.createReader(container_tJDBCInput_34);
	    reader_tJDBCInput_34 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_34, container_tJDBCInput_34);

            boolean multi_output_is_allowed_tJDBCInput_34 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_34 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_34.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_34 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_34 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_34 = props_tJDBCInput_34.getSchema(c_tJDBCInput_34, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_34 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_34, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_34 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_34 = reader_tJDBCInput_34.start();

        resourceMap.put("reader_tJDBCInput_34", reader_tJDBCInput_34);

        for (; available_tJDBCInput_34; available_tJDBCInput_34 = reader_tJDBCInput_34.advance()) {
			nb_line_tJDBCInput_34++;

			
			if (multi_output_is_allowed_tJDBCInput_34) {
				
					row30 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_34 = reader_tJDBCInput_34.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_34) {
						row30 = new row30Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_34 == null) {
            factory_tJDBCInput_34 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_34.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_34.setWrapped(factory_tJDBCInput_34.convertToAvro(data_tJDBCInput_34));
                Object columnValue_0_tJDBCInput_34 = outgoingEnforcer_tJDBCInput_34.get(0);
                        row30.storage_domain_id = (Object) (columnValue_0_tJDBCInput_34);
                Object columnValue_1_tJDBCInput_34 = outgoingEnforcer_tJDBCInput_34.get(1);
                        row30.storage_domain_join_id = (String) (columnValue_1_tJDBCInput_34);
                Object columnValue_2_tJDBCInput_34 = outgoingEnforcer_tJDBCInput_34.get(2);
                        row30.datacenter_id = (Object) (columnValue_2_tJDBCInput_34);
                Object columnValue_3_tJDBCInput_34 = outgoingEnforcer_tJDBCInput_34.get(3);
                        row30.datacenter_join_id = (String) (columnValue_3_tJDBCInput_34);
                Object columnValue_4_tJDBCInput_34 = outgoingEnforcer_tJDBCInput_34.get(4);
                        row30.attach_date = (java.util.Date) (columnValue_4_tJDBCInput_34);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_34) {
				java.util.Map<String,Object> info_tJDBCInput_34 = e_tJDBCInput_34.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_34 = null;
					if(info_tJDBCInput_34.containsKey("error")){
						errorMessage_tJDBCInput_34 = info_tJDBCInput_34.get("error");
					}else if(info_tJDBCInput_34.containsKey("errorMessage")){
						errorMessage_tJDBCInput_34 = info_tJDBCInput_34.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_34 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_34 = "Row "+ nb_line_tJDBCInput_34 + ": "+errorMessage_tJDBCInput_34;
					System.err.println(errorMessage_tJDBCInput_34);
				
					// If the record is reject, the main line record should put NULL
					row30 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_34 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_34 = null;


 



/**
 * [tJDBCInput_34 begin ] stop
 */
	
	/**
	 * [tJDBCInput_34 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_34";

	


 


	tos_count_tJDBCInput_34++;

/**
 * [tJDBCInput_34 main ] stop
 */
	
	/**
	 * [tJDBCInput_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_34";

	


 



/**
 * [tJDBCInput_34 process_data_begin ] stop
 */

	
	/**
	 * [tMap_22 main ] start
	 */

	

	
	
	currentComponent="tMap_22";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_22 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_22 = false;
		  boolean mainRowRejected_tMap_22 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row32" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow32 = false;
       		  	    	
       		  	    	
 							row32Struct row32ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_22) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_22 = false;
								
                        		    		    row32HashKey.storage_domain_join_id = row30.storage_domain_join_id ;
                        		    		
                        		    		    row32HashKey.datacenter_join_id = row30.datacenter_join_id ;
                        		    		

								
		                        	row32HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row32.lookup( row32HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row32.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_22 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row32 != null && tHash_Lookup_row32.getCount(row32HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row32' and it contains more one result from keys :  row32.storage_domain_join_id = '" + row32HashKey.storage_domain_join_id + "', row32.datacenter_join_id = '" + row32HashKey.datacenter_join_id + "'");
								} // G 071
							

							row32Struct row32 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row32Struct fromLookup_row32 = null;
							row32 = row32Default;
										 
							
								 
							
							
								if (tHash_Lookup_row32 !=null && tHash_Lookup_row32.hasNext()) { // G 099
								
							
								
								fromLookup_row32 = tHash_Lookup_row32.next();

							
							
								} // G 099
							
							

							if(fromLookup_row32 != null) {
								row32 = fromLookup_row32;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_22__Struct Var = Var__tMap_22;// ###############################
        // ###############################
        // # Output tables

delete_dc_storage_connection = null;

if(!rejectedInnerJoin_tMap_22 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_dc_storage_connection'
// # Filter conditions 
if( rejectedInnerJoin_tMap_22 ) {
delete_dc_storage_connection_tmp.storage_domain_id = row30.storage_domain_id;
delete_dc_storage_connection_tmp.datacenter_id = row30.datacenter_id ;
delete_dc_storage_connection_tmp.attach_date = row30.attach_date ;
delete_dc_storage_connection_tmp.detach_date = context.runTime;
delete_dc_storage_connection = delete_dc_storage_connection_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_22 = false;










 


	tos_count_tMap_22++;

/**
 * [tMap_22 main ] stop
 */
	
	/**
	 * [tMap_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_22";

	

 



/**
 * [tMap_22 process_data_begin ] stop
 */
// Start of branch "delete_dc_storage_connection"
if(delete_dc_storage_connection != null) { 



	
	/**
	 * [tJDBCOutput_24 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_dc_storage_connection"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_24 != null) {
            incomingEnforcer_tJDBCOutput_24.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_24 != null && incomingEnforcer_tJDBCOutput_24.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_24.put("storage_domain_id", delete_dc_storage_connection.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_24 != null && incomingEnforcer_tJDBCOutput_24.getRuntimeSchema().getField("datacenter_id") != null){
                    incomingEnforcer_tJDBCOutput_24.put("datacenter_id", delete_dc_storage_connection.datacenter_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_24 != null && incomingEnforcer_tJDBCOutput_24.getRuntimeSchema().getField("attach_date") != null){
                    incomingEnforcer_tJDBCOutput_24.put("attach_date", delete_dc_storage_connection.attach_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_24 != null && incomingEnforcer_tJDBCOutput_24.getRuntimeSchema().getField("detach_date") != null){
                    incomingEnforcer_tJDBCOutput_24.put("detach_date", delete_dc_storage_connection.detach_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_24 = null;
        if (incomingEnforcer_tJDBCOutput_24 != null) {
            data_tJDBCOutput_24 = incomingEnforcer_tJDBCOutput_24.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_24 != null && data_tJDBCOutput_24 != null) {
        	writer_tJDBCOutput_24.write(data_tJDBCOutput_24);
        }
        
        nb_line_tJDBCOutput_24++;

 


	tos_count_tJDBCOutput_24++;

/**
 * [tJDBCOutput_24 main ] stop
 */
	
	/**
	 * [tJDBCOutput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	


 



/**
 * [tJDBCOutput_24 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	


 



/**
 * [tJDBCOutput_24 process_data_end ] stop
 */

} // End of branch "delete_dc_storage_connection"




	
	/**
	 * [tMap_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_22";

	

 



/**
 * [tMap_22 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_34";

	


 



/**
 * [tJDBCInput_34 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_34 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_34";

	
// end of generic


resourceMap.put("finish_tJDBCInput_34", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_34 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_34 = null;
    if (reader_tJDBCInput_34 != null) {
        reader_tJDBCInput_34.close();
        resultMap_tJDBCInput_34 = reader_tJDBCInput_34.getReturnValues();
    }
if(resultMap_tJDBCInput_34!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_34 : resultMap_tJDBCInput_34.entrySet()) {
		switch(entry_tJDBCInput_34.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_34.setComponentData("tJDBCInput_34", "ERROR_MESSAGE", entry_tJDBCInput_34.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_34.setComponentData("tJDBCInput_34", "NB_LINE", entry_tJDBCInput_34.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_34.setComponentData("tJDBCInput_34", "NB_SUCCESS", entry_tJDBCInput_34.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_34.setComponentData("tJDBCInput_34", "NB_REJECT", entry_tJDBCInput_34.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_34 = new StringBuilder();
            for (int i_tJDBCInput_34 = 0; i_tJDBCInput_34 < entry_tJDBCInput_34.getKey().length(); i_tJDBCInput_34++) {
                char ch_tJDBCInput_34 = entry_tJDBCInput_34.getKey().charAt(i_tJDBCInput_34);
                if(Character.isUpperCase(ch_tJDBCInput_34) && i_tJDBCInput_34> 0) {
                	studio_key_tJDBCInput_34.append('_');
                }
                studio_key_tJDBCInput_34.append(ch_tJDBCInput_34);
            }
			container_tJDBCInput_34.setComponentData("tJDBCInput_34", studio_key_tJDBCInput_34.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_34.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_34", true);
end_Hash.put("tJDBCInput_34", System.currentTimeMillis());




/**
 * [tJDBCInput_34 end ] stop
 */

	
	/**
	 * [tMap_22 end ] start
	 */

	

	
	
	currentComponent="tMap_22";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row32 != null) {
						tHash_Lookup_row32.endGet();
					}
					globalMap.remove( "tHash_Lookup_row32" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tMap_22", true);
end_Hash.put("tMap_22", System.currentTimeMillis());




/**
 * [tMap_22 end ] stop
 */

	
	/**
	 * [tJDBCOutput_24 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_24", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_24 = null;
    if (writer_tJDBCOutput_24 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_24 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_24.close();
        resultMap_tJDBCOutput_24 = writer_tJDBCOutput_24.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_24), container_tJDBCOutput_24);
    }
if(resultMap_tJDBCOutput_24!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_24 : resultMap_tJDBCOutput_24.entrySet()) {
		switch(entry_tJDBCOutput_24.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "ERROR_MESSAGE", entry_tJDBCOutput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "NB_LINE", entry_tJDBCOutput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "NB_SUCCESS", entry_tJDBCOutput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "NB_REJECT", entry_tJDBCOutput_24.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_24 = new StringBuilder();
            for (int i_tJDBCOutput_24 = 0; i_tJDBCOutput_24 < entry_tJDBCOutput_24.getKey().length(); i_tJDBCOutput_24++) {
                char ch_tJDBCOutput_24 = entry_tJDBCOutput_24.getKey().charAt(i_tJDBCOutput_24);
                if(Character.isUpperCase(ch_tJDBCOutput_24) && i_tJDBCOutput_24> 0) {
                	studio_key_tJDBCOutput_24.append('_');
                }
                studio_key_tJDBCOutput_24.append(ch_tJDBCOutput_24);
            }
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", studio_key_tJDBCOutput_24.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_24.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_dc_storage_connection");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_24", true);
end_Hash.put("tJDBCOutput_24", System.currentTimeMillis());




/**
 * [tJDBCOutput_24 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_34:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tJDBCInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_22"
					     			globalMap.remove("tHash_Lookup_row32"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_34 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_34";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_34")==null){
    if(resourceMap.get("reader_tJDBCInput_34")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_34")).close();
		} catch (java.io.IOException e_tJDBCInput_34) {
			String errorMessage_tJDBCInput_34 = "failed to release the resource in tJDBCInput_34 :" + e_tJDBCInput_34.getMessage();
			System.err.println(errorMessage_tJDBCInput_34);
		}
	}
}
 



/**
 * [tJDBCInput_34 finally ] stop
 */

	
	/**
	 * [tMap_22 finally ] start
	 */

	

	
	
	currentComponent="tMap_22";

	

 



/**
 * [tMap_22 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_24 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_24")==null){
    if(resourceMap.get("writer_tJDBCOutput_24")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_24")).close();
		} catch (java.io.IOException e_tJDBCOutput_24) {
			String errorMessage_tJDBCOutput_24 = "failed to release the resource in tJDBCOutput_24 :" + e_tJDBCOutput_24.getMessage();
			System.err.println(errorMessage_tJDBCOutput_24);
		}
	}
}
 



/**
 * [tJDBCOutput_24 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_34_SUBPROCESS_STATE", 1);
	}
	


public static class host_configurationStruct implements routines.system.IPersistableRow<host_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_unique_id;

				public String getHost_unique_id () {
					return this.host_unique_id;
				}
				
			    public String host_name;

				public String getHost_name () {
					return this.host_name;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public short host_type;

				public short getHost_type () {
					return this.host_type;
				}
				
			    public String fqdn_or_ip;

				public String getFqdn_or_ip () {
					return this.fqdn_or_ip;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Integer swap_size_mb;

				public Integer getSwap_size_mb () {
					return this.swap_size_mb;
				}
				
			    public String cpu_model;

				public String getCpu_model () {
					return this.cpu_model;
				}
				
			    public Short number_of_cores;

				public Short getNumber_of_cores () {
					return this.number_of_cores;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Double cpu_speed_mh;

				public Double getCpu_speed_mh () {
					return this.cpu_speed_mh;
				}
				
			    public String host_os;

				public String getHost_os () {
					return this.host_os;
				}
				
			    public String kernel_version;

				public String getKernel_version () {
					return this.kernel_version;
				}
				
			    public String kvm_version;

				public String getKvm_version () {
					return this.kvm_version;
				}
				
			    public String vdsm_version;

				public String getVdsm_version () {
					return this.vdsm_version;
				}
				
			    public int vdsm_port;

				public int getVdsm_port () {
					return this.vdsm_port;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				
			    public Short threads_per_core;

				public Short getThreads_per_core () {
					return this.threads_per_core;
				}
				
			    public Short number_of_threads;

				public Short getNumber_of_threads () {
					return this.number_of_threads;
				}
				
			    public String hardware_manufacturer;

				public String getHardware_manufacturer () {
					return this.hardware_manufacturer;
				}
				
			    public String hardware_product_name;

				public String getHardware_product_name () {
					return this.hardware_product_name;
				}
				
			    public String hardware_version;

				public String getHardware_version () {
					return this.hardware_version;
				}
				
			    public String hardware_serial_number;

				public String getHardware_serial_number () {
					return this.hardware_serial_number;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			        this.host_type = dis.readShort();
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
			        this.vdsm_port = dis.readInt();
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.threads_per_core = null;
           				} else {
           			    	this.threads_per_core = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			        this.host_type = dis.readShort();
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
			        this.vdsm_port = dis.readInt();
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.threads_per_core = null;
           				} else {
           			    	this.threads_per_core = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// short
				
		            	dos.writeShort(this.host_type);
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// int
				
		            	dos.writeInt(this.vdsm_port);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Short
				
						if(this.threads_per_core == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.threads_per_core);
		            	}
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// short
				
		            	dos.writeShort(this.host_type);
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// int
				
		            	dos.writeInt(this.vdsm_port);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Short
				
						if(this.threads_per_core == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.threads_per_core);
		            	}
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_id="+String.valueOf(host_id));
		sb.append(",host_unique_id="+host_unique_id);
		sb.append(",host_name="+host_name);
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",host_type="+String.valueOf(host_type));
		sb.append(",fqdn_or_ip="+fqdn_or_ip);
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",swap_size_mb="+String.valueOf(swap_size_mb));
		sb.append(",cpu_model="+cpu_model);
		sb.append(",number_of_cores="+String.valueOf(number_of_cores));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",cpu_speed_mh="+String.valueOf(cpu_speed_mh));
		sb.append(",host_os="+host_os);
		sb.append(",kernel_version="+kernel_version);
		sb.append(",kvm_version="+kvm_version);
		sb.append(",vdsm_version="+vdsm_version);
		sb.append(",vdsm_port="+String.valueOf(vdsm_port));
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
		sb.append(",threads_per_core="+String.valueOf(threads_per_core));
		sb.append(",number_of_threads="+String.valueOf(number_of_threads));
		sb.append(",hardware_manufacturer="+hardware_manufacturer);
		sb.append(",hardware_product_name="+hardware_product_name);
		sb.append(",hardware_version="+hardware_version);
		sb.append(",hardware_serial_number="+hardware_serial_number);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(host_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_unique_id;

				public String getHost_unique_id () {
					return this.host_unique_id;
				}
				
			    public String host_name;

				public String getHost_name () {
					return this.host_name;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				
			    public Short host_type;

				public Short getHost_type () {
					return this.host_type;
				}
				
			    public String fqdn_or_ip;

				public String getFqdn_or_ip () {
					return this.fqdn_or_ip;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Integer swap_size_mb;

				public Integer getSwap_size_mb () {
					return this.swap_size_mb;
				}
				
			    public String cpu_model;

				public String getCpu_model () {
					return this.cpu_model;
				}
				
			    public Short number_of_cores;

				public Short getNumber_of_cores () {
					return this.number_of_cores;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Double cpu_speed_mh;

				public Double getCpu_speed_mh () {
					return this.cpu_speed_mh;
				}
				
			    public String host_os;

				public String getHost_os () {
					return this.host_os;
				}
				
			    public String kernel_version;

				public String getKernel_version () {
					return this.kernel_version;
				}
				
			    public String kvm_version;

				public String getKvm_version () {
					return this.kvm_version;
				}
				
			    public String vdsm_version;

				public String getVdsm_version () {
					return this.vdsm_version;
				}
				
			    public Integer vdsm_port;

				public Integer getVdsm_port () {
					return this.vdsm_port;
				}
				
			    public Short number_of_threads;

				public Short getNumber_of_threads () {
					return this.number_of_threads;
				}
				
			    public String hardware_manufacturer;

				public String getHardware_manufacturer () {
					return this.hardware_manufacturer;
				}
				
			    public String hardware_product_name;

				public String getHardware_product_name () {
					return this.hardware_product_name;
				}
				
			    public String hardware_version;

				public String getHardware_version () {
					return this.hardware_version;
				}
				
			    public String hardware_serial_number;

				public String getHardware_serial_number () {
					return this.hardware_serial_number;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_id="+String.valueOf(host_id));
		sb.append(",host_unique_id="+host_unique_id);
		sb.append(",host_name="+host_name);
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_join_id="+cluster_join_id);
		sb.append(",host_type="+String.valueOf(host_type));
		sb.append(",fqdn_or_ip="+fqdn_or_ip);
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",swap_size_mb="+String.valueOf(swap_size_mb));
		sb.append(",cpu_model="+cpu_model);
		sb.append(",number_of_cores="+String.valueOf(number_of_cores));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",cpu_speed_mh="+String.valueOf(cpu_speed_mh));
		sb.append(",host_os="+host_os);
		sb.append(",kernel_version="+kernel_version);
		sb.append(",kvm_version="+kvm_version);
		sb.append(",vdsm_version="+vdsm_version);
		sb.append(",vdsm_port="+String.valueOf(vdsm_port));
		sb.append(",number_of_threads="+String.valueOf(number_of_threads));
		sb.append(",hardware_manufacturer="+hardware_manufacturer);
		sb.append(",hardware_product_name="+hardware_product_name);
		sb.append(",hardware_version="+hardware_version);
		sb.append(",hardware_serial_number="+hardware_serial_number);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_4Struct implements routines.system.IPersistableRow<after_tJDBCInput_4Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_unique_id;

				public String getHost_unique_id () {
					return this.host_unique_id;
				}
				
			    public String host_name;

				public String getHost_name () {
					return this.host_name;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				
			    public Short host_type;

				public Short getHost_type () {
					return this.host_type;
				}
				
			    public String fqdn_or_ip;

				public String getFqdn_or_ip () {
					return this.fqdn_or_ip;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Integer swap_size_mb;

				public Integer getSwap_size_mb () {
					return this.swap_size_mb;
				}
				
			    public String cpu_model;

				public String getCpu_model () {
					return this.cpu_model;
				}
				
			    public Short number_of_cores;

				public Short getNumber_of_cores () {
					return this.number_of_cores;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Double cpu_speed_mh;

				public Double getCpu_speed_mh () {
					return this.cpu_speed_mh;
				}
				
			    public String host_os;

				public String getHost_os () {
					return this.host_os;
				}
				
			    public String kernel_version;

				public String getKernel_version () {
					return this.kernel_version;
				}
				
			    public String kvm_version;

				public String getKvm_version () {
					return this.kvm_version;
				}
				
			    public String vdsm_version;

				public String getVdsm_version () {
					return this.vdsm_version;
				}
				
			    public Integer vdsm_port;

				public Integer getVdsm_port () {
					return this.vdsm_port;
				}
				
			    public Short number_of_threads;

				public Short getNumber_of_threads () {
					return this.number_of_threads;
				}
				
			    public String hardware_manufacturer;

				public String getHardware_manufacturer () {
					return this.hardware_manufacturer;
				}
				
			    public String hardware_product_name;

				public String getHardware_product_name () {
					return this.hardware_product_name;
				}
				
			    public String hardware_version;

				public String getHardware_version () {
					return this.hardware_version;
				}
				
			    public String hardware_serial_number;

				public String getHardware_serial_number () {
					return this.hardware_serial_number;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_id="+String.valueOf(host_id));
		sb.append(",host_unique_id="+host_unique_id);
		sb.append(",host_name="+host_name);
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_join_id="+cluster_join_id);
		sb.append(",host_type="+String.valueOf(host_type));
		sb.append(",fqdn_or_ip="+fqdn_or_ip);
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",swap_size_mb="+String.valueOf(swap_size_mb));
		sb.append(",cpu_model="+cpu_model);
		sb.append(",number_of_cores="+String.valueOf(number_of_cores));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",cpu_speed_mh="+String.valueOf(cpu_speed_mh));
		sb.append(",host_os="+host_os);
		sb.append(",kernel_version="+kernel_version);
		sb.append(",kvm_version="+kvm_version);
		sb.append(",vdsm_version="+vdsm_version);
		sb.append(",vdsm_port="+String.valueOf(vdsm_port));
		sb.append(",number_of_threads="+String.valueOf(number_of_threads));
		sb.append(",hardware_manufacturer="+hardware_manufacturer);
		sb.append(",hardware_product_name="+hardware_product_name);
		sb.append(",hardware_version="+hardware_version);
		sb.append(",hardware_serial_number="+hardware_serial_number);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_40Process(globalMap);

		row7Struct row7 = new row7Struct();
host_configurationStruct host_configuration = new host_configurationStruct();





	
	/**
	 * [tJDBCOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_4", false);
		start_Hash.put("tJDBCOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"host_configuration");
					}
				
		int tos_count_tJDBCOutput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_4 = (String)(restRequest_tJDBCOutput_4 != null ? restRequest_tJDBCOutput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_4 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_4 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_4 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_4.createRuntimeProperties();
 		                    props_tJDBCOutput_4.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_4.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.tableSelection.setValue("tablename",
 		                    "host_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"threads_per_core\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"threads_per_core\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"threads_per_core\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"host_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_1_fisrt sst_tJDBCOutput_4_1_fisrt = new SchemaSettingTool_tJDBCOutput_4_1_fisrt();
 		                    
 		                    props_tJDBCOutput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"threads_per_core\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"threads_per_core\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"threads_per_core\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"host_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_2_fisrt sst_tJDBCOutput_4_2_fisrt = new SchemaSettingTool_tJDBCOutput_4_2_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"threads_per_core\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"threads_per_core\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"threads_per_core\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"host_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_3_fisrt sst_tJDBCOutput_4_3_fisrt = new SchemaSettingTool_tJDBCOutput_4_3_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("referenceColumns",
 		                    "host_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_4 = props_tJDBCOutput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_4);
        }
    }
globalMap.put("tJDBCOutput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_4_MAPPINGS_URL", mappings_url_tJDBCOutput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_4 = null;
topology_tJDBCOutput_4 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_4 = def_tJDBCOutput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_4, topology_tJDBCOutput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_4 = def_tJDBCOutput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_4 = componentRuntime_tJDBCOutput_4.initialize(container_tJDBCOutput_4, props_tJDBCOutput_4);

if (initVr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_4.getMessage());
}

if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_4;
	compDriverInitialization_tJDBCOutput_4.runAtDriver(container_tJDBCOutput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_4 = null;
if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_4;
	if (doesNodeBelongToRequest_tJDBCOutput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_4 = sourceOrSink_tJDBCOutput_4.validate(container_tJDBCOutput_4);
        if (vr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_4.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_4 = null;
    if (sourceOrSink_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_4 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_4;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_4 = sink_tJDBCOutput_4.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writeOperation_tJDBCOutput_4.initialize(container_tJDBCOutput_4);
        }
        writer_tJDBCOutput_4 = writeOperation_tJDBCOutput_4.createWriter(container_tJDBCOutput_4);
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writer_tJDBCOutput_4.open("tJDBCOutput_4");
        }

        resourceMap.put("writer_tJDBCOutput_4", writer_tJDBCOutput_4);
    } // end of "sourceOrSink_tJDBCOutput_4 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_4 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_4.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_4 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_4 = props_tJDBCOutput_4.getSchema(c_tJDBCOutput_4, false);
    incomingEnforcer_tJDBCOutput_4 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_4);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_4 = null;


 



/**
 * [tJDBCOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
					globalMap.get( "tHash_Lookup_row36" ))
					;					
					
	

row36Struct row36HashKey = new row36Struct();
row36Struct row36Default = new row36Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
host_configurationStruct host_configuration_tmp = new host_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tJDBCInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_4", false);
		start_Hash.put("tJDBCInput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_4";

	
		int tos_count_tJDBCInput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_4 = (String)(restRequest_tJDBCInput_4 != null ? restRequest_tJDBCInput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_4 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_4 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_4 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_4.createRuntimeProperties();
 		                    props_tJDBCInput_4.setValue("sql",
 		                    "SELECT \n  host_id, \n  host_unique_id, \n  host_name, \n  cluster_id,\n  upper(cast(cluster_id as char(36))) as cluste"
+"r_join_id,  \n  host_type, \n  fqdn_or_ip, \n  memory_size_mb, \n  swap_size_mb, \n  cpu_model,\n  number_of_cores, \n  n"
+"umber_of_sockets,\n  cpu_speed_mh,\n  host_os, \n  kernel_version, \n  kvm_version, \n  vdsm_version, \n  vdsm_port,\n  nu"
+"mber_of_threads,\n  hardware_manufacturer,\n  hardware_product_name,\n  hardware_version,\n  hardware_serial_number, \n  cre"
+"ate_date, \n  update_date\nFROM dwh_host_configuration_history_view");
 		                    
 		                    props_tJDBCInput_4.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_4.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_host_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_4\",\"di.table.label\":\"dwh_host_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_4_1_fisrt sst_tJDBCInput_4_1_fisrt = new SchemaSettingTool_tJDBCInput_4_1_fisrt();
 		                    
 		                    props_tJDBCInput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_4.tableSelection.setValue("tablename",
 		                    "dwh_host_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("trim",tJDBCInput_4_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_4_trimTable_columnName.add("host_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("host_unique_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("host_name");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("cluster_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("cluster_join_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("host_type");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("fqdn_or_ip");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("memory_size_mb");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("swap_size_mb");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("cpu_model");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("number_of_cores");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("number_of_sockets");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("cpu_speed_mh");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("host_os");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("kernel_version");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("kvm_version");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("vdsm_version");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("vdsm_port");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("number_of_threads");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("hardware_manufacturer");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("hardware_product_name");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("hardware_version");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("hardware_serial_number");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("columnName",tJDBCInput_4_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_4 = props_tJDBCInput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_4);
        }
    }
globalMap.put("tJDBCInput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_4_MAPPINGS_URL", mappings_url_tJDBCInput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_4 = null;
topology_tJDBCInput_4 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_4 = def_tJDBCInput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_4, topology_tJDBCInput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_4 = def_tJDBCInput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_4 = componentRuntime_tJDBCInput_4.initialize(container_tJDBCInput_4, props_tJDBCInput_4);

if (initVr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_4.getMessage());
}

if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_4;
	compDriverInitialization_tJDBCInput_4.runAtDriver(container_tJDBCInput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_4 = null;
if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_4;
	if (doesNodeBelongToRequest_tJDBCInput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_4 = sourceOrSink_tJDBCInput_4.validate(container_tJDBCInput_4);
        if (vr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_4.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_4 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_4;
        reader_tJDBCInput_4 = source_tJDBCInput_4.createReader(container_tJDBCInput_4);
	    reader_tJDBCInput_4 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_4, container_tJDBCInput_4);

            boolean multi_output_is_allowed_tJDBCInput_4 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_4 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_4.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_4 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_4 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_4 = props_tJDBCInput_4.getSchema(c_tJDBCInput_4, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_4 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_4, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_4 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_4 = reader_tJDBCInput_4.start();

        resourceMap.put("reader_tJDBCInput_4", reader_tJDBCInput_4);

        for (; available_tJDBCInput_4; available_tJDBCInput_4 = reader_tJDBCInput_4.advance()) {
			nb_line_tJDBCInput_4++;

			
			if (multi_output_is_allowed_tJDBCInput_4) {
				
					row7 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_4 = reader_tJDBCInput_4.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_4) {
						row7 = new row7Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_4 == null) {
            factory_tJDBCInput_4 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_4.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_4.setWrapped(factory_tJDBCInput_4.convertToAvro(data_tJDBCInput_4));
                Object columnValue_0_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(0);
                        row7.host_id = (Object) (columnValue_0_tJDBCInput_4);
                Object columnValue_1_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(1);
                        row7.host_unique_id = (String) (columnValue_1_tJDBCInput_4);
                Object columnValue_2_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(2);
                        row7.host_name = (String) (columnValue_2_tJDBCInput_4);
                Object columnValue_3_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(3);
                        row7.cluster_id = (Object) (columnValue_3_tJDBCInput_4);
                Object columnValue_4_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(4);
                        row7.cluster_join_id = (String) (columnValue_4_tJDBCInput_4);
                Object columnValue_5_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(5);
                        row7.host_type = (Short) (columnValue_5_tJDBCInput_4);
                Object columnValue_6_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(6);
                        row7.fqdn_or_ip = (String) (columnValue_6_tJDBCInput_4);
                Object columnValue_7_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(7);
                        row7.memory_size_mb = (Integer) (columnValue_7_tJDBCInput_4);
                Object columnValue_8_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(8);
                        row7.swap_size_mb = (Integer) (columnValue_8_tJDBCInput_4);
                Object columnValue_9_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(9);
                        row7.cpu_model = (String) (columnValue_9_tJDBCInput_4);
                Object columnValue_10_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(10);
                        row7.number_of_cores = (Short) (columnValue_10_tJDBCInput_4);
                Object columnValue_11_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(11);
                        row7.number_of_sockets = (Short) (columnValue_11_tJDBCInput_4);
                Object columnValue_12_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(12);
                        row7.cpu_speed_mh = (Double) (columnValue_12_tJDBCInput_4);
                Object columnValue_13_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(13);
                        row7.host_os = (String) (columnValue_13_tJDBCInput_4);
                Object columnValue_14_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(14);
                        row7.kernel_version = (String) (columnValue_14_tJDBCInput_4);
                Object columnValue_15_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(15);
                        row7.kvm_version = (String) (columnValue_15_tJDBCInput_4);
                Object columnValue_16_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(16);
                        row7.vdsm_version = (String) (columnValue_16_tJDBCInput_4);
                Object columnValue_17_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(17);
                        row7.vdsm_port = (Integer) (columnValue_17_tJDBCInput_4);
                Object columnValue_18_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(18);
                        row7.number_of_threads = (Short) (columnValue_18_tJDBCInput_4);
                Object columnValue_19_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(19);
                        row7.hardware_manufacturer = (String) (columnValue_19_tJDBCInput_4);
                Object columnValue_20_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(20);
                        row7.hardware_product_name = (String) (columnValue_20_tJDBCInput_4);
                Object columnValue_21_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(21);
                        row7.hardware_version = (String) (columnValue_21_tJDBCInput_4);
                Object columnValue_22_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(22);
                        row7.hardware_serial_number = (String) (columnValue_22_tJDBCInput_4);
                Object columnValue_23_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(23);
                        row7.create_date = (java.util.Date) (columnValue_23_tJDBCInput_4);
                Object columnValue_24_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(24);
                        row7.update_date = (java.util.Date) (columnValue_24_tJDBCInput_4);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_4) {
				java.util.Map<String,Object> info_tJDBCInput_4 = e_tJDBCInput_4.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_4 = null;
					if(info_tJDBCInput_4.containsKey("error")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("error");
					}else if(info_tJDBCInput_4.containsKey("errorMessage")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_4 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_4 = "Row "+ nb_line_tJDBCInput_4 + ": "+errorMessage_tJDBCInput_4;
					System.err.println(errorMessage_tJDBCInput_4);
				
					// If the record is reject, the main line record should put NULL
					row7 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_4 = null;


 



/**
 * [tJDBCInput_4 begin ] stop
 */
	
	/**
	 * [tJDBCInput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 


	tos_count_tJDBCInput_4++;

/**
 * [tJDBCInput_4 main ] stop
 */
	
	/**
	 * [tJDBCInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_4 = false;
		  boolean mainRowRejected_tMap_4 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row7.update_date == null ? TalendDate.compareDate(row7.create_date,context.runTime) <=0 : TalendDate.compareDate(row7.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row7'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row36" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow36 = false;
       		  	    	
       		  	    	
 							row36Struct row36ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row36HashKey.cluster_join_id = row7.cluster_join_id ;
                        		    		

								
		                        	row36HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row36.lookup( row36HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row36 != null && tHash_Lookup_row36.getCount(row36HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row36' and it contains more one result from keys :  row36.cluster_join_id = '" + row36HashKey.cluster_join_id + "'");
								} // G 071
							

							row36Struct row36 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row36Struct fromLookup_row36 = null;
							row36 = row36Default;
										 
							
								 
							
							
								if (tHash_Lookup_row36 !=null && tHash_Lookup_row36.hasNext()) { // G 099
								
							
								
								fromLookup_row36 = tHash_Lookup_row36.next();

							
							
								} // G 099
							
							

							if(fromLookup_row36 != null) {
								row36 = fromLookup_row36;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

host_configuration = null;


// # Output table : 'host_configuration'
host_configuration_tmp.host_id = row7.host_id;
host_configuration_tmp.host_unique_id = StringHandling.TRIM(row7.host_unique_id);
host_configuration_tmp.host_name = StringHandling.TRIM(row7.host_name);
host_configuration_tmp.cluster_id = row7.cluster_id;
host_configuration_tmp.host_type = row7.host_type;
host_configuration_tmp.fqdn_or_ip = StringHandling.TRIM(row7.fqdn_or_ip);
host_configuration_tmp.memory_size_mb = row7.memory_size_mb ;
host_configuration_tmp.swap_size_mb = row7.swap_size_mb;
host_configuration_tmp.cpu_model = StringHandling.TRIM(row7.cpu_model);
host_configuration_tmp.number_of_cores = row7.number_of_cores;
host_configuration_tmp.number_of_sockets = row7.number_of_sockets;
host_configuration_tmp.cpu_speed_mh = row7.cpu_speed_mh;
host_configuration_tmp.host_os = StringHandling.TRIM(row7.host_os);
host_configuration_tmp.kernel_version = StringHandling.TRIM(row7.kernel_version);
host_configuration_tmp.kvm_version = StringHandling.TRIM(row7.kvm_version);
host_configuration_tmp.vdsm_version = StringHandling.TRIM(row7.vdsm_version);
host_configuration_tmp.vdsm_port = row7.vdsm_port;
host_configuration_tmp.cluster_configuration_version = row36.history_id ;
host_configuration_tmp.create_date = row7.create_date;
host_configuration_tmp.update_date = row7.update_date;
host_configuration_tmp.delete_date = null;
host_configuration_tmp.threads_per_core = row7.number_of_threads ;
host_configuration_tmp.number_of_threads = row7.number_of_threads ;
host_configuration_tmp.hardware_manufacturer = StringHandling.TRIM(row7.hardware_manufacturer) ;
host_configuration_tmp.hardware_product_name = StringHandling.TRIM(row7.hardware_product_name) ;
host_configuration_tmp.hardware_version = StringHandling.TRIM(row7.hardware_version) ;
host_configuration_tmp.hardware_serial_number = StringHandling.TRIM(row7.hardware_serial_number) ;
host_configuration = host_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "host_configuration"
if(host_configuration != null) { 



	
	/**
	 * [tJDBCOutput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"host_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_4 != null) {
            incomingEnforcer_tJDBCOutput_4.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("host_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("host_id", host_configuration.host_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("host_unique_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("host_unique_id", host_configuration.host_unique_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("host_name") != null){
                    incomingEnforcer_tJDBCOutput_4.put("host_name", host_configuration.host_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("cluster_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("cluster_id", host_configuration.cluster_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("host_type") != null){
                    incomingEnforcer_tJDBCOutput_4.put("host_type", host_configuration.host_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("fqdn_or_ip") != null){
                    incomingEnforcer_tJDBCOutput_4.put("fqdn_or_ip", host_configuration.fqdn_or_ip);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("memory_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_4.put("memory_size_mb", host_configuration.memory_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("swap_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_4.put("swap_size_mb", host_configuration.swap_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("cpu_model") != null){
                    incomingEnforcer_tJDBCOutput_4.put("cpu_model", host_configuration.cpu_model);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("number_of_cores") != null){
                    incomingEnforcer_tJDBCOutput_4.put("number_of_cores", host_configuration.number_of_cores);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("number_of_sockets") != null){
                    incomingEnforcer_tJDBCOutput_4.put("number_of_sockets", host_configuration.number_of_sockets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("cpu_speed_mh") != null){
                    incomingEnforcer_tJDBCOutput_4.put("cpu_speed_mh", host_configuration.cpu_speed_mh);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("host_os") != null){
                    incomingEnforcer_tJDBCOutput_4.put("host_os", host_configuration.host_os);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("kernel_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("kernel_version", host_configuration.kernel_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("kvm_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("kvm_version", host_configuration.kvm_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("vdsm_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("vdsm_version", host_configuration.vdsm_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("vdsm_port") != null){
                    incomingEnforcer_tJDBCOutput_4.put("vdsm_port", host_configuration.vdsm_port);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("cluster_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("cluster_configuration_version", host_configuration.cluster_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("create_date", host_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("update_date", host_configuration.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("delete_date", host_configuration.delete_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("threads_per_core") != null){
                    incomingEnforcer_tJDBCOutput_4.put("threads_per_core", host_configuration.threads_per_core);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("number_of_threads") != null){
                    incomingEnforcer_tJDBCOutput_4.put("number_of_threads", host_configuration.number_of_threads);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("hardware_manufacturer") != null){
                    incomingEnforcer_tJDBCOutput_4.put("hardware_manufacturer", host_configuration.hardware_manufacturer);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("hardware_product_name") != null){
                    incomingEnforcer_tJDBCOutput_4.put("hardware_product_name", host_configuration.hardware_product_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("hardware_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("hardware_version", host_configuration.hardware_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("hardware_serial_number") != null){
                    incomingEnforcer_tJDBCOutput_4.put("hardware_serial_number", host_configuration.hardware_serial_number);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_4 = null;
        if (incomingEnforcer_tJDBCOutput_4 != null) {
            data_tJDBCOutput_4 = incomingEnforcer_tJDBCOutput_4.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_4 != null && data_tJDBCOutput_4 != null) {
        	writer_tJDBCOutput_4.write(data_tJDBCOutput_4);
        }
        
        nb_line_tJDBCOutput_4++;

 


	tos_count_tJDBCOutput_4++;

/**
 * [tJDBCOutput_4 main ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_end ] stop
 */

} // End of branch "host_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row7'
	
	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// end of generic


resourceMap.put("finish_tJDBCInput_4", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_4 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_4 = null;
    if (reader_tJDBCInput_4 != null) {
        reader_tJDBCInput_4.close();
        resultMap_tJDBCInput_4 = reader_tJDBCInput_4.getReturnValues();
    }
if(resultMap_tJDBCInput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_4 : resultMap_tJDBCInput_4.entrySet()) {
		switch(entry_tJDBCInput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "ERROR_MESSAGE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_LINE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_SUCCESS", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_REJECT", entry_tJDBCInput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_4 = new StringBuilder();
            for (int i_tJDBCInput_4 = 0; i_tJDBCInput_4 < entry_tJDBCInput_4.getKey().length(); i_tJDBCInput_4++) {
                char ch_tJDBCInput_4 = entry_tJDBCInput_4.getKey().charAt(i_tJDBCInput_4);
                if(Character.isUpperCase(ch_tJDBCInput_4) && i_tJDBCInput_4> 0) {
                	studio_key_tJDBCInput_4.append('_');
                }
                studio_key_tJDBCInput_4.append(ch_tJDBCInput_4);
            }
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", studio_key_tJDBCInput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_4.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_4", true);
end_Hash.put("tJDBCInput_4", System.currentTimeMillis());




/**
 * [tJDBCInput_4 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row36 != null) {
						tHash_Lookup_row36.endGet();
					}
					globalMap.remove( "tHash_Lookup_row36" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJDBCOutput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_4", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_4 = null;
    if (writer_tJDBCOutput_4 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_4 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_4.close();
        resultMap_tJDBCOutput_4 = writer_tJDBCOutput_4.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_4), container_tJDBCOutput_4);
    }
if(resultMap_tJDBCOutput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_4 : resultMap_tJDBCOutput_4.entrySet()) {
		switch(entry_tJDBCOutput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "ERROR_MESSAGE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_LINE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_SUCCESS", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_REJECT", entry_tJDBCOutput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_4 = new StringBuilder();
            for (int i_tJDBCOutput_4 = 0; i_tJDBCOutput_4 < entry_tJDBCOutput_4.getKey().length(); i_tJDBCOutput_4++) {
                char ch_tJDBCOutput_4 = entry_tJDBCOutput_4.getKey().charAt(i_tJDBCOutput_4);
                if(Character.isUpperCase(ch_tJDBCOutput_4) && i_tJDBCOutput_4> 0) {
                	studio_key_tJDBCOutput_4.append('_');
                }
                studio_key_tJDBCOutput_4.append(ch_tJDBCOutput_4);
            }
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", studio_key_tJDBCOutput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_4.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"host_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_4", true);
end_Hash.put("tJDBCOutput_4", System.currentTimeMillis());




/**
 * [tJDBCOutput_4 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tJDBCInput_22Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row36"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_4")==null){
    if(resourceMap.get("reader_tJDBCInput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_4")).close();
		} catch (java.io.IOException e_tJDBCInput_4) {
			String errorMessage_tJDBCInput_4 = "failed to release the resource in tJDBCInput_4 :" + e_tJDBCInput_4.getMessage();
			System.err.println(errorMessage_tJDBCInput_4);
		}
	}
}
 



/**
 * [tJDBCInput_4 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_4")==null){
    if(resourceMap.get("writer_tJDBCOutput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_4")).close();
		} catch (java.io.IOException e_tJDBCOutput_4) {
			String errorMessage_tJDBCOutput_4 = "failed to release the resource in tJDBCOutput_4 :" + e_tJDBCOutput_4.getMessage();
			System.err.println(errorMessage_tJDBCOutput_4);
		}
	}
}
 



/**
 * [tJDBCOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class delete_hostsStruct implements routines.system.IPersistableRow<delete_hostsStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_unique_id;

				public String getHost_unique_id () {
					return this.host_unique_id;
				}
				
			    public String host_name;

				public String getHost_name () {
					return this.host_name;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public short host_type;

				public short getHost_type () {
					return this.host_type;
				}
				
			    public String fqdn_or_ip;

				public String getFqdn_or_ip () {
					return this.fqdn_or_ip;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Integer swap_size_mb;

				public Integer getSwap_size_mb () {
					return this.swap_size_mb;
				}
				
			    public String cpu_model;

				public String getCpu_model () {
					return this.cpu_model;
				}
				
			    public Short number_of_cores;

				public Short getNumber_of_cores () {
					return this.number_of_cores;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Double cpu_speed_mh;

				public Double getCpu_speed_mh () {
					return this.cpu_speed_mh;
				}
				
			    public String host_os;

				public String getHost_os () {
					return this.host_os;
				}
				
			    public String kernel_version;

				public String getKernel_version () {
					return this.kernel_version;
				}
				
			    public String kvm_version;

				public String getKvm_version () {
					return this.kvm_version;
				}
				
			    public String vdsm_version;

				public String getVdsm_version () {
					return this.vdsm_version;
				}
				
			    public int vdsm_port;

				public int getVdsm_port () {
					return this.vdsm_port;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				
			    public Short threads_per_core;

				public Short getThreads_per_core () {
					return this.threads_per_core;
				}
				
			    public Short number_of_threads;

				public Short getNumber_of_threads () {
					return this.number_of_threads;
				}
				
			    public String hardware_manufacturer;

				public String getHardware_manufacturer () {
					return this.hardware_manufacturer;
				}
				
			    public String hardware_product_name;

				public String getHardware_product_name () {
					return this.hardware_product_name;
				}
				
			    public String hardware_version;

				public String getHardware_version () {
					return this.hardware_version;
				}
				
			    public String hardware_serial_number;

				public String getHardware_serial_number () {
					return this.hardware_serial_number;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			        this.host_type = dis.readShort();
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
			        this.vdsm_port = dis.readInt();
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.threads_per_core = null;
           				} else {
           			    	this.threads_per_core = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			        this.host_type = dis.readShort();
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
			        this.vdsm_port = dis.readInt();
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.threads_per_core = null;
           				} else {
           			    	this.threads_per_core = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// short
				
		            	dos.writeShort(this.host_type);
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// int
				
		            	dos.writeInt(this.vdsm_port);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Short
				
						if(this.threads_per_core == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.threads_per_core);
		            	}
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// short
				
		            	dos.writeShort(this.host_type);
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// int
				
		            	dos.writeInt(this.vdsm_port);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Short
				
						if(this.threads_per_core == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.threads_per_core);
		            	}
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_id="+String.valueOf(host_id));
		sb.append(",host_unique_id="+host_unique_id);
		sb.append(",host_name="+host_name);
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",host_type="+String.valueOf(host_type));
		sb.append(",fqdn_or_ip="+fqdn_or_ip);
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",swap_size_mb="+String.valueOf(swap_size_mb));
		sb.append(",cpu_model="+cpu_model);
		sb.append(",number_of_cores="+String.valueOf(number_of_cores));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",cpu_speed_mh="+String.valueOf(cpu_speed_mh));
		sb.append(",host_os="+host_os);
		sb.append(",kernel_version="+kernel_version);
		sb.append(",kvm_version="+kvm_version);
		sb.append(",vdsm_version="+vdsm_version);
		sb.append(",vdsm_port="+String.valueOf(vdsm_port));
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
		sb.append(",threads_per_core="+String.valueOf(threads_per_core));
		sb.append(",number_of_threads="+String.valueOf(number_of_threads));
		sb.append(",hardware_manufacturer="+hardware_manufacturer);
		sb.append(",hardware_product_name="+hardware_product_name);
		sb.append(",hardware_version="+hardware_version);
		sb.append(",hardware_serial_number="+hardware_serial_number);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_hostsStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				
			    public String host_unique_id;

				public String getHost_unique_id () {
					return this.host_unique_id;
				}
				
			    public String host_name;

				public String getHost_name () {
					return this.host_name;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public Short host_type;

				public Short getHost_type () {
					return this.host_type;
				}
				
			    public String fqdn_or_ip;

				public String getFqdn_or_ip () {
					return this.fqdn_or_ip;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Integer swap_size_mb;

				public Integer getSwap_size_mb () {
					return this.swap_size_mb;
				}
				
			    public String cpu_model;

				public String getCpu_model () {
					return this.cpu_model;
				}
				
			    public Short number_of_cores;

				public Short getNumber_of_cores () {
					return this.number_of_cores;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Double cpu_speed_mh;

				public Double getCpu_speed_mh () {
					return this.cpu_speed_mh;
				}
				
			    public String host_os;

				public String getHost_os () {
					return this.host_os;
				}
				
			    public String kernel_version;

				public String getKernel_version () {
					return this.kernel_version;
				}
				
			    public String kvm_version;

				public String getKvm_version () {
					return this.kvm_version;
				}
				
			    public String vdsm_version;

				public String getVdsm_version () {
					return this.vdsm_version;
				}
				
			    public Integer vdsm_port;

				public Integer getVdsm_port () {
					return this.vdsm_port;
				}
				
			    public Short number_of_threads;

				public Short getNumber_of_threads () {
					return this.number_of_threads;
				}
				
			    public String hardware_manufacturer;

				public String getHardware_manufacturer () {
					return this.hardware_manufacturer;
				}
				
			    public String hardware_product_name;

				public String getHardware_product_name () {
					return this.hardware_product_name;
				}
				
			    public String hardware_version;

				public String getHardware_version () {
					return this.hardware_version;
				}
				
			    public String hardware_serial_number;

				public String getHardware_serial_number () {
					return this.hardware_serial_number;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_join_id="+host_join_id);
		sb.append(",host_unique_id="+host_unique_id);
		sb.append(",host_name="+host_name);
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",host_type="+String.valueOf(host_type));
		sb.append(",fqdn_or_ip="+fqdn_or_ip);
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",swap_size_mb="+String.valueOf(swap_size_mb));
		sb.append(",cpu_model="+cpu_model);
		sb.append(",number_of_cores="+String.valueOf(number_of_cores));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",cpu_speed_mh="+String.valueOf(cpu_speed_mh));
		sb.append(",host_os="+host_os);
		sb.append(",kernel_version="+kernel_version);
		sb.append(",kvm_version="+kvm_version);
		sb.append(",vdsm_version="+vdsm_version);
		sb.append(",vdsm_port="+String.valueOf(vdsm_port));
		sb.append(",number_of_threads="+String.valueOf(number_of_threads));
		sb.append(",hardware_manufacturer="+hardware_manufacturer);
		sb.append(",hardware_product_name="+hardware_product_name);
		sb.append(",hardware_version="+hardware_version);
		sb.append(",hardware_serial_number="+hardware_serial_number);
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_22Struct implements routines.system.IPersistableRow<after_tJDBCInput_22Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				
			    public String host_unique_id;

				public String getHost_unique_id () {
					return this.host_unique_id;
				}
				
			    public String host_name;

				public String getHost_name () {
					return this.host_name;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public Short host_type;

				public Short getHost_type () {
					return this.host_type;
				}
				
			    public String fqdn_or_ip;

				public String getFqdn_or_ip () {
					return this.fqdn_or_ip;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Integer swap_size_mb;

				public Integer getSwap_size_mb () {
					return this.swap_size_mb;
				}
				
			    public String cpu_model;

				public String getCpu_model () {
					return this.cpu_model;
				}
				
			    public Short number_of_cores;

				public Short getNumber_of_cores () {
					return this.number_of_cores;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Double cpu_speed_mh;

				public Double getCpu_speed_mh () {
					return this.cpu_speed_mh;
				}
				
			    public String host_os;

				public String getHost_os () {
					return this.host_os;
				}
				
			    public String kernel_version;

				public String getKernel_version () {
					return this.kernel_version;
				}
				
			    public String kvm_version;

				public String getKvm_version () {
					return this.kvm_version;
				}
				
			    public String vdsm_version;

				public String getVdsm_version () {
					return this.vdsm_version;
				}
				
			    public Integer vdsm_port;

				public Integer getVdsm_port () {
					return this.vdsm_port;
				}
				
			    public Short number_of_threads;

				public Short getNumber_of_threads () {
					return this.number_of_threads;
				}
				
			    public String hardware_manufacturer;

				public String getHardware_manufacturer () {
					return this.hardware_manufacturer;
				}
				
			    public String hardware_product_name;

				public String getHardware_product_name () {
					return this.hardware_product_name;
				}
				
			    public String hardware_version;

				public String getHardware_version () {
					return this.hardware_version;
				}
				
			    public String hardware_serial_number;

				public String getHardware_serial_number () {
					return this.hardware_serial_number;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
					this.host_unique_id = readString(dis);
					
					this.host_name = readString(dis);
					
						this.cluster_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_type = null;
           				} else {
           			    	this.host_type = dis.readShort();
           				}
					
					this.fqdn_or_ip = readString(dis);
					
						this.memory_size_mb = readInteger(dis);
					
						this.swap_size_mb = readInteger(dis);
					
					this.cpu_model = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_cores = null;
           				} else {
           			    	this.number_of_cores = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_speed_mh = null;
           				} else {
           			    	this.cpu_speed_mh = dis.readDouble();
           				}
					
					this.host_os = readString(dis);
					
					this.kernel_version = readString(dis);
					
					this.kvm_version = readString(dis);
					
					this.vdsm_version = readString(dis);
					
						this.vdsm_port = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_threads = null;
           				} else {
           			    	this.number_of_threads = dis.readShort();
           				}
					
					this.hardware_manufacturer = readString(dis);
					
					this.hardware_product_name = readString(dis);
					
					this.hardware_version = readString(dis);
					
					this.hardware_serial_number = readString(dis);
					
						this.cluster_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// String
				
						writeString(this.host_unique_id,dos);
					
					// String
				
						writeString(this.host_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Short
				
						if(this.host_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_type);
		            	}
					
					// String
				
						writeString(this.fqdn_or_ip,dos);
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Integer
				
						writeInteger(this.swap_size_mb,dos);
					
					// String
				
						writeString(this.cpu_model,dos);
					
					// Short
				
						if(this.number_of_cores == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_cores);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Double
				
						if(this.cpu_speed_mh == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.cpu_speed_mh);
		            	}
					
					// String
				
						writeString(this.host_os,dos);
					
					// String
				
						writeString(this.kernel_version,dos);
					
					// String
				
						writeString(this.kvm_version,dos);
					
					// String
				
						writeString(this.vdsm_version,dos);
					
					// Integer
				
						writeInteger(this.vdsm_port,dos);
					
					// Short
				
						if(this.number_of_threads == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_threads);
		            	}
					
					// String
				
						writeString(this.hardware_manufacturer,dos);
					
					// String
				
						writeString(this.hardware_product_name,dos);
					
					// String
				
						writeString(this.hardware_version,dos);
					
					// String
				
						writeString(this.hardware_serial_number,dos);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_join_id="+host_join_id);
		sb.append(",host_unique_id="+host_unique_id);
		sb.append(",host_name="+host_name);
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",host_type="+String.valueOf(host_type));
		sb.append(",fqdn_or_ip="+fqdn_or_ip);
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",swap_size_mb="+String.valueOf(swap_size_mb));
		sb.append(",cpu_model="+cpu_model);
		sb.append(",number_of_cores="+String.valueOf(number_of_cores));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",cpu_speed_mh="+String.valueOf(cpu_speed_mh));
		sb.append(",host_os="+host_os);
		sb.append(",kernel_version="+kernel_version);
		sb.append(",kvm_version="+kvm_version);
		sb.append(",vdsm_version="+vdsm_version);
		sb.append(",vdsm_port="+String.valueOf(vdsm_port));
		sb.append(",number_of_threads="+String.valueOf(number_of_threads));
		sb.append(",hardware_manufacturer="+hardware_manufacturer);
		sb.append(",hardware_product_name="+hardware_product_name);
		sb.append(",hardware_version="+hardware_version);
		sb.append(",hardware_serial_number="+hardware_serial_number);
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_21Process(globalMap);

		row21Struct row21 = new row21Struct();
delete_hostsStruct delete_hosts = new delete_hostsStruct();





	
	/**
	 * [tJDBCOutput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_17", false);
		start_Hash.put("tJDBCOutput_17", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_17";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_hosts");
					}
				
		int tos_count_tJDBCOutput_17 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_17 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_17 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_17 = (String)(restRequest_tJDBCOutput_17 != null ? restRequest_tJDBCOutput_17.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_17 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_17 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_17 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_17 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_17.createRuntimeProperties();
 		                    props_tJDBCOutput_17.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_17.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_17.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_17.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_17.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_17.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_17.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_17.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.tableSelection.setValue("tablename",
 		                    "host_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_17_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"threads_per_core\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"threads_per_core\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"threads_per_core\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_17\",\"di.table.label\":\"host_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_17_1_fisrt sst_tJDBCOutput_17_1_fisrt = new SchemaSettingTool_tJDBCOutput_17_1_fisrt();
 		                    
 		                    props_tJDBCOutput_17.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_17_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_17_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"threads_per_core\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"threads_per_core\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"threads_per_core\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_17\",\"di.table.label\":\"host_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_17_2_fisrt sst_tJDBCOutput_17_2_fisrt = new SchemaSettingTool_tJDBCOutput_17_2_fisrt();
 		                    
 		                    props_tJDBCOutput_17.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_17_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_17_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"threads_per_core\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"threads_per_core\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"threads_per_core\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_17\",\"di.table.label\":\"host_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_17_3_fisrt sst_tJDBCOutput_17_3_fisrt = new SchemaSettingTool_tJDBCOutput_17_3_fisrt();
 		                    
 		                    props_tJDBCOutput_17.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_17_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_17.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_17.additionalColumns.setValue("referenceColumns",
 		                    "host_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_17.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_17 = props_tJDBCOutput_17.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_17 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_17 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_17 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_17.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_17);
        }
    }
globalMap.put("tJDBCOutput_17_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_17);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_17= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_17_MAPPINGS_URL", mappings_url_tJDBCOutput_17);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_17 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_17";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_17 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_17 = null;
topology_tJDBCOutput_17 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_17 = def_tJDBCOutput_17.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_17, topology_tJDBCOutput_17);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_17 = def_tJDBCOutput_17.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_17 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_17.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_17 = componentRuntime_tJDBCOutput_17.initialize(container_tJDBCOutput_17, props_tJDBCOutput_17);

if (initVr_tJDBCOutput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_17.getMessage());
}

if(componentRuntime_tJDBCOutput_17 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_17 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_17;
	compDriverInitialization_tJDBCOutput_17.runAtDriver(container_tJDBCOutput_17);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_17 = null;
if(componentRuntime_tJDBCOutput_17 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_17 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_17;
	if (doesNodeBelongToRequest_tJDBCOutput_17) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_17 = sourceOrSink_tJDBCOutput_17.validate(container_tJDBCOutput_17);
        if (vr_tJDBCOutput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_17.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_17 = null;
    if (sourceOrSink_tJDBCOutput_17 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_17 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_17;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_17 = sink_tJDBCOutput_17.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_17) {
            writeOperation_tJDBCOutput_17.initialize(container_tJDBCOutput_17);
        }
        writer_tJDBCOutput_17 = writeOperation_tJDBCOutput_17.createWriter(container_tJDBCOutput_17);
        if (doesNodeBelongToRequest_tJDBCOutput_17) {
            writer_tJDBCOutput_17.open("tJDBCOutput_17");
        }

        resourceMap.put("writer_tJDBCOutput_17", writer_tJDBCOutput_17);
    } // end of "sourceOrSink_tJDBCOutput_17 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_17 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_17.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_17 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_17 = props_tJDBCOutput_17.getSchema(c_tJDBCOutput_17, false);
    incomingEnforcer_tJDBCOutput_17 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_17);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_17 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_17 = null;


 



/**
 * [tJDBCOutput_17 begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
					globalMap.get( "tHash_Lookup_row20" ))
					;					
					
	

row20Struct row20HashKey = new row20Struct();
row20Struct row20Default = new row20Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_hostsStruct delete_hosts_tmp = new delete_hostsStruct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tJDBCInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_22", false);
		start_Hash.put("tJDBCInput_22", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_22";

	
		int tos_count_tJDBCInput_22 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_22 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_22 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_22 = (String)(restRequest_tJDBCInput_22 != null ? restRequest_tJDBCInput_22.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_22 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_22 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_22 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_22 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_22.createRuntimeProperties();
 		                    props_tJDBCInput_22.setValue("sql",
 		                    "SELECT history_id, \n		host_id, \n		upper(cast(host_id as char(36))) as host_join_id,\n		host_unique_id, \n		host_name,"
+" \n		cluster_id, \n		host_type, \n		fqdn_or_ip, \n		memory_size_mb, \n		swap_size_mb,\n		cpu_model, \n		number_of_cores,"
+" \n        number_of_sockets,\n        cpu_speed_mh,\n		host_os,\n		kernel_version, \n		kvm_version, \n		vdsm_version, \n	"
+"	vdsm_port, \n        number_of_threads,\n        hardware_manufacturer,\n        hardware_product_name,\n        hardware_v"
+"ersion,\n        hardware_serial_number,\n		cluster_configuration_version, \n		create_date, \n		update_date\nFROM v4_5_la"
+"test_configuration_hosts");
 		                    
 		                    props_tJDBCInput_22.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_22.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_22.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_22.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_22.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_22_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_hosts\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_unique_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_unique_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"128\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_unique_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fqdn_or_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"fqdn_or_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fqdn_or_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_model\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"cpu_model\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_model\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_cores\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_cores\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_cores\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_speed_mh\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"FLOAT8\",\"talend.field.dbColumnName\":\"cpu_speed_mh\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_speed_mh\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_os\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_os\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_os\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kernel_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kernel_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kernel_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"kvm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"kvm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"kvm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vdsm_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"0\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vdsm_port\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vdsm_port\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vdsm_port\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_threads\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"number_of_threads\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_threads\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_manufacturer\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_manufacturer\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_manufacturer\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_product_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_product_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_product_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_version\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_version\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_version\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"hardware_serial_number\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"hardware_serial_number\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"hardware_serial_number\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_22\",\"di.table.label\":\"v4_5_latest_configuration_hosts\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_22_1_fisrt sst_tJDBCInput_22_1_fisrt = new SchemaSettingTool_tJDBCInput_22_1_fisrt();
 		                    
 		                    props_tJDBCInput_22.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_22_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_22.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_hosts");
 		                    
 		                    java.util.List<Object> tJDBCInput_22_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_22.trimTable).setValue("trim",tJDBCInput_22_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_22_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_22_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("host_id");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("host_join_id");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("host_unique_id");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("host_name");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("cluster_id");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("host_type");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("fqdn_or_ip");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("memory_size_mb");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("swap_size_mb");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("cpu_model");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("number_of_cores");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("number_of_sockets");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("cpu_speed_mh");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("host_os");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("kernel_version");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("kvm_version");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("vdsm_version");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("vdsm_port");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("number_of_threads");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("hardware_manufacturer");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("hardware_product_name");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("hardware_version");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("hardware_serial_number");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("cluster_configuration_version");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_22_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_22.trimTable).setValue("columnName",tJDBCInput_22_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_22.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_22 = props_tJDBCInput_22.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_22 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_22 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_22 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_22.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_22);
        }
    }
globalMap.put("tJDBCInput_22_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_22);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_22= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_22_MAPPINGS_URL", mappings_url_tJDBCInput_22);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_22 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_22";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_22 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_22 = null;
topology_tJDBCInput_22 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_22 = def_tJDBCInput_22.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_22, topology_tJDBCInput_22);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_22 = def_tJDBCInput_22.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_22 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_22.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_22 = componentRuntime_tJDBCInput_22.initialize(container_tJDBCInput_22, props_tJDBCInput_22);

if (initVr_tJDBCInput_22.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_22.getMessage());
}

if(componentRuntime_tJDBCInput_22 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_22 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_22;
	compDriverInitialization_tJDBCInput_22.runAtDriver(container_tJDBCInput_22);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_22 = null;
if(componentRuntime_tJDBCInput_22 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_22 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_22;
	if (doesNodeBelongToRequest_tJDBCInput_22) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_22 = sourceOrSink_tJDBCInput_22.validate(container_tJDBCInput_22);
        if (vr_tJDBCInput_22.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_22.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_22 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_22 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_22;
        reader_tJDBCInput_22 = source_tJDBCInput_22.createReader(container_tJDBCInput_22);
	    reader_tJDBCInput_22 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_22, container_tJDBCInput_22);

            boolean multi_output_is_allowed_tJDBCInput_22 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_22 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_22.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_22 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_22 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_22 = props_tJDBCInput_22.getSchema(c_tJDBCInput_22, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_22 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_22, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_22 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_22 = reader_tJDBCInput_22.start();

        resourceMap.put("reader_tJDBCInput_22", reader_tJDBCInput_22);

        for (; available_tJDBCInput_22; available_tJDBCInput_22 = reader_tJDBCInput_22.advance()) {
			nb_line_tJDBCInput_22++;

			
			if (multi_output_is_allowed_tJDBCInput_22) {
				
					row21 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_22 = reader_tJDBCInput_22.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_22) {
						row21 = new row21Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_22 == null) {
            factory_tJDBCInput_22 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_22.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_22.setWrapped(factory_tJDBCInput_22.convertToAvro(data_tJDBCInput_22));
                Object columnValue_0_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(0);
                        row21.history_id = (Integer) (columnValue_0_tJDBCInput_22);
                Object columnValue_1_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(1);
                        row21.host_id = (Object) (columnValue_1_tJDBCInput_22);
                Object columnValue_2_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(2);
                        row21.host_join_id = (String) (columnValue_2_tJDBCInput_22);
                Object columnValue_3_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(3);
                        row21.host_unique_id = (String) (columnValue_3_tJDBCInput_22);
                Object columnValue_4_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(4);
                        row21.host_name = (String) (columnValue_4_tJDBCInput_22);
                Object columnValue_5_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(5);
                        row21.cluster_id = (Object) (columnValue_5_tJDBCInput_22);
                Object columnValue_6_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(6);
                        row21.host_type = (Short) (columnValue_6_tJDBCInput_22);
                Object columnValue_7_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(7);
                        row21.fqdn_or_ip = (String) (columnValue_7_tJDBCInput_22);
                Object columnValue_8_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(8);
                        row21.memory_size_mb = (Integer) (columnValue_8_tJDBCInput_22);
                Object columnValue_9_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(9);
                        row21.swap_size_mb = (Integer) (columnValue_9_tJDBCInput_22);
                Object columnValue_10_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(10);
                        row21.cpu_model = (String) (columnValue_10_tJDBCInput_22);
                Object columnValue_11_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(11);
                        row21.number_of_cores = (Short) (columnValue_11_tJDBCInput_22);
                Object columnValue_12_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(12);
                        row21.number_of_sockets = (Short) (columnValue_12_tJDBCInput_22);
                Object columnValue_13_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(13);
                        row21.cpu_speed_mh = (Double) (columnValue_13_tJDBCInput_22);
                Object columnValue_14_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(14);
                        row21.host_os = (String) (columnValue_14_tJDBCInput_22);
                Object columnValue_15_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(15);
                        row21.kernel_version = (String) (columnValue_15_tJDBCInput_22);
                Object columnValue_16_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(16);
                        row21.kvm_version = (String) (columnValue_16_tJDBCInput_22);
                Object columnValue_17_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(17);
                        row21.vdsm_version = (String) (columnValue_17_tJDBCInput_22);
                Object columnValue_18_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(18);
                        row21.vdsm_port = (Integer) (columnValue_18_tJDBCInput_22);
                Object columnValue_19_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(19);
                        row21.number_of_threads = (Short) (columnValue_19_tJDBCInput_22);
                Object columnValue_20_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(20);
                        row21.hardware_manufacturer = (String) (columnValue_20_tJDBCInput_22);
                Object columnValue_21_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(21);
                        row21.hardware_product_name = (String) (columnValue_21_tJDBCInput_22);
                Object columnValue_22_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(22);
                        row21.hardware_version = (String) (columnValue_22_tJDBCInput_22);
                Object columnValue_23_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(23);
                        row21.hardware_serial_number = (String) (columnValue_23_tJDBCInput_22);
                Object columnValue_24_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(24);
                        row21.cluster_configuration_version = (Integer) (columnValue_24_tJDBCInput_22);
                Object columnValue_25_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(25);
                        row21.create_date = (java.util.Date) (columnValue_25_tJDBCInput_22);
                Object columnValue_26_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(26);
                        row21.update_date = (java.util.Date) (columnValue_26_tJDBCInput_22);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_22) {
				java.util.Map<String,Object> info_tJDBCInput_22 = e_tJDBCInput_22.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_22 = null;
					if(info_tJDBCInput_22.containsKey("error")){
						errorMessage_tJDBCInput_22 = info_tJDBCInput_22.get("error");
					}else if(info_tJDBCInput_22.containsKey("errorMessage")){
						errorMessage_tJDBCInput_22 = info_tJDBCInput_22.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_22 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_22 = "Row "+ nb_line_tJDBCInput_22 + ": "+errorMessage_tJDBCInput_22;
					System.err.println(errorMessage_tJDBCInput_22);
				
					// If the record is reject, the main line record should put NULL
					row21 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_22 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_22 = null;


 



/**
 * [tJDBCInput_22 begin ] stop
 */
	
	/**
	 * [tJDBCInput_22 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	


 


	tos_count_tJDBCInput_22++;

/**
 * [tJDBCInput_22 main ] stop
 */
	
	/**
	 * [tJDBCInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	


 



/**
 * [tJDBCInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_17 = false;
		  boolean mainRowRejected_tMap_17 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row20" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow20 = false;
       		  	    	
       		  	    	
 							row20Struct row20ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_17) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_17 = false;
								
                        		    		    row20HashKey.host_join_id = row21.host_join_id ;
                        		    		

								
		                        	row20HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row20.lookup( row20HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row20.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_17 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row20 != null && tHash_Lookup_row20.getCount(row20HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row20' and it contains more one result from keys :  row20.host_join_id = '" + row20HashKey.host_join_id + "'");
								} // G 071
							

							row20Struct row20 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row20Struct fromLookup_row20 = null;
							row20 = row20Default;
										 
							
								 
							
							
								if (tHash_Lookup_row20 !=null && tHash_Lookup_row20.hasNext()) { // G 099
								
							
								
								fromLookup_row20 = tHash_Lookup_row20.next();

							
							
								} // G 099
							
							

							if(fromLookup_row20 != null) {
								row20 = fromLookup_row20;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;// ###############################
        // ###############################
        // # Output tables

delete_hosts = null;

if(!rejectedInnerJoin_tMap_17 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_hosts'
// # Filter conditions 
if( rejectedInnerJoin_tMap_17 ) {
delete_hosts_tmp.host_id = row21.host_id;
delete_hosts_tmp.host_unique_id = row21.host_unique_id;
delete_hosts_tmp.host_name = row21.host_name;
delete_hosts_tmp.cluster_id = row21.cluster_id;
delete_hosts_tmp.host_type = row21.host_type;
delete_hosts_tmp.fqdn_or_ip = row21.fqdn_or_ip;
delete_hosts_tmp.memory_size_mb = row21.memory_size_mb;
delete_hosts_tmp.swap_size_mb = row21.swap_size_mb ;
delete_hosts_tmp.cpu_model = row21.cpu_model;
delete_hosts_tmp.number_of_cores = row21.number_of_cores;
delete_hosts_tmp.number_of_sockets = row21.number_of_sockets;
delete_hosts_tmp.cpu_speed_mh = row21.cpu_speed_mh;
delete_hosts_tmp.host_os = row21.host_os;
delete_hosts_tmp.kernel_version = row21.kernel_version;
delete_hosts_tmp.kvm_version = row21.kvm_version;
delete_hosts_tmp.vdsm_version = row21.vdsm_version;
delete_hosts_tmp.vdsm_port = row21.vdsm_port;
delete_hosts_tmp.cluster_configuration_version = row21.cluster_configuration_version;
delete_hosts_tmp.create_date = row21.create_date;
delete_hosts_tmp.update_date = context.runTime;
delete_hosts_tmp.delete_date = context.runTime;
delete_hosts_tmp.threads_per_core = row21.number_of_threads ;
delete_hosts_tmp.number_of_threads = row21.number_of_threads ;
delete_hosts_tmp.hardware_manufacturer = row21.hardware_manufacturer ;
delete_hosts_tmp.hardware_product_name = row21.hardware_product_name ;
delete_hosts_tmp.hardware_version = row21.hardware_version ;
delete_hosts_tmp.hardware_serial_number = row21.hardware_serial_number ;
delete_hosts = delete_hosts_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";

	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "delete_hosts"
if(delete_hosts != null) { 



	
	/**
	 * [tJDBCOutput_17 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_hosts"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_17 != null) {
            incomingEnforcer_tJDBCOutput_17.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("host_id") != null){
                    incomingEnforcer_tJDBCOutput_17.put("host_id", delete_hosts.host_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("host_unique_id") != null){
                    incomingEnforcer_tJDBCOutput_17.put("host_unique_id", delete_hosts.host_unique_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("host_name") != null){
                    incomingEnforcer_tJDBCOutput_17.put("host_name", delete_hosts.host_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("cluster_id") != null){
                    incomingEnforcer_tJDBCOutput_17.put("cluster_id", delete_hosts.cluster_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("host_type") != null){
                    incomingEnforcer_tJDBCOutput_17.put("host_type", delete_hosts.host_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("fqdn_or_ip") != null){
                    incomingEnforcer_tJDBCOutput_17.put("fqdn_or_ip", delete_hosts.fqdn_or_ip);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("memory_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_17.put("memory_size_mb", delete_hosts.memory_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("swap_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_17.put("swap_size_mb", delete_hosts.swap_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("cpu_model") != null){
                    incomingEnforcer_tJDBCOutput_17.put("cpu_model", delete_hosts.cpu_model);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("number_of_cores") != null){
                    incomingEnforcer_tJDBCOutput_17.put("number_of_cores", delete_hosts.number_of_cores);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("number_of_sockets") != null){
                    incomingEnforcer_tJDBCOutput_17.put("number_of_sockets", delete_hosts.number_of_sockets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("cpu_speed_mh") != null){
                    incomingEnforcer_tJDBCOutput_17.put("cpu_speed_mh", delete_hosts.cpu_speed_mh);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("host_os") != null){
                    incomingEnforcer_tJDBCOutput_17.put("host_os", delete_hosts.host_os);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("kernel_version") != null){
                    incomingEnforcer_tJDBCOutput_17.put("kernel_version", delete_hosts.kernel_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("kvm_version") != null){
                    incomingEnforcer_tJDBCOutput_17.put("kvm_version", delete_hosts.kvm_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("vdsm_version") != null){
                    incomingEnforcer_tJDBCOutput_17.put("vdsm_version", delete_hosts.vdsm_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("vdsm_port") != null){
                    incomingEnforcer_tJDBCOutput_17.put("vdsm_port", delete_hosts.vdsm_port);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("cluster_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_17.put("cluster_configuration_version", delete_hosts.cluster_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_17.put("create_date", delete_hosts.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_17.put("update_date", delete_hosts.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_17.put("delete_date", delete_hosts.delete_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("threads_per_core") != null){
                    incomingEnforcer_tJDBCOutput_17.put("threads_per_core", delete_hosts.threads_per_core);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("number_of_threads") != null){
                    incomingEnforcer_tJDBCOutput_17.put("number_of_threads", delete_hosts.number_of_threads);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("hardware_manufacturer") != null){
                    incomingEnforcer_tJDBCOutput_17.put("hardware_manufacturer", delete_hosts.hardware_manufacturer);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("hardware_product_name") != null){
                    incomingEnforcer_tJDBCOutput_17.put("hardware_product_name", delete_hosts.hardware_product_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("hardware_version") != null){
                    incomingEnforcer_tJDBCOutput_17.put("hardware_version", delete_hosts.hardware_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("hardware_serial_number") != null){
                    incomingEnforcer_tJDBCOutput_17.put("hardware_serial_number", delete_hosts.hardware_serial_number);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_17 = null;
        if (incomingEnforcer_tJDBCOutput_17 != null) {
            data_tJDBCOutput_17 = incomingEnforcer_tJDBCOutput_17.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_17 != null && data_tJDBCOutput_17 != null) {
        	writer_tJDBCOutput_17.write(data_tJDBCOutput_17);
        }
        
        nb_line_tJDBCOutput_17++;

 


	tos_count_tJDBCOutput_17++;

/**
 * [tJDBCOutput_17 main ] stop
 */
	
	/**
	 * [tJDBCOutput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	


 



/**
 * [tJDBCOutput_17 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	


 



/**
 * [tJDBCOutput_17 process_data_end ] stop
 */

} // End of branch "delete_hosts"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";

	

 



/**
 * [tMap_17 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	


 



/**
 * [tJDBCInput_22 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_22 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	
// end of generic


resourceMap.put("finish_tJDBCInput_22", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_22 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_22 = null;
    if (reader_tJDBCInput_22 != null) {
        reader_tJDBCInput_22.close();
        resultMap_tJDBCInput_22 = reader_tJDBCInput_22.getReturnValues();
    }
if(resultMap_tJDBCInput_22!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_22 : resultMap_tJDBCInput_22.entrySet()) {
		switch(entry_tJDBCInput_22.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "ERROR_MESSAGE", entry_tJDBCInput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "NB_LINE", entry_tJDBCInput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "NB_SUCCESS", entry_tJDBCInput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "NB_REJECT", entry_tJDBCInput_22.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_22 = new StringBuilder();
            for (int i_tJDBCInput_22 = 0; i_tJDBCInput_22 < entry_tJDBCInput_22.getKey().length(); i_tJDBCInput_22++) {
                char ch_tJDBCInput_22 = entry_tJDBCInput_22.getKey().charAt(i_tJDBCInput_22);
                if(Character.isUpperCase(ch_tJDBCInput_22) && i_tJDBCInput_22> 0) {
                	studio_key_tJDBCInput_22.append('_');
                }
                studio_key_tJDBCInput_22.append(ch_tJDBCInput_22);
            }
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", studio_key_tJDBCInput_22.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_22.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_22", true);
end_Hash.put("tJDBCInput_22", System.currentTimeMillis());




/**
 * [tJDBCInput_22 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row20 != null) {
						tHash_Lookup_row20.endGet();
					}
					globalMap.remove( "tHash_Lookup_row20" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tJDBCOutput_17 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_17", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_17 = null;
    if (writer_tJDBCOutput_17 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_17 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_17.close();
        resultMap_tJDBCOutput_17 = writer_tJDBCOutput_17.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_17), container_tJDBCOutput_17);
    }
if(resultMap_tJDBCOutput_17!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_17 : resultMap_tJDBCOutput_17.entrySet()) {
		switch(entry_tJDBCOutput_17.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "ERROR_MESSAGE", entry_tJDBCOutput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "NB_LINE", entry_tJDBCOutput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "NB_SUCCESS", entry_tJDBCOutput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "NB_REJECT", entry_tJDBCOutput_17.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_17 = new StringBuilder();
            for (int i_tJDBCOutput_17 = 0; i_tJDBCOutput_17 < entry_tJDBCOutput_17.getKey().length(); i_tJDBCOutput_17++) {
                char ch_tJDBCOutput_17 = entry_tJDBCOutput_17.getKey().charAt(i_tJDBCOutput_17);
                if(Character.isUpperCase(ch_tJDBCOutput_17) && i_tJDBCOutput_17> 0) {
                	studio_key_tJDBCOutput_17.append('_');
                }
                studio_key_tJDBCOutput_17.append(ch_tJDBCOutput_17);
            }
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", studio_key_tJDBCOutput_17.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_17.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_hosts");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_17", true);
end_Hash.put("tJDBCOutput_17", System.currentTimeMillis());




/**
 * [tJDBCOutput_17 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_22:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tJDBCInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_17"
					     			globalMap.remove("tHash_Lookup_row20"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_22 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_22")==null){
    if(resourceMap.get("reader_tJDBCInput_22")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_22")).close();
		} catch (java.io.IOException e_tJDBCInput_22) {
			String errorMessage_tJDBCInput_22 = "failed to release the resource in tJDBCInput_22 :" + e_tJDBCInput_22.getMessage();
			System.err.println(errorMessage_tJDBCInput_22);
		}
	}
}
 



/**
 * [tJDBCInput_22 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";

	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_17 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_17")==null){
    if(resourceMap.get("writer_tJDBCOutput_17")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_17")).close();
		} catch (java.io.IOException e_tJDBCOutput_17) {
			String errorMessage_tJDBCOutput_17 = "failed to release the resource in tJDBCOutput_17 :" + e_tJDBCOutput_17.getMessage();
			System.err.println(errorMessage_tJDBCOutput_17);
		}
	}
}
 



/**
 * [tJDBCOutput_17 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class hinterface_configurationStruct implements routines.system.IPersistableRow<hinterface_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_name;

				public String getHost_interface_name () {
					return this.host_interface_name;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public Short host_interface_type;

				public Short getHost_interface_type () {
					return this.host_interface_type;
				}
				
			    public Integer host_interface_speed_bps;

				public Integer getHost_interface_speed_bps () {
					return this.host_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public String ip_address;

				public String getIp_address () {
					return this.ip_address;
				}
				
			    public String gateway;

				public String getGateway () {
					return this.gateway;
				}
				
			    public Boolean bond;

				public Boolean getBond () {
					return this.bond;
				}
				
			    public String bond_name;

				public String getBond_name () {
					return this.bond_name;
				}
				
			    public Integer vlan_id;

				public Integer getVlan_id () {
					return this.vlan_id;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_name="+host_interface_name);
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_interface_type="+String.valueOf(host_interface_type));
		sb.append(",host_interface_speed_bps="+String.valueOf(host_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",ip_address="+ip_address);
		sb.append(",gateway="+gateway);
		sb.append(",bond="+String.valueOf(bond));
		sb.append(",bond_name="+bond_name);
		sb.append(",vlan_id="+String.valueOf(vlan_id));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(hinterface_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_name;

				public String getHost_interface_name () {
					return this.host_interface_name;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				
			    public Short host_interface_type;

				public Short getHost_interface_type () {
					return this.host_interface_type;
				}
				
			    public Integer host_interface_speed_bps;

				public Integer getHost_interface_speed_bps () {
					return this.host_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public String ip_address;

				public String getIp_address () {
					return this.ip_address;
				}
				
			    public String gateway;

				public String getGateway () {
					return this.gateway;
				}
				
			    public Boolean bond;

				public Boolean getBond () {
					return this.bond;
				}
				
			    public String bond_name;

				public String getBond_name () {
					return this.bond_name;
				}
				
			    public Integer vlan_id;

				public Integer getVlan_id () {
					return this.vlan_id;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_name="+host_interface_name);
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_join_id="+host_join_id);
		sb.append(",host_interface_type="+String.valueOf(host_interface_type));
		sb.append(",host_interface_speed_bps="+String.valueOf(host_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",ip_address="+ip_address);
		sb.append(",gateway="+gateway);
		sb.append(",bond="+String.valueOf(bond));
		sb.append(",bond_name="+bond_name);
		sb.append(",vlan_id="+String.valueOf(vlan_id));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_5Struct implements routines.system.IPersistableRow<after_tJDBCInput_5Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_name;

				public String getHost_interface_name () {
					return this.host_interface_name;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				
			    public Short host_interface_type;

				public Short getHost_interface_type () {
					return this.host_interface_type;
				}
				
			    public Integer host_interface_speed_bps;

				public Integer getHost_interface_speed_bps () {
					return this.host_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public String ip_address;

				public String getIp_address () {
					return this.ip_address;
				}
				
			    public String gateway;

				public String getGateway () {
					return this.gateway;
				}
				
			    public Boolean bond;

				public Boolean getBond () {
					return this.bond;
				}
				
			    public String bond_name;

				public String getBond_name () {
					return this.bond_name;
				}
				
			    public Integer vlan_id;

				public Integer getVlan_id () {
					return this.vlan_id;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_name="+host_interface_name);
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_join_id="+host_join_id);
		sb.append(",host_interface_type="+String.valueOf(host_interface_type));
		sb.append(",host_interface_speed_bps="+String.valueOf(host_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",ip_address="+ip_address);
		sb.append(",gateway="+gateway);
		sb.append(",bond="+String.valueOf(bond));
		sb.append(",bond_name="+bond_name);
		sb.append(",vlan_id="+String.valueOf(vlan_id));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_41Process(globalMap);

		row2Struct row2 = new row2Struct();
hinterface_configurationStruct hinterface_configuration = new hinterface_configurationStruct();





	
	/**
	 * [tJDBCOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_5", false);
		start_Hash.put("tJDBCOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"hinterface_configuration");
					}
				
		int tos_count_tJDBCOutput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_5 = (String)(restRequest_tJDBCOutput_5 != null ? restRequest_tJDBCOutput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_5 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_5 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_5 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_5.createRuntimeProperties();
 		                    props_tJDBCOutput_5.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_5.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.tableSelection.setValue("tablename",
 		                    "host_interface_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"host_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_1_fisrt sst_tJDBCOutput_5_1_fisrt = new SchemaSettingTool_tJDBCOutput_5_1_fisrt();
 		                    
 		                    props_tJDBCOutput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"host_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_2_fisrt sst_tJDBCOutput_5_2_fisrt = new SchemaSettingTool_tJDBCOutput_5_2_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"host_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_3_fisrt sst_tJDBCOutput_5_3_fisrt = new SchemaSettingTool_tJDBCOutput_5_3_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("referenceColumns",
 		                    "host_interface_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_5 = props_tJDBCOutput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_5);
        }
    }
globalMap.put("tJDBCOutput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_5_MAPPINGS_URL", mappings_url_tJDBCOutput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_5 = null;
topology_tJDBCOutput_5 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_5 = def_tJDBCOutput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_5, topology_tJDBCOutput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_5 = def_tJDBCOutput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_5 = componentRuntime_tJDBCOutput_5.initialize(container_tJDBCOutput_5, props_tJDBCOutput_5);

if (initVr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_5.getMessage());
}

if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_5;
	compDriverInitialization_tJDBCOutput_5.runAtDriver(container_tJDBCOutput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_5 = null;
if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_5;
	if (doesNodeBelongToRequest_tJDBCOutput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_5 = sourceOrSink_tJDBCOutput_5.validate(container_tJDBCOutput_5);
        if (vr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_5.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_5 = null;
    if (sourceOrSink_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_5 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_5;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_5 = sink_tJDBCOutput_5.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writeOperation_tJDBCOutput_5.initialize(container_tJDBCOutput_5);
        }
        writer_tJDBCOutput_5 = writeOperation_tJDBCOutput_5.createWriter(container_tJDBCOutput_5);
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writer_tJDBCOutput_5.open("tJDBCOutput_5");
        }

        resourceMap.put("writer_tJDBCOutput_5", writer_tJDBCOutput_5);
    } // end of "sourceOrSink_tJDBCOutput_5 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_5 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_5.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_5 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_5 = props_tJDBCOutput_5.getSchema(c_tJDBCOutput_5, false);
    incomingEnforcer_tJDBCOutput_5 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_5);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_5 = null;


 



/**
 * [tJDBCOutput_5 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct> tHash_Lookup_row37 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct>) 
					globalMap.get( "tHash_Lookup_row37" ))
					;					
					
	

row37Struct row37HashKey = new row37Struct();
row37Struct row37Default = new row37Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
hinterface_configurationStruct hinterface_configuration_tmp = new hinterface_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJDBCInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_5", false);
		start_Hash.put("tJDBCInput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_5";

	
		int tos_count_tJDBCInput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_5 = (String)(restRequest_tJDBCInput_5 != null ? restRequest_tJDBCInput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_5 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_5 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_5 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_5.createRuntimeProperties();
 		                    props_tJDBCInput_5.setValue("sql",
 		                    "SELECT \n  host_interface_id, \n  host_interface_name, \n  host_id, \n  upper(cast(host_id as char(36))) as host_join_i"
+"d,\n  host_interface_type, \n  host_interface_speed_bps, \n  mac_address, \n  logical_network_name, \n  ip_address, \n  "
+"gateway, \n  bond, \n  bond_name, \n  vlan_id, \n  create_date, \n  update_date\nFROM dwh_host_interface_configuration_h"
+"istory_view");
 		                    
 		                    props_tJDBCInput_5.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_5.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_host_interface_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_5\",\"di.table.label\":\"dwh_host_interface_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_5_1_fisrt sst_tJDBCInput_5_1_fisrt = new SchemaSettingTool_tJDBCInput_5_1_fisrt();
 		                    
 		                    props_tJDBCInput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_5.tableSelection.setValue("tablename",
 		                    "dwh_host_interface_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("trim",tJDBCInput_5_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_5_trimTable_columnName.add("host_interface_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("host_interface_name");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("host_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("host_join_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("host_interface_type");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("host_interface_speed_bps");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("mac_address");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("logical_network_name");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("ip_address");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("gateway");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("bond");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("bond_name");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("vlan_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("columnName",tJDBCInput_5_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_5 = props_tJDBCInput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_5);
        }
    }
globalMap.put("tJDBCInput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_5_MAPPINGS_URL", mappings_url_tJDBCInput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_5 = null;
topology_tJDBCInput_5 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_5 = def_tJDBCInput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_5, topology_tJDBCInput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_5 = def_tJDBCInput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_5 = componentRuntime_tJDBCInput_5.initialize(container_tJDBCInput_5, props_tJDBCInput_5);

if (initVr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_5.getMessage());
}

if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_5;
	compDriverInitialization_tJDBCInput_5.runAtDriver(container_tJDBCInput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_5 = null;
if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_5;
	if (doesNodeBelongToRequest_tJDBCInput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_5 = sourceOrSink_tJDBCInput_5.validate(container_tJDBCInput_5);
        if (vr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_5.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_5 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_5;
        reader_tJDBCInput_5 = source_tJDBCInput_5.createReader(container_tJDBCInput_5);
	    reader_tJDBCInput_5 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_5, container_tJDBCInput_5);

            boolean multi_output_is_allowed_tJDBCInput_5 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_5 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_5.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_5 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_5 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_5 = props_tJDBCInput_5.getSchema(c_tJDBCInput_5, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_5 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_5, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_5 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_5 = reader_tJDBCInput_5.start();

        resourceMap.put("reader_tJDBCInput_5", reader_tJDBCInput_5);

        for (; available_tJDBCInput_5; available_tJDBCInput_5 = reader_tJDBCInput_5.advance()) {
			nb_line_tJDBCInput_5++;

			
			if (multi_output_is_allowed_tJDBCInput_5) {
				
					row2 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_5 = reader_tJDBCInput_5.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_5) {
						row2 = new row2Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_5 == null) {
            factory_tJDBCInput_5 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_5.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_5.setWrapped(factory_tJDBCInput_5.convertToAvro(data_tJDBCInput_5));
                Object columnValue_0_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(0);
                        row2.host_interface_id = (Object) (columnValue_0_tJDBCInput_5);
                Object columnValue_1_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(1);
                        row2.host_interface_name = (String) (columnValue_1_tJDBCInput_5);
                Object columnValue_2_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(2);
                        row2.host_id = (Object) (columnValue_2_tJDBCInput_5);
                Object columnValue_3_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(3);
                        row2.host_join_id = (String) (columnValue_3_tJDBCInput_5);
                Object columnValue_4_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(4);
                        row2.host_interface_type = (Short) (columnValue_4_tJDBCInput_5);
                Object columnValue_5_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(5);
                        row2.host_interface_speed_bps = (Integer) (columnValue_5_tJDBCInput_5);
                Object columnValue_6_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(6);
                        row2.mac_address = (String) (columnValue_6_tJDBCInput_5);
                Object columnValue_7_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(7);
                        row2.logical_network_name = (String) (columnValue_7_tJDBCInput_5);
                Object columnValue_8_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(8);
                        row2.ip_address = (String) (columnValue_8_tJDBCInput_5);
                Object columnValue_9_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(9);
                        row2.gateway = (String) (columnValue_9_tJDBCInput_5);
                Object columnValue_10_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(10);
                        row2.bond = (Boolean) (columnValue_10_tJDBCInput_5);
                Object columnValue_11_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(11);
                        row2.bond_name = (String) (columnValue_11_tJDBCInput_5);
                Object columnValue_12_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(12);
                        row2.vlan_id = (Integer) (columnValue_12_tJDBCInput_5);
                Object columnValue_13_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(13);
                        row2.create_date = (java.util.Date) (columnValue_13_tJDBCInput_5);
                Object columnValue_14_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(14);
                        row2.update_date = (java.util.Date) (columnValue_14_tJDBCInput_5);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_5) {
				java.util.Map<String,Object> info_tJDBCInput_5 = e_tJDBCInput_5.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_5 = null;
					if(info_tJDBCInput_5.containsKey("error")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("error");
					}else if(info_tJDBCInput_5.containsKey("errorMessage")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_5 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_5 = "Row "+ nb_line_tJDBCInput_5 + ": "+errorMessage_tJDBCInput_5;
					System.err.println(errorMessage_tJDBCInput_5);
				
					// If the record is reject, the main line record should put NULL
					row2 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_5 = null;


 



/**
 * [tJDBCInput_5 begin ] stop
 */
	
	/**
	 * [tJDBCInput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 


	tos_count_tJDBCInput_5++;

/**
 * [tJDBCInput_5 main ] stop
 */
	
	/**
	 * [tJDBCInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_5 = false;
		  boolean mainRowRejected_tMap_5 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row2.update_date == null ? TalendDate.compareDate(row2.create_date,context.runTime) <=0 : TalendDate.compareDate(row2.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row2'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row37" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow37 = false;
       		  	    	
       		  	    	
 							row37Struct row37ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row37HashKey.host_join_id = row2.host_join_id ;
                        		    		

								
		                        	row37HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row37.lookup( row37HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row37 != null && tHash_Lookup_row37.getCount(row37HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row37' and it contains more one result from keys :  row37.host_join_id = '" + row37HashKey.host_join_id + "'");
								} // G 071
							

							row37Struct row37 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row37Struct fromLookup_row37 = null;
							row37 = row37Default;
										 
							
								 
							
							
								if (tHash_Lookup_row37 !=null && tHash_Lookup_row37.hasNext()) { // G 099
								
							
								
								fromLookup_row37 = tHash_Lookup_row37.next();

							
							
								} // G 099
							
							

							if(fromLookup_row37 != null) {
								row37 = fromLookup_row37;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

hinterface_configuration = null;


// # Output table : 'hinterface_configuration'
hinterface_configuration_tmp.host_interface_id = row2.host_interface_id;
hinterface_configuration_tmp.host_interface_name = StringHandling.TRIM(row2.host_interface_name );
hinterface_configuration_tmp.host_id = row2.host_id;
hinterface_configuration_tmp.host_interface_type = row2.host_interface_type;
hinterface_configuration_tmp.host_interface_speed_bps = row2.host_interface_speed_bps ;
hinterface_configuration_tmp.mac_address = StringHandling.TRIM(row2.mac_address);
hinterface_configuration_tmp.logical_network_name = StringHandling.TRIM(row2.logical_network_name);
hinterface_configuration_tmp.ip_address = StringHandling.TRIM(row2.ip_address);
hinterface_configuration_tmp.gateway = StringHandling.TRIM(row2.gateway);
hinterface_configuration_tmp.bond = row2.bond;
hinterface_configuration_tmp.bond_name = StringHandling.TRIM(row2.bond_name);
hinterface_configuration_tmp.vlan_id = row2.vlan_id;
hinterface_configuration_tmp.host_configuration_version = row37.history_id ;
hinterface_configuration_tmp.create_date = row2.create_date;
hinterface_configuration_tmp.update_date = row2.update_date;
hinterface_configuration_tmp.delete_date = null;
hinterface_configuration = hinterface_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "hinterface_configuration"
if(hinterface_configuration != null) { 



	
	/**
	 * [tJDBCOutput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"hinterface_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_5 != null) {
            incomingEnforcer_tJDBCOutput_5.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("host_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("host_interface_id", hinterface_configuration.host_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("host_interface_name") != null){
                    incomingEnforcer_tJDBCOutput_5.put("host_interface_name", hinterface_configuration.host_interface_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("host_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("host_id", hinterface_configuration.host_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("host_interface_type") != null){
                    incomingEnforcer_tJDBCOutput_5.put("host_interface_type", hinterface_configuration.host_interface_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("host_interface_speed_bps") != null){
                    incomingEnforcer_tJDBCOutput_5.put("host_interface_speed_bps", hinterface_configuration.host_interface_speed_bps);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("mac_address") != null){
                    incomingEnforcer_tJDBCOutput_5.put("mac_address", hinterface_configuration.mac_address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("logical_network_name") != null){
                    incomingEnforcer_tJDBCOutput_5.put("logical_network_name", hinterface_configuration.logical_network_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("ip_address") != null){
                    incomingEnforcer_tJDBCOutput_5.put("ip_address", hinterface_configuration.ip_address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("gateway") != null){
                    incomingEnforcer_tJDBCOutput_5.put("gateway", hinterface_configuration.gateway);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("bond") != null){
                    incomingEnforcer_tJDBCOutput_5.put("bond", hinterface_configuration.bond);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("bond_name") != null){
                    incomingEnforcer_tJDBCOutput_5.put("bond_name", hinterface_configuration.bond_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vlan_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vlan_id", hinterface_configuration.vlan_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_5.put("host_configuration_version", hinterface_configuration.host_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_5.put("create_date", hinterface_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_5.put("update_date", hinterface_configuration.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_5.put("delete_date", hinterface_configuration.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_5 = null;
        if (incomingEnforcer_tJDBCOutput_5 != null) {
            data_tJDBCOutput_5 = incomingEnforcer_tJDBCOutput_5.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_5 != null && data_tJDBCOutput_5 != null) {
        	writer_tJDBCOutput_5.write(data_tJDBCOutput_5);
        }
        
        nb_line_tJDBCOutput_5++;

 


	tos_count_tJDBCOutput_5++;

/**
 * [tJDBCOutput_5 main ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_end ] stop
 */

} // End of branch "hinterface_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row2'
	
	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// end of generic


resourceMap.put("finish_tJDBCInput_5", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_5 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_5 = null;
    if (reader_tJDBCInput_5 != null) {
        reader_tJDBCInput_5.close();
        resultMap_tJDBCInput_5 = reader_tJDBCInput_5.getReturnValues();
    }
if(resultMap_tJDBCInput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_5 : resultMap_tJDBCInput_5.entrySet()) {
		switch(entry_tJDBCInput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "ERROR_MESSAGE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_LINE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_SUCCESS", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_REJECT", entry_tJDBCInput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_5 = new StringBuilder();
            for (int i_tJDBCInput_5 = 0; i_tJDBCInput_5 < entry_tJDBCInput_5.getKey().length(); i_tJDBCInput_5++) {
                char ch_tJDBCInput_5 = entry_tJDBCInput_5.getKey().charAt(i_tJDBCInput_5);
                if(Character.isUpperCase(ch_tJDBCInput_5) && i_tJDBCInput_5> 0) {
                	studio_key_tJDBCInput_5.append('_');
                }
                studio_key_tJDBCInput_5.append(ch_tJDBCInput_5);
            }
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", studio_key_tJDBCInput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_5.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_5", true);
end_Hash.put("tJDBCInput_5", System.currentTimeMillis());




/**
 * [tJDBCInput_5 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row37 != null) {
						tHash_Lookup_row37.endGet();
					}
					globalMap.remove( "tHash_Lookup_row37" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tJDBCOutput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_5", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_5 = null;
    if (writer_tJDBCOutput_5 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_5 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_5.close();
        resultMap_tJDBCOutput_5 = writer_tJDBCOutput_5.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_5), container_tJDBCOutput_5);
    }
if(resultMap_tJDBCOutput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_5 : resultMap_tJDBCOutput_5.entrySet()) {
		switch(entry_tJDBCOutput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "ERROR_MESSAGE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_LINE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_SUCCESS", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_REJECT", entry_tJDBCOutput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_5 = new StringBuilder();
            for (int i_tJDBCOutput_5 = 0; i_tJDBCOutput_5 < entry_tJDBCOutput_5.getKey().length(); i_tJDBCOutput_5++) {
                char ch_tJDBCOutput_5 = entry_tJDBCOutput_5.getKey().charAt(i_tJDBCOutput_5);
                if(Character.isUpperCase(ch_tJDBCOutput_5) && i_tJDBCOutput_5> 0) {
                	studio_key_tJDBCOutput_5.append('_');
                }
                studio_key_tJDBCOutput_5.append(ch_tJDBCOutput_5);
            }
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", studio_key_tJDBCOutput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_5.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"hinterface_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_5", true);
end_Hash.put("tJDBCOutput_5", System.currentTimeMillis());




/**
 * [tJDBCOutput_5 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tJDBCInput_24Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row37"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_5")==null){
    if(resourceMap.get("reader_tJDBCInput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_5")).close();
		} catch (java.io.IOException e_tJDBCInput_5) {
			String errorMessage_tJDBCInput_5 = "failed to release the resource in tJDBCInput_5 :" + e_tJDBCInput_5.getMessage();
			System.err.println(errorMessage_tJDBCInput_5);
		}
	}
}
 



/**
 * [tJDBCInput_5 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_5")==null){
    if(resourceMap.get("writer_tJDBCOutput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_5")).close();
		} catch (java.io.IOException e_tJDBCOutput_5) {
			String errorMessage_tJDBCOutput_5 = "failed to release the resource in tJDBCOutput_5 :" + e_tJDBCOutput_5.getMessage();
			System.err.println(errorMessage_tJDBCOutput_5);
		}
	}
}
 



/**
 * [tJDBCOutput_5 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class delete_hinterfaceStruct implements routines.system.IPersistableRow<delete_hinterfaceStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_name;

				public String getHost_interface_name () {
					return this.host_interface_name;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public Short host_interface_type;

				public Short getHost_interface_type () {
					return this.host_interface_type;
				}
				
			    public Integer host_interface_speed_bps;

				public Integer getHost_interface_speed_bps () {
					return this.host_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public String ip_address;

				public String getIp_address () {
					return this.ip_address;
				}
				
			    public String gateway;

				public String getGateway () {
					return this.gateway;
				}
				
			    public Boolean bond;

				public Boolean getBond () {
					return this.bond;
				}
				
			    public String bond_name;

				public String getBond_name () {
					return this.bond_name;
				}
				
			    public Integer vlan_id;

				public Integer getVlan_id () {
					return this.vlan_id;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_name="+host_interface_name);
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_interface_type="+String.valueOf(host_interface_type));
		sb.append(",host_interface_speed_bps="+String.valueOf(host_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",ip_address="+ip_address);
		sb.append(",gateway="+gateway);
		sb.append(",bond="+String.valueOf(bond));
		sb.append(",bond_name="+bond_name);
		sb.append(",vlan_id="+String.valueOf(vlan_id));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_hinterfaceStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_join_id;

				public String getHost_interface_join_id () {
					return this.host_interface_join_id;
				}
				
			    public String host_interface_name;

				public String getHost_interface_name () {
					return this.host_interface_name;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public Short host_interface_type;

				public Short getHost_interface_type () {
					return this.host_interface_type;
				}
				
			    public Integer host_interface_speed_bps;

				public Integer getHost_interface_speed_bps () {
					return this.host_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public String ip_address;

				public String getIp_address () {
					return this.ip_address;
				}
				
			    public String gateway;

				public String getGateway () {
					return this.gateway;
				}
				
			    public Boolean bond;

				public Boolean getBond () {
					return this.bond;
				}
				
			    public String bond_name;

				public String getBond_name () {
					return this.bond_name;
				}
				
			    public Integer vlan_id;

				public Integer getVlan_id () {
					return this.vlan_id;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_join_id="+host_interface_join_id);
		sb.append(",host_interface_name="+host_interface_name);
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_interface_type="+String.valueOf(host_interface_type));
		sb.append(",host_interface_speed_bps="+String.valueOf(host_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",ip_address="+ip_address);
		sb.append(",gateway="+gateway);
		sb.append(",bond="+String.valueOf(bond));
		sb.append(",bond_name="+bond_name);
		sb.append(",vlan_id="+String.valueOf(vlan_id));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_24Struct implements routines.system.IPersistableRow<after_tJDBCInput_24Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_join_id;

				public String getHost_interface_join_id () {
					return this.host_interface_join_id;
				}
				
			    public String host_interface_name;

				public String getHost_interface_name () {
					return this.host_interface_name;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public Short host_interface_type;

				public Short getHost_interface_type () {
					return this.host_interface_type;
				}
				
			    public Integer host_interface_speed_bps;

				public Integer getHost_interface_speed_bps () {
					return this.host_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public String ip_address;

				public String getIp_address () {
					return this.ip_address;
				}
				
			    public String gateway;

				public String getGateway () {
					return this.gateway;
				}
				
			    public Boolean bond;

				public Boolean getBond () {
					return this.bond;
				}
				
			    public String bond_name;

				public String getBond_name () {
					return this.bond_name;
				}
				
			    public Integer vlan_id;

				public Integer getVlan_id () {
					return this.vlan_id;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
					this.host_interface_name = readString(dis);
					
						this.host_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_interface_type = null;
           				} else {
           			    	this.host_interface_type = dis.readShort();
           				}
					
						this.host_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.ip_address = readString(dis);
					
					this.gateway = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.bond = null;
           				} else {
           			    	this.bond = dis.readBoolean();
           				}
					
					this.bond_name = readString(dis);
					
						this.vlan_id = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// String
				
						writeString(this.host_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// Short
				
						if(this.host_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// String
				
						writeString(this.ip_address,dos);
					
					// String
				
						writeString(this.gateway,dos);
					
					// Boolean
				
						if(this.bond == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.bond);
		            	}
					
					// String
				
						writeString(this.bond_name,dos);
					
					// Integer
				
						writeInteger(this.vlan_id,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_join_id="+host_interface_join_id);
		sb.append(",host_interface_name="+host_interface_name);
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_interface_type="+String.valueOf(host_interface_type));
		sb.append(",host_interface_speed_bps="+String.valueOf(host_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",ip_address="+ip_address);
		sb.append(",gateway="+gateway);
		sb.append(",bond="+String.valueOf(bond));
		sb.append(",bond_name="+bond_name);
		sb.append(",vlan_id="+String.valueOf(vlan_id));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_23Process(globalMap);

		row23Struct row23 = new row23Struct();
delete_hinterfaceStruct delete_hinterface = new delete_hinterfaceStruct();





	
	/**
	 * [tJDBCOutput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_18", false);
		start_Hash.put("tJDBCOutput_18", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_18";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_hinterface");
					}
				
		int tos_count_tJDBCOutput_18 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_18 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_18 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_18 = (String)(restRequest_tJDBCOutput_18 != null ? restRequest_tJDBCOutput_18.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_18 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_18 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_18 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_18 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_18.createRuntimeProperties();
 		                    props_tJDBCOutput_18.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_18.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_18.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_18.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_18.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_18.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_18.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_18.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.tableSelection.setValue("tablename",
 		                    "host_interface_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_18_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_18\",\"di.table.label\":\"host_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_18_1_fisrt sst_tJDBCOutput_18_1_fisrt = new SchemaSettingTool_tJDBCOutput_18_1_fisrt();
 		                    
 		                    props_tJDBCOutput_18.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_18_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_18_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_18\",\"di.table.label\":\"host_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_18_2_fisrt sst_tJDBCOutput_18_2_fisrt = new SchemaSettingTool_tJDBCOutput_18_2_fisrt();
 		                    
 		                    props_tJDBCOutput_18.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_18_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_18_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_18\",\"di.table.label\":\"host_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_18_3_fisrt sst_tJDBCOutput_18_3_fisrt = new SchemaSettingTool_tJDBCOutput_18_3_fisrt();
 		                    
 		                    props_tJDBCOutput_18.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_18_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_18.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_18.additionalColumns.setValue("referenceColumns",
 		                    "host_interface_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_18.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_18 = props_tJDBCOutput_18.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_18 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_18 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_18 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_18.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_18);
        }
    }
globalMap.put("tJDBCOutput_18_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_18);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_18= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_18_MAPPINGS_URL", mappings_url_tJDBCOutput_18);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_18 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_18";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_18 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_18 = null;
topology_tJDBCOutput_18 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_18 = def_tJDBCOutput_18.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_18, topology_tJDBCOutput_18);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_18 = def_tJDBCOutput_18.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_18 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_18.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_18 = componentRuntime_tJDBCOutput_18.initialize(container_tJDBCOutput_18, props_tJDBCOutput_18);

if (initVr_tJDBCOutput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_18.getMessage());
}

if(componentRuntime_tJDBCOutput_18 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_18 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_18;
	compDriverInitialization_tJDBCOutput_18.runAtDriver(container_tJDBCOutput_18);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_18 = null;
if(componentRuntime_tJDBCOutput_18 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_18 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_18;
	if (doesNodeBelongToRequest_tJDBCOutput_18) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_18 = sourceOrSink_tJDBCOutput_18.validate(container_tJDBCOutput_18);
        if (vr_tJDBCOutput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_18.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_18 = null;
    if (sourceOrSink_tJDBCOutput_18 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_18 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_18;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_18 = sink_tJDBCOutput_18.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_18) {
            writeOperation_tJDBCOutput_18.initialize(container_tJDBCOutput_18);
        }
        writer_tJDBCOutput_18 = writeOperation_tJDBCOutput_18.createWriter(container_tJDBCOutput_18);
        if (doesNodeBelongToRequest_tJDBCOutput_18) {
            writer_tJDBCOutput_18.open("tJDBCOutput_18");
        }

        resourceMap.put("writer_tJDBCOutput_18", writer_tJDBCOutput_18);
    } // end of "sourceOrSink_tJDBCOutput_18 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_18 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_18.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_18 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_18 = props_tJDBCOutput_18.getSchema(c_tJDBCOutput_18, false);
    incomingEnforcer_tJDBCOutput_18 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_18);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_18 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_18 = null;


 



/**
 * [tJDBCOutput_18 begin ] stop
 */



	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct> tHash_Lookup_row22 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct>) 
					globalMap.get( "tHash_Lookup_row22" ))
					;					
					
	

row22Struct row22HashKey = new row22Struct();
row22Struct row22Default = new row22Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_hinterfaceStruct delete_hinterface_tmp = new delete_hinterfaceStruct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tJDBCInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_24", false);
		start_Hash.put("tJDBCInput_24", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_24";

	
		int tos_count_tJDBCInput_24 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_24 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_24 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_24 = (String)(restRequest_tJDBCInput_24 != null ? restRequest_tJDBCInput_24.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_24 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_24 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_24 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_24 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_24.createRuntimeProperties();
 		                    props_tJDBCInput_24.setValue("sql",
 		                    "SELECT \n  history_id, \n  host_interface_id, \n  upper(cast(host_interface_id as char(36))) as host_interface_join_id,"
+"\n  host_interface_name, \n  host_id, \n  host_interface_type, \n  host_interface_speed_bps, \n  mac_address, \n  logica"
+"l_network_name, \n  ip_address, \n  gateway, \n  bond, \n  bond_name, \n  vlan_id, \n  host_configuration_version, \n  c"
+"reate_date, \n  update_date\nFROM v4_5_latest_configuration_hosts_interfaces");
 		                    
 		                    props_tJDBCInput_24.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_24.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_24.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_24.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_24.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_24_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_hosts_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"host_interface_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"host_interface_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"59\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ip_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"ip_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ip_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"gateway\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"gateway\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"gateway\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"bond\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"bond_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"bond_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"bond_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vlan_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vlan_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vlan_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_24\",\"di.table.label\":\"v4_5_latest_configuration_hosts_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_24_1_fisrt sst_tJDBCInput_24_1_fisrt = new SchemaSettingTool_tJDBCInput_24_1_fisrt();
 		                    
 		                    props_tJDBCInput_24.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_24_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_24.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_hosts_interfaces");
 		                    
 		                    java.util.List<Object> tJDBCInput_24_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_24.trimTable).setValue("trim",tJDBCInput_24_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_24_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_24_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("host_interface_id");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("host_interface_join_id");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("host_interface_name");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("host_id");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("host_interface_type");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("host_interface_speed_bps");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("mac_address");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("logical_network_name");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("ip_address");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("gateway");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("bond");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("bond_name");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("vlan_id");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("host_configuration_version");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_24_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_24.trimTable).setValue("columnName",tJDBCInput_24_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_24.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_24 = props_tJDBCInput_24.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_24 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_24 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_24 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_24.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_24);
        }
    }
globalMap.put("tJDBCInput_24_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_24);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_24= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_24_MAPPINGS_URL", mappings_url_tJDBCInput_24);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_24 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_24";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_24 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_24 = null;
topology_tJDBCInput_24 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_24 = def_tJDBCInput_24.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_24, topology_tJDBCInput_24);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_24 = def_tJDBCInput_24.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_24 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_24.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_24 = componentRuntime_tJDBCInput_24.initialize(container_tJDBCInput_24, props_tJDBCInput_24);

if (initVr_tJDBCInput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_24.getMessage());
}

if(componentRuntime_tJDBCInput_24 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_24 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_24;
	compDriverInitialization_tJDBCInput_24.runAtDriver(container_tJDBCInput_24);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_24 = null;
if(componentRuntime_tJDBCInput_24 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_24 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_24;
	if (doesNodeBelongToRequest_tJDBCInput_24) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_24 = sourceOrSink_tJDBCInput_24.validate(container_tJDBCInput_24);
        if (vr_tJDBCInput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_24.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_24 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_24 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_24;
        reader_tJDBCInput_24 = source_tJDBCInput_24.createReader(container_tJDBCInput_24);
	    reader_tJDBCInput_24 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_24, container_tJDBCInput_24);

            boolean multi_output_is_allowed_tJDBCInput_24 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_24 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_24.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_24 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_24 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_24 = props_tJDBCInput_24.getSchema(c_tJDBCInput_24, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_24 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_24, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_24 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_24 = reader_tJDBCInput_24.start();

        resourceMap.put("reader_tJDBCInput_24", reader_tJDBCInput_24);

        for (; available_tJDBCInput_24; available_tJDBCInput_24 = reader_tJDBCInput_24.advance()) {
			nb_line_tJDBCInput_24++;

			
			if (multi_output_is_allowed_tJDBCInput_24) {
				
					row23 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_24 = reader_tJDBCInput_24.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_24) {
						row23 = new row23Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_24 == null) {
            factory_tJDBCInput_24 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_24.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_24.setWrapped(factory_tJDBCInput_24.convertToAvro(data_tJDBCInput_24));
                Object columnValue_0_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(0);
                        row23.history_id = (Integer) (columnValue_0_tJDBCInput_24);
                Object columnValue_1_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(1);
                        row23.host_interface_id = (Object) (columnValue_1_tJDBCInput_24);
                Object columnValue_2_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(2);
                        row23.host_interface_join_id = (String) (columnValue_2_tJDBCInput_24);
                Object columnValue_3_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(3);
                        row23.host_interface_name = (String) (columnValue_3_tJDBCInput_24);
                Object columnValue_4_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(4);
                        row23.host_id = (Object) (columnValue_4_tJDBCInput_24);
                Object columnValue_5_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(5);
                        row23.host_interface_type = (Short) (columnValue_5_tJDBCInput_24);
                Object columnValue_6_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(6);
                        row23.host_interface_speed_bps = (Integer) (columnValue_6_tJDBCInput_24);
                Object columnValue_7_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(7);
                        row23.mac_address = (String) (columnValue_7_tJDBCInput_24);
                Object columnValue_8_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(8);
                        row23.logical_network_name = (String) (columnValue_8_tJDBCInput_24);
                Object columnValue_9_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(9);
                        row23.ip_address = (String) (columnValue_9_tJDBCInput_24);
                Object columnValue_10_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(10);
                        row23.gateway = (String) (columnValue_10_tJDBCInput_24);
                Object columnValue_11_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(11);
                        row23.bond = (Boolean) (columnValue_11_tJDBCInput_24);
                Object columnValue_12_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(12);
                        row23.bond_name = (String) (columnValue_12_tJDBCInput_24);
                Object columnValue_13_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(13);
                        row23.vlan_id = (Integer) (columnValue_13_tJDBCInput_24);
                Object columnValue_14_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(14);
                        row23.host_configuration_version = (Integer) (columnValue_14_tJDBCInput_24);
                Object columnValue_15_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(15);
                        row23.create_date = (java.util.Date) (columnValue_15_tJDBCInput_24);
                Object columnValue_16_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(16);
                        row23.update_date = (java.util.Date) (columnValue_16_tJDBCInput_24);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_24) {
				java.util.Map<String,Object> info_tJDBCInput_24 = e_tJDBCInput_24.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_24 = null;
					if(info_tJDBCInput_24.containsKey("error")){
						errorMessage_tJDBCInput_24 = info_tJDBCInput_24.get("error");
					}else if(info_tJDBCInput_24.containsKey("errorMessage")){
						errorMessage_tJDBCInput_24 = info_tJDBCInput_24.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_24 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_24 = "Row "+ nb_line_tJDBCInput_24 + ": "+errorMessage_tJDBCInput_24;
					System.err.println(errorMessage_tJDBCInput_24);
				
					// If the record is reject, the main line record should put NULL
					row23 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_24 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_24 = null;


 



/**
 * [tJDBCInput_24 begin ] stop
 */
	
	/**
	 * [tJDBCInput_24 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	


 


	tos_count_tJDBCInput_24++;

/**
 * [tJDBCInput_24 main ] stop
 */
	
	/**
	 * [tJDBCInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	


 



/**
 * [tJDBCInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_18 = false;
		  boolean mainRowRejected_tMap_18 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row22" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow22 = false;
       		  	    	
       		  	    	
 							row22Struct row22ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_18) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_18 = false;
								
                        		    		    row22HashKey.host_interface_join_id = row23.host_interface_join_id ;
                        		    		

								
		                        	row22HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row22.lookup( row22HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row22.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_18 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row22 != null && tHash_Lookup_row22.getCount(row22HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row22' and it contains more one result from keys :  row22.host_interface_join_id = '" + row22HashKey.host_interface_join_id + "'");
								} // G 071
							

							row22Struct row22 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row22Struct fromLookup_row22 = null;
							row22 = row22Default;
										 
							
								 
							
							
								if (tHash_Lookup_row22 !=null && tHash_Lookup_row22.hasNext()) { // G 099
								
							
								
								fromLookup_row22 = tHash_Lookup_row22.next();

							
							
								} // G 099
							
							

							if(fromLookup_row22 != null) {
								row22 = fromLookup_row22;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
        // ###############################
        // # Output tables

delete_hinterface = null;

if(!rejectedInnerJoin_tMap_18 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_hinterface'
// # Filter conditions 
if( rejectedInnerJoin_tMap_18 ) {
delete_hinterface_tmp.host_interface_id = row23.host_interface_id;
delete_hinterface_tmp.host_interface_name = row23.host_interface_name;
delete_hinterface_tmp.host_id = row23.host_id;
delete_hinterface_tmp.host_interface_type = row23.host_interface_type  ;
delete_hinterface_tmp.host_interface_speed_bps = row23.host_interface_speed_bps ;
delete_hinterface_tmp.mac_address = row23.mac_address;
delete_hinterface_tmp.logical_network_name = row23.logical_network_name;
delete_hinterface_tmp.ip_address = row23.ip_address;
delete_hinterface_tmp.gateway = row23.gateway;
delete_hinterface_tmp.bond = row23.bond;
delete_hinterface_tmp.bond_name = row23.bond_name;
delete_hinterface_tmp.vlan_id = row23.vlan_id;
delete_hinterface_tmp.host_configuration_version = row23.host_configuration_version;
delete_hinterface_tmp.create_date = row23.create_date;
delete_hinterface_tmp.update_date = context.runTime;
delete_hinterface_tmp.delete_date = context.runTime;
delete_hinterface = delete_hinterface_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";

	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "delete_hinterface"
if(delete_hinterface != null) { 



	
	/**
	 * [tJDBCOutput_18 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_hinterface"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_18 != null) {
            incomingEnforcer_tJDBCOutput_18.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("host_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_18.put("host_interface_id", delete_hinterface.host_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("host_interface_name") != null){
                    incomingEnforcer_tJDBCOutput_18.put("host_interface_name", delete_hinterface.host_interface_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("host_id") != null){
                    incomingEnforcer_tJDBCOutput_18.put("host_id", delete_hinterface.host_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("host_interface_type") != null){
                    incomingEnforcer_tJDBCOutput_18.put("host_interface_type", delete_hinterface.host_interface_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("host_interface_speed_bps") != null){
                    incomingEnforcer_tJDBCOutput_18.put("host_interface_speed_bps", delete_hinterface.host_interface_speed_bps);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("mac_address") != null){
                    incomingEnforcer_tJDBCOutput_18.put("mac_address", delete_hinterface.mac_address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("logical_network_name") != null){
                    incomingEnforcer_tJDBCOutput_18.put("logical_network_name", delete_hinterface.logical_network_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("ip_address") != null){
                    incomingEnforcer_tJDBCOutput_18.put("ip_address", delete_hinterface.ip_address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("gateway") != null){
                    incomingEnforcer_tJDBCOutput_18.put("gateway", delete_hinterface.gateway);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("bond") != null){
                    incomingEnforcer_tJDBCOutput_18.put("bond", delete_hinterface.bond);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("bond_name") != null){
                    incomingEnforcer_tJDBCOutput_18.put("bond_name", delete_hinterface.bond_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("vlan_id") != null){
                    incomingEnforcer_tJDBCOutput_18.put("vlan_id", delete_hinterface.vlan_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_18.put("host_configuration_version", delete_hinterface.host_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_18.put("create_date", delete_hinterface.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_18.put("update_date", delete_hinterface.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_18.put("delete_date", delete_hinterface.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_18 = null;
        if (incomingEnforcer_tJDBCOutput_18 != null) {
            data_tJDBCOutput_18 = incomingEnforcer_tJDBCOutput_18.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_18 != null && data_tJDBCOutput_18 != null) {
        	writer_tJDBCOutput_18.write(data_tJDBCOutput_18);
        }
        
        nb_line_tJDBCOutput_18++;

 


	tos_count_tJDBCOutput_18++;

/**
 * [tJDBCOutput_18 main ] stop
 */
	
	/**
	 * [tJDBCOutput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	


 



/**
 * [tJDBCOutput_18 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	


 



/**
 * [tJDBCOutput_18 process_data_end ] stop
 */

} // End of branch "delete_hinterface"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";

	

 



/**
 * [tMap_18 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	


 



/**
 * [tJDBCInput_24 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_24 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	
// end of generic


resourceMap.put("finish_tJDBCInput_24", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_24 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_24 = null;
    if (reader_tJDBCInput_24 != null) {
        reader_tJDBCInput_24.close();
        resultMap_tJDBCInput_24 = reader_tJDBCInput_24.getReturnValues();
    }
if(resultMap_tJDBCInput_24!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_24 : resultMap_tJDBCInput_24.entrySet()) {
		switch(entry_tJDBCInput_24.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "ERROR_MESSAGE", entry_tJDBCInput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "NB_LINE", entry_tJDBCInput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "NB_SUCCESS", entry_tJDBCInput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "NB_REJECT", entry_tJDBCInput_24.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_24 = new StringBuilder();
            for (int i_tJDBCInput_24 = 0; i_tJDBCInput_24 < entry_tJDBCInput_24.getKey().length(); i_tJDBCInput_24++) {
                char ch_tJDBCInput_24 = entry_tJDBCInput_24.getKey().charAt(i_tJDBCInput_24);
                if(Character.isUpperCase(ch_tJDBCInput_24) && i_tJDBCInput_24> 0) {
                	studio_key_tJDBCInput_24.append('_');
                }
                studio_key_tJDBCInput_24.append(ch_tJDBCInput_24);
            }
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", studio_key_tJDBCInput_24.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_24.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_24", true);
end_Hash.put("tJDBCInput_24", System.currentTimeMillis());




/**
 * [tJDBCInput_24 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row22 != null) {
						tHash_Lookup_row22.endGet();
					}
					globalMap.remove( "tHash_Lookup_row22" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */

	
	/**
	 * [tJDBCOutput_18 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_18", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_18 = null;
    if (writer_tJDBCOutput_18 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_18 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_18.close();
        resultMap_tJDBCOutput_18 = writer_tJDBCOutput_18.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_18), container_tJDBCOutput_18);
    }
if(resultMap_tJDBCOutput_18!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_18 : resultMap_tJDBCOutput_18.entrySet()) {
		switch(entry_tJDBCOutput_18.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "ERROR_MESSAGE", entry_tJDBCOutput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "NB_LINE", entry_tJDBCOutput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "NB_SUCCESS", entry_tJDBCOutput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "NB_REJECT", entry_tJDBCOutput_18.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_18 = new StringBuilder();
            for (int i_tJDBCOutput_18 = 0; i_tJDBCOutput_18 < entry_tJDBCOutput_18.getKey().length(); i_tJDBCOutput_18++) {
                char ch_tJDBCOutput_18 = entry_tJDBCOutput_18.getKey().charAt(i_tJDBCOutput_18);
                if(Character.isUpperCase(ch_tJDBCOutput_18) && i_tJDBCOutput_18> 0) {
                	studio_key_tJDBCOutput_18.append('_');
                }
                studio_key_tJDBCOutput_18.append(ch_tJDBCOutput_18);
            }
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", studio_key_tJDBCOutput_18.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_18.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_hinterface");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_18", true);
end_Hash.put("tJDBCOutput_18", System.currentTimeMillis());




/**
 * [tJDBCOutput_18 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_24:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tJDBCInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_18"
					     			globalMap.remove("tHash_Lookup_row22"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_24 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_24")==null){
    if(resourceMap.get("reader_tJDBCInput_24")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_24")).close();
		} catch (java.io.IOException e_tJDBCInput_24) {
			String errorMessage_tJDBCInput_24 = "failed to release the resource in tJDBCInput_24 :" + e_tJDBCInput_24.getMessage();
			System.err.println(errorMessage_tJDBCInput_24);
		}
	}
}
 



/**
 * [tJDBCInput_24 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";

	

 



/**
 * [tMap_18 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_18 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_18")==null){
    if(resourceMap.get("writer_tJDBCOutput_18")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_18")).close();
		} catch (java.io.IOException e_tJDBCOutput_18) {
			String errorMessage_tJDBCOutput_18 = "failed to release the resource in tJDBCOutput_18 :" + e_tJDBCOutput_18.getMessage();
			System.err.println(errorMessage_tJDBCOutput_18);
		}
	}
}
 



/**
 * [tJDBCOutput_18 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_24_SUBPROCESS_STATE", 1);
	}
	


public static class vm_configurationStruct implements routines.system.IPersistableRow<vm_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_name;

				public String getVm_name () {
					return this.vm_name;
				}
				
			    public String vm_description;

				public String getVm_description () {
					return this.vm_description;
				}
				
			    public Short vm_type;

				public Short getVm_type () {
					return this.vm_type;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public Object template_id;

				public Object getTemplate_id () {
					return this.template_id;
				}
				
			    public String template_name;

				public String getTemplate_name () {
					return this.template_name;
				}
				
			    public Short cpu_per_socket;

				public Short getCpu_per_socket () {
					return this.cpu_per_socket;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public short operating_system;

				public short getOperating_system () {
					return this.operating_system;
				}
				
			    public Object default_host;

				public Object getDefault_host () {
					return this.default_host;
				}
				
			    public Boolean high_availability;

				public Boolean getHigh_availability () {
					return this.high_availability;
				}
				
			    public Boolean initialized;

				public Boolean getInitialized () {
					return this.initialized;
				}
				
			    public Boolean stateless;

				public Boolean getStateless () {
					return this.stateless;
				}
				
			    public Boolean fail_back;

				public Boolean getFail_back () {
					return this.fail_back;
				}
				
			    public Short usb_policy;

				public Short getUsb_policy () {
					return this.usb_policy;
				}
				
			    public String time_zone;

				public String getTime_zone () {
					return this.time_zone;
				}
				
			    public Object vm_pool_id;

				public Object getVm_pool_id () {
					return this.vm_pool_id;
				}
				
			    public String vm_pool_name;

				public String getVm_pool_name () {
					return this.vm_pool_name;
				}
				
			    public Object created_by_user_id;

				public Object getCreated_by_user_id () {
					return this.created_by_user_id;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public Integer default_host_configuration_version;

				public Integer getDefault_host_configuration_version () {
					return this.default_host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			        this.operating_system = dis.readShort();
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			        this.operating_system = dis.readShort();
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// short
				
		            	dos.writeShort(this.operating_system);
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// short
				
		            	dos.writeShort(this.operating_system);
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_name="+vm_name);
		sb.append(",vm_description="+vm_description);
		sb.append(",vm_type="+String.valueOf(vm_type));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",template_id="+String.valueOf(template_id));
		sb.append(",template_name="+template_name);
		sb.append(",cpu_per_socket="+String.valueOf(cpu_per_socket));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",operating_system="+String.valueOf(operating_system));
		sb.append(",default_host="+String.valueOf(default_host));
		sb.append(",high_availability="+String.valueOf(high_availability));
		sb.append(",initialized="+String.valueOf(initialized));
		sb.append(",stateless="+String.valueOf(stateless));
		sb.append(",fail_back="+String.valueOf(fail_back));
		sb.append(",usb_policy="+String.valueOf(usb_policy));
		sb.append(",time_zone="+time_zone);
		sb.append(",vm_pool_id="+String.valueOf(vm_pool_id));
		sb.append(",vm_pool_name="+vm_pool_name);
		sb.append(",created_by_user_id="+String.valueOf(created_by_user_id));
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",default_host_configuration_version="+String.valueOf(default_host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_name;

				public String getVm_name () {
					return this.vm_name;
				}
				
			    public String vm_description;

				public String getVm_description () {
					return this.vm_description;
				}
				
			    public Short vm_type;

				public Short getVm_type () {
					return this.vm_type;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				
			    public Object template_id;

				public Object getTemplate_id () {
					return this.template_id;
				}
				
			    public String template_name;

				public String getTemplate_name () {
					return this.template_name;
				}
				
			    public Short cpu_per_socket;

				public Short getCpu_per_socket () {
					return this.cpu_per_socket;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Short operating_system;

				public Short getOperating_system () {
					return this.operating_system;
				}
				
			    public Object default_host;

				public Object getDefault_host () {
					return this.default_host;
				}
				
			    public String default_host_join_id;

				public String getDefault_host_join_id () {
					return this.default_host_join_id;
				}
				
			    public Boolean high_availability;

				public Boolean getHigh_availability () {
					return this.high_availability;
				}
				
			    public Boolean initialized;

				public Boolean getInitialized () {
					return this.initialized;
				}
				
			    public Boolean stateless;

				public Boolean getStateless () {
					return this.stateless;
				}
				
			    public Boolean fail_back;

				public Boolean getFail_back () {
					return this.fail_back;
				}
				
			    public Short usb_policy;

				public Short getUsb_policy () {
					return this.usb_policy;
				}
				
			    public String time_zone;

				public String getTime_zone () {
					return this.time_zone;
				}
				
			    public Object vm_pool_id;

				public Object getVm_pool_id () {
					return this.vm_pool_id;
				}
				
			    public String vm_pool_name;

				public String getVm_pool_name () {
					return this.vm_pool_name;
				}
				
			    public Object created_by_user_id;

				public Object getCreated_by_user_id () {
					return this.created_by_user_id;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
					this.default_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
					this.default_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// String
				
						writeString(this.default_host_join_id,dos);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// String
				
						writeString(this.default_host_join_id,dos);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_name="+vm_name);
		sb.append(",vm_description="+vm_description);
		sb.append(",vm_type="+String.valueOf(vm_type));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_join_id="+cluster_join_id);
		sb.append(",template_id="+String.valueOf(template_id));
		sb.append(",template_name="+template_name);
		sb.append(",cpu_per_socket="+String.valueOf(cpu_per_socket));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",operating_system="+String.valueOf(operating_system));
		sb.append(",default_host="+String.valueOf(default_host));
		sb.append(",default_host_join_id="+default_host_join_id);
		sb.append(",high_availability="+String.valueOf(high_availability));
		sb.append(",initialized="+String.valueOf(initialized));
		sb.append(",stateless="+String.valueOf(stateless));
		sb.append(",fail_back="+String.valueOf(fail_back));
		sb.append(",usb_policy="+String.valueOf(usb_policy));
		sb.append(",time_zone="+time_zone);
		sb.append(",vm_pool_id="+String.valueOf(vm_pool_id));
		sb.append(",vm_pool_name="+vm_pool_name);
		sb.append(",created_by_user_id="+String.valueOf(created_by_user_id));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_6Struct implements routines.system.IPersistableRow<after_tJDBCInput_6Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_name;

				public String getVm_name () {
					return this.vm_name;
				}
				
			    public String vm_description;

				public String getVm_description () {
					return this.vm_description;
				}
				
			    public Short vm_type;

				public Short getVm_type () {
					return this.vm_type;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				
			    public Object template_id;

				public Object getTemplate_id () {
					return this.template_id;
				}
				
			    public String template_name;

				public String getTemplate_name () {
					return this.template_name;
				}
				
			    public Short cpu_per_socket;

				public Short getCpu_per_socket () {
					return this.cpu_per_socket;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Short operating_system;

				public Short getOperating_system () {
					return this.operating_system;
				}
				
			    public Object default_host;

				public Object getDefault_host () {
					return this.default_host;
				}
				
			    public String default_host_join_id;

				public String getDefault_host_join_id () {
					return this.default_host_join_id;
				}
				
			    public Boolean high_availability;

				public Boolean getHigh_availability () {
					return this.high_availability;
				}
				
			    public Boolean initialized;

				public Boolean getInitialized () {
					return this.initialized;
				}
				
			    public Boolean stateless;

				public Boolean getStateless () {
					return this.stateless;
				}
				
			    public Boolean fail_back;

				public Boolean getFail_back () {
					return this.fail_back;
				}
				
			    public Short usb_policy;

				public Short getUsb_policy () {
					return this.usb_policy;
				}
				
			    public String time_zone;

				public String getTime_zone () {
					return this.time_zone;
				}
				
			    public Object vm_pool_id;

				public Object getVm_pool_id () {
					return this.vm_pool_id;
				}
				
			    public String vm_pool_name;

				public String getVm_pool_name () {
					return this.vm_pool_name;
				}
				
			    public Object created_by_user_id;

				public Object getCreated_by_user_id () {
					return this.created_by_user_id;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
					this.default_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
					this.cluster_join_id = readString(dis);
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
					this.default_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// String
				
						writeString(this.default_host_join_id,dos);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// String
				
						writeString(this.cluster_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// String
				
						writeString(this.default_host_join_id,dos);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_name="+vm_name);
		sb.append(",vm_description="+vm_description);
		sb.append(",vm_type="+String.valueOf(vm_type));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",cluster_join_id="+cluster_join_id);
		sb.append(",template_id="+String.valueOf(template_id));
		sb.append(",template_name="+template_name);
		sb.append(",cpu_per_socket="+String.valueOf(cpu_per_socket));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",operating_system="+String.valueOf(operating_system));
		sb.append(",default_host="+String.valueOf(default_host));
		sb.append(",default_host_join_id="+default_host_join_id);
		sb.append(",high_availability="+String.valueOf(high_availability));
		sb.append(",initialized="+String.valueOf(initialized));
		sb.append(",stateless="+String.valueOf(stateless));
		sb.append(",fail_back="+String.valueOf(fail_back));
		sb.append(",usb_policy="+String.valueOf(usb_policy));
		sb.append(",time_zone="+time_zone);
		sb.append(",vm_pool_id="+String.valueOf(vm_pool_id));
		sb.append(",vm_pool_name="+vm_pool_name);
		sb.append(",created_by_user_id="+String.valueOf(created_by_user_id));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_43Process(globalMap);
		tJDBCInput_42Process(globalMap);

		row4Struct row4 = new row4Struct();
vm_configurationStruct vm_configuration = new vm_configurationStruct();





	
	/**
	 * [tJDBCOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_6", false);
		start_Hash.put("tJDBCOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_configuration");
					}
				
		int tos_count_tJDBCOutput_6 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_6 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_6 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_6 = (String)(restRequest_tJDBCOutput_6 != null ? restRequest_tJDBCOutput_6.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_6 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_6 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_6 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_6 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_6.createRuntimeProperties();
 		                    props_tJDBCOutput_6.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_6.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_6.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.tableSelection.setValue("tablename",
 		                    "vm_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"default_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"vm_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_1_fisrt sst_tJDBCOutput_6_1_fisrt = new SchemaSettingTool_tJDBCOutput_6_1_fisrt();
 		                    
 		                    props_tJDBCOutput_6.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"default_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"vm_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_2_fisrt sst_tJDBCOutput_6_2_fisrt = new SchemaSettingTool_tJDBCOutput_6_2_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"default_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"vm_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_3_fisrt sst_tJDBCOutput_6_3_fisrt = new SchemaSettingTool_tJDBCOutput_6_3_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("referenceColumns",
 		                    "vm_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_6.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_6 = props_tJDBCOutput_6.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_6 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_6 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_6 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_6.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_6);
        }
    }
globalMap.put("tJDBCOutput_6_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_6);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_6= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_6_MAPPINGS_URL", mappings_url_tJDBCOutput_6);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_6 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_6";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_6 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_6 = null;
topology_tJDBCOutput_6 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_6 = def_tJDBCOutput_6.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_6, topology_tJDBCOutput_6);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_6 = def_tJDBCOutput_6.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_6 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_6.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_6 = componentRuntime_tJDBCOutput_6.initialize(container_tJDBCOutput_6, props_tJDBCOutput_6);

if (initVr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_6.getMessage());
}

if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_6 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_6;
	compDriverInitialization_tJDBCOutput_6.runAtDriver(container_tJDBCOutput_6);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_6 = null;
if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_6 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_6;
	if (doesNodeBelongToRequest_tJDBCOutput_6) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_6 = sourceOrSink_tJDBCOutput_6.validate(container_tJDBCOutput_6);
        if (vr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_6.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_6 = null;
    if (sourceOrSink_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_6 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_6;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_6 = sink_tJDBCOutput_6.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_6) {
            writeOperation_tJDBCOutput_6.initialize(container_tJDBCOutput_6);
        }
        writer_tJDBCOutput_6 = writeOperation_tJDBCOutput_6.createWriter(container_tJDBCOutput_6);
        if (doesNodeBelongToRequest_tJDBCOutput_6) {
            writer_tJDBCOutput_6.open("tJDBCOutput_6");
        }

        resourceMap.put("writer_tJDBCOutput_6", writer_tJDBCOutput_6);
    } // end of "sourceOrSink_tJDBCOutput_6 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_6 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_6.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_6 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_6 = props_tJDBCOutput_6.getSchema(c_tJDBCOutput_6, false);
    incomingEnforcer_tJDBCOutput_6 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_6);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_6 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_6 = null;


 



/**
 * [tJDBCOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) 
					globalMap.get( "tHash_Lookup_row38" ))
					;					
					
	

row38Struct row38HashKey = new row38Struct();
row38Struct row38Default = new row38Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct> tHash_Lookup_row39 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct>) 
					globalMap.get( "tHash_Lookup_row39" ))
					;					
					
	

row39Struct row39HashKey = new row39Struct();
row39Struct row39Default = new row39Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_configurationStruct vm_configuration_tmp = new vm_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tJDBCInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_6", false);
		start_Hash.put("tJDBCInput_6", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_6";

	
		int tos_count_tJDBCInput_6 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_6 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_6 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_6 = (String)(restRequest_tJDBCInput_6 != null ? restRequest_tJDBCInput_6.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_6 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_6 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_6 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_6 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_6.createRuntimeProperties();
 		                    props_tJDBCInput_6.setValue("sql",
 		                    "SELECT \n  vm_id, \n  vm_name, \n  vm_description, \n  vm_type, \n  cluster_id,\n  upper(cast(cluster_id as char(36))) "
+"as cluster_join_id,  \n  template_id, \n  template_name, \n  cpu_per_socket, \n  number_of_sockets, \n  memory_size_mb, "
+"\n  operating_system, \n  default_host,\n  upper(cast(default_host as char(36))) as default_host_join_id,  \n  high_avai"
+"lability, \n  initialized, \n  stateless, \n  fail_back,  \n  usb_policy, \n  time_zone, \n  vm_pool_id,\n  vm_pool_name,\n"
+"  created_by_user_id,\n  create_date, \n  update_date\nFROM dwh_vm_configuration_history_view");
 		                    
 		                    props_tJDBCInput_6.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_6.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_6.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_6.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_6.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_6_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_vm_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"cluster_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"default_host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_6\",\"di.table.label\":\"dwh_vm_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_6_1_fisrt sst_tJDBCInput_6_1_fisrt = new SchemaSettingTool_tJDBCInput_6_1_fisrt();
 		                    
 		                    props_tJDBCInput_6.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_6_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_6.tableSelection.setValue("tablename",
 		                    "dwh_vm_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_6_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_6.trimTable).setValue("trim",tJDBCInput_6_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_6_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_6_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("vm_name");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("vm_description");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("vm_type");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("cluster_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("cluster_join_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("template_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("template_name");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("cpu_per_socket");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("number_of_sockets");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("memory_size_mb");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("operating_system");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("default_host");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("default_host_join_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("high_availability");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("initialized");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("stateless");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("fail_back");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("usb_policy");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("time_zone");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("vm_pool_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("vm_pool_name");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("created_by_user_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_6.trimTable).setValue("columnName",tJDBCInput_6_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_6.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_6 = props_tJDBCInput_6.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_6 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_6 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_6 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_6.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_6);
        }
    }
globalMap.put("tJDBCInput_6_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_6);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_6= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_6_MAPPINGS_URL", mappings_url_tJDBCInput_6);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_6 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_6";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_6 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_6 = null;
topology_tJDBCInput_6 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_6 = def_tJDBCInput_6.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_6, topology_tJDBCInput_6);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_6 = def_tJDBCInput_6.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_6 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_6.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_6 = componentRuntime_tJDBCInput_6.initialize(container_tJDBCInput_6, props_tJDBCInput_6);

if (initVr_tJDBCInput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_6.getMessage());
}

if(componentRuntime_tJDBCInput_6 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_6 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_6;
	compDriverInitialization_tJDBCInput_6.runAtDriver(container_tJDBCInput_6);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_6 = null;
if(componentRuntime_tJDBCInput_6 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_6 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_6;
	if (doesNodeBelongToRequest_tJDBCInput_6) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_6 = sourceOrSink_tJDBCInput_6.validate(container_tJDBCInput_6);
        if (vr_tJDBCInput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_6.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_6 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_6 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_6;
        reader_tJDBCInput_6 = source_tJDBCInput_6.createReader(container_tJDBCInput_6);
	    reader_tJDBCInput_6 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_6, container_tJDBCInput_6);

            boolean multi_output_is_allowed_tJDBCInput_6 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_6 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_6.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_6 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_6 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_6 = props_tJDBCInput_6.getSchema(c_tJDBCInput_6, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_6 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_6, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_6 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_6 = reader_tJDBCInput_6.start();

        resourceMap.put("reader_tJDBCInput_6", reader_tJDBCInput_6);

        for (; available_tJDBCInput_6; available_tJDBCInput_6 = reader_tJDBCInput_6.advance()) {
			nb_line_tJDBCInput_6++;

			
			if (multi_output_is_allowed_tJDBCInput_6) {
				
					row4 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_6 = reader_tJDBCInput_6.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_6) {
						row4 = new row4Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_6 == null) {
            factory_tJDBCInput_6 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_6.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_6.setWrapped(factory_tJDBCInput_6.convertToAvro(data_tJDBCInput_6));
                Object columnValue_0_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(0);
                        row4.vm_id = (Object) (columnValue_0_tJDBCInput_6);
                Object columnValue_1_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(1);
                        row4.vm_name = (String) (columnValue_1_tJDBCInput_6);
                Object columnValue_2_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(2);
                        row4.vm_description = (String) (columnValue_2_tJDBCInput_6);
                Object columnValue_3_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(3);
                        row4.vm_type = (Short) (columnValue_3_tJDBCInput_6);
                Object columnValue_4_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(4);
                        row4.cluster_id = (Object) (columnValue_4_tJDBCInput_6);
                Object columnValue_5_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(5);
                        row4.cluster_join_id = (String) (columnValue_5_tJDBCInput_6);
                Object columnValue_6_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(6);
                        row4.template_id = (Object) (columnValue_6_tJDBCInput_6);
                Object columnValue_7_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(7);
                        row4.template_name = (String) (columnValue_7_tJDBCInput_6);
                Object columnValue_8_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(8);
                        row4.cpu_per_socket = (Short) (columnValue_8_tJDBCInput_6);
                Object columnValue_9_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(9);
                        row4.number_of_sockets = (Short) (columnValue_9_tJDBCInput_6);
                Object columnValue_10_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(10);
                        row4.memory_size_mb = (Integer) (columnValue_10_tJDBCInput_6);
                Object columnValue_11_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(11);
                        row4.operating_system = (Short) (columnValue_11_tJDBCInput_6);
                Object columnValue_12_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(12);
                        row4.default_host = (Object) (columnValue_12_tJDBCInput_6);
                Object columnValue_13_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(13);
                        row4.default_host_join_id = (String) (columnValue_13_tJDBCInput_6);
                Object columnValue_14_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(14);
                        row4.high_availability = (Boolean) (columnValue_14_tJDBCInput_6);
                Object columnValue_15_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(15);
                        row4.initialized = (Boolean) (columnValue_15_tJDBCInput_6);
                Object columnValue_16_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(16);
                        row4.stateless = (Boolean) (columnValue_16_tJDBCInput_6);
                Object columnValue_17_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(17);
                        row4.fail_back = (Boolean) (columnValue_17_tJDBCInput_6);
                Object columnValue_18_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(18);
                        row4.usb_policy = (Short) (columnValue_18_tJDBCInput_6);
                Object columnValue_19_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(19);
                        row4.time_zone = (String) (columnValue_19_tJDBCInput_6);
                Object columnValue_20_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(20);
                        row4.vm_pool_id = (Object) (columnValue_20_tJDBCInput_6);
                Object columnValue_21_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(21);
                        row4.vm_pool_name = (String) (columnValue_21_tJDBCInput_6);
                Object columnValue_22_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(22);
                        row4.created_by_user_id = (Object) (columnValue_22_tJDBCInput_6);
                Object columnValue_23_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(23);
                        row4.create_date = (java.util.Date) (columnValue_23_tJDBCInput_6);
                Object columnValue_24_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(24);
                        row4.update_date = (java.util.Date) (columnValue_24_tJDBCInput_6);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_6) {
				java.util.Map<String,Object> info_tJDBCInput_6 = e_tJDBCInput_6.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_6 = null;
					if(info_tJDBCInput_6.containsKey("error")){
						errorMessage_tJDBCInput_6 = info_tJDBCInput_6.get("error");
					}else if(info_tJDBCInput_6.containsKey("errorMessage")){
						errorMessage_tJDBCInput_6 = info_tJDBCInput_6.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_6 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_6 = "Row "+ nb_line_tJDBCInput_6 + ": "+errorMessage_tJDBCInput_6;
					System.err.println(errorMessage_tJDBCInput_6);
				
					// If the record is reject, the main line record should put NULL
					row4 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_6 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_6 = null;


 



/**
 * [tJDBCInput_6 begin ] stop
 */
	
	/**
	 * [tJDBCInput_6 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	


 


	tos_count_tJDBCInput_6++;

/**
 * [tJDBCInput_6 main ] stop
 */
	
	/**
	 * [tJDBCInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	


 



/**
 * [tJDBCInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_6 = false;
		  boolean mainRowRejected_tMap_6 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row4.update_date == null ? TalendDate.compareDate(row4.create_date,context.runTime) <=0 : TalendDate.compareDate(row4.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row4'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row38" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow38 = false;
       		  	    	
       		  	    	
 							row38Struct row38ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row38HashKey.host_join_id = row4.default_host_join_id ;
                        		    		

								
		                        	row38HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row38.lookup( row38HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row38 != null && tHash_Lookup_row38.getCount(row38HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row38' and it contains more one result from keys :  row38.host_join_id = '" + row38HashKey.host_join_id + "'");
								} // G 071
							

							row38Struct row38 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row38Struct fromLookup_row38 = null;
							row38 = row38Default;
										 
							
								 
							
							
								if (tHash_Lookup_row38 !=null && tHash_Lookup_row38.hasNext()) { // G 099
								
							
								
								fromLookup_row38 = tHash_Lookup_row38.next();

							
							
								} // G 099
							
							

							if(fromLookup_row38 != null) {
								row38 = fromLookup_row38;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row39" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow39 = false;
       		  	    	
       		  	    	
 							row39Struct row39ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row39HashKey.cluster_join_id = row4.cluster_join_id ;
                        		    		

								
		                        	row39HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row39.lookup( row39HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row39 != null && tHash_Lookup_row39.getCount(row39HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row39' and it contains more one result from keys :  row39.cluster_join_id = '" + row39HashKey.cluster_join_id + "'");
								} // G 071
							

							row39Struct row39 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row39Struct fromLookup_row39 = null;
							row39 = row39Default;
										 
							
								 
							
							
								if (tHash_Lookup_row39 !=null && tHash_Lookup_row39.hasNext()) { // G 099
								
							
								
								fromLookup_row39 = tHash_Lookup_row39.next();

							
							
								} // G 099
							
							

							if(fromLookup_row39 != null) {
								row39 = fromLookup_row39;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

vm_configuration = null;


// # Output table : 'vm_configuration'
vm_configuration_tmp.vm_id = row4.vm_id;
vm_configuration_tmp.vm_name = StringHandling.TRIM(row4.vm_name);
vm_configuration_tmp.vm_description = StringHandling.TRIM(row4.vm_description);
vm_configuration_tmp.vm_type = row4.vm_type;
vm_configuration_tmp.cluster_id = row4.cluster_id;
vm_configuration_tmp.template_id = row4.template_id;
vm_configuration_tmp.template_name = StringHandling.TRIM(row4.template_name);
vm_configuration_tmp.cpu_per_socket = row4.cpu_per_socket;
vm_configuration_tmp.number_of_sockets = row4.number_of_sockets;
vm_configuration_tmp.memory_size_mb = row4.memory_size_mb;
vm_configuration_tmp.operating_system = row4.operating_system;
vm_configuration_tmp.default_host = row4.default_host;
vm_configuration_tmp.high_availability = row4.high_availability;
vm_configuration_tmp.initialized = row4.initialized;
vm_configuration_tmp.stateless = row4.stateless;
vm_configuration_tmp.fail_back = row4.fail_back;
vm_configuration_tmp.usb_policy = row4.usb_policy;
vm_configuration_tmp.time_zone = StringHandling.TRIM(row4.time_zone);
vm_configuration_tmp.vm_pool_id = row4.vm_pool_id;
vm_configuration_tmp.vm_pool_name = row4.vm_pool_name;
vm_configuration_tmp.created_by_user_id = row4.created_by_user_id;
vm_configuration_tmp.cluster_configuration_version = row39.history_id ;
vm_configuration_tmp.default_host_configuration_version = row38.history_id ;
vm_configuration_tmp.create_date = row4.create_date;
vm_configuration_tmp.update_date = row4.update_date;
vm_configuration_tmp.delete_date = null;
vm_configuration = vm_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "vm_configuration"
if(vm_configuration != null) { 



	
	/**
	 * [tJDBCOutput_6 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_6 != null) {
            incomingEnforcer_tJDBCOutput_6.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_id", vm_configuration.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_name") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_name", vm_configuration.vm_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_description") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_description", vm_configuration.vm_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_type") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_type", vm_configuration.vm_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("cluster_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("cluster_id", vm_configuration.cluster_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("template_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("template_id", vm_configuration.template_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("template_name") != null){
                    incomingEnforcer_tJDBCOutput_6.put("template_name", vm_configuration.template_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("cpu_per_socket") != null){
                    incomingEnforcer_tJDBCOutput_6.put("cpu_per_socket", vm_configuration.cpu_per_socket);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("number_of_sockets") != null){
                    incomingEnforcer_tJDBCOutput_6.put("number_of_sockets", vm_configuration.number_of_sockets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("memory_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_6.put("memory_size_mb", vm_configuration.memory_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("operating_system") != null){
                    incomingEnforcer_tJDBCOutput_6.put("operating_system", vm_configuration.operating_system);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("default_host") != null){
                    incomingEnforcer_tJDBCOutput_6.put("default_host", vm_configuration.default_host);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("high_availability") != null){
                    incomingEnforcer_tJDBCOutput_6.put("high_availability", vm_configuration.high_availability);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("initialized") != null){
                    incomingEnforcer_tJDBCOutput_6.put("initialized", vm_configuration.initialized);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("stateless") != null){
                    incomingEnforcer_tJDBCOutput_6.put("stateless", vm_configuration.stateless);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("fail_back") != null){
                    incomingEnforcer_tJDBCOutput_6.put("fail_back", vm_configuration.fail_back);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("usb_policy") != null){
                    incomingEnforcer_tJDBCOutput_6.put("usb_policy", vm_configuration.usb_policy);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("time_zone") != null){
                    incomingEnforcer_tJDBCOutput_6.put("time_zone", vm_configuration.time_zone);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_pool_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_pool_id", vm_configuration.vm_pool_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_pool_name") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_pool_name", vm_configuration.vm_pool_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("created_by_user_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("created_by_user_id", vm_configuration.created_by_user_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("cluster_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_6.put("cluster_configuration_version", vm_configuration.cluster_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("default_host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_6.put("default_host_configuration_version", vm_configuration.default_host_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("create_date", vm_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("update_date", vm_configuration.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("delete_date", vm_configuration.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_6 = null;
        if (incomingEnforcer_tJDBCOutput_6 != null) {
            data_tJDBCOutput_6 = incomingEnforcer_tJDBCOutput_6.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_6 != null && data_tJDBCOutput_6 != null) {
        	writer_tJDBCOutput_6.write(data_tJDBCOutput_6);
        }
        
        nb_line_tJDBCOutput_6++;

 


	tos_count_tJDBCOutput_6++;

/**
 * [tJDBCOutput_6 main ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_end ] stop
 */

} // End of branch "vm_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row4'
	
	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	


 



/**
 * [tJDBCInput_6 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_6 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	
// end of generic


resourceMap.put("finish_tJDBCInput_6", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_6 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_6 = null;
    if (reader_tJDBCInput_6 != null) {
        reader_tJDBCInput_6.close();
        resultMap_tJDBCInput_6 = reader_tJDBCInput_6.getReturnValues();
    }
if(resultMap_tJDBCInput_6!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_6 : resultMap_tJDBCInput_6.entrySet()) {
		switch(entry_tJDBCInput_6.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "ERROR_MESSAGE", entry_tJDBCInput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "NB_LINE", entry_tJDBCInput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "NB_SUCCESS", entry_tJDBCInput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "NB_REJECT", entry_tJDBCInput_6.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_6 = new StringBuilder();
            for (int i_tJDBCInput_6 = 0; i_tJDBCInput_6 < entry_tJDBCInput_6.getKey().length(); i_tJDBCInput_6++) {
                char ch_tJDBCInput_6 = entry_tJDBCInput_6.getKey().charAt(i_tJDBCInput_6);
                if(Character.isUpperCase(ch_tJDBCInput_6) && i_tJDBCInput_6> 0) {
                	studio_key_tJDBCInput_6.append('_');
                }
                studio_key_tJDBCInput_6.append(ch_tJDBCInput_6);
            }
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", studio_key_tJDBCInput_6.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_6.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_6", true);
end_Hash.put("tJDBCInput_6", System.currentTimeMillis());




/**
 * [tJDBCInput_6 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row38 != null) {
						tHash_Lookup_row38.endGet();
					}
					globalMap.remove( "tHash_Lookup_row38" );

					
					
				
					if(tHash_Lookup_row39 != null) {
						tHash_Lookup_row39.endGet();
					}
					globalMap.remove( "tHash_Lookup_row39" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tJDBCOutput_6 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_6", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_6 = null;
    if (writer_tJDBCOutput_6 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_6 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_6.close();
        resultMap_tJDBCOutput_6 = writer_tJDBCOutput_6.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_6), container_tJDBCOutput_6);
    }
if(resultMap_tJDBCOutput_6!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_6 : resultMap_tJDBCOutput_6.entrySet()) {
		switch(entry_tJDBCOutput_6.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "ERROR_MESSAGE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_LINE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_SUCCESS", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_REJECT", entry_tJDBCOutput_6.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_6 = new StringBuilder();
            for (int i_tJDBCOutput_6 = 0; i_tJDBCOutput_6 < entry_tJDBCOutput_6.getKey().length(); i_tJDBCOutput_6++) {
                char ch_tJDBCOutput_6 = entry_tJDBCOutput_6.getKey().charAt(i_tJDBCOutput_6);
                if(Character.isUpperCase(ch_tJDBCOutput_6) && i_tJDBCOutput_6> 0) {
                	studio_key_tJDBCOutput_6.append('_');
                }
                studio_key_tJDBCOutput_6.append(ch_tJDBCOutput_6);
            }
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", studio_key_tJDBCOutput_6.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_6.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_6", true);
end_Hash.put("tJDBCOutput_6", System.currentTimeMillis());




/**
 * [tJDBCOutput_6 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tJDBCInput_26Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row38"); 
				     			
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row39"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_6 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_6")==null){
    if(resourceMap.get("reader_tJDBCInput_6")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_6")).close();
		} catch (java.io.IOException e_tJDBCInput_6) {
			String errorMessage_tJDBCInput_6 = "failed to release the resource in tJDBCInput_6 :" + e_tJDBCInput_6.getMessage();
			System.err.println(errorMessage_tJDBCInput_6);
		}
	}
}
 



/**
 * [tJDBCInput_6 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_6")==null){
    if(resourceMap.get("writer_tJDBCOutput_6")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_6")).close();
		} catch (java.io.IOException e_tJDBCOutput_6) {
			String errorMessage_tJDBCOutput_6 = "failed to release the resource in tJDBCOutput_6 :" + e_tJDBCOutput_6.getMessage();
			System.err.println(errorMessage_tJDBCOutput_6);
		}
	}
}
 



/**
 * [tJDBCOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class delete_vmsStruct implements routines.system.IPersistableRow<delete_vmsStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_name;

				public String getVm_name () {
					return this.vm_name;
				}
				
			    public String vm_description;

				public String getVm_description () {
					return this.vm_description;
				}
				
			    public Short vm_type;

				public Short getVm_type () {
					return this.vm_type;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public Object template_id;

				public Object getTemplate_id () {
					return this.template_id;
				}
				
			    public String template_name;

				public String getTemplate_name () {
					return this.template_name;
				}
				
			    public Short cpu_per_socket;

				public Short getCpu_per_socket () {
					return this.cpu_per_socket;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public short operating_system;

				public short getOperating_system () {
					return this.operating_system;
				}
				
			    public Object default_host;

				public Object getDefault_host () {
					return this.default_host;
				}
				
			    public Boolean high_availability;

				public Boolean getHigh_availability () {
					return this.high_availability;
				}
				
			    public Boolean initialized;

				public Boolean getInitialized () {
					return this.initialized;
				}
				
			    public Boolean stateless;

				public Boolean getStateless () {
					return this.stateless;
				}
				
			    public Boolean fail_back;

				public Boolean getFail_back () {
					return this.fail_back;
				}
				
			    public Short usb_policy;

				public Short getUsb_policy () {
					return this.usb_policy;
				}
				
			    public String time_zone;

				public String getTime_zone () {
					return this.time_zone;
				}
				
			    public Object vm_pool_id;

				public Object getVm_pool_id () {
					return this.vm_pool_id;
				}
				
			    public String vm_pool_name;

				public String getVm_pool_name () {
					return this.vm_pool_name;
				}
				
			    public Object created_by_user_id;

				public Object getCreated_by_user_id () {
					return this.created_by_user_id;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public Integer default_host_configuration_version;

				public Integer getDefault_host_configuration_version () {
					return this.default_host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			        this.operating_system = dis.readShort();
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			        this.operating_system = dis.readShort();
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// short
				
		            	dos.writeShort(this.operating_system);
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// short
				
		            	dos.writeShort(this.operating_system);
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_name="+vm_name);
		sb.append(",vm_description="+vm_description);
		sb.append(",vm_type="+String.valueOf(vm_type));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",template_id="+String.valueOf(template_id));
		sb.append(",template_name="+template_name);
		sb.append(",cpu_per_socket="+String.valueOf(cpu_per_socket));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",operating_system="+String.valueOf(operating_system));
		sb.append(",default_host="+String.valueOf(default_host));
		sb.append(",high_availability="+String.valueOf(high_availability));
		sb.append(",initialized="+String.valueOf(initialized));
		sb.append(",stateless="+String.valueOf(stateless));
		sb.append(",fail_back="+String.valueOf(fail_back));
		sb.append(",usb_policy="+String.valueOf(usb_policy));
		sb.append(",time_zone="+time_zone);
		sb.append(",vm_pool_id="+String.valueOf(vm_pool_id));
		sb.append(",vm_pool_name="+vm_pool_name);
		sb.append(",created_by_user_id="+String.valueOf(created_by_user_id));
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",default_host_configuration_version="+String.valueOf(default_host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_vmsStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public String vm_name;

				public String getVm_name () {
					return this.vm_name;
				}
				
			    public String vm_description;

				public String getVm_description () {
					return this.vm_description;
				}
				
			    public Short vm_type;

				public Short getVm_type () {
					return this.vm_type;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public Object template_id;

				public Object getTemplate_id () {
					return this.template_id;
				}
				
			    public String template_name;

				public String getTemplate_name () {
					return this.template_name;
				}
				
			    public Short cpu_per_socket;

				public Short getCpu_per_socket () {
					return this.cpu_per_socket;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Short operating_system;

				public Short getOperating_system () {
					return this.operating_system;
				}
				
			    public Object default_host;

				public Object getDefault_host () {
					return this.default_host;
				}
				
			    public Boolean high_availability;

				public Boolean getHigh_availability () {
					return this.high_availability;
				}
				
			    public Boolean initialized;

				public Boolean getInitialized () {
					return this.initialized;
				}
				
			    public Boolean stateless;

				public Boolean getStateless () {
					return this.stateless;
				}
				
			    public Boolean fail_back;

				public Boolean getFail_back () {
					return this.fail_back;
				}
				
			    public Short usb_policy;

				public Short getUsb_policy () {
					return this.usb_policy;
				}
				
			    public String time_zone;

				public String getTime_zone () {
					return this.time_zone;
				}
				
			    public Object vm_pool_id;

				public Object getVm_pool_id () {
					return this.vm_pool_id;
				}
				
			    public String vm_pool_name;

				public String getVm_pool_name () {
					return this.vm_pool_name;
				}
				
			    public Object created_by_user_id;

				public Object getCreated_by_user_id () {
					return this.created_by_user_id;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public Integer default_host_configuration_version;

				public Integer getDefault_host_configuration_version () {
					return this.default_host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",vm_name="+vm_name);
		sb.append(",vm_description="+vm_description);
		sb.append(",vm_type="+String.valueOf(vm_type));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",template_id="+String.valueOf(template_id));
		sb.append(",template_name="+template_name);
		sb.append(",cpu_per_socket="+String.valueOf(cpu_per_socket));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",operating_system="+String.valueOf(operating_system));
		sb.append(",default_host="+String.valueOf(default_host));
		sb.append(",high_availability="+String.valueOf(high_availability));
		sb.append(",initialized="+String.valueOf(initialized));
		sb.append(",stateless="+String.valueOf(stateless));
		sb.append(",fail_back="+String.valueOf(fail_back));
		sb.append(",usb_policy="+String.valueOf(usb_policy));
		sb.append(",time_zone="+time_zone);
		sb.append(",vm_pool_id="+String.valueOf(vm_pool_id));
		sb.append(",vm_pool_name="+vm_pool_name);
		sb.append(",created_by_user_id="+String.valueOf(created_by_user_id));
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",default_host_configuration_version="+String.valueOf(default_host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_26Struct implements routines.system.IPersistableRow<after_tJDBCInput_26Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public String vm_name;

				public String getVm_name () {
					return this.vm_name;
				}
				
			    public String vm_description;

				public String getVm_description () {
					return this.vm_description;
				}
				
			    public Short vm_type;

				public Short getVm_type () {
					return this.vm_type;
				}
				
			    public Object cluster_id;

				public Object getCluster_id () {
					return this.cluster_id;
				}
				
			    public Object template_id;

				public Object getTemplate_id () {
					return this.template_id;
				}
				
			    public String template_name;

				public String getTemplate_name () {
					return this.template_name;
				}
				
			    public Short cpu_per_socket;

				public Short getCpu_per_socket () {
					return this.cpu_per_socket;
				}
				
			    public Short number_of_sockets;

				public Short getNumber_of_sockets () {
					return this.number_of_sockets;
				}
				
			    public Integer memory_size_mb;

				public Integer getMemory_size_mb () {
					return this.memory_size_mb;
				}
				
			    public Short operating_system;

				public Short getOperating_system () {
					return this.operating_system;
				}
				
			    public Object default_host;

				public Object getDefault_host () {
					return this.default_host;
				}
				
			    public Boolean high_availability;

				public Boolean getHigh_availability () {
					return this.high_availability;
				}
				
			    public Boolean initialized;

				public Boolean getInitialized () {
					return this.initialized;
				}
				
			    public Boolean stateless;

				public Boolean getStateless () {
					return this.stateless;
				}
				
			    public Boolean fail_back;

				public Boolean getFail_back () {
					return this.fail_back;
				}
				
			    public Short usb_policy;

				public Short getUsb_policy () {
					return this.usb_policy;
				}
				
			    public String time_zone;

				public String getTime_zone () {
					return this.time_zone;
				}
				
			    public Object vm_pool_id;

				public Object getVm_pool_id () {
					return this.vm_pool_id;
				}
				
			    public String vm_pool_name;

				public String getVm_pool_name () {
					return this.vm_pool_name;
				}
				
			    public Object created_by_user_id;

				public Object getCreated_by_user_id () {
					return this.created_by_user_id;
				}
				
			    public Integer cluster_configuration_version;

				public Integer getCluster_configuration_version () {
					return this.cluster_configuration_version;
				}
				
			    public Integer default_host_configuration_version;

				public Integer getDefault_host_configuration_version () {
					return this.default_host_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.vm_name = readString(dis);
					
					this.vm_description = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_type = null;
           				} else {
           			    	this.vm_type = dis.readShort();
           				}
					
						this.cluster_id = (Object) dis.readObject();
					
						this.template_id = (Object) dis.readObject();
					
					this.template_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_per_socket = null;
           				} else {
           			    	this.cpu_per_socket = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.number_of_sockets = null;
           				} else {
           			    	this.number_of_sockets = dis.readShort();
           				}
					
						this.memory_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.operating_system = null;
           				} else {
           			    	this.operating_system = dis.readShort();
           				}
					
						this.default_host = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.high_availability = null;
           				} else {
           			    	this.high_availability = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.initialized = null;
           				} else {
           			    	this.initialized = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.stateless = null;
           				} else {
           			    	this.stateless = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.fail_back = null;
           				} else {
           			    	this.fail_back = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.usb_policy = null;
           				} else {
           			    	this.usb_policy = dis.readShort();
           				}
					
					this.time_zone = readString(dis);
					
						this.vm_pool_id = (Object) dis.readObject();
					
					this.vm_pool_name = readString(dis);
					
						this.created_by_user_id = (Object) dis.readObject();
					
						this.cluster_configuration_version = readInteger(dis);
					
						this.default_host_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.vm_name,dos);
					
					// String
				
						writeString(this.vm_description,dos);
					
					// Short
				
						if(this.vm_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.cluster_id);
					
					// Object
				
       			    	dos.writeObject(this.template_id);
					
					// String
				
						writeString(this.template_name,dos);
					
					// Short
				
						if(this.cpu_per_socket == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_per_socket);
		            	}
					
					// Short
				
						if(this.number_of_sockets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.number_of_sockets);
		            	}
					
					// Integer
				
						writeInteger(this.memory_size_mb,dos);
					
					// Short
				
						if(this.operating_system == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.operating_system);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.default_host);
					
					// Boolean
				
						if(this.high_availability == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.high_availability);
		            	}
					
					// Boolean
				
						if(this.initialized == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.initialized);
		            	}
					
					// Boolean
				
						if(this.stateless == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.stateless);
		            	}
					
					// Boolean
				
						if(this.fail_back == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.fail_back);
		            	}
					
					// Short
				
						if(this.usb_policy == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.usb_policy);
		            	}
					
					// String
				
						writeString(this.time_zone,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_pool_id);
					
					// String
				
						writeString(this.vm_pool_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.created_by_user_id);
					
					// Integer
				
						writeInteger(this.cluster_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.default_host_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",vm_name="+vm_name);
		sb.append(",vm_description="+vm_description);
		sb.append(",vm_type="+String.valueOf(vm_type));
		sb.append(",cluster_id="+String.valueOf(cluster_id));
		sb.append(",template_id="+String.valueOf(template_id));
		sb.append(",template_name="+template_name);
		sb.append(",cpu_per_socket="+String.valueOf(cpu_per_socket));
		sb.append(",number_of_sockets="+String.valueOf(number_of_sockets));
		sb.append(",memory_size_mb="+String.valueOf(memory_size_mb));
		sb.append(",operating_system="+String.valueOf(operating_system));
		sb.append(",default_host="+String.valueOf(default_host));
		sb.append(",high_availability="+String.valueOf(high_availability));
		sb.append(",initialized="+String.valueOf(initialized));
		sb.append(",stateless="+String.valueOf(stateless));
		sb.append(",fail_back="+String.valueOf(fail_back));
		sb.append(",usb_policy="+String.valueOf(usb_policy));
		sb.append(",time_zone="+time_zone);
		sb.append(",vm_pool_id="+String.valueOf(vm_pool_id));
		sb.append(",vm_pool_name="+vm_pool_name);
		sb.append(",created_by_user_id="+String.valueOf(created_by_user_id));
		sb.append(",cluster_configuration_version="+String.valueOf(cluster_configuration_version));
		sb.append(",default_host_configuration_version="+String.valueOf(default_host_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_26Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_26_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_25Process(globalMap);

		row25Struct row25 = new row25Struct();
delete_vmsStruct delete_vms = new delete_vmsStruct();





	
	/**
	 * [tJDBCOutput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_19", false);
		start_Hash.put("tJDBCOutput_19", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_19";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_vms");
					}
				
		int tos_count_tJDBCOutput_19 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_19 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_19 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_19 = (String)(restRequest_tJDBCOutput_19 != null ? restRequest_tJDBCOutput_19.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_19 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_19 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_19 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_19 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_19.createRuntimeProperties();
 		                    props_tJDBCOutput_19.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_19.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_19.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_19.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_19.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_19.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_19.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_19.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.tableSelection.setValue("tablename",
 		                    "vm_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_19_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"default_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_19\",\"di.table.label\":\"vm_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_19_1_fisrt sst_tJDBCOutput_19_1_fisrt = new SchemaSettingTool_tJDBCOutput_19_1_fisrt();
 		                    
 		                    props_tJDBCOutput_19.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_19_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_19_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"default_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_19\",\"di.table.label\":\"vm_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_19_2_fisrt sst_tJDBCOutput_19_2_fisrt = new SchemaSettingTool_tJDBCOutput_19_2_fisrt();
 		                    
 		                    props_tJDBCOutput_19.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_19_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_19_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"default_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_19\",\"di.table.label\":\"vm_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_19_3_fisrt sst_tJDBCOutput_19_3_fisrt = new SchemaSettingTool_tJDBCOutput_19_3_fisrt();
 		                    
 		                    props_tJDBCOutput_19.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_19_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_19.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_19.additionalColumns.setValue("referenceColumns",
 		                    "vm_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_19.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_19 = props_tJDBCOutput_19.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_19 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_19 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_19 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_19.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_19);
        }
    }
globalMap.put("tJDBCOutput_19_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_19);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_19= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_19_MAPPINGS_URL", mappings_url_tJDBCOutput_19);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_19 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_19";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_19 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_19 = null;
topology_tJDBCOutput_19 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_19 = def_tJDBCOutput_19.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_19, topology_tJDBCOutput_19);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_19 = def_tJDBCOutput_19.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_19 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_19.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_19 = componentRuntime_tJDBCOutput_19.initialize(container_tJDBCOutput_19, props_tJDBCOutput_19);

if (initVr_tJDBCOutput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_19.getMessage());
}

if(componentRuntime_tJDBCOutput_19 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_19 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_19;
	compDriverInitialization_tJDBCOutput_19.runAtDriver(container_tJDBCOutput_19);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_19 = null;
if(componentRuntime_tJDBCOutput_19 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_19 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_19;
	if (doesNodeBelongToRequest_tJDBCOutput_19) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_19 = sourceOrSink_tJDBCOutput_19.validate(container_tJDBCOutput_19);
        if (vr_tJDBCOutput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_19.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_19 = null;
    if (sourceOrSink_tJDBCOutput_19 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_19 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_19;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_19 = sink_tJDBCOutput_19.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_19) {
            writeOperation_tJDBCOutput_19.initialize(container_tJDBCOutput_19);
        }
        writer_tJDBCOutput_19 = writeOperation_tJDBCOutput_19.createWriter(container_tJDBCOutput_19);
        if (doesNodeBelongToRequest_tJDBCOutput_19) {
            writer_tJDBCOutput_19.open("tJDBCOutput_19");
        }

        resourceMap.put("writer_tJDBCOutput_19", writer_tJDBCOutput_19);
    } // end of "sourceOrSink_tJDBCOutput_19 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_19 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_19.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_19 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_19 = props_tJDBCOutput_19.getSchema(c_tJDBCOutput_19, false);
    incomingEnforcer_tJDBCOutput_19 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_19);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_19 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_19 = null;


 



/**
 * [tJDBCOutput_19 begin ] stop
 */



	
	/**
	 * [tMap_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_19", false);
		start_Hash.put("tMap_19", System.currentTimeMillis());
		
	
	currentComponent="tMap_19";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tMap_19 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct> tHash_Lookup_row24 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct>) 
					globalMap.get( "tHash_Lookup_row24" ))
					;					
					
	

row24Struct row24HashKey = new row24Struct();
row24Struct row24Default = new row24Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_19__Struct  {
}
Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_vmsStruct delete_vms_tmp = new delete_vmsStruct();
// ###############################

        
        



        









 



/**
 * [tMap_19 begin ] stop
 */



	
	/**
	 * [tJDBCInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_26", false);
		start_Hash.put("tJDBCInput_26", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_26";

	
		int tos_count_tJDBCInput_26 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_26 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_26 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_26 = (String)(restRequest_tJDBCInput_26 != null ? restRequest_tJDBCInput_26.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_26 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_26 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_26 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_26 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_26.createRuntimeProperties();
 		                    props_tJDBCInput_26.setValue("sql",
 		                    "SELECT history_id, \n		vm_id, \n		upper(cast(vm_id as char(36))) as vm_join_id,\n		vm_name, \n		vm_description, \n		vm_"
+"type, \n		cluster_id, \n		template_id, \n		template_name, \n		cpu_per_socket, \n		number_of_sockets, \n		memory_size_mb,"
+" \n		operating_system, \n		default_host, \n		high_availability, \n		initialized, \n		stateless, \n		fail_back, \n		usb_p"
+"olicy, \n		time_zone, \n		vm_pool_id, \n		vm_pool_name,\n		created_by_user_id,\n		cluster_configuration_version, \n		defaul"
+"t_host_configuration_version, \n		create_date, \n		update_date\nFROM v4_5_latest_configuration_vms");
 		                    
 		                    props_tJDBCInput_26.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_26.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_26.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_26.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_26.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_26_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"template_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"template_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"template_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"template_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_per_socket\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_per_socket\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_per_socket\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"number_of_sockets\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"number_of_sockets\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"number_of_sockets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"memory_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"operating_system\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"operating_system\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"operating_system\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"default_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"high_availability\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"high_availability\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"high_availability\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"initialized\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"initialized\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"initialized\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"stateless\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"stateless\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"stateless\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"fail_back\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"fail_back\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"fail_back\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"usb_policy\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"usb_policy\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"usb_policy\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"time_zone\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"time_zone\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"time_zone\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"vm_pool_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_pool_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_pool_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_pool_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"created_by_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"created_by_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"created_by_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cluster_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"default_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"default_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"default_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_26\",\"di.table.label\":\"v4_5_latest_configuration_vms\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_26_1_fisrt sst_tJDBCInput_26_1_fisrt = new SchemaSettingTool_tJDBCInput_26_1_fisrt();
 		                    
 		                    props_tJDBCInput_26.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_26_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_26.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms");
 		                    
 		                    java.util.List<Object> tJDBCInput_26_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_26.trimTable).setValue("trim",tJDBCInput_26_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_26_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_26_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("vm_join_id");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("vm_name");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("vm_description");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("vm_type");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("cluster_id");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("template_id");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("template_name");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("cpu_per_socket");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("number_of_sockets");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("memory_size_mb");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("operating_system");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("default_host");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("high_availability");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("initialized");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("stateless");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("fail_back");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("usb_policy");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("time_zone");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("vm_pool_id");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("vm_pool_name");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("created_by_user_id");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("cluster_configuration_version");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("default_host_configuration_version");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_26_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_26.trimTable).setValue("columnName",tJDBCInput_26_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_26.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_26 = props_tJDBCInput_26.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_26 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_26 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_26 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_26.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_26);
        }
    }
globalMap.put("tJDBCInput_26_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_26);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_26= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_26_MAPPINGS_URL", mappings_url_tJDBCInput_26);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_26 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_26";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_26 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_26 = null;
topology_tJDBCInput_26 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_26 = def_tJDBCInput_26.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_26, topology_tJDBCInput_26);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_26 = def_tJDBCInput_26.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_26 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_26.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_26 = componentRuntime_tJDBCInput_26.initialize(container_tJDBCInput_26, props_tJDBCInput_26);

if (initVr_tJDBCInput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_26.getMessage());
}

if(componentRuntime_tJDBCInput_26 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_26 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_26;
	compDriverInitialization_tJDBCInput_26.runAtDriver(container_tJDBCInput_26);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_26 = null;
if(componentRuntime_tJDBCInput_26 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_26 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_26;
	if (doesNodeBelongToRequest_tJDBCInput_26) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_26 = sourceOrSink_tJDBCInput_26.validate(container_tJDBCInput_26);
        if (vr_tJDBCInput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_26.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_26 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_26 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_26;
        reader_tJDBCInput_26 = source_tJDBCInput_26.createReader(container_tJDBCInput_26);
	    reader_tJDBCInput_26 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_26, container_tJDBCInput_26);

            boolean multi_output_is_allowed_tJDBCInput_26 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_26 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_26.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_26 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_26 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_26 = props_tJDBCInput_26.getSchema(c_tJDBCInput_26, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_26 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_26, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_26 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_26 = reader_tJDBCInput_26.start();

        resourceMap.put("reader_tJDBCInput_26", reader_tJDBCInput_26);

        for (; available_tJDBCInput_26; available_tJDBCInput_26 = reader_tJDBCInput_26.advance()) {
			nb_line_tJDBCInput_26++;

			
			if (multi_output_is_allowed_tJDBCInput_26) {
				
					row25 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_26 = reader_tJDBCInput_26.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_26) {
						row25 = new row25Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_26 == null) {
            factory_tJDBCInput_26 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_26.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_26.setWrapped(factory_tJDBCInput_26.convertToAvro(data_tJDBCInput_26));
                Object columnValue_0_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(0);
                        row25.history_id = (Integer) (columnValue_0_tJDBCInput_26);
                Object columnValue_1_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(1);
                        row25.vm_id = (Object) (columnValue_1_tJDBCInput_26);
                Object columnValue_2_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(2);
                        row25.vm_join_id = (String) (columnValue_2_tJDBCInput_26);
                Object columnValue_3_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(3);
                        row25.vm_name = (String) (columnValue_3_tJDBCInput_26);
                Object columnValue_4_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(4);
                        row25.vm_description = (String) (columnValue_4_tJDBCInput_26);
                Object columnValue_5_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(5);
                        row25.vm_type = (Short) (columnValue_5_tJDBCInput_26);
                Object columnValue_6_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(6);
                        row25.cluster_id = (Object) (columnValue_6_tJDBCInput_26);
                Object columnValue_7_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(7);
                        row25.template_id = (Object) (columnValue_7_tJDBCInput_26);
                Object columnValue_8_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(8);
                        row25.template_name = (String) (columnValue_8_tJDBCInput_26);
                Object columnValue_9_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(9);
                        row25.cpu_per_socket = (Short) (columnValue_9_tJDBCInput_26);
                Object columnValue_10_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(10);
                        row25.number_of_sockets = (Short) (columnValue_10_tJDBCInput_26);
                Object columnValue_11_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(11);
                        row25.memory_size_mb = (Integer) (columnValue_11_tJDBCInput_26);
                Object columnValue_12_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(12);
                        row25.operating_system = (Short) (columnValue_12_tJDBCInput_26);
                Object columnValue_13_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(13);
                        row25.default_host = (Object) (columnValue_13_tJDBCInput_26);
                Object columnValue_14_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(14);
                        row25.high_availability = (Boolean) (columnValue_14_tJDBCInput_26);
                Object columnValue_15_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(15);
                        row25.initialized = (Boolean) (columnValue_15_tJDBCInput_26);
                Object columnValue_16_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(16);
                        row25.stateless = (Boolean) (columnValue_16_tJDBCInput_26);
                Object columnValue_17_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(17);
                        row25.fail_back = (Boolean) (columnValue_17_tJDBCInput_26);
                Object columnValue_18_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(18);
                        row25.usb_policy = (Short) (columnValue_18_tJDBCInput_26);
                Object columnValue_19_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(19);
                        row25.time_zone = (String) (columnValue_19_tJDBCInput_26);
                Object columnValue_20_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(20);
                        row25.vm_pool_id = (Object) (columnValue_20_tJDBCInput_26);
                Object columnValue_21_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(21);
                        row25.vm_pool_name = (String) (columnValue_21_tJDBCInput_26);
                Object columnValue_22_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(22);
                        row25.created_by_user_id = (Object) (columnValue_22_tJDBCInput_26);
                Object columnValue_23_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(23);
                        row25.cluster_configuration_version = (Integer) (columnValue_23_tJDBCInput_26);
                Object columnValue_24_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(24);
                        row25.default_host_configuration_version = (Integer) (columnValue_24_tJDBCInput_26);
                Object columnValue_25_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(25);
                        row25.create_date = (java.util.Date) (columnValue_25_tJDBCInput_26);
                Object columnValue_26_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(26);
                        row25.update_date = (java.util.Date) (columnValue_26_tJDBCInput_26);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_26) {
				java.util.Map<String,Object> info_tJDBCInput_26 = e_tJDBCInput_26.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_26 = null;
					if(info_tJDBCInput_26.containsKey("error")){
						errorMessage_tJDBCInput_26 = info_tJDBCInput_26.get("error");
					}else if(info_tJDBCInput_26.containsKey("errorMessage")){
						errorMessage_tJDBCInput_26 = info_tJDBCInput_26.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_26 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_26 = "Row "+ nb_line_tJDBCInput_26 + ": "+errorMessage_tJDBCInput_26;
					System.err.println(errorMessage_tJDBCInput_26);
				
					// If the record is reject, the main line record should put NULL
					row25 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_26 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_26 = null;


 



/**
 * [tJDBCInput_26 begin ] stop
 */
	
	/**
	 * [tJDBCInput_26 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	


 


	tos_count_tJDBCInput_26++;

/**
 * [tJDBCInput_26 main ] stop
 */
	
	/**
	 * [tJDBCInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	


 



/**
 * [tJDBCInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tMap_19 main ] start
	 */

	

	
	
	currentComponent="tMap_19";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_19 = false;
		  boolean mainRowRejected_tMap_19 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row24" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow24 = false;
       		  	    	
       		  	    	
 							row24Struct row24ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_19) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_19 = false;
								
                        		    		    row24HashKey.vm_join_id = row25.vm_join_id ;
                        		    		

								
		                        	row24HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row24.lookup( row24HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row24.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_19 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row24 != null && tHash_Lookup_row24.getCount(row24HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row24' and it contains more one result from keys :  row24.vm_join_id = '" + row24HashKey.vm_join_id + "'");
								} // G 071
							

							row24Struct row24 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row24Struct fromLookup_row24 = null;
							row24 = row24Default;
										 
							
								 
							
							
								if (tHash_Lookup_row24 !=null && tHash_Lookup_row24.hasNext()) { // G 099
								
							
								
								fromLookup_row24 = tHash_Lookup_row24.next();

							
							
								} // G 099
							
							

							if(fromLookup_row24 != null) {
								row24 = fromLookup_row24;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_19__Struct Var = Var__tMap_19;// ###############################
        // ###############################
        // # Output tables

delete_vms = null;

if(!rejectedInnerJoin_tMap_19 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_vms'
// # Filter conditions 
if( rejectedInnerJoin_tMap_19 ) {
delete_vms_tmp.vm_id = row25.vm_id;
delete_vms_tmp.vm_name = row25.vm_name;
delete_vms_tmp.vm_description = row25.vm_description;
delete_vms_tmp.vm_type = row25.vm_type;
delete_vms_tmp.cluster_id = row25.cluster_id;
delete_vms_tmp.template_id = row25.template_id;
delete_vms_tmp.template_name = row25.template_name;
delete_vms_tmp.cpu_per_socket = row25.cpu_per_socket;
delete_vms_tmp.number_of_sockets = row25.number_of_sockets;
delete_vms_tmp.memory_size_mb = row25.memory_size_mb;
delete_vms_tmp.operating_system = row25.operating_system;
delete_vms_tmp.default_host = row25.default_host;
delete_vms_tmp.high_availability = row25.high_availability;
delete_vms_tmp.initialized = row25.initialized;
delete_vms_tmp.stateless = row25.stateless;
delete_vms_tmp.fail_back = row25.fail_back;
delete_vms_tmp.usb_policy = row25.usb_policy;
delete_vms_tmp.time_zone = row25.time_zone;
delete_vms_tmp.vm_pool_id = row25.vm_pool_id;
delete_vms_tmp.vm_pool_name = row25.vm_pool_name;
delete_vms_tmp.created_by_user_id = row25.created_by_user_id;
delete_vms_tmp.cluster_configuration_version = row25.cluster_configuration_version;
delete_vms_tmp.default_host_configuration_version = row25.default_host_configuration_version;
delete_vms_tmp.create_date = row25.create_date;
delete_vms_tmp.update_date = context.runTime;
delete_vms_tmp.delete_date = context.runTime;
delete_vms = delete_vms_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_19 = false;










 


	tos_count_tMap_19++;

/**
 * [tMap_19 main ] stop
 */
	
	/**
	 * [tMap_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_19";

	

 



/**
 * [tMap_19 process_data_begin ] stop
 */
// Start of branch "delete_vms"
if(delete_vms != null) { 



	
	/**
	 * [tJDBCOutput_19 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_vms"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_19 != null) {
            incomingEnforcer_tJDBCOutput_19.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_19.put("vm_id", delete_vms.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("vm_name") != null){
                    incomingEnforcer_tJDBCOutput_19.put("vm_name", delete_vms.vm_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("vm_description") != null){
                    incomingEnforcer_tJDBCOutput_19.put("vm_description", delete_vms.vm_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("vm_type") != null){
                    incomingEnforcer_tJDBCOutput_19.put("vm_type", delete_vms.vm_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("cluster_id") != null){
                    incomingEnforcer_tJDBCOutput_19.put("cluster_id", delete_vms.cluster_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("template_id") != null){
                    incomingEnforcer_tJDBCOutput_19.put("template_id", delete_vms.template_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("template_name") != null){
                    incomingEnforcer_tJDBCOutput_19.put("template_name", delete_vms.template_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("cpu_per_socket") != null){
                    incomingEnforcer_tJDBCOutput_19.put("cpu_per_socket", delete_vms.cpu_per_socket);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("number_of_sockets") != null){
                    incomingEnforcer_tJDBCOutput_19.put("number_of_sockets", delete_vms.number_of_sockets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("memory_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_19.put("memory_size_mb", delete_vms.memory_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("operating_system") != null){
                    incomingEnforcer_tJDBCOutput_19.put("operating_system", delete_vms.operating_system);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("default_host") != null){
                    incomingEnforcer_tJDBCOutput_19.put("default_host", delete_vms.default_host);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("high_availability") != null){
                    incomingEnforcer_tJDBCOutput_19.put("high_availability", delete_vms.high_availability);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("initialized") != null){
                    incomingEnforcer_tJDBCOutput_19.put("initialized", delete_vms.initialized);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("stateless") != null){
                    incomingEnforcer_tJDBCOutput_19.put("stateless", delete_vms.stateless);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("fail_back") != null){
                    incomingEnforcer_tJDBCOutput_19.put("fail_back", delete_vms.fail_back);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("usb_policy") != null){
                    incomingEnforcer_tJDBCOutput_19.put("usb_policy", delete_vms.usb_policy);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("time_zone") != null){
                    incomingEnforcer_tJDBCOutput_19.put("time_zone", delete_vms.time_zone);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("vm_pool_id") != null){
                    incomingEnforcer_tJDBCOutput_19.put("vm_pool_id", delete_vms.vm_pool_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("vm_pool_name") != null){
                    incomingEnforcer_tJDBCOutput_19.put("vm_pool_name", delete_vms.vm_pool_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("created_by_user_id") != null){
                    incomingEnforcer_tJDBCOutput_19.put("created_by_user_id", delete_vms.created_by_user_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("cluster_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_19.put("cluster_configuration_version", delete_vms.cluster_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("default_host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_19.put("default_host_configuration_version", delete_vms.default_host_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_19.put("create_date", delete_vms.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_19.put("update_date", delete_vms.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_19.put("delete_date", delete_vms.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_19 = null;
        if (incomingEnforcer_tJDBCOutput_19 != null) {
            data_tJDBCOutput_19 = incomingEnforcer_tJDBCOutput_19.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_19 != null && data_tJDBCOutput_19 != null) {
        	writer_tJDBCOutput_19.write(data_tJDBCOutput_19);
        }
        
        nb_line_tJDBCOutput_19++;

 


	tos_count_tJDBCOutput_19++;

/**
 * [tJDBCOutput_19 main ] stop
 */
	
	/**
	 * [tJDBCOutput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	


 



/**
 * [tJDBCOutput_19 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	


 



/**
 * [tJDBCOutput_19 process_data_end ] stop
 */

} // End of branch "delete_vms"




	
	/**
	 * [tMap_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_19";

	

 



/**
 * [tMap_19 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	


 



/**
 * [tJDBCInput_26 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_26 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	
// end of generic


resourceMap.put("finish_tJDBCInput_26", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_26 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_26 = null;
    if (reader_tJDBCInput_26 != null) {
        reader_tJDBCInput_26.close();
        resultMap_tJDBCInput_26 = reader_tJDBCInput_26.getReturnValues();
    }
if(resultMap_tJDBCInput_26!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_26 : resultMap_tJDBCInput_26.entrySet()) {
		switch(entry_tJDBCInput_26.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "ERROR_MESSAGE", entry_tJDBCInput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "NB_LINE", entry_tJDBCInput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "NB_SUCCESS", entry_tJDBCInput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "NB_REJECT", entry_tJDBCInput_26.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_26 = new StringBuilder();
            for (int i_tJDBCInput_26 = 0; i_tJDBCInput_26 < entry_tJDBCInput_26.getKey().length(); i_tJDBCInput_26++) {
                char ch_tJDBCInput_26 = entry_tJDBCInput_26.getKey().charAt(i_tJDBCInput_26);
                if(Character.isUpperCase(ch_tJDBCInput_26) && i_tJDBCInput_26> 0) {
                	studio_key_tJDBCInput_26.append('_');
                }
                studio_key_tJDBCInput_26.append(ch_tJDBCInput_26);
            }
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", studio_key_tJDBCInput_26.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_26.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_26", true);
end_Hash.put("tJDBCInput_26", System.currentTimeMillis());




/**
 * [tJDBCInput_26 end ] stop
 */

	
	/**
	 * [tMap_19 end ] start
	 */

	

	
	
	currentComponent="tMap_19";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row24 != null) {
						tHash_Lookup_row24.endGet();
					}
					globalMap.remove( "tHash_Lookup_row24" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tMap_19", true);
end_Hash.put("tMap_19", System.currentTimeMillis());




/**
 * [tMap_19 end ] stop
 */

	
	/**
	 * [tJDBCOutput_19 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_19", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_19 = null;
    if (writer_tJDBCOutput_19 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_19 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_19.close();
        resultMap_tJDBCOutput_19 = writer_tJDBCOutput_19.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_19), container_tJDBCOutput_19);
    }
if(resultMap_tJDBCOutput_19!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_19 : resultMap_tJDBCOutput_19.entrySet()) {
		switch(entry_tJDBCOutput_19.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "ERROR_MESSAGE", entry_tJDBCOutput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "NB_LINE", entry_tJDBCOutput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "NB_SUCCESS", entry_tJDBCOutput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "NB_REJECT", entry_tJDBCOutput_19.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_19 = new StringBuilder();
            for (int i_tJDBCOutput_19 = 0; i_tJDBCOutput_19 < entry_tJDBCOutput_19.getKey().length(); i_tJDBCOutput_19++) {
                char ch_tJDBCOutput_19 = entry_tJDBCOutput_19.getKey().charAt(i_tJDBCOutput_19);
                if(Character.isUpperCase(ch_tJDBCOutput_19) && i_tJDBCOutput_19> 0) {
                	studio_key_tJDBCOutput_19.append('_');
                }
                studio_key_tJDBCOutput_19.append(ch_tJDBCOutput_19);
            }
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", studio_key_tJDBCOutput_19.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_19.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_vms");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_19", true);
end_Hash.put("tJDBCOutput_19", System.currentTimeMillis());




/**
 * [tJDBCOutput_19 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_26:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tJDBCInput_7Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_19"
					     			globalMap.remove("tHash_Lookup_row24"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_26 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_26")==null){
    if(resourceMap.get("reader_tJDBCInput_26")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_26")).close();
		} catch (java.io.IOException e_tJDBCInput_26) {
			String errorMessage_tJDBCInput_26 = "failed to release the resource in tJDBCInput_26 :" + e_tJDBCInput_26.getMessage();
			System.err.println(errorMessage_tJDBCInput_26);
		}
	}
}
 



/**
 * [tJDBCInput_26 finally ] stop
 */

	
	/**
	 * [tMap_19 finally ] start
	 */

	

	
	
	currentComponent="tMap_19";

	

 



/**
 * [tMap_19 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_19 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_19")==null){
    if(resourceMap.get("writer_tJDBCOutput_19")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_19")).close();
		} catch (java.io.IOException e_tJDBCOutput_19) {
			String errorMessage_tJDBCOutput_19 = "failed to release the resource in tJDBCOutput_19 :" + e_tJDBCOutput_19.getMessage();
			System.err.println(errorMessage_tJDBCOutput_19);
		}
	}
}
 



/**
 * [tJDBCOutput_19 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_26_SUBPROCESS_STATE", 1);
	}
	


public static class vm_disk_configurationStruct implements routines.system.IPersistableRow<vm_disk_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String vm_disk_description;

				public String getVm_disk_description () {
					return this.vm_disk_description;
				}
				
			    public Integer vm_disk_size_mb;

				public Integer getVm_disk_size_mb () {
					return this.vm_disk_size_mb;
				}
				
			    public Short vm_disk_type;

				public Short getVm_disk_type () {
					return this.vm_disk_type;
				}
				
			    public Short vm_disk_format;

				public Short getVm_disk_format () {
					return this.vm_disk_format;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public String vm_disk_name;

				public String getVm_disk_name () {
					return this.vm_disk_name;
				}
				
			    public Boolean is_shared;

				public Boolean getIs_shared () {
					return this.is_shared;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.vm_disk_description = readString(dis);
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.vm_disk_description = readString(dis);
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",vm_disk_description="+vm_disk_description);
		sb.append(",vm_disk_size_mb="+String.valueOf(vm_disk_size_mb));
		sb.append(",vm_disk_type="+String.valueOf(vm_disk_type));
		sb.append(",vm_disk_format="+String.valueOf(vm_disk_format));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",vm_disk_name="+vm_disk_name);
		sb.append(",is_shared="+String.valueOf(is_shared));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_disk_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public String vm_disk_name;

				public String getVm_disk_name () {
					return this.vm_disk_name;
				}
				
			    public String vm_disk_description;

				public String getVm_disk_description () {
					return this.vm_disk_description;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public Integer vm_disk_size_mb;

				public Integer getVm_disk_size_mb () {
					return this.vm_disk_size_mb;
				}
				
			    public Short vm_disk_type;

				public Short getVm_disk_type () {
					return this.vm_disk_type;
				}
				
			    public Short vm_disk_format;

				public Short getVm_disk_format () {
					return this.vm_disk_format;
				}
				
			    public Boolean is_shared;

				public Boolean getIs_shared () {
					return this.is_shared;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_name = readString(dis);
					
					this.vm_disk_description = readString(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_name = readString(dis);
					
					this.vm_disk_description = readString(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",vm_disk_name="+vm_disk_name);
		sb.append(",vm_disk_description="+vm_disk_description);
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",vm_disk_size_mb="+String.valueOf(vm_disk_size_mb));
		sb.append(",vm_disk_type="+String.valueOf(vm_disk_type));
		sb.append(",vm_disk_format="+String.valueOf(vm_disk_format));
		sb.append(",is_shared="+String.valueOf(is_shared));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
vm_disk_configurationStruct vm_disk_configuration = new vm_disk_configurationStruct();





	
	/**
	 * [tJDBCOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_7", false);
		start_Hash.put("tJDBCOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_7";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_disk_configuration");
					}
				
		int tos_count_tJDBCOutput_7 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_7 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_7 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_7 = (String)(restRequest_tJDBCOutput_7 != null ? restRequest_tJDBCOutput_7.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_7 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_7 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_7 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_7 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_7.createRuntimeProperties();
 		                    props_tJDBCOutput_7.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_7.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_7.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_7.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_7.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.tableSelection.setValue("tablename",
 		                    "vm_disk_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"vm_disk_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_1_fisrt sst_tJDBCOutput_7_1_fisrt = new SchemaSettingTool_tJDBCOutput_7_1_fisrt();
 		                    
 		                    props_tJDBCOutput_7.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"vm_disk_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_2_fisrt sst_tJDBCOutput_7_2_fisrt = new SchemaSettingTool_tJDBCOutput_7_2_fisrt();
 		                    
 		                    props_tJDBCOutput_7.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"vm_disk_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_3_fisrt sst_tJDBCOutput_7_3_fisrt = new SchemaSettingTool_tJDBCOutput_7_3_fisrt();
 		                    
 		                    props_tJDBCOutput_7.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_7.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_7.additionalColumns.setValue("referenceColumns",
 		                    "storage_domain_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_7.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_7 = props_tJDBCOutput_7.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_7 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_7 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_7 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_7.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_7);
        }
    }
globalMap.put("tJDBCOutput_7_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_7);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_7= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_7_MAPPINGS_URL", mappings_url_tJDBCOutput_7);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_7 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_7";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_7 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_7 = null;
topology_tJDBCOutput_7 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_7 = def_tJDBCOutput_7.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_7, topology_tJDBCOutput_7);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_7 = def_tJDBCOutput_7.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_7 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_7.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_7 = componentRuntime_tJDBCOutput_7.initialize(container_tJDBCOutput_7, props_tJDBCOutput_7);

if (initVr_tJDBCOutput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_7.getMessage());
}

if(componentRuntime_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_7 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_7;
	compDriverInitialization_tJDBCOutput_7.runAtDriver(container_tJDBCOutput_7);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_7 = null;
if(componentRuntime_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_7 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_7;
	if (doesNodeBelongToRequest_tJDBCOutput_7) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_7 = sourceOrSink_tJDBCOutput_7.validate(container_tJDBCOutput_7);
        if (vr_tJDBCOutput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_7.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_7 = null;
    if (sourceOrSink_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_7 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_7;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_7 = sink_tJDBCOutput_7.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_7) {
            writeOperation_tJDBCOutput_7.initialize(container_tJDBCOutput_7);
        }
        writer_tJDBCOutput_7 = writeOperation_tJDBCOutput_7.createWriter(container_tJDBCOutput_7);
        if (doesNodeBelongToRequest_tJDBCOutput_7) {
            writer_tJDBCOutput_7.open("tJDBCOutput_7");
        }

        resourceMap.put("writer_tJDBCOutput_7", writer_tJDBCOutput_7);
    } // end of "sourceOrSink_tJDBCOutput_7 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_7 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_7.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_7 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_7 = props_tJDBCOutput_7.getSchema(c_tJDBCOutput_7, false);
    incomingEnforcer_tJDBCOutput_7 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_7);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_7 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_7 = null;


 



/**
 * [tJDBCOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_disk_configurationStruct vm_disk_configuration_tmp = new vm_disk_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tJDBCInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_7", false);
		start_Hash.put("tJDBCInput_7", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_7";

	
		int tos_count_tJDBCInput_7 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_7 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_7 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_7 = (String)(restRequest_tJDBCInput_7 != null ? restRequest_tJDBCInput_7.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_7 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_7 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_7 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_7 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_7.createRuntimeProperties();
 		                    props_tJDBCInput_7.setValue("sql",
 		                    "SELECT vm_disk_id,\n        vm_disk_name,\n        vm_disk_description,\n		storage_domain_id,\n		vm_disk_size_mb,\n		vm_disk"
+"_type,\n		vm_disk_format,\n        is_shared,\n		create_date,\n		update_date \nFROM dwh_vm_disk_configuration_history_view");
 		                    
 		                    props_tJDBCInput_7.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_7.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_7.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_7.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_7.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_7_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_vm_disk_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"500\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_7\",\"di.table.label\":\"dwh_vm_disk_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_7_1_fisrt sst_tJDBCInput_7_1_fisrt = new SchemaSettingTool_tJDBCInput_7_1_fisrt();
 		                    
 		                    props_tJDBCInput_7.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_7_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_7.tableSelection.setValue("tablename",
 		                    "dwh_vm_disk_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_7_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_7.trimTable).setValue("trim",tJDBCInput_7_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_7_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_7_trimTable_columnName.add("vm_disk_id");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("vm_disk_name");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("vm_disk_description");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("storage_domain_id");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("vm_disk_size_mb");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("vm_disk_type");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("vm_disk_format");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("is_shared");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_7_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_7.trimTable).setValue("columnName",tJDBCInput_7_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_7.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_7 = props_tJDBCInput_7.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_7 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_7 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_7 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_7.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_7);
        }
    }
globalMap.put("tJDBCInput_7_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_7);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_7= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_7_MAPPINGS_URL", mappings_url_tJDBCInput_7);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_7 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_7";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_7 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_7 = null;
topology_tJDBCInput_7 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_7 = def_tJDBCInput_7.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_7, topology_tJDBCInput_7);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_7 = def_tJDBCInput_7.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_7 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_7.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_7 = componentRuntime_tJDBCInput_7.initialize(container_tJDBCInput_7, props_tJDBCInput_7);

if (initVr_tJDBCInput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_7.getMessage());
}

if(componentRuntime_tJDBCInput_7 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_7 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_7;
	compDriverInitialization_tJDBCInput_7.runAtDriver(container_tJDBCInput_7);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_7 = null;
if(componentRuntime_tJDBCInput_7 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_7 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_7;
	if (doesNodeBelongToRequest_tJDBCInput_7) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_7 = sourceOrSink_tJDBCInput_7.validate(container_tJDBCInput_7);
        if (vr_tJDBCInput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_7.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_7 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_7 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_7;
        reader_tJDBCInput_7 = source_tJDBCInput_7.createReader(container_tJDBCInput_7);
	    reader_tJDBCInput_7 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_7, container_tJDBCInput_7);

            boolean multi_output_is_allowed_tJDBCInput_7 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_7 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_7.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_7 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_7 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_7 = props_tJDBCInput_7.getSchema(c_tJDBCInput_7, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_7 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_7, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_7 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_7 = reader_tJDBCInput_7.start();

        resourceMap.put("reader_tJDBCInput_7", reader_tJDBCInput_7);

        for (; available_tJDBCInput_7; available_tJDBCInput_7 = reader_tJDBCInput_7.advance()) {
			nb_line_tJDBCInput_7++;

			
			if (multi_output_is_allowed_tJDBCInput_7) {
				
					row6 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_7 = reader_tJDBCInput_7.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_7) {
						row6 = new row6Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_7 == null) {
            factory_tJDBCInput_7 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_7.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_7.setWrapped(factory_tJDBCInput_7.convertToAvro(data_tJDBCInput_7));
                Object columnValue_0_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(0);
                        row6.vm_disk_id = (Object) (columnValue_0_tJDBCInput_7);
                Object columnValue_1_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(1);
                        row6.vm_disk_name = (String) (columnValue_1_tJDBCInput_7);
                Object columnValue_2_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(2);
                        row6.vm_disk_description = (String) (columnValue_2_tJDBCInput_7);
                Object columnValue_3_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(3);
                        row6.storage_domain_id = (Object) (columnValue_3_tJDBCInput_7);
                Object columnValue_4_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(4);
                        row6.vm_disk_size_mb = (Integer) (columnValue_4_tJDBCInput_7);
                Object columnValue_5_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(5);
                        row6.vm_disk_type = (Short) (columnValue_5_tJDBCInput_7);
                Object columnValue_6_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(6);
                        row6.vm_disk_format = (Short) (columnValue_6_tJDBCInput_7);
                Object columnValue_7_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(7);
                        row6.is_shared = (Boolean) (columnValue_7_tJDBCInput_7);
                Object columnValue_8_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(8);
                        row6.create_date = (java.util.Date) (columnValue_8_tJDBCInput_7);
                Object columnValue_9_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(9);
                        row6.update_date = (java.util.Date) (columnValue_9_tJDBCInput_7);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_7) {
				java.util.Map<String,Object> info_tJDBCInput_7 = e_tJDBCInput_7.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_7 = null;
					if(info_tJDBCInput_7.containsKey("error")){
						errorMessage_tJDBCInput_7 = info_tJDBCInput_7.get("error");
					}else if(info_tJDBCInput_7.containsKey("errorMessage")){
						errorMessage_tJDBCInput_7 = info_tJDBCInput_7.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_7 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_7 = "Row "+ nb_line_tJDBCInput_7 + ": "+errorMessage_tJDBCInput_7;
					System.err.println(errorMessage_tJDBCInput_7);
				
					// If the record is reject, the main line record should put NULL
					row6 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_7 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_7 = null;


 



/**
 * [tJDBCInput_7 begin ] stop
 */
	
	/**
	 * [tJDBCInput_7 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	


 


	tos_count_tJDBCInput_7++;

/**
 * [tJDBCInput_7 main ] stop
 */
	
	/**
	 * [tJDBCInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	


 



/**
 * [tJDBCInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_7 = false;
		  boolean mainRowRejected_tMap_7 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row6.update_date == null ? TalendDate.compareDate(row6.create_date,context.runTime) <=0 : TalendDate.compareDate(row6.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row6'
							// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

vm_disk_configuration = null;


// # Output table : 'vm_disk_configuration'
vm_disk_configuration_tmp.storage_domain_id = row6.storage_domain_id ;
vm_disk_configuration_tmp.vm_disk_description = StringHandling.TRIM(row6.vm_disk_description);
vm_disk_configuration_tmp.vm_disk_size_mb = row6.vm_disk_size_mb;
vm_disk_configuration_tmp.vm_disk_type = row6.vm_disk_type;
vm_disk_configuration_tmp.vm_disk_format = row6.vm_disk_format;
vm_disk_configuration_tmp.create_date = row6.create_date;
vm_disk_configuration_tmp.update_date = row6.update_date;
vm_disk_configuration_tmp.delete_date = null;
vm_disk_configuration_tmp.vm_disk_id = row6.vm_disk_id ;
vm_disk_configuration_tmp.vm_disk_name = row6.vm_disk_name;
vm_disk_configuration_tmp.is_shared = row6.is_shared;
vm_disk_configuration = vm_disk_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "vm_disk_configuration"
if(vm_disk_configuration != null) { 



	
	/**
	 * [tJDBCOutput_7 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_disk_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_7 != null) {
            incomingEnforcer_tJDBCOutput_7.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_7.put("storage_domain_id", vm_disk_configuration.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_description") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_description", vm_disk_configuration.vm_disk_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_size_mb", vm_disk_configuration.vm_disk_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_type") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_type", vm_disk_configuration.vm_disk_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_format") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_format", vm_disk_configuration.vm_disk_format);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_7.put("create_date", vm_disk_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_7.put("update_date", vm_disk_configuration.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_7.put("delete_date", vm_disk_configuration.delete_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_id") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_id", vm_disk_configuration.vm_disk_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_name") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_name", vm_disk_configuration.vm_disk_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("is_shared") != null){
                    incomingEnforcer_tJDBCOutput_7.put("is_shared", vm_disk_configuration.is_shared);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_7 = null;
        if (incomingEnforcer_tJDBCOutput_7 != null) {
            data_tJDBCOutput_7 = incomingEnforcer_tJDBCOutput_7.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_7 != null && data_tJDBCOutput_7 != null) {
        	writer_tJDBCOutput_7.write(data_tJDBCOutput_7);
        }
        
        nb_line_tJDBCOutput_7++;

 


	tos_count_tJDBCOutput_7++;

/**
 * [tJDBCOutput_7 main ] stop
 */
	
	/**
	 * [tJDBCOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	


 



/**
 * [tJDBCOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	


 



/**
 * [tJDBCOutput_7 process_data_end ] stop
 */

} // End of branch "vm_disk_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row6'
	
	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	


 



/**
 * [tJDBCInput_7 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_7 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	
// end of generic


resourceMap.put("finish_tJDBCInput_7", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_7 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_7 = null;
    if (reader_tJDBCInput_7 != null) {
        reader_tJDBCInput_7.close();
        resultMap_tJDBCInput_7 = reader_tJDBCInput_7.getReturnValues();
    }
if(resultMap_tJDBCInput_7!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_7 : resultMap_tJDBCInput_7.entrySet()) {
		switch(entry_tJDBCInput_7.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "ERROR_MESSAGE", entry_tJDBCInput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "NB_LINE", entry_tJDBCInput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "NB_SUCCESS", entry_tJDBCInput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "NB_REJECT", entry_tJDBCInput_7.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_7 = new StringBuilder();
            for (int i_tJDBCInput_7 = 0; i_tJDBCInput_7 < entry_tJDBCInput_7.getKey().length(); i_tJDBCInput_7++) {
                char ch_tJDBCInput_7 = entry_tJDBCInput_7.getKey().charAt(i_tJDBCInput_7);
                if(Character.isUpperCase(ch_tJDBCInput_7) && i_tJDBCInput_7> 0) {
                	studio_key_tJDBCInput_7.append('_');
                }
                studio_key_tJDBCInput_7.append(ch_tJDBCInput_7);
            }
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", studio_key_tJDBCInput_7.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_7.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_7", true);
end_Hash.put("tJDBCInput_7", System.currentTimeMillis());




/**
 * [tJDBCInput_7 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tJDBCOutput_7 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_7", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_7 = null;
    if (writer_tJDBCOutput_7 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_7 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_7.close();
        resultMap_tJDBCOutput_7 = writer_tJDBCOutput_7.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_7), container_tJDBCOutput_7);
    }
if(resultMap_tJDBCOutput_7!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_7 : resultMap_tJDBCOutput_7.entrySet()) {
		switch(entry_tJDBCOutput_7.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "ERROR_MESSAGE", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_LINE", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_SUCCESS", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_REJECT", entry_tJDBCOutput_7.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_7 = new StringBuilder();
            for (int i_tJDBCOutput_7 = 0; i_tJDBCOutput_7 < entry_tJDBCOutput_7.getKey().length(); i_tJDBCOutput_7++) {
                char ch_tJDBCOutput_7 = entry_tJDBCOutput_7.getKey().charAt(i_tJDBCOutput_7);
                if(Character.isUpperCase(ch_tJDBCOutput_7) && i_tJDBCOutput_7> 0) {
                	studio_key_tJDBCOutput_7.append('_');
                }
                studio_key_tJDBCOutput_7.append(ch_tJDBCOutput_7);
            }
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", studio_key_tJDBCOutput_7.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_7.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_disk_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_7", true);
end_Hash.put("tJDBCOutput_7", System.currentTimeMillis());




/**
 * [tJDBCOutput_7 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_7:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tJDBCInput_28Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_7 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_7")==null){
    if(resourceMap.get("reader_tJDBCInput_7")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_7")).close();
		} catch (java.io.IOException e_tJDBCInput_7) {
			String errorMessage_tJDBCInput_7 = "failed to release the resource in tJDBCInput_7 :" + e_tJDBCInput_7.getMessage();
			System.err.println(errorMessage_tJDBCInput_7);
		}
	}
}
 



/**
 * [tJDBCInput_7 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_7")==null){
    if(resourceMap.get("writer_tJDBCOutput_7")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_7")).close();
		} catch (java.io.IOException e_tJDBCOutput_7) {
			String errorMessage_tJDBCOutput_7 = "failed to release the resource in tJDBCOutput_7 :" + e_tJDBCOutput_7.getMessage();
			System.err.println(errorMessage_tJDBCOutput_7);
		}
	}
}
 



/**
 * [tJDBCOutput_7 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class delete_disksStruct implements routines.system.IPersistableRow<delete_disksStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String vm_disk_description;

				public String getVm_disk_description () {
					return this.vm_disk_description;
				}
				
			    public Integer vm_disk_size_mb;

				public Integer getVm_disk_size_mb () {
					return this.vm_disk_size_mb;
				}
				
			    public Short vm_disk_type;

				public Short getVm_disk_type () {
					return this.vm_disk_type;
				}
				
			    public Short vm_disk_format;

				public Short getVm_disk_format () {
					return this.vm_disk_format;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public String vm_disk_name;

				public String getVm_disk_name () {
					return this.vm_disk_name;
				}
				
			    public Boolean is_shared;

				public Boolean getIs_shared () {
					return this.is_shared;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.vm_disk_description = readString(dis);
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.vm_disk_description = readString(dis);
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",vm_disk_description="+vm_disk_description);
		sb.append(",vm_disk_size_mb="+String.valueOf(vm_disk_size_mb));
		sb.append(",vm_disk_type="+String.valueOf(vm_disk_type));
		sb.append(",vm_disk_format="+String.valueOf(vm_disk_format));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",vm_disk_name="+vm_disk_name);
		sb.append(",is_shared="+String.valueOf(is_shared));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_disksStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public String vm_disk_join_id;

				public String getVm_disk_join_id () {
					return this.vm_disk_join_id;
				}
				
			    public String vm_disk_name;

				public String getVm_disk_name () {
					return this.vm_disk_name;
				}
				
			    public String vm_disk_description;

				public String getVm_disk_description () {
					return this.vm_disk_description;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public Integer vm_disk_size_mb;

				public Integer getVm_disk_size_mb () {
					return this.vm_disk_size_mb;
				}
				
			    public Short vm_disk_type;

				public Short getVm_disk_type () {
					return this.vm_disk_type;
				}
				
			    public Short vm_disk_format;

				public Short getVm_disk_format () {
					return this.vm_disk_format;
				}
				
			    public Boolean is_shared;

				public Boolean getIs_shared () {
					return this.is_shared;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
					this.vm_disk_name = readString(dis);
					
					this.vm_disk_description = readString(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
					this.vm_disk_name = readString(dis);
					
					this.vm_disk_description = readString(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",vm_disk_join_id="+vm_disk_join_id);
		sb.append(",vm_disk_name="+vm_disk_name);
		sb.append(",vm_disk_description="+vm_disk_description);
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",vm_disk_size_mb="+String.valueOf(vm_disk_size_mb));
		sb.append(",vm_disk_type="+String.valueOf(vm_disk_type));
		sb.append(",vm_disk_format="+String.valueOf(vm_disk_format));
		sb.append(",is_shared="+String.valueOf(is_shared));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_28Struct implements routines.system.IPersistableRow<after_tJDBCInput_28Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public String vm_disk_join_id;

				public String getVm_disk_join_id () {
					return this.vm_disk_join_id;
				}
				
			    public String vm_disk_name;

				public String getVm_disk_name () {
					return this.vm_disk_name;
				}
				
			    public String vm_disk_description;

				public String getVm_disk_description () {
					return this.vm_disk_description;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public Integer vm_disk_size_mb;

				public Integer getVm_disk_size_mb () {
					return this.vm_disk_size_mb;
				}
				
			    public Short vm_disk_type;

				public Short getVm_disk_type () {
					return this.vm_disk_type;
				}
				
			    public Short vm_disk_format;

				public Short getVm_disk_format () {
					return this.vm_disk_format;
				}
				
			    public Boolean is_shared;

				public Boolean getIs_shared () {
					return this.is_shared;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
					this.vm_disk_name = readString(dis);
					
					this.vm_disk_description = readString(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
					this.vm_disk_name = readString(dis);
					
					this.vm_disk_description = readString(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
						this.vm_disk_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_type = null;
           				} else {
           			    	this.vm_disk_type = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_format = null;
           				} else {
           			    	this.vm_disk_format = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_shared = null;
           				} else {
           			    	this.is_shared = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// String
				
						writeString(this.vm_disk_name,dos);
					
					// String
				
						writeString(this.vm_disk_description,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Integer
				
						writeInteger(this.vm_disk_size_mb,dos);
					
					// Short
				
						if(this.vm_disk_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_type);
		            	}
					
					// Short
				
						if(this.vm_disk_format == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_format);
		            	}
					
					// Boolean
				
						if(this.is_shared == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_shared);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",vm_disk_join_id="+vm_disk_join_id);
		sb.append(",vm_disk_name="+vm_disk_name);
		sb.append(",vm_disk_description="+vm_disk_description);
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",vm_disk_size_mb="+String.valueOf(vm_disk_size_mb));
		sb.append(",vm_disk_type="+String.valueOf(vm_disk_type));
		sb.append(",vm_disk_format="+String.valueOf(vm_disk_format));
		sb.append(",is_shared="+String.valueOf(is_shared));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_28Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_28_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_27Process(globalMap);

		row27Struct row27 = new row27Struct();
delete_disksStruct delete_disks = new delete_disksStruct();





	
	/**
	 * [tJDBCOutput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_20", false);
		start_Hash.put("tJDBCOutput_20", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_20";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_disks");
					}
				
		int tos_count_tJDBCOutput_20 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_20 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_20 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_20 = (String)(restRequest_tJDBCOutput_20 != null ? restRequest_tJDBCOutput_20.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_20 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_20 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_20 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_20 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_20.createRuntimeProperties();
 		                    props_tJDBCOutput_20.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_20.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_20.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_20.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_20.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_20.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_20.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_20.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.tableSelection.setValue("tablename",
 		                    "vm_disk_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_20_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_20\",\"di.table.label\":\"vm_disk_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_20_1_fisrt sst_tJDBCOutput_20_1_fisrt = new SchemaSettingTool_tJDBCOutput_20_1_fisrt();
 		                    
 		                    props_tJDBCOutput_20.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_20_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_20_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_20\",\"di.table.label\":\"vm_disk_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_20_2_fisrt sst_tJDBCOutput_20_2_fisrt = new SchemaSettingTool_tJDBCOutput_20_2_fisrt();
 		                    
 		                    props_tJDBCOutput_20.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_20_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_20_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_20\",\"di.table.label\":\"vm_disk_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_20_3_fisrt sst_tJDBCOutput_20_3_fisrt = new SchemaSettingTool_tJDBCOutput_20_3_fisrt();
 		                    
 		                    props_tJDBCOutput_20.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_20_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_20.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_20.additionalColumns.setValue("referenceColumns",
 		                    "storage_domain_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_20.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_20 = props_tJDBCOutput_20.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_20 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_20 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_20 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_20.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_20);
        }
    }
globalMap.put("tJDBCOutput_20_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_20);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_20= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_20_MAPPINGS_URL", mappings_url_tJDBCOutput_20);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_20 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_20";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_20 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_20 = null;
topology_tJDBCOutput_20 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_20 = def_tJDBCOutput_20.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_20, topology_tJDBCOutput_20);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_20 = def_tJDBCOutput_20.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_20 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_20.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_20 = componentRuntime_tJDBCOutput_20.initialize(container_tJDBCOutput_20, props_tJDBCOutput_20);

if (initVr_tJDBCOutput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_20.getMessage());
}

if(componentRuntime_tJDBCOutput_20 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_20 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_20;
	compDriverInitialization_tJDBCOutput_20.runAtDriver(container_tJDBCOutput_20);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_20 = null;
if(componentRuntime_tJDBCOutput_20 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_20 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_20;
	if (doesNodeBelongToRequest_tJDBCOutput_20) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_20 = sourceOrSink_tJDBCOutput_20.validate(container_tJDBCOutput_20);
        if (vr_tJDBCOutput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_20.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_20 = null;
    if (sourceOrSink_tJDBCOutput_20 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_20 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_20;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_20 = sink_tJDBCOutput_20.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_20) {
            writeOperation_tJDBCOutput_20.initialize(container_tJDBCOutput_20);
        }
        writer_tJDBCOutput_20 = writeOperation_tJDBCOutput_20.createWriter(container_tJDBCOutput_20);
        if (doesNodeBelongToRequest_tJDBCOutput_20) {
            writer_tJDBCOutput_20.open("tJDBCOutput_20");
        }

        resourceMap.put("writer_tJDBCOutput_20", writer_tJDBCOutput_20);
    } // end of "sourceOrSink_tJDBCOutput_20 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_20 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_20.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_20 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_20 = props_tJDBCOutput_20.getSchema(c_tJDBCOutput_20, false);
    incomingEnforcer_tJDBCOutput_20 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_20);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_20 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_20 = null;


 



/**
 * [tJDBCOutput_20 begin ] stop
 */



	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct> tHash_Lookup_row26 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct>) 
					globalMap.get( "tHash_Lookup_row26" ))
					;					
					
	

row26Struct row26HashKey = new row26Struct();
row26Struct row26Default = new row26Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_disksStruct delete_disks_tmp = new delete_disksStruct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tJDBCInput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_28", false);
		start_Hash.put("tJDBCInput_28", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_28";

	
		int tos_count_tJDBCInput_28 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_28 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_28 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_28 = (String)(restRequest_tJDBCInput_28 != null ? restRequest_tJDBCInput_28.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_28 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_28 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_28 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_28 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_28.createRuntimeProperties();
 		                    props_tJDBCInput_28.setValue("sql",
 		                    "SELECT	history_id, \n		vm_disk_id, \n		upper(cast(vm_disk_id as char(36))) as vm_disk_join_id,\n        vm_disk_name,\n  "
+"      vm_disk_description,\n		storage_domain_id,\n		vm_disk_size_mb,\n		vm_disk_type, \n		vm_disk_format,\n        is_shar"
+"ed,\n		create_date, \n		update_date\nFROM v4_5_latest_configuration_vms_disks");
 		                    
 		                    props_tJDBCInput_28.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_28.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_28.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_28.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_28.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_28.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_28.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_28.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_28.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_28_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_disks\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_disk_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_disk_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_format\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_format\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_format\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_shared\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_shared\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_shared\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_28\",\"di.table.label\":\"v4_5_latest_configuration_vms_disks\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_28_1_fisrt sst_tJDBCInput_28_1_fisrt = new SchemaSettingTool_tJDBCInput_28_1_fisrt();
 		                    
 		                    props_tJDBCInput_28.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_28_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_28.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms_disks");
 		                    
 		                    java.util.List<Object> tJDBCInput_28_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_28_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_28.trimTable).setValue("trim",tJDBCInput_28_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_28_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_28_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("vm_disk_id");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("vm_disk_join_id");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("vm_disk_name");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("vm_disk_description");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("storage_domain_id");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("vm_disk_size_mb");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("vm_disk_type");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("vm_disk_format");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("is_shared");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_28_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_28.trimTable).setValue("columnName",tJDBCInput_28_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_28.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_28 = props_tJDBCInput_28.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_28 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_28 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_28 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_28.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_28);
        }
    }
globalMap.put("tJDBCInput_28_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_28);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_28= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_28_MAPPINGS_URL", mappings_url_tJDBCInput_28);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_28 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_28";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_28 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_28 = null;
topology_tJDBCInput_28 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_28 = def_tJDBCInput_28.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_28, topology_tJDBCInput_28);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_28 = def_tJDBCInput_28.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_28 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_28.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_28 = componentRuntime_tJDBCInput_28.initialize(container_tJDBCInput_28, props_tJDBCInput_28);

if (initVr_tJDBCInput_28.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_28.getMessage());
}

if(componentRuntime_tJDBCInput_28 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_28 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_28;
	compDriverInitialization_tJDBCInput_28.runAtDriver(container_tJDBCInput_28);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_28 = null;
if(componentRuntime_tJDBCInput_28 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_28 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_28;
	if (doesNodeBelongToRequest_tJDBCInput_28) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_28 = sourceOrSink_tJDBCInput_28.validate(container_tJDBCInput_28);
        if (vr_tJDBCInput_28.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_28.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_28 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_28 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_28;
        reader_tJDBCInput_28 = source_tJDBCInput_28.createReader(container_tJDBCInput_28);
	    reader_tJDBCInput_28 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_28, container_tJDBCInput_28);

            boolean multi_output_is_allowed_tJDBCInput_28 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_28 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_28.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_28 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_28 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_28 = props_tJDBCInput_28.getSchema(c_tJDBCInput_28, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_28 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_28, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_28 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_28 = reader_tJDBCInput_28.start();

        resourceMap.put("reader_tJDBCInput_28", reader_tJDBCInput_28);

        for (; available_tJDBCInput_28; available_tJDBCInput_28 = reader_tJDBCInput_28.advance()) {
			nb_line_tJDBCInput_28++;

			
			if (multi_output_is_allowed_tJDBCInput_28) {
				
					row27 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_28 = reader_tJDBCInput_28.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_28) {
						row27 = new row27Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_28 == null) {
            factory_tJDBCInput_28 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_28.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_28.setWrapped(factory_tJDBCInput_28.convertToAvro(data_tJDBCInput_28));
                Object columnValue_0_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(0);
                        row27.history_id = (Integer) (columnValue_0_tJDBCInput_28);
                Object columnValue_1_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(1);
                        row27.vm_disk_id = (Object) (columnValue_1_tJDBCInput_28);
                Object columnValue_2_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(2);
                        row27.vm_disk_join_id = (String) (columnValue_2_tJDBCInput_28);
                Object columnValue_3_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(3);
                        row27.vm_disk_name = (String) (columnValue_3_tJDBCInput_28);
                Object columnValue_4_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(4);
                        row27.vm_disk_description = (String) (columnValue_4_tJDBCInput_28);
                Object columnValue_5_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(5);
                        row27.storage_domain_id = (Object) (columnValue_5_tJDBCInput_28);
                Object columnValue_6_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(6);
                        row27.vm_disk_size_mb = (Integer) (columnValue_6_tJDBCInput_28);
                Object columnValue_7_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(7);
                        row27.vm_disk_type = (Short) (columnValue_7_tJDBCInput_28);
                Object columnValue_8_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(8);
                        row27.vm_disk_format = (Short) (columnValue_8_tJDBCInput_28);
                Object columnValue_9_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(9);
                        row27.is_shared = (Boolean) (columnValue_9_tJDBCInput_28);
                Object columnValue_10_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(10);
                        row27.create_date = (java.util.Date) (columnValue_10_tJDBCInput_28);
                Object columnValue_11_tJDBCInput_28 = outgoingEnforcer_tJDBCInput_28.get(11);
                        row27.update_date = (java.util.Date) (columnValue_11_tJDBCInput_28);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_28) {
				java.util.Map<String,Object> info_tJDBCInput_28 = e_tJDBCInput_28.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_28 = null;
					if(info_tJDBCInput_28.containsKey("error")){
						errorMessage_tJDBCInput_28 = info_tJDBCInput_28.get("error");
					}else if(info_tJDBCInput_28.containsKey("errorMessage")){
						errorMessage_tJDBCInput_28 = info_tJDBCInput_28.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_28 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_28 = "Row "+ nb_line_tJDBCInput_28 + ": "+errorMessage_tJDBCInput_28;
					System.err.println(errorMessage_tJDBCInput_28);
				
					// If the record is reject, the main line record should put NULL
					row27 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_28 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_28 = null;


 



/**
 * [tJDBCInput_28 begin ] stop
 */
	
	/**
	 * [tJDBCInput_28 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_28";

	


 


	tos_count_tJDBCInput_28++;

/**
 * [tJDBCInput_28 main ] stop
 */
	
	/**
	 * [tJDBCInput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_28";

	


 



/**
 * [tJDBCInput_28 process_data_begin ] stop
 */

	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_20 = false;
		  boolean mainRowRejected_tMap_20 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row26" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow26 = false;
       		  	    	
       		  	    	
 							row26Struct row26ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_20) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_20 = false;
								
                        		    		    row26HashKey.vm_disk_join_id = row27.vm_disk_join_id ;
                        		    		

								
		                        	row26HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row26.lookup( row26HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row26.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_20 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row26 != null && tHash_Lookup_row26.getCount(row26HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row26' and it contains more one result from keys :  row26.vm_disk_join_id = '" + row26HashKey.vm_disk_join_id + "'");
								} // G 071
							

							row26Struct row26 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row26Struct fromLookup_row26 = null;
							row26 = row26Default;
										 
							
								 
							
							
								if (tHash_Lookup_row26 !=null && tHash_Lookup_row26.hasNext()) { // G 099
								
							
								
								fromLookup_row26 = tHash_Lookup_row26.next();

							
							
								} // G 099
							
							

							if(fromLookup_row26 != null) {
								row26 = fromLookup_row26;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;// ###############################
        // ###############################
        // # Output tables

delete_disks = null;

if(!rejectedInnerJoin_tMap_20 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_disks'
// # Filter conditions 
if( rejectedInnerJoin_tMap_20 ) {
delete_disks_tmp.storage_domain_id = row27.storage_domain_id ;
delete_disks_tmp.vm_disk_description = row27.vm_disk_description;
delete_disks_tmp.vm_disk_size_mb = row27.vm_disk_size_mb ;
delete_disks_tmp.vm_disk_type = row27.vm_disk_type;
delete_disks_tmp.vm_disk_format = row27.vm_disk_format;
delete_disks_tmp.create_date = row27.create_date;
delete_disks_tmp.update_date = context.runTime;
delete_disks_tmp.delete_date = context.runTime;
delete_disks_tmp.vm_disk_id = row27.vm_disk_id;
delete_disks_tmp.vm_disk_name = row27.vm_disk_name;
delete_disks_tmp.is_shared = row27.is_shared;
delete_disks = delete_disks_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";

	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "delete_disks"
if(delete_disks != null) { 



	
	/**
	 * [tJDBCOutput_20 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_disks"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_20 != null) {
            incomingEnforcer_tJDBCOutput_20.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_20.put("storage_domain_id", delete_disks.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("vm_disk_description") != null){
                    incomingEnforcer_tJDBCOutput_20.put("vm_disk_description", delete_disks.vm_disk_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("vm_disk_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_20.put("vm_disk_size_mb", delete_disks.vm_disk_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("vm_disk_type") != null){
                    incomingEnforcer_tJDBCOutput_20.put("vm_disk_type", delete_disks.vm_disk_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("vm_disk_format") != null){
                    incomingEnforcer_tJDBCOutput_20.put("vm_disk_format", delete_disks.vm_disk_format);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_20.put("create_date", delete_disks.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_20.put("update_date", delete_disks.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_20.put("delete_date", delete_disks.delete_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("vm_disk_id") != null){
                    incomingEnforcer_tJDBCOutput_20.put("vm_disk_id", delete_disks.vm_disk_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("vm_disk_name") != null){
                    incomingEnforcer_tJDBCOutput_20.put("vm_disk_name", delete_disks.vm_disk_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("is_shared") != null){
                    incomingEnforcer_tJDBCOutput_20.put("is_shared", delete_disks.is_shared);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_20 = null;
        if (incomingEnforcer_tJDBCOutput_20 != null) {
            data_tJDBCOutput_20 = incomingEnforcer_tJDBCOutput_20.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_20 != null && data_tJDBCOutput_20 != null) {
        	writer_tJDBCOutput_20.write(data_tJDBCOutput_20);
        }
        
        nb_line_tJDBCOutput_20++;

 


	tos_count_tJDBCOutput_20++;

/**
 * [tJDBCOutput_20 main ] stop
 */
	
	/**
	 * [tJDBCOutput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	


 



/**
 * [tJDBCOutput_20 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	


 



/**
 * [tJDBCOutput_20 process_data_end ] stop
 */

} // End of branch "delete_disks"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";

	

 



/**
 * [tMap_20 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_28";

	


 



/**
 * [tJDBCInput_28 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_28 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_28";

	
// end of generic


resourceMap.put("finish_tJDBCInput_28", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_28 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_28 = null;
    if (reader_tJDBCInput_28 != null) {
        reader_tJDBCInput_28.close();
        resultMap_tJDBCInput_28 = reader_tJDBCInput_28.getReturnValues();
    }
if(resultMap_tJDBCInput_28!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_28 : resultMap_tJDBCInput_28.entrySet()) {
		switch(entry_tJDBCInput_28.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_28.setComponentData("tJDBCInput_28", "ERROR_MESSAGE", entry_tJDBCInput_28.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_28.setComponentData("tJDBCInput_28", "NB_LINE", entry_tJDBCInput_28.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_28.setComponentData("tJDBCInput_28", "NB_SUCCESS", entry_tJDBCInput_28.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_28.setComponentData("tJDBCInput_28", "NB_REJECT", entry_tJDBCInput_28.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_28 = new StringBuilder();
            for (int i_tJDBCInput_28 = 0; i_tJDBCInput_28 < entry_tJDBCInput_28.getKey().length(); i_tJDBCInput_28++) {
                char ch_tJDBCInput_28 = entry_tJDBCInput_28.getKey().charAt(i_tJDBCInput_28);
                if(Character.isUpperCase(ch_tJDBCInput_28) && i_tJDBCInput_28> 0) {
                	studio_key_tJDBCInput_28.append('_');
                }
                studio_key_tJDBCInput_28.append(ch_tJDBCInput_28);
            }
			container_tJDBCInput_28.setComponentData("tJDBCInput_28", studio_key_tJDBCInput_28.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_28.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_28", true);
end_Hash.put("tJDBCInput_28", System.currentTimeMillis());




/**
 * [tJDBCInput_28 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row26 != null) {
						tHash_Lookup_row26.endGet();
					}
					globalMap.remove( "tHash_Lookup_row26" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */

	
	/**
	 * [tJDBCOutput_20 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_20", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_20 = null;
    if (writer_tJDBCOutput_20 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_20 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_20.close();
        resultMap_tJDBCOutput_20 = writer_tJDBCOutput_20.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_20), container_tJDBCOutput_20);
    }
if(resultMap_tJDBCOutput_20!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_20 : resultMap_tJDBCOutput_20.entrySet()) {
		switch(entry_tJDBCOutput_20.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "ERROR_MESSAGE", entry_tJDBCOutput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "NB_LINE", entry_tJDBCOutput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "NB_SUCCESS", entry_tJDBCOutput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "NB_REJECT", entry_tJDBCOutput_20.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_20 = new StringBuilder();
            for (int i_tJDBCOutput_20 = 0; i_tJDBCOutput_20 < entry_tJDBCOutput_20.getKey().length(); i_tJDBCOutput_20++) {
                char ch_tJDBCOutput_20 = entry_tJDBCOutput_20.getKey().charAt(i_tJDBCOutput_20);
                if(Character.isUpperCase(ch_tJDBCOutput_20) && i_tJDBCOutput_20> 0) {
                	studio_key_tJDBCOutput_20.append('_');
                }
                studio_key_tJDBCOutput_20.append(ch_tJDBCOutput_20);
            }
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", studio_key_tJDBCOutput_20.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_20.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_disks");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_20", true);
end_Hash.put("tJDBCOutput_20", System.currentTimeMillis());




/**
 * [tJDBCOutput_20 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_28:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk26", 0, "ok");
								} 
							
							tJDBCInput_8Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_20"
					     			globalMap.remove("tHash_Lookup_row26"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_28 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_28";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_28")==null){
    if(resourceMap.get("reader_tJDBCInput_28")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_28")).close();
		} catch (java.io.IOException e_tJDBCInput_28) {
			String errorMessage_tJDBCInput_28 = "failed to release the resource in tJDBCInput_28 :" + e_tJDBCInput_28.getMessage();
			System.err.println(errorMessage_tJDBCInput_28);
		}
	}
}
 



/**
 * [tJDBCInput_28 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";

	

 



/**
 * [tMap_20 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_20 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_20")==null){
    if(resourceMap.get("writer_tJDBCOutput_20")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_20")).close();
		} catch (java.io.IOException e_tJDBCOutput_20) {
			String errorMessage_tJDBCOutput_20 = "failed to release the resource in tJDBCOutput_20 :" + e_tJDBCOutput_20.getMessage();
			System.err.println(errorMessage_tJDBCOutput_20);
		}
	}
}
 



/**
 * [tJDBCOutput_20 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_28_SUBPROCESS_STATE", 1);
	}
	


public static class vm_interface_configurationStruct implements routines.system.IPersistableRow<vm_interface_configurationStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_name;

				public String getVm_interface_name () {
					return this.vm_interface_name;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public Short vm_interface_type;

				public Short getVm_interface_type () {
					return this.vm_interface_type;
				}
				
			    public Integer vm_interface_speed_bps;

				public Integer getVm_interface_speed_bps () {
					return this.vm_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_name="+vm_interface_name);
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_interface_type="+String.valueOf(vm_interface_type));
		sb.append(",vm_interface_speed_bps="+String.valueOf(vm_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_interface_configurationStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_name;

				public String getVm_interface_name () {
					return this.vm_interface_name;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public Short vm_interface_type;

				public Short getVm_interface_type () {
					return this.vm_interface_type;
				}
				
			    public Integer vm_interface_speed_bps;

				public Integer getVm_interface_speed_bps () {
					return this.vm_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_name="+vm_interface_name);
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",vm_interface_type="+String.valueOf(vm_interface_type));
		sb.append(",vm_interface_speed_bps="+String.valueOf(vm_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_8Struct implements routines.system.IPersistableRow<after_tJDBCInput_8Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_name;

				public String getVm_interface_name () {
					return this.vm_interface_name;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public Short vm_interface_type;

				public Short getVm_interface_type () {
					return this.vm_interface_type;
				}
				
			    public Integer vm_interface_speed_bps;

				public Integer getVm_interface_speed_bps () {
					return this.vm_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_name="+vm_interface_name);
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",vm_interface_type="+String.valueOf(vm_interface_type));
		sb.append(",vm_interface_speed_bps="+String.valueOf(vm_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_44Process(globalMap);

		row8Struct row8 = new row8Struct();
vm_interface_configurationStruct vm_interface_configuration = new vm_interface_configurationStruct();





	
	/**
	 * [tJDBCOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_8", false);
		start_Hash.put("tJDBCOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_8";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_interface_configuration");
					}
				
		int tos_count_tJDBCOutput_8 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_8 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_8 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_8 = (String)(restRequest_tJDBCOutput_8 != null ? restRequest_tJDBCOutput_8.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_8 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_8 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_8 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_8 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_8.createRuntimeProperties();
 		                    props_tJDBCOutput_8.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_8.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_8.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_8.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_8.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.tableSelection.setValue("tablename",
 		                    "vm_interface_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"vm_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_1_fisrt sst_tJDBCOutput_8_1_fisrt = new SchemaSettingTool_tJDBCOutput_8_1_fisrt();
 		                    
 		                    props_tJDBCOutput_8.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"vm_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_2_fisrt sst_tJDBCOutput_8_2_fisrt = new SchemaSettingTool_tJDBCOutput_8_2_fisrt();
 		                    
 		                    props_tJDBCOutput_8.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"vm_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_3_fisrt sst_tJDBCOutput_8_3_fisrt = new SchemaSettingTool_tJDBCOutput_8_3_fisrt();
 		                    
 		                    props_tJDBCOutput_8.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_8.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_8.additionalColumns.setValue("referenceColumns",
 		                    "vm_interface_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_8.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_8 = props_tJDBCOutput_8.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_8 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_8 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_8 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_8.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_8);
        }
    }
globalMap.put("tJDBCOutput_8_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_8);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_8= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_8_MAPPINGS_URL", mappings_url_tJDBCOutput_8);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_8 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_8";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_8 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_8 = null;
topology_tJDBCOutput_8 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_8 = def_tJDBCOutput_8.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_8, topology_tJDBCOutput_8);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_8 = def_tJDBCOutput_8.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_8 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_8.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_8 = componentRuntime_tJDBCOutput_8.initialize(container_tJDBCOutput_8, props_tJDBCOutput_8);

if (initVr_tJDBCOutput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_8.getMessage());
}

if(componentRuntime_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_8 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_8;
	compDriverInitialization_tJDBCOutput_8.runAtDriver(container_tJDBCOutput_8);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_8 = null;
if(componentRuntime_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_8 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_8;
	if (doesNodeBelongToRequest_tJDBCOutput_8) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_8 = sourceOrSink_tJDBCOutput_8.validate(container_tJDBCOutput_8);
        if (vr_tJDBCOutput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_8.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_8 = null;
    if (sourceOrSink_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_8 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_8;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_8 = sink_tJDBCOutput_8.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_8) {
            writeOperation_tJDBCOutput_8.initialize(container_tJDBCOutput_8);
        }
        writer_tJDBCOutput_8 = writeOperation_tJDBCOutput_8.createWriter(container_tJDBCOutput_8);
        if (doesNodeBelongToRequest_tJDBCOutput_8) {
            writer_tJDBCOutput_8.open("tJDBCOutput_8");
        }

        resourceMap.put("writer_tJDBCOutput_8", writer_tJDBCOutput_8);
    } // end of "sourceOrSink_tJDBCOutput_8 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_8 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_8.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_8 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_8 = props_tJDBCOutput_8.getSchema(c_tJDBCOutput_8, false);
    incomingEnforcer_tJDBCOutput_8 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_8);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_8 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_8 = null;


 



/**
 * [tJDBCOutput_8 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct> tHash_Lookup_row40 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct>) 
					globalMap.get( "tHash_Lookup_row40" ))
					;					
					
	

row40Struct row40HashKey = new row40Struct();
row40Struct row40Default = new row40Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_interface_configurationStruct vm_interface_configuration_tmp = new vm_interface_configurationStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tJDBCInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_8", false);
		start_Hash.put("tJDBCInput_8", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_8";

	
		int tos_count_tJDBCInput_8 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_8 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_8 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_8 = (String)(restRequest_tJDBCInput_8 != null ? restRequest_tJDBCInput_8.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_8 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_8 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_8 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_8 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_8.createRuntimeProperties();
 		                    props_tJDBCInput_8.setValue("sql",
 		                    "SELECT \n  vm_interface_id, \n  vm_interface_name, \n  vm_id, \n  upper(cast(vm_id as char(36))) as vm_join_id,\n  vm_i"
+"nterface_type, \n  vm_interface_speed_bps, \n  mac_address, \n  logical_network_name, \n  create_date, \n  update_date\n"
+"FROM dwh_vm_interface_configuration_history_view");
 		                    
 		                    props_tJDBCInput_8.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_8.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_8.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_8_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_vm_interface_configuration_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_8\",\"di.table.label\":\"dwh_vm_interface_configuration_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_8_1_fisrt sst_tJDBCInput_8_1_fisrt = new SchemaSettingTool_tJDBCInput_8_1_fisrt();
 		                    
 		                    props_tJDBCInput_8.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_8_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_8.tableSelection.setValue("tablename",
 		                    "dwh_vm_interface_configuration_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_8_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_8.trimTable).setValue("trim",tJDBCInput_8_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_8_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_8_trimTable_columnName.add("vm_interface_id");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("vm_interface_name");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("vm_join_id");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("vm_interface_type");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("vm_interface_speed_bps");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("mac_address");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("logical_network_name");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_8.trimTable).setValue("columnName",tJDBCInput_8_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_8.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_8 = props_tJDBCInput_8.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_8 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_8 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_8 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_8.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_8);
        }
    }
globalMap.put("tJDBCInput_8_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_8);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_8= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_8_MAPPINGS_URL", mappings_url_tJDBCInput_8);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_8 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_8";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_8 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_8 = null;
topology_tJDBCInput_8 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_8 = def_tJDBCInput_8.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_8, topology_tJDBCInput_8);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_8 = def_tJDBCInput_8.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_8 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_8.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_8 = componentRuntime_tJDBCInput_8.initialize(container_tJDBCInput_8, props_tJDBCInput_8);

if (initVr_tJDBCInput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_8.getMessage());
}

if(componentRuntime_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_8 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_8;
	compDriverInitialization_tJDBCInput_8.runAtDriver(container_tJDBCInput_8);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_8 = null;
if(componentRuntime_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_8 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_8;
	if (doesNodeBelongToRequest_tJDBCInput_8) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_8 = sourceOrSink_tJDBCInput_8.validate(container_tJDBCInput_8);
        if (vr_tJDBCInput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_8.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_8 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_8;
        reader_tJDBCInput_8 = source_tJDBCInput_8.createReader(container_tJDBCInput_8);
	    reader_tJDBCInput_8 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_8, container_tJDBCInput_8);

            boolean multi_output_is_allowed_tJDBCInput_8 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_8 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_8.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_8 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_8 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_8 = props_tJDBCInput_8.getSchema(c_tJDBCInput_8, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_8 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_8, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_8 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_8 = reader_tJDBCInput_8.start();

        resourceMap.put("reader_tJDBCInput_8", reader_tJDBCInput_8);

        for (; available_tJDBCInput_8; available_tJDBCInput_8 = reader_tJDBCInput_8.advance()) {
			nb_line_tJDBCInput_8++;

			
			if (multi_output_is_allowed_tJDBCInput_8) {
				
					row8 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_8 = reader_tJDBCInput_8.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_8) {
						row8 = new row8Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_8 == null) {
            factory_tJDBCInput_8 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_8.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_8.setWrapped(factory_tJDBCInput_8.convertToAvro(data_tJDBCInput_8));
                Object columnValue_0_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(0);
                        row8.vm_interface_id = (Object) (columnValue_0_tJDBCInput_8);
                Object columnValue_1_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(1);
                        row8.vm_interface_name = (String) (columnValue_1_tJDBCInput_8);
                Object columnValue_2_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(2);
                        row8.vm_id = (Object) (columnValue_2_tJDBCInput_8);
                Object columnValue_3_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(3);
                        row8.vm_join_id = (String) (columnValue_3_tJDBCInput_8);
                Object columnValue_4_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(4);
                        row8.vm_interface_type = (Short) (columnValue_4_tJDBCInput_8);
                Object columnValue_5_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(5);
                        row8.vm_interface_speed_bps = (Integer) (columnValue_5_tJDBCInput_8);
                Object columnValue_6_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(6);
                        row8.mac_address = (String) (columnValue_6_tJDBCInput_8);
                Object columnValue_7_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(7);
                        row8.logical_network_name = (String) (columnValue_7_tJDBCInput_8);
                Object columnValue_8_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(8);
                        row8.create_date = (java.util.Date) (columnValue_8_tJDBCInput_8);
                Object columnValue_9_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(9);
                        row8.update_date = (java.util.Date) (columnValue_9_tJDBCInput_8);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_8) {
				java.util.Map<String,Object> info_tJDBCInput_8 = e_tJDBCInput_8.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_8 = null;
					if(info_tJDBCInput_8.containsKey("error")){
						errorMessage_tJDBCInput_8 = info_tJDBCInput_8.get("error");
					}else if(info_tJDBCInput_8.containsKey("errorMessage")){
						errorMessage_tJDBCInput_8 = info_tJDBCInput_8.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_8 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_8 = "Row "+ nb_line_tJDBCInput_8 + ": "+errorMessage_tJDBCInput_8;
					System.err.println(errorMessage_tJDBCInput_8);
				
					// If the record is reject, the main line record should put NULL
					row8 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_8 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_8 = null;


 



/**
 * [tJDBCInput_8 begin ] stop
 */
	
	/**
	 * [tJDBCInput_8 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 


	tos_count_tJDBCInput_8++;

/**
 * [tJDBCInput_8 main ] stop
 */
	
	/**
	 * [tJDBCInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 



/**
 * [tJDBCInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_8 = false;
		  boolean mainRowRejected_tMap_8 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row8.update_date == null ? TalendDate.compareDate(row8.create_date,context.runTime) <=0 : TalendDate.compareDate(row8.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row8'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row40" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow40 = false;
       		  	    	
       		  	    	
 							row40Struct row40ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		    row40HashKey.vm_join_id = row8.vm_join_id ;
                        		    		

								
		                        	row40HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row40.lookup( row40HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row40 != null && tHash_Lookup_row40.getCount(row40HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row40' and it contains more one result from keys :  row40.vm_join_id = '" + row40HashKey.vm_join_id + "'");
								} // G 071
							

							row40Struct row40 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row40Struct fromLookup_row40 = null;
							row40 = row40Default;
										 
							
								 
							
							
								if (tHash_Lookup_row40 !=null && tHash_Lookup_row40.hasNext()) { // G 099
								
							
								
								fromLookup_row40 = tHash_Lookup_row40.next();

							
							
								} // G 099
							
							

							if(fromLookup_row40 != null) {
								row40 = fromLookup_row40;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

vm_interface_configuration = null;


// # Output table : 'vm_interface_configuration'
vm_interface_configuration_tmp.vm_interface_id = row8.vm_interface_id;
vm_interface_configuration_tmp.vm_interface_name = StringHandling.TRIM(row8.vm_interface_name);
vm_interface_configuration_tmp.vm_id = row8.vm_id;
vm_interface_configuration_tmp.vm_interface_type = row8.vm_interface_type;
vm_interface_configuration_tmp.vm_interface_speed_bps = row8.vm_interface_speed_bps ;
vm_interface_configuration_tmp.mac_address = StringHandling.TRIM(row8.mac_address);
vm_interface_configuration_tmp.logical_network_name = StringHandling.TRIM(row8.logical_network_name);
vm_interface_configuration_tmp.vm_configuration_version = row40.history_id ;
vm_interface_configuration_tmp.create_date = row8.create_date;
vm_interface_configuration_tmp.update_date = row8.update_date;
vm_interface_configuration_tmp.delete_date = null;
vm_interface_configuration = vm_interface_configuration_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "vm_interface_configuration"
if(vm_interface_configuration != null) { 



	
	/**
	 * [tJDBCOutput_8 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_interface_configuration"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_8 != null) {
            incomingEnforcer_tJDBCOutput_8.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("vm_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_8.put("vm_interface_id", vm_interface_configuration.vm_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("vm_interface_name") != null){
                    incomingEnforcer_tJDBCOutput_8.put("vm_interface_name", vm_interface_configuration.vm_interface_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_8.put("vm_id", vm_interface_configuration.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("vm_interface_type") != null){
                    incomingEnforcer_tJDBCOutput_8.put("vm_interface_type", vm_interface_configuration.vm_interface_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("vm_interface_speed_bps") != null){
                    incomingEnforcer_tJDBCOutput_8.put("vm_interface_speed_bps", vm_interface_configuration.vm_interface_speed_bps);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("mac_address") != null){
                    incomingEnforcer_tJDBCOutput_8.put("mac_address", vm_interface_configuration.mac_address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("logical_network_name") != null){
                    incomingEnforcer_tJDBCOutput_8.put("logical_network_name", vm_interface_configuration.logical_network_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("vm_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_8.put("vm_configuration_version", vm_interface_configuration.vm_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_8.put("create_date", vm_interface_configuration.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_8.put("update_date", vm_interface_configuration.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_8.put("delete_date", vm_interface_configuration.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_8 = null;
        if (incomingEnforcer_tJDBCOutput_8 != null) {
            data_tJDBCOutput_8 = incomingEnforcer_tJDBCOutput_8.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_8 != null && data_tJDBCOutput_8 != null) {
        	writer_tJDBCOutput_8.write(data_tJDBCOutput_8);
        }
        
        nb_line_tJDBCOutput_8++;

 


	tos_count_tJDBCOutput_8++;

/**
 * [tJDBCOutput_8 main ] stop
 */
	
	/**
	 * [tJDBCOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	


 



/**
 * [tJDBCOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	


 



/**
 * [tJDBCOutput_8 process_data_end ] stop
 */

} // End of branch "vm_interface_configuration"



	
		} // G_TM_M_280 close main tMap filter for table 'row8'
	
	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 



/**
 * [tJDBCInput_8 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_8 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	
// end of generic


resourceMap.put("finish_tJDBCInput_8", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_8 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_8 = null;
    if (reader_tJDBCInput_8 != null) {
        reader_tJDBCInput_8.close();
        resultMap_tJDBCInput_8 = reader_tJDBCInput_8.getReturnValues();
    }
if(resultMap_tJDBCInput_8!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_8 : resultMap_tJDBCInput_8.entrySet()) {
		switch(entry_tJDBCInput_8.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "ERROR_MESSAGE", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_LINE", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_SUCCESS", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_REJECT", entry_tJDBCInput_8.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_8 = new StringBuilder();
            for (int i_tJDBCInput_8 = 0; i_tJDBCInput_8 < entry_tJDBCInput_8.getKey().length(); i_tJDBCInput_8++) {
                char ch_tJDBCInput_8 = entry_tJDBCInput_8.getKey().charAt(i_tJDBCInput_8);
                if(Character.isUpperCase(ch_tJDBCInput_8) && i_tJDBCInput_8> 0) {
                	studio_key_tJDBCInput_8.append('_');
                }
                studio_key_tJDBCInput_8.append(ch_tJDBCInput_8);
            }
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", studio_key_tJDBCInput_8.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_8.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_8", true);
end_Hash.put("tJDBCInput_8", System.currentTimeMillis());




/**
 * [tJDBCInput_8 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row40 != null) {
						tHash_Lookup_row40.endGet();
					}
					globalMap.remove( "tHash_Lookup_row40" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tJDBCOutput_8 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_8", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_8 = null;
    if (writer_tJDBCOutput_8 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_8 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_8.close();
        resultMap_tJDBCOutput_8 = writer_tJDBCOutput_8.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_8), container_tJDBCOutput_8);
    }
if(resultMap_tJDBCOutput_8!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_8 : resultMap_tJDBCOutput_8.entrySet()) {
		switch(entry_tJDBCOutput_8.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "ERROR_MESSAGE", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_LINE", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_SUCCESS", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_REJECT", entry_tJDBCOutput_8.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_8 = new StringBuilder();
            for (int i_tJDBCOutput_8 = 0; i_tJDBCOutput_8 < entry_tJDBCOutput_8.getKey().length(); i_tJDBCOutput_8++) {
                char ch_tJDBCOutput_8 = entry_tJDBCOutput_8.getKey().charAt(i_tJDBCOutput_8);
                if(Character.isUpperCase(ch_tJDBCOutput_8) && i_tJDBCOutput_8> 0) {
                	studio_key_tJDBCOutput_8.append('_');
                }
                studio_key_tJDBCOutput_8.append(ch_tJDBCOutput_8);
            }
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", studio_key_tJDBCOutput_8.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_8.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_interface_configuration");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_8", true);
end_Hash.put("tJDBCOutput_8", System.currentTimeMillis());




/**
 * [tJDBCOutput_8 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_8:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tJDBCInput_30Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row40"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_8 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_8")==null){
    if(resourceMap.get("reader_tJDBCInput_8")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_8")).close();
		} catch (java.io.IOException e_tJDBCInput_8) {
			String errorMessage_tJDBCInput_8 = "failed to release the resource in tJDBCInput_8 :" + e_tJDBCInput_8.getMessage();
			System.err.println(errorMessage_tJDBCInput_8);
		}
	}
}
 



/**
 * [tJDBCInput_8 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_8")==null){
    if(resourceMap.get("writer_tJDBCOutput_8")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_8")).close();
		} catch (java.io.IOException e_tJDBCOutput_8) {
			String errorMessage_tJDBCOutput_8 = "failed to release the resource in tJDBCOutput_8 :" + e_tJDBCOutput_8.getMessage();
			System.err.println(errorMessage_tJDBCOutput_8);
		}
	}
}
 



/**
 * [tJDBCOutput_8 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class delete_vm_interfaceStruct implements routines.system.IPersistableRow<delete_vm_interfaceStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_name;

				public String getVm_interface_name () {
					return this.vm_interface_name;
				}
				
			    public Short vm_interface_type;

				public Short getVm_interface_type () {
					return this.vm_interface_type;
				}
				
			    public Integer vm_interface_speed_bps;

				public Integer getVm_interface_speed_bps () {
					return this.vm_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_name="+vm_interface_name);
		sb.append(",vm_interface_type="+String.valueOf(vm_interface_type));
		sb.append(",vm_interface_speed_bps="+String.valueOf(vm_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_vm_interfaceStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_join_id;

				public String getVm_interface_join_id () {
					return this.vm_interface_join_id;
				}
				
			    public String vm_interface_name;

				public String getVm_interface_name () {
					return this.vm_interface_name;
				}
				
			    public Short vm_interface_type;

				public Short getVm_interface_type () {
					return this.vm_interface_type;
				}
				
			    public Integer vm_interface_speed_bps;

				public Integer getVm_interface_speed_bps () {
					return this.vm_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
					this.vm_interface_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
					this.vm_interface_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_join_id="+vm_interface_join_id);
		sb.append(",vm_interface_name="+vm_interface_name);
		sb.append(",vm_interface_type="+String.valueOf(vm_interface_type));
		sb.append(",vm_interface_speed_bps="+String.valueOf(vm_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_30Struct implements routines.system.IPersistableRow<after_tJDBCInput_30Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_join_id;

				public String getVm_interface_join_id () {
					return this.vm_interface_join_id;
				}
				
			    public String vm_interface_name;

				public String getVm_interface_name () {
					return this.vm_interface_name;
				}
				
			    public Short vm_interface_type;

				public Short getVm_interface_type () {
					return this.vm_interface_type;
				}
				
			    public Integer vm_interface_speed_bps;

				public Integer getVm_interface_speed_bps () {
					return this.vm_interface_speed_bps;
				}
				
			    public String mac_address;

				public String getMac_address () {
					return this.mac_address;
				}
				
			    public String logical_network_name;

				public String getLogical_network_name () {
					return this.logical_network_name;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
					this.vm_interface_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
					this.vm_interface_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_interface_type = null;
           				} else {
           			    	this.vm_interface_type = dis.readShort();
           				}
					
						this.vm_interface_speed_bps = readInteger(dis);
					
					this.mac_address = readString(dis);
					
					this.logical_network_name = readString(dis);
					
						this.vm_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// String
				
						writeString(this.vm_interface_name,dos);
					
					// Short
				
						if(this.vm_interface_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_interface_type);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_speed_bps,dos);
					
					// String
				
						writeString(this.mac_address,dos);
					
					// String
				
						writeString(this.logical_network_name,dos);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_join_id="+vm_interface_join_id);
		sb.append(",vm_interface_name="+vm_interface_name);
		sb.append(",vm_interface_type="+String.valueOf(vm_interface_type));
		sb.append(",vm_interface_speed_bps="+String.valueOf(vm_interface_speed_bps));
		sb.append(",mac_address="+mac_address);
		sb.append(",logical_network_name="+logical_network_name);
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_30Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_30_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_29Process(globalMap);

		row29Struct row29 = new row29Struct();
delete_vm_interfaceStruct delete_vm_interface = new delete_vm_interfaceStruct();





	
	/**
	 * [tJDBCOutput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_21", false);
		start_Hash.put("tJDBCOutput_21", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_21";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_vm_interface");
					}
				
		int tos_count_tJDBCOutput_21 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_21 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_21 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_21 = (String)(restRequest_tJDBCOutput_21 != null ? restRequest_tJDBCOutput_21.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_21 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_21 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_21 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_21 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_21.createRuntimeProperties();
 		                    props_tJDBCOutput_21.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_21.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_21.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_21.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_21.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_21.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_21.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_21.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.tableSelection.setValue("tablename",
 		                    "vm_interface_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_21_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_21\",\"di.table.label\":\"vm_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_21_1_fisrt sst_tJDBCOutput_21_1_fisrt = new SchemaSettingTool_tJDBCOutput_21_1_fisrt();
 		                    
 		                    props_tJDBCOutput_21.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_21_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_21_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_21\",\"di.table.label\":\"vm_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_21_2_fisrt sst_tJDBCOutput_21_2_fisrt = new SchemaSettingTool_tJDBCOutput_21_2_fisrt();
 		                    
 		                    props_tJDBCOutput_21.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_21_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_21_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_21\",\"di.table.label\":\"vm_interface_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_21_3_fisrt sst_tJDBCOutput_21_3_fisrt = new SchemaSettingTool_tJDBCOutput_21_3_fisrt();
 		                    
 		                    props_tJDBCOutput_21.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_21_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_21.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_21.additionalColumns.setValue("referenceColumns",
 		                    "vm_interface_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_21.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_21 = props_tJDBCOutput_21.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_21 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_21 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_21 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_21.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_21);
        }
    }
globalMap.put("tJDBCOutput_21_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_21);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_21= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_21_MAPPINGS_URL", mappings_url_tJDBCOutput_21);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_21 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_21";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_21 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_21 = null;
topology_tJDBCOutput_21 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_21 = def_tJDBCOutput_21.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_21, topology_tJDBCOutput_21);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_21 = def_tJDBCOutput_21.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_21 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_21.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_21 = componentRuntime_tJDBCOutput_21.initialize(container_tJDBCOutput_21, props_tJDBCOutput_21);

if (initVr_tJDBCOutput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_21.getMessage());
}

if(componentRuntime_tJDBCOutput_21 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_21 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_21;
	compDriverInitialization_tJDBCOutput_21.runAtDriver(container_tJDBCOutput_21);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_21 = null;
if(componentRuntime_tJDBCOutput_21 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_21 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_21;
	if (doesNodeBelongToRequest_tJDBCOutput_21) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_21 = sourceOrSink_tJDBCOutput_21.validate(container_tJDBCOutput_21);
        if (vr_tJDBCOutput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_21.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_21 = null;
    if (sourceOrSink_tJDBCOutput_21 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_21 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_21;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_21 = sink_tJDBCOutput_21.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_21) {
            writeOperation_tJDBCOutput_21.initialize(container_tJDBCOutput_21);
        }
        writer_tJDBCOutput_21 = writeOperation_tJDBCOutput_21.createWriter(container_tJDBCOutput_21);
        if (doesNodeBelongToRequest_tJDBCOutput_21) {
            writer_tJDBCOutput_21.open("tJDBCOutput_21");
        }

        resourceMap.put("writer_tJDBCOutput_21", writer_tJDBCOutput_21);
    } // end of "sourceOrSink_tJDBCOutput_21 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_21 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_21.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_21 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_21 = props_tJDBCOutput_21.getSchema(c_tJDBCOutput_21, false);
    incomingEnforcer_tJDBCOutput_21 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_21);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_21 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_21 = null;


 



/**
 * [tJDBCOutput_21 begin ] stop
 */



	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
					globalMap.get( "tHash_Lookup_row28" ))
					;					
					
	

row28Struct row28HashKey = new row28Struct();
row28Struct row28Default = new row28Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_vm_interfaceStruct delete_vm_interface_tmp = new delete_vm_interfaceStruct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tJDBCInput_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_30", false);
		start_Hash.put("tJDBCInput_30", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_30";

	
		int tos_count_tJDBCInput_30 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_30 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_30 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_30 = (String)(restRequest_tJDBCInput_30 != null ? restRequest_tJDBCInput_30.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_30 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_30 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_30 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_30 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_30.createRuntimeProperties();
 		                    props_tJDBCInput_30.setValue("sql",
 		                    "SELECT \n  history_id, \n  vm_interface_id, \n  upper(cast(vm_interface_id as char(36))) as vm_interface_join_id,\n  vm"
+"_interface_name, \n  vm_interface_type, \n  vm_interface_speed_bps, \n  mac_address, \n  logical_network_name, \n  vm_co"
+"nfiguration_version, \n  create_date, \n  update_date\nFROM v4_5_latest_configuration_vms_interfaces");
 		                    
 		                    props_tJDBCInput_30.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_30.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_30.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_30.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_30.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_30.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_30.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_30.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_30.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_30_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_interface_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_interface_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"256\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_interface_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_speed_bps\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_speed_bps\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_speed_bps\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"mac_address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"mac_address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"mac_address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"logical_network_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"logical_network_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"logical_network_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_30\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_30_1_fisrt sst_tJDBCInput_30_1_fisrt = new SchemaSettingTool_tJDBCInput_30_1_fisrt();
 		                    
 		                    props_tJDBCInput_30.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_30_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_30.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms_interfaces");
 		                    
 		                    java.util.List<Object> tJDBCInput_30_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_30_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_30.trimTable).setValue("trim",tJDBCInput_30_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_30_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_30_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("vm_interface_id");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("vm_interface_join_id");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("vm_interface_name");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("vm_interface_type");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("vm_interface_speed_bps");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("mac_address");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("logical_network_name");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("vm_configuration_version");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_30_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_30.trimTable).setValue("columnName",tJDBCInput_30_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_30.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_30 = props_tJDBCInput_30.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_30 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_30 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_30 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_30.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_30);
        }
    }
globalMap.put("tJDBCInput_30_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_30);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_30= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_30_MAPPINGS_URL", mappings_url_tJDBCInput_30);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_30 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_30";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_30 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_30 = null;
topology_tJDBCInput_30 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_30 = def_tJDBCInput_30.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_30, topology_tJDBCInput_30);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_30 = def_tJDBCInput_30.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_30 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_30.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_30 = componentRuntime_tJDBCInput_30.initialize(container_tJDBCInput_30, props_tJDBCInput_30);

if (initVr_tJDBCInput_30.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_30.getMessage());
}

if(componentRuntime_tJDBCInput_30 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_30 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_30;
	compDriverInitialization_tJDBCInput_30.runAtDriver(container_tJDBCInput_30);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_30 = null;
if(componentRuntime_tJDBCInput_30 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_30 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_30;
	if (doesNodeBelongToRequest_tJDBCInput_30) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_30 = sourceOrSink_tJDBCInput_30.validate(container_tJDBCInput_30);
        if (vr_tJDBCInput_30.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_30.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_30 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_30 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_30;
        reader_tJDBCInput_30 = source_tJDBCInput_30.createReader(container_tJDBCInput_30);
	    reader_tJDBCInput_30 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_30, container_tJDBCInput_30);

            boolean multi_output_is_allowed_tJDBCInput_30 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_30 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_30.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_30 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_30 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_30 = props_tJDBCInput_30.getSchema(c_tJDBCInput_30, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_30 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_30, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_30 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_30 = reader_tJDBCInput_30.start();

        resourceMap.put("reader_tJDBCInput_30", reader_tJDBCInput_30);

        for (; available_tJDBCInput_30; available_tJDBCInput_30 = reader_tJDBCInput_30.advance()) {
			nb_line_tJDBCInput_30++;

			
			if (multi_output_is_allowed_tJDBCInput_30) {
				
					row29 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_30 = reader_tJDBCInput_30.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_30) {
						row29 = new row29Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_30 == null) {
            factory_tJDBCInput_30 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_30.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_30.setWrapped(factory_tJDBCInput_30.convertToAvro(data_tJDBCInput_30));
                Object columnValue_0_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(0);
                        row29.history_id = (Integer) (columnValue_0_tJDBCInput_30);
                Object columnValue_1_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(1);
                        row29.vm_interface_id = (Object) (columnValue_1_tJDBCInput_30);
                Object columnValue_2_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(2);
                        row29.vm_interface_join_id = (String) (columnValue_2_tJDBCInput_30);
                Object columnValue_3_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(3);
                        row29.vm_interface_name = (String) (columnValue_3_tJDBCInput_30);
                Object columnValue_4_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(4);
                        row29.vm_interface_type = (Short) (columnValue_4_tJDBCInput_30);
                Object columnValue_5_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(5);
                        row29.vm_interface_speed_bps = (Integer) (columnValue_5_tJDBCInput_30);
                Object columnValue_6_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(6);
                        row29.mac_address = (String) (columnValue_6_tJDBCInput_30);
                Object columnValue_7_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(7);
                        row29.logical_network_name = (String) (columnValue_7_tJDBCInput_30);
                Object columnValue_8_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(8);
                        row29.vm_configuration_version = (Integer) (columnValue_8_tJDBCInput_30);
                Object columnValue_9_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(9);
                        row29.create_date = (java.util.Date) (columnValue_9_tJDBCInput_30);
                Object columnValue_10_tJDBCInput_30 = outgoingEnforcer_tJDBCInput_30.get(10);
                        row29.update_date = (java.util.Date) (columnValue_10_tJDBCInput_30);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_30) {
				java.util.Map<String,Object> info_tJDBCInput_30 = e_tJDBCInput_30.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_30 = null;
					if(info_tJDBCInput_30.containsKey("error")){
						errorMessage_tJDBCInput_30 = info_tJDBCInput_30.get("error");
					}else if(info_tJDBCInput_30.containsKey("errorMessage")){
						errorMessage_tJDBCInput_30 = info_tJDBCInput_30.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_30 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_30 = "Row "+ nb_line_tJDBCInput_30 + ": "+errorMessage_tJDBCInput_30;
					System.err.println(errorMessage_tJDBCInput_30);
				
					// If the record is reject, the main line record should put NULL
					row29 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_30 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_30 = null;


 



/**
 * [tJDBCInput_30 begin ] stop
 */
	
	/**
	 * [tJDBCInput_30 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_30";

	


 


	tos_count_tJDBCInput_30++;

/**
 * [tJDBCInput_30 main ] stop
 */
	
	/**
	 * [tJDBCInput_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_30";

	


 



/**
 * [tJDBCInput_30 process_data_begin ] stop
 */

	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_21 = false;
		  boolean mainRowRejected_tMap_21 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row28" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow28 = false;
       		  	    	
       		  	    	
 							row28Struct row28ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_21) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_21 = false;
								
                        		    		    row28HashKey.vm_interface_join_id = row29.vm_interface_join_id ;
                        		    		

								
		                        	row28HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row28.lookup( row28HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row28.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_21 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row28 != null && tHash_Lookup_row28.getCount(row28HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row28' and it contains more one result from keys :  row28.vm_interface_join_id = '" + row28HashKey.vm_interface_join_id + "'");
								} // G 071
							

							row28Struct row28 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row28Struct fromLookup_row28 = null;
							row28 = row28Default;
										 
							
								 
							
							
								if (tHash_Lookup_row28 !=null && tHash_Lookup_row28.hasNext()) { // G 099
								
							
								
								fromLookup_row28 = tHash_Lookup_row28.next();

							
							
								} // G 099
							
							

							if(fromLookup_row28 != null) {
								row28 = fromLookup_row28;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
        // ###############################
        // # Output tables

delete_vm_interface = null;

if(!rejectedInnerJoin_tMap_21 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_vm_interface'
// # Filter conditions 
if( rejectedInnerJoin_tMap_21 ) {
delete_vm_interface_tmp.vm_interface_id = row29.vm_interface_id;
delete_vm_interface_tmp.vm_interface_name = row29.vm_interface_name;
delete_vm_interface_tmp.vm_interface_type = row29.vm_interface_type ;
delete_vm_interface_tmp.vm_interface_speed_bps = row29.vm_interface_speed_bps ;
delete_vm_interface_tmp.mac_address = row29.mac_address;
delete_vm_interface_tmp.logical_network_name = row29.logical_network_name;
delete_vm_interface_tmp.vm_configuration_version = row29.vm_configuration_version;
delete_vm_interface_tmp.create_date = row29.create_date;
delete_vm_interface_tmp.update_date = context.runTime;
delete_vm_interface_tmp.delete_date = context.runTime;
delete_vm_interface = delete_vm_interface_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";

	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "delete_vm_interface"
if(delete_vm_interface != null) { 



	
	/**
	 * [tJDBCOutput_21 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_vm_interface"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_21 != null) {
            incomingEnforcer_tJDBCOutput_21.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("vm_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_21.put("vm_interface_id", delete_vm_interface.vm_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("vm_interface_name") != null){
                    incomingEnforcer_tJDBCOutput_21.put("vm_interface_name", delete_vm_interface.vm_interface_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("vm_interface_type") != null){
                    incomingEnforcer_tJDBCOutput_21.put("vm_interface_type", delete_vm_interface.vm_interface_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("vm_interface_speed_bps") != null){
                    incomingEnforcer_tJDBCOutput_21.put("vm_interface_speed_bps", delete_vm_interface.vm_interface_speed_bps);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("mac_address") != null){
                    incomingEnforcer_tJDBCOutput_21.put("mac_address", delete_vm_interface.mac_address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("logical_network_name") != null){
                    incomingEnforcer_tJDBCOutput_21.put("logical_network_name", delete_vm_interface.logical_network_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("vm_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_21.put("vm_configuration_version", delete_vm_interface.vm_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_21.put("create_date", delete_vm_interface.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_21.put("update_date", delete_vm_interface.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_21.put("delete_date", delete_vm_interface.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_21 = null;
        if (incomingEnforcer_tJDBCOutput_21 != null) {
            data_tJDBCOutput_21 = incomingEnforcer_tJDBCOutput_21.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_21 != null && data_tJDBCOutput_21 != null) {
        	writer_tJDBCOutput_21.write(data_tJDBCOutput_21);
        }
        
        nb_line_tJDBCOutput_21++;

 


	tos_count_tJDBCOutput_21++;

/**
 * [tJDBCOutput_21 main ] stop
 */
	
	/**
	 * [tJDBCOutput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	


 



/**
 * [tJDBCOutput_21 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	


 



/**
 * [tJDBCOutput_21 process_data_end ] stop
 */

} // End of branch "delete_vm_interface"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";

	

 



/**
 * [tMap_21 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_30";

	


 



/**
 * [tJDBCInput_30 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_30 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_30";

	
// end of generic


resourceMap.put("finish_tJDBCInput_30", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_30 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_30 = null;
    if (reader_tJDBCInput_30 != null) {
        reader_tJDBCInput_30.close();
        resultMap_tJDBCInput_30 = reader_tJDBCInput_30.getReturnValues();
    }
if(resultMap_tJDBCInput_30!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_30 : resultMap_tJDBCInput_30.entrySet()) {
		switch(entry_tJDBCInput_30.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_30.setComponentData("tJDBCInput_30", "ERROR_MESSAGE", entry_tJDBCInput_30.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_30.setComponentData("tJDBCInput_30", "NB_LINE", entry_tJDBCInput_30.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_30.setComponentData("tJDBCInput_30", "NB_SUCCESS", entry_tJDBCInput_30.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_30.setComponentData("tJDBCInput_30", "NB_REJECT", entry_tJDBCInput_30.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_30 = new StringBuilder();
            for (int i_tJDBCInput_30 = 0; i_tJDBCInput_30 < entry_tJDBCInput_30.getKey().length(); i_tJDBCInput_30++) {
                char ch_tJDBCInput_30 = entry_tJDBCInput_30.getKey().charAt(i_tJDBCInput_30);
                if(Character.isUpperCase(ch_tJDBCInput_30) && i_tJDBCInput_30> 0) {
                	studio_key_tJDBCInput_30.append('_');
                }
                studio_key_tJDBCInput_30.append(ch_tJDBCInput_30);
            }
			container_tJDBCInput_30.setComponentData("tJDBCInput_30", studio_key_tJDBCInput_30.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_30.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_30", true);
end_Hash.put("tJDBCInput_30", System.currentTimeMillis());




/**
 * [tJDBCInput_30 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row28 != null) {
						tHash_Lookup_row28.endGet();
					}
					globalMap.remove( "tHash_Lookup_row28" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */

	
	/**
	 * [tJDBCOutput_21 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_21", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_21 = null;
    if (writer_tJDBCOutput_21 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_21 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_21.close();
        resultMap_tJDBCOutput_21 = writer_tJDBCOutput_21.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_21), container_tJDBCOutput_21);
    }
if(resultMap_tJDBCOutput_21!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_21 : resultMap_tJDBCOutput_21.entrySet()) {
		switch(entry_tJDBCOutput_21.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "ERROR_MESSAGE", entry_tJDBCOutput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "NB_LINE", entry_tJDBCOutput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "NB_SUCCESS", entry_tJDBCOutput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "NB_REJECT", entry_tJDBCOutput_21.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_21 = new StringBuilder();
            for (int i_tJDBCOutput_21 = 0; i_tJDBCOutput_21 < entry_tJDBCOutput_21.getKey().length(); i_tJDBCOutput_21++) {
                char ch_tJDBCOutput_21 = entry_tJDBCOutput_21.getKey().charAt(i_tJDBCOutput_21);
                if(Character.isUpperCase(ch_tJDBCOutput_21) && i_tJDBCOutput_21> 0) {
                	studio_key_tJDBCOutput_21.append('_');
                }
                studio_key_tJDBCOutput_21.append(ch_tJDBCOutput_21);
            }
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", studio_key_tJDBCOutput_21.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_21.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_vm_interface");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_21", true);
end_Hash.put("tJDBCOutput_21", System.currentTimeMillis());




/**
 * [tJDBCOutput_21 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_30:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk201", 0, "ok");
								} 
							
							tJDBCInput_53Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_21"
					     			globalMap.remove("tHash_Lookup_row28"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_30 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_30";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_30")==null){
    if(resourceMap.get("reader_tJDBCInput_30")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_30")).close();
		} catch (java.io.IOException e_tJDBCInput_30) {
			String errorMessage_tJDBCInput_30 = "failed to release the resource in tJDBCInput_30 :" + e_tJDBCInput_30.getMessage();
			System.err.println(errorMessage_tJDBCInput_30);
		}
	}
}
 



/**
 * [tJDBCInput_30 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";

	

 



/**
 * [tMap_21 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_21 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_21")==null){
    if(resourceMap.get("writer_tJDBCOutput_21")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_21")).close();
		} catch (java.io.IOException e_tJDBCOutput_21) {
			String errorMessage_tJDBCOutput_21 = "failed to release the resource in tJDBCOutput_21 :" + e_tJDBCOutput_21.getMessage();
			System.err.println(errorMessage_tJDBCOutput_21);
		}
	}
}
 



/**
 * [tJDBCOutput_21 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_30_SUBPROCESS_STATE", 1);
	}
	


public static class insert_new_vm_device_connectionStruct implements routines.system.IPersistableRow<insert_new_vm_device_connectionStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public Object device_id;

				public Object getDevice_id () {
					return this.device_id;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String address;

				public String getAddress () {
					return this.address;
				}
				
			    public boolean is_managed;

				public boolean getIs_managed () {
					return this.is_managed;
				}
				
			    public Boolean is_plugged;

				public Boolean getIs_plugged () {
					return this.is_plugged;
				}
				
			    public boolean is_readonly;

				public boolean getIs_readonly () {
					return this.is_readonly;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer device_configuration_version;

				public Integer getDevice_configuration_version () {
					return this.device_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
						this.device_id = (Object) dis.readObject();
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			        this.is_managed = dis.readBoolean();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			        this.is_readonly = dis.readBoolean();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
						this.device_id = (Object) dis.readObject();
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			        this.is_managed = dis.readBoolean();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			        this.is_readonly = dis.readBoolean();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.is_managed);
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// boolean
				
		            	dos.writeBoolean(this.is_readonly);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.is_managed);
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// boolean
				
		            	dos.writeBoolean(this.is_readonly);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",device_id="+String.valueOf(device_id));
		sb.append(",type="+type);
		sb.append(",address="+address);
		sb.append(",is_managed="+String.valueOf(is_managed));
		sb.append(",is_plugged="+String.valueOf(is_plugged));
		sb.append(",is_readonly="+String.valueOf(is_readonly));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",device_configuration_version="+String.valueOf(device_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_new_vm_device_connectionStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object device_id;

				public Object getDevice_id () {
					return this.device_id;
				}
				
			    public String device_join_id;

				public String getDevice_join_id () {
					return this.device_join_id;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String address;

				public String getAddress () {
					return this.address;
				}
				
			    public Boolean is_managed;

				public Boolean getIs_managed () {
					return this.is_managed;
				}
				
			    public Boolean is_plugged;

				public Boolean getIs_plugged () {
					return this.is_plugged;
				}
				
			    public Boolean is_readonly;

				public Boolean getIs_readonly () {
					return this.is_readonly;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("device_id="+String.valueOf(device_id));
		sb.append(",device_join_id="+device_join_id);
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",type="+type);
		sb.append(",address="+address);
		sb.append(",is_managed="+String.valueOf(is_managed));
		sb.append(",is_plugged="+String.valueOf(is_plugged));
		sb.append(",is_readonly="+String.valueOf(is_readonly));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_53Struct implements routines.system.IPersistableRow<after_tJDBCInput_53Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object device_id;

				public Object getDevice_id () {
					return this.device_id;
				}
				
			    public String device_join_id;

				public String getDevice_join_id () {
					return this.device_join_id;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String address;

				public String getAddress () {
					return this.address;
				}
				
			    public Boolean is_managed;

				public Boolean getIs_managed () {
					return this.is_managed;
				}
				
			    public Boolean is_plugged;

				public Boolean getIs_plugged () {
					return this.is_plugged;
				}
				
			    public Boolean is_readonly;

				public Boolean getIs_readonly () {
					return this.is_readonly;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("device_id="+String.valueOf(device_id));
		sb.append(",device_join_id="+device_join_id);
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",type="+type);
		sb.append(",address="+address);
		sb.append(",is_managed="+String.valueOf(is_managed));
		sb.append(",is_plugged="+String.valueOf(is_plugged));
		sb.append(",is_readonly="+String.valueOf(is_readonly));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_53Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_53Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_53_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_54Process(globalMap);
		tJDBCInput_65Process(globalMap);
		tJDBCInput_66Process(globalMap);

		row45Struct row45 = new row45Struct();
insert_new_vm_device_connectionStruct insert_new_vm_device_connection = new insert_new_vm_device_connectionStruct();





	
	/**
	 * [tJDBCOutput_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_31", false);
		start_Hash.put("tJDBCOutput_31", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_31";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_new_vm_device_connection");
					}
				
		int tos_count_tJDBCOutput_31 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_31 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_31 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_31 = (String)(restRequest_tJDBCOutput_31 != null ? restRequest_tJDBCOutput_31.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_31 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_31 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_31 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_31 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_31.createRuntimeProperties();
 		                    props_tJDBCOutput_31.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_31.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_31.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_31.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_31.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_31.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_31.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_31.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_31.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_31.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_31.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_31.tableSelection.setValue("tablename",
 		                    "vm_device_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_31_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_device\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"device_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_31\",\"di.table.label\":\"vm_device\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_31_1_fisrt sst_tJDBCOutput_31_1_fisrt = new SchemaSettingTool_tJDBCOutput_31_1_fisrt();
 		                    
 		                    props_tJDBCOutput_31.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_31_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_31_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_device\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"device_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_31\",\"di.table.label\":\"vm_device\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_31_2_fisrt sst_tJDBCOutput_31_2_fisrt = new SchemaSettingTool_tJDBCOutput_31_2_fisrt();
 		                    
 		                    props_tJDBCOutput_31.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_31_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_31_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"device_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_31\",\"di.table.label\":\"vm_device\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_31_3_fisrt sst_tJDBCOutput_31_3_fisrt = new SchemaSettingTool_tJDBCOutput_31_3_fisrt();
 		                    
 		                    props_tJDBCOutput_31.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_31_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_31.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_31.additionalColumns.setValue("referenceColumns",
 		                    "vm_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_31.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_31 = props_tJDBCOutput_31.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_31 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_31 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_31 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_31.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_31);
        }
    }
globalMap.put("tJDBCOutput_31_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_31);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_31= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_31_MAPPINGS_URL", mappings_url_tJDBCOutput_31);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_31 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_31";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_31 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_31 = null;
topology_tJDBCOutput_31 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_31 = def_tJDBCOutput_31.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_31, topology_tJDBCOutput_31);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_31 = def_tJDBCOutput_31.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_31 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_31.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_31 = componentRuntime_tJDBCOutput_31.initialize(container_tJDBCOutput_31, props_tJDBCOutput_31);

if (initVr_tJDBCOutput_31.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_31.getMessage());
}

if(componentRuntime_tJDBCOutput_31 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_31 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_31;
	compDriverInitialization_tJDBCOutput_31.runAtDriver(container_tJDBCOutput_31);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_31 = null;
if(componentRuntime_tJDBCOutput_31 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_31 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_31;
	if (doesNodeBelongToRequest_tJDBCOutput_31) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_31 = sourceOrSink_tJDBCOutput_31.validate(container_tJDBCOutput_31);
        if (vr_tJDBCOutput_31.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_31.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_31 = null;
    if (sourceOrSink_tJDBCOutput_31 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_31 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_31;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_31 = sink_tJDBCOutput_31.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_31) {
            writeOperation_tJDBCOutput_31.initialize(container_tJDBCOutput_31);
        }
        writer_tJDBCOutput_31 = writeOperation_tJDBCOutput_31.createWriter(container_tJDBCOutput_31);
        if (doesNodeBelongToRequest_tJDBCOutput_31) {
            writer_tJDBCOutput_31.open("tJDBCOutput_31");
        }

        resourceMap.put("writer_tJDBCOutput_31", writer_tJDBCOutput_31);
    } // end of "sourceOrSink_tJDBCOutput_31 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_31 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_31.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_31 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_31 = props_tJDBCOutput_31.getSchema(c_tJDBCOutput_31, false);
    incomingEnforcer_tJDBCOutput_31 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_31);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_31 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_31 = null;


 



/**
 * [tJDBCOutput_31 begin ] stop
 */



	
	/**
	 * [tMap_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_31", false);
		start_Hash.put("tMap_31", System.currentTimeMillis());
		
	
	currentComponent="tMap_31";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tMap_31 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct> tHash_Lookup_row46 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct>) 
					globalMap.get( "tHash_Lookup_row46" ))
					;					
					
	

row46Struct row46HashKey = new row46Struct();
row46Struct row46Default = new row46Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct> tHash_Lookup_row53 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct>) 
					globalMap.get( "tHash_Lookup_row53" ))
					;					
					
	

row53Struct row53HashKey = new row53Struct();
row53Struct row53Default = new row53Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
					globalMap.get( "tHash_Lookup_row54" ))
					;					
					
	

row54Struct row54HashKey = new row54Struct();
row54Struct row54Default = new row54Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_31__Struct  {
}
Var__tMap_31__Struct Var__tMap_31 = new Var__tMap_31__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_new_vm_device_connectionStruct insert_new_vm_device_connection_tmp = new insert_new_vm_device_connectionStruct();
// ###############################

        
        



        









 



/**
 * [tMap_31 begin ] stop
 */



	
	/**
	 * [tJDBCInput_53 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_53", false);
		start_Hash.put("tJDBCInput_53", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_53";

	
		int tos_count_tJDBCInput_53 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_53 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_53 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_53 = (String)(restRequest_tJDBCInput_53 != null ? restRequest_tJDBCInput_53.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_53 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_53 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_53 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_53 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_53.createRuntimeProperties();
 		                    props_tJDBCInput_53.setValue("sql",
 		                    "SELECT \n  device_id,\n  upper(cast(device_id as char(36))) as device_join_id,\n  vm_id,\n  upper(cast(vm_id as char(36))) "
+"as vm_join_id,\n  type, \n  address, \n  is_managed, \n  is_plugged, \n  is_readonly,\n  create_date,\n  update_date\nFROM dwh_v"
+"m_device_history_view");
 		                    
 		                    props_tJDBCInput_53.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_53.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_53.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_53.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_53.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_53.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_53.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_53.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_53.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_53_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_vm_device_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"device_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_53\",\"di.table.label\":\"dwh_vm_device_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_53_1_fisrt sst_tJDBCInput_53_1_fisrt = new SchemaSettingTool_tJDBCInput_53_1_fisrt();
 		                    
 		                    props_tJDBCInput_53.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_53_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_53.tableSelection.setValue("tablename",
 		                    "dwh_vm_device_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_53_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_53_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_53.trimTable).setValue("trim",tJDBCInput_53_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_53_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_53_trimTable_columnName.add("device_id");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("device_join_id");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("vm_join_id");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("type");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("address");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("is_managed");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("is_plugged");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("is_readonly");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_53_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_53.trimTable).setValue("columnName",tJDBCInput_53_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_53.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_53 = props_tJDBCInput_53.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_53 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_53 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_53 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_53.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_53);
        }
    }
globalMap.put("tJDBCInput_53_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_53);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_53= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_53_MAPPINGS_URL", mappings_url_tJDBCInput_53);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_53 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_53";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_53 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_53 = null;
topology_tJDBCInput_53 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_53 = def_tJDBCInput_53.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_53, topology_tJDBCInput_53);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_53 = def_tJDBCInput_53.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_53 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_53.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_53 = componentRuntime_tJDBCInput_53.initialize(container_tJDBCInput_53, props_tJDBCInput_53);

if (initVr_tJDBCInput_53.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_53.getMessage());
}

if(componentRuntime_tJDBCInput_53 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_53 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_53;
	compDriverInitialization_tJDBCInput_53.runAtDriver(container_tJDBCInput_53);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_53 = null;
if(componentRuntime_tJDBCInput_53 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_53 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_53;
	if (doesNodeBelongToRequest_tJDBCInput_53) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_53 = sourceOrSink_tJDBCInput_53.validate(container_tJDBCInput_53);
        if (vr_tJDBCInput_53.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_53.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_53 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_53 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_53;
        reader_tJDBCInput_53 = source_tJDBCInput_53.createReader(container_tJDBCInput_53);
	    reader_tJDBCInput_53 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_53, container_tJDBCInput_53);

            boolean multi_output_is_allowed_tJDBCInput_53 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_53 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_53.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_53 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_53 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_53 = props_tJDBCInput_53.getSchema(c_tJDBCInput_53, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_53 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_53, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_53 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_53 = reader_tJDBCInput_53.start();

        resourceMap.put("reader_tJDBCInput_53", reader_tJDBCInput_53);

        for (; available_tJDBCInput_53; available_tJDBCInput_53 = reader_tJDBCInput_53.advance()) {
			nb_line_tJDBCInput_53++;

			
			if (multi_output_is_allowed_tJDBCInput_53) {
				
					row45 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_53 = reader_tJDBCInput_53.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_53) {
						row45 = new row45Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_53 == null) {
            factory_tJDBCInput_53 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_53.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_53.setWrapped(factory_tJDBCInput_53.convertToAvro(data_tJDBCInput_53));
                Object columnValue_0_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(0);
                        row45.device_id = (Object) (columnValue_0_tJDBCInput_53);
                Object columnValue_1_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(1);
                        row45.device_join_id = (String) (columnValue_1_tJDBCInput_53);
                Object columnValue_2_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(2);
                        row45.vm_id = (Object) (columnValue_2_tJDBCInput_53);
                Object columnValue_3_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(3);
                        row45.vm_join_id = (String) (columnValue_3_tJDBCInput_53);
                Object columnValue_4_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(4);
                        row45.type = (String) (columnValue_4_tJDBCInput_53);
                Object columnValue_5_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(5);
                        row45.address = (String) (columnValue_5_tJDBCInput_53);
                Object columnValue_6_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(6);
                        row45.is_managed = (Boolean) (columnValue_6_tJDBCInput_53);
                Object columnValue_7_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(7);
                        row45.is_plugged = (Boolean) (columnValue_7_tJDBCInput_53);
                Object columnValue_8_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(8);
                        row45.is_readonly = (Boolean) (columnValue_8_tJDBCInput_53);
                Object columnValue_9_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(9);
                        row45.create_date = (java.util.Date) (columnValue_9_tJDBCInput_53);
                Object columnValue_10_tJDBCInput_53 = outgoingEnforcer_tJDBCInput_53.get(10);
                        row45.update_date = (java.util.Date) (columnValue_10_tJDBCInput_53);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_53) {
				java.util.Map<String,Object> info_tJDBCInput_53 = e_tJDBCInput_53.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_53 = null;
					if(info_tJDBCInput_53.containsKey("error")){
						errorMessage_tJDBCInput_53 = info_tJDBCInput_53.get("error");
					}else if(info_tJDBCInput_53.containsKey("errorMessage")){
						errorMessage_tJDBCInput_53 = info_tJDBCInput_53.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_53 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_53 = "Row "+ nb_line_tJDBCInput_53 + ": "+errorMessage_tJDBCInput_53;
					System.err.println(errorMessage_tJDBCInput_53);
				
					// If the record is reject, the main line record should put NULL
					row45 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_53 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_53 = null;


 



/**
 * [tJDBCInput_53 begin ] stop
 */
	
	/**
	 * [tJDBCInput_53 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_53";

	


 


	tos_count_tJDBCInput_53++;

/**
 * [tJDBCInput_53 main ] stop
 */
	
	/**
	 * [tJDBCInput_53 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_53";

	


 



/**
 * [tJDBCInput_53 process_data_begin ] stop
 */

	
	/**
	 * [tMap_31 main ] start
	 */

	

	
	
	currentComponent="tMap_31";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_31 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_31 = false;
		  boolean mainRowRejected_tMap_31 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row45.update_date == null ? TalendDate.compareDate(row45.create_date,context.runTime) <=0 : TalendDate.compareDate(row45.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row45'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row46" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow46 = false;
       		  	    	
       		  	    	
 							row46Struct row46ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_31) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_31 = false;
								
                        		    		    row46HashKey.vm_join_id = row45.vm_join_id ;
                        		    		

								
		                        	row46HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row46.lookup( row46HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row46 != null && tHash_Lookup_row46.getCount(row46HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row46' and it contains more one result from keys :  row46.vm_join_id = '" + row46HashKey.vm_join_id + "'");
								} // G 071
							

							row46Struct row46 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row46Struct fromLookup_row46 = null;
							row46 = row46Default;
										 
							
								 
							
							
								if (tHash_Lookup_row46 !=null && tHash_Lookup_row46.hasNext()) { // G 099
								
							
								
								fromLookup_row46 = tHash_Lookup_row46.next();

							
							
								} // G 099
							
							

							if(fromLookup_row46 != null) {
								row46 = fromLookup_row46;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row53" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow53 = false;
       		  	    	
       		  	    	
 							row53Struct row53ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_31) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_31 = false;
								
                        		    		    row53HashKey.vm_interface_join_id = row45.device_join_id ;
                        		    		

								
		                        	row53HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row53.lookup( row53HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row53 != null && tHash_Lookup_row53.getCount(row53HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row53' and it contains more one result from keys :  row53.vm_interface_join_id = '" + row53HashKey.vm_interface_join_id + "'");
								} // G 071
							

							row53Struct row53 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row53Struct fromLookup_row53 = null;
							row53 = row53Default;
										 
							
								 
							
							
								if (tHash_Lookup_row53 !=null && tHash_Lookup_row53.hasNext()) { // G 099
								
							
								
								fromLookup_row53 = tHash_Lookup_row53.next();

							
							
								} // G 099
							
							

							if(fromLookup_row53 != null) {
								row53 = fromLookup_row53;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row54" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow54 = false;
       		  	    	
       		  	    	
 							row54Struct row54ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_31) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_31 = false;
								
                        		    		    row54HashKey.vm_disk_join_id = row45.device_join_id ;
                        		    		

								
		                        	row54HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row54.lookup( row54HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row54 != null && tHash_Lookup_row54.getCount(row54HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row54' and it contains more one result from keys :  row54.vm_disk_join_id = '" + row54HashKey.vm_disk_join_id + "'");
								} // G 071
							

							row54Struct row54 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row54Struct fromLookup_row54 = null;
							row54 = row54Default;
										 
							
								 
							
							
								if (tHash_Lookup_row54 !=null && tHash_Lookup_row54.hasNext()) { // G 099
								
							
								
								fromLookup_row54 = tHash_Lookup_row54.next();

							
							
								} // G 099
							
							

							if(fromLookup_row54 != null) {
								row54 = fromLookup_row54;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_31__Struct Var = Var__tMap_31;// ###############################
        // ###############################
        // # Output tables

insert_new_vm_device_connection = null;


// # Output table : 'insert_new_vm_device_connection'
insert_new_vm_device_connection_tmp.vm_id = row45.vm_id ;
insert_new_vm_device_connection_tmp.device_id = row45.device_id;
insert_new_vm_device_connection_tmp.type = row45.type;
insert_new_vm_device_connection_tmp.address = row45.address;
insert_new_vm_device_connection_tmp.is_managed = row45.is_managed;
insert_new_vm_device_connection_tmp.is_plugged = row45.is_plugged;
insert_new_vm_device_connection_tmp.is_readonly = row45.is_readonly;
insert_new_vm_device_connection_tmp.vm_configuration_version = row46.history_id ;
insert_new_vm_device_connection_tmp.device_configuration_version = row53.history_id != null ? row53.history_id : row54.history_id ;
insert_new_vm_device_connection_tmp.create_date = row45.create_date;
insert_new_vm_device_connection_tmp.update_date = row45.update_date;
insert_new_vm_device_connection_tmp.delete_date = null;
insert_new_vm_device_connection = insert_new_vm_device_connection_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_31 = false;










 


	tos_count_tMap_31++;

/**
 * [tMap_31 main ] stop
 */
	
	/**
	 * [tMap_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_31";

	

 



/**
 * [tMap_31 process_data_begin ] stop
 */
// Start of branch "insert_new_vm_device_connection"
if(insert_new_vm_device_connection != null) { 



	
	/**
	 * [tJDBCOutput_31 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_31";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_new_vm_device_connection"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_31 != null) {
            incomingEnforcer_tJDBCOutput_31.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_31.put("vm_id", insert_new_vm_device_connection.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("device_id") != null){
                    incomingEnforcer_tJDBCOutput_31.put("device_id", insert_new_vm_device_connection.device_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("type") != null){
                    incomingEnforcer_tJDBCOutput_31.put("type", insert_new_vm_device_connection.type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("address") != null){
                    incomingEnforcer_tJDBCOutput_31.put("address", insert_new_vm_device_connection.address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("is_managed") != null){
                    incomingEnforcer_tJDBCOutput_31.put("is_managed", insert_new_vm_device_connection.is_managed);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("is_plugged") != null){
                    incomingEnforcer_tJDBCOutput_31.put("is_plugged", insert_new_vm_device_connection.is_plugged);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("is_readonly") != null){
                    incomingEnforcer_tJDBCOutput_31.put("is_readonly", insert_new_vm_device_connection.is_readonly);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("vm_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_31.put("vm_configuration_version", insert_new_vm_device_connection.vm_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("device_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_31.put("device_configuration_version", insert_new_vm_device_connection.device_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_31.put("create_date", insert_new_vm_device_connection.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_31.put("update_date", insert_new_vm_device_connection.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_31 != null && incomingEnforcer_tJDBCOutput_31.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_31.put("delete_date", insert_new_vm_device_connection.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_31 = null;
        if (incomingEnforcer_tJDBCOutput_31 != null) {
            data_tJDBCOutput_31 = incomingEnforcer_tJDBCOutput_31.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_31 != null && data_tJDBCOutput_31 != null) {
        	writer_tJDBCOutput_31.write(data_tJDBCOutput_31);
        }
        
        nb_line_tJDBCOutput_31++;

 


	tos_count_tJDBCOutput_31++;

/**
 * [tJDBCOutput_31 main ] stop
 */
	
	/**
	 * [tJDBCOutput_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_31";

	


 



/**
 * [tJDBCOutput_31 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_31";

	


 



/**
 * [tJDBCOutput_31 process_data_end ] stop
 */

} // End of branch "insert_new_vm_device_connection"



	
		} // G_TM_M_280 close main tMap filter for table 'row45'
	
	
	/**
	 * [tMap_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_31";

	

 



/**
 * [tMap_31 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_53 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_53";

	


 



/**
 * [tJDBCInput_53 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_53 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_53";

	
// end of generic


resourceMap.put("finish_tJDBCInput_53", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_53 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_53 = null;
    if (reader_tJDBCInput_53 != null) {
        reader_tJDBCInput_53.close();
        resultMap_tJDBCInput_53 = reader_tJDBCInput_53.getReturnValues();
    }
if(resultMap_tJDBCInput_53!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_53 : resultMap_tJDBCInput_53.entrySet()) {
		switch(entry_tJDBCInput_53.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_53.setComponentData("tJDBCInput_53", "ERROR_MESSAGE", entry_tJDBCInput_53.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_53.setComponentData("tJDBCInput_53", "NB_LINE", entry_tJDBCInput_53.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_53.setComponentData("tJDBCInput_53", "NB_SUCCESS", entry_tJDBCInput_53.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_53.setComponentData("tJDBCInput_53", "NB_REJECT", entry_tJDBCInput_53.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_53 = new StringBuilder();
            for (int i_tJDBCInput_53 = 0; i_tJDBCInput_53 < entry_tJDBCInput_53.getKey().length(); i_tJDBCInput_53++) {
                char ch_tJDBCInput_53 = entry_tJDBCInput_53.getKey().charAt(i_tJDBCInput_53);
                if(Character.isUpperCase(ch_tJDBCInput_53) && i_tJDBCInput_53> 0) {
                	studio_key_tJDBCInput_53.append('_');
                }
                studio_key_tJDBCInput_53.append(ch_tJDBCInput_53);
            }
			container_tJDBCInput_53.setComponentData("tJDBCInput_53", studio_key_tJDBCInput_53.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_53.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_53", true);
end_Hash.put("tJDBCInput_53", System.currentTimeMillis());




/**
 * [tJDBCInput_53 end ] stop
 */

	
	/**
	 * [tMap_31 end ] start
	 */

	

	
	
	currentComponent="tMap_31";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row46 != null) {
						tHash_Lookup_row46.endGet();
					}
					globalMap.remove( "tHash_Lookup_row46" );

					
					
				
					if(tHash_Lookup_row53 != null) {
						tHash_Lookup_row53.endGet();
					}
					globalMap.remove( "tHash_Lookup_row53" );

					
					
				
					if(tHash_Lookup_row54 != null) {
						tHash_Lookup_row54.endGet();
					}
					globalMap.remove( "tHash_Lookup_row54" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tMap_31", true);
end_Hash.put("tMap_31", System.currentTimeMillis());




/**
 * [tMap_31 end ] stop
 */

	
	/**
	 * [tJDBCOutput_31 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_31";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_31", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_31 = null;
    if (writer_tJDBCOutput_31 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_31 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_31.close();
        resultMap_tJDBCOutput_31 = writer_tJDBCOutput_31.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_31), container_tJDBCOutput_31);
    }
if(resultMap_tJDBCOutput_31!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_31 : resultMap_tJDBCOutput_31.entrySet()) {
		switch(entry_tJDBCOutput_31.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_31.setComponentData("tJDBCOutput_31", "ERROR_MESSAGE", entry_tJDBCOutput_31.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_31.setComponentData("tJDBCOutput_31", "NB_LINE", entry_tJDBCOutput_31.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_31.setComponentData("tJDBCOutput_31", "NB_SUCCESS", entry_tJDBCOutput_31.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_31.setComponentData("tJDBCOutput_31", "NB_REJECT", entry_tJDBCOutput_31.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_31 = new StringBuilder();
            for (int i_tJDBCOutput_31 = 0; i_tJDBCOutput_31 < entry_tJDBCOutput_31.getKey().length(); i_tJDBCOutput_31++) {
                char ch_tJDBCOutput_31 = entry_tJDBCOutput_31.getKey().charAt(i_tJDBCOutput_31);
                if(Character.isUpperCase(ch_tJDBCOutput_31) && i_tJDBCOutput_31> 0) {
                	studio_key_tJDBCOutput_31.append('_');
                }
                studio_key_tJDBCOutput_31.append(ch_tJDBCOutput_31);
            }
			container_tJDBCOutput_31.setComponentData("tJDBCOutput_31", studio_key_tJDBCOutput_31.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_31.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_new_vm_device_connection");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_31", true);
end_Hash.put("tJDBCOutput_31", System.currentTimeMillis());




/**
 * [tJDBCOutput_31 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_53:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk191", 0, "ok");
								} 
							
							tJDBCInput_56Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_31"
					     			globalMap.remove("tHash_Lookup_row46"); 
				     			
					     			//free memory for "tMap_31"
					     			globalMap.remove("tHash_Lookup_row53"); 
				     			
					     			//free memory for "tMap_31"
					     			globalMap.remove("tHash_Lookup_row54"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_53 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_53";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_53")==null){
    if(resourceMap.get("reader_tJDBCInput_53")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_53")).close();
		} catch (java.io.IOException e_tJDBCInput_53) {
			String errorMessage_tJDBCInput_53 = "failed to release the resource in tJDBCInput_53 :" + e_tJDBCInput_53.getMessage();
			System.err.println(errorMessage_tJDBCInput_53);
		}
	}
}
 



/**
 * [tJDBCInput_53 finally ] stop
 */

	
	/**
	 * [tMap_31 finally ] start
	 */

	

	
	
	currentComponent="tMap_31";

	

 



/**
 * [tMap_31 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_31 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_31";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_31")==null){
    if(resourceMap.get("writer_tJDBCOutput_31")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_31")).close();
		} catch (java.io.IOException e_tJDBCOutput_31) {
			String errorMessage_tJDBCOutput_31 = "failed to release the resource in tJDBCOutput_31 :" + e_tJDBCOutput_31.getMessage();
			System.err.println(errorMessage_tJDBCOutput_31);
		}
	}
}
 



/**
 * [tJDBCOutput_31 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_53_SUBPROCESS_STATE", 1);
	}
	


public static class delete_vm_device_connectionStruct implements routines.system.IPersistableRow<delete_vm_device_connectionStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public Object device_id;

				public Object getDevice_id () {
					return this.device_id;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String address;

				public String getAddress () {
					return this.address;
				}
				
			    public boolean is_managed;

				public boolean getIs_managed () {
					return this.is_managed;
				}
				
			    public Boolean is_plugged;

				public Boolean getIs_plugged () {
					return this.is_plugged;
				}
				
			    public boolean is_readonly;

				public boolean getIs_readonly () {
					return this.is_readonly;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer device_configuration_version;

				public Integer getDevice_configuration_version () {
					return this.device_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_id == null) ? 0 : this.vm_id.hashCode());
					
						result = prime * result + ((this.device_id == null) ? 0 : this.device_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final delete_vm_device_connectionStruct other = (delete_vm_device_connectionStruct) obj;
		
						if (this.vm_id == null) {
							if (other.vm_id != null)
								return false;
						
						} else if (!this.vm_id.equals(other.vm_id))
						
							return false;
					
						if (this.device_id == null) {
							if (other.device_id != null)
								return false;
						
						} else if (!this.device_id.equals(other.device_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(delete_vm_device_connectionStruct other) {

		other.vm_id = this.vm_id;
	            other.device_id = this.device_id;
	            other.type = this.type;
	            other.address = this.address;
	            other.is_managed = this.is_managed;
	            other.is_plugged = this.is_plugged;
	            other.is_readonly = this.is_readonly;
	            other.vm_configuration_version = this.vm_configuration_version;
	            other.device_configuration_version = this.device_configuration_version;
	            other.create_date = this.create_date;
	            other.update_date = this.update_date;
	            other.delete_date = this.delete_date;
	            
	}

	public void copyKeysDataTo(delete_vm_device_connectionStruct other) {

		other.vm_id = this.vm_id;
	            	other.device_id = this.device_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
						this.device_id = (Object) dis.readObject();
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			        this.is_managed = dis.readBoolean();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			        this.is_readonly = dis.readBoolean();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
						this.device_id = (Object) dis.readObject();
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			        this.is_managed = dis.readBoolean();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			        this.is_readonly = dis.readBoolean();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.is_managed);
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// boolean
				
		            	dos.writeBoolean(this.is_readonly);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.is_managed);
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// boolean
				
		            	dos.writeBoolean(this.is_readonly);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",device_id="+String.valueOf(device_id));
		sb.append(",type="+type);
		sb.append(",address="+address);
		sb.append(",is_managed="+String.valueOf(is_managed));
		sb.append(",is_plugged="+String.valueOf(is_plugged));
		sb.append(",is_readonly="+String.valueOf(is_readonly));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",device_configuration_version="+String.valueOf(device_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_vm_device_connectionStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_id, other.vm_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.device_id, other.device_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row48Struct implements routines.system.IPersistableRow<row48Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public Object device_id;

				public Object getDevice_id () {
					return this.device_id;
				}
				
			    public String device_join_id;

				public String getDevice_join_id () {
					return this.device_join_id;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String address;

				public String getAddress () {
					return this.address;
				}
				
			    public Boolean is_managed;

				public Boolean getIs_managed () {
					return this.is_managed;
				}
				
			    public Boolean is_plugged;

				public Boolean getIs_plugged () {
					return this.is_plugged;
				}
				
			    public Boolean is_readonly;

				public Boolean getIs_readonly () {
					return this.is_readonly;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer device_configuration_version;

				public Integer getDevice_configuration_version () {
					return this.device_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",device_id="+String.valueOf(device_id));
		sb.append(",device_join_id="+device_join_id);
		sb.append(",type="+type);
		sb.append(",address="+address);
		sb.append(",is_managed="+String.valueOf(is_managed));
		sb.append(",is_plugged="+String.valueOf(is_plugged));
		sb.append(",is_readonly="+String.valueOf(is_readonly));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",device_configuration_version="+String.valueOf(device_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_56Struct implements routines.system.IPersistableRow<after_tJDBCInput_56Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public Object device_id;

				public Object getDevice_id () {
					return this.device_id;
				}
				
			    public String device_join_id;

				public String getDevice_join_id () {
					return this.device_join_id;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String address;

				public String getAddress () {
					return this.address;
				}
				
			    public Boolean is_managed;

				public Boolean getIs_managed () {
					return this.is_managed;
				}
				
			    public Boolean is_plugged;

				public Boolean getIs_plugged () {
					return this.is_plugged;
				}
				
			    public Boolean is_readonly;

				public Boolean getIs_readonly () {
					return this.is_readonly;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer device_configuration_version;

				public Integer getDevice_configuration_version () {
					return this.device_configuration_version;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
						this.device_id = (Object) dis.readObject();
					
					this.device_join_id = readString(dis);
					
					this.type = readString(dis);
					
					this.address = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_managed = null;
           				} else {
           			    	this.is_managed = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_plugged = null;
           				} else {
           			    	this.is_plugged = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.is_readonly = null;
           				} else {
           			    	this.is_readonly = dis.readBoolean();
           				}
					
						this.vm_configuration_version = readInteger(dis);
					
						this.device_configuration_version = readInteger(dis);
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.device_id);
					
					// String
				
						writeString(this.device_join_id,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.address,dos);
					
					// Boolean
				
						if(this.is_managed == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_managed);
		            	}
					
					// Boolean
				
						if(this.is_plugged == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_plugged);
		            	}
					
					// Boolean
				
						if(this.is_readonly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.is_readonly);
		            	}
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.device_configuration_version,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",device_id="+String.valueOf(device_id));
		sb.append(",device_join_id="+device_join_id);
		sb.append(",type="+type);
		sb.append(",address="+address);
		sb.append(",is_managed="+String.valueOf(is_managed));
		sb.append(",is_plugged="+String.valueOf(is_plugged));
		sb.append(",is_readonly="+String.valueOf(is_readonly));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",device_configuration_version="+String.valueOf(device_configuration_version));
		sb.append(",create_date="+String.valueOf(create_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_56Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_56Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_56_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_55Process(globalMap);

		row48Struct row48 = new row48Struct();
delete_vm_device_connectionStruct delete_vm_device_connection = new delete_vm_device_connectionStruct();





	
	/**
	 * [tJDBCOutput_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_32", false);
		start_Hash.put("tJDBCOutput_32", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_32";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_vm_device_connection");
					}
				
		int tos_count_tJDBCOutput_32 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_32 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_32 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_32 = (String)(restRequest_tJDBCOutput_32 != null ? restRequest_tJDBCOutput_32.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_32 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_32 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_32 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_32 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_32.createRuntimeProperties();
 		                    props_tJDBCOutput_32.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_32.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_32.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_32.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_32.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_32.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_32.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_32.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_32.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_32.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_32.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_32.tableSelection.setValue("tablename",
 		                    "vm_device_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_32_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_device\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"device_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_32\",\"di.table.label\":\"vm_device\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_32_1_fisrt sst_tJDBCOutput_32_1_fisrt = new SchemaSettingTool_tJDBCOutput_32_1_fisrt();
 		                    
 		                    props_tJDBCOutput_32.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_32_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_32_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_device\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"device_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_32\",\"di.table.label\":\"vm_device\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_32_2_fisrt sst_tJDBCOutput_32_2_fisrt = new SchemaSettingTool_tJDBCOutput_32_2_fisrt();
 		                    
 		                    props_tJDBCOutput_32.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_32_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_32_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":\"boolean\",\"default\":false,\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.default\":\"false\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"device_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_32\",\"di.table.label\":\"vm_device\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_32_3_fisrt sst_tJDBCOutput_32_3_fisrt = new SchemaSettingTool_tJDBCOutput_32_3_fisrt();
 		                    
 		                    props_tJDBCOutput_32.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_32_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_32.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_32.additionalColumns.setValue("referenceColumns",
 		                    "vm_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_32.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_32 = props_tJDBCOutput_32.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_32 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_32 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_32 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_32.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_32);
        }
    }
globalMap.put("tJDBCOutput_32_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_32);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_32= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_32_MAPPINGS_URL", mappings_url_tJDBCOutput_32);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_32 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_32";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_32 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_32 = null;
topology_tJDBCOutput_32 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_32 = def_tJDBCOutput_32.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_32, topology_tJDBCOutput_32);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_32 = def_tJDBCOutput_32.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_32 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_32.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_32 = componentRuntime_tJDBCOutput_32.initialize(container_tJDBCOutput_32, props_tJDBCOutput_32);

if (initVr_tJDBCOutput_32.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_32.getMessage());
}

if(componentRuntime_tJDBCOutput_32 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_32 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_32;
	compDriverInitialization_tJDBCOutput_32.runAtDriver(container_tJDBCOutput_32);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_32 = null;
if(componentRuntime_tJDBCOutput_32 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_32 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_32;
	if (doesNodeBelongToRequest_tJDBCOutput_32) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_32 = sourceOrSink_tJDBCOutput_32.validate(container_tJDBCOutput_32);
        if (vr_tJDBCOutput_32.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_32.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_32 = null;
    if (sourceOrSink_tJDBCOutput_32 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_32 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_32;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_32 = sink_tJDBCOutput_32.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_32) {
            writeOperation_tJDBCOutput_32.initialize(container_tJDBCOutput_32);
        }
        writer_tJDBCOutput_32 = writeOperation_tJDBCOutput_32.createWriter(container_tJDBCOutput_32);
        if (doesNodeBelongToRequest_tJDBCOutput_32) {
            writer_tJDBCOutput_32.open("tJDBCOutput_32");
        }

        resourceMap.put("writer_tJDBCOutput_32", writer_tJDBCOutput_32);
    } // end of "sourceOrSink_tJDBCOutput_32 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_32 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_32.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_32 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_32 = props_tJDBCOutput_32.getSchema(c_tJDBCOutput_32, false);
    incomingEnforcer_tJDBCOutput_32 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_32);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_32 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_32 = null;


 



/**
 * [tJDBCOutput_32 begin ] stop
 */



	
	/**
	 * [tMap_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_32", false);
		start_Hash.put("tMap_32", System.currentTimeMillis());
		
	
	currentComponent="tMap_32";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tMap_32 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
					globalMap.get( "tHash_Lookup_row47" ))
					;					
					
	

row47Struct row47HashKey = new row47Struct();
row47Struct row47Default = new row47Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_32__Struct  {
}
Var__tMap_32__Struct Var__tMap_32 = new Var__tMap_32__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_vm_device_connectionStruct delete_vm_device_connection_tmp = new delete_vm_device_connectionStruct();
// ###############################

        
        



        









 



/**
 * [tMap_32 begin ] stop
 */



	
	/**
	 * [tJDBCInput_56 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_56", false);
		start_Hash.put("tJDBCInput_56", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_56";

	
		int tos_count_tJDBCInput_56 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_56 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_56 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_56 = (String)(restRequest_tJDBCInput_56 != null ? restRequest_tJDBCInput_56.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_56 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_56 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_56 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_56 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_56.createRuntimeProperties();
 		                    props_tJDBCInput_56.setValue("sql",
 		                    "SELECT\n  vm_id,\n  upper(cast(vm_id as char(36))) as vm_join_id,\n  device_id, \n  upper(cast(device_id as char(36))) as d"
+"evice_join_id,\n  type, \n  address, \n  is_managed, \n  is_plugged, \n  is_readonly, \n  vm_configuration_version, \n  device_"
+"configuration_version, \n  create_date\nFROM v4_5_latest_configuration_vms_devices");
 		                    
 		                    props_tJDBCInput_56.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_56.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_56.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_56.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_56.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_56.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_56.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_56.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_56.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_56_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_devices\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"device_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"device_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"30\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"address\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"address\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"address\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_managed\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_managed\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_managed\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_plugged\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_plugged\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_plugged\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"is_readonly\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"BOOL\",\"talend.field.dbColumnName\":\"is_readonly\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"is_readonly\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"device_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"device_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_56\",\"di.table.label\":\"v4_5_latest_configuration_vms_devices\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_56_1_fisrt sst_tJDBCInput_56_1_fisrt = new SchemaSettingTool_tJDBCInput_56_1_fisrt();
 		                    
 		                    props_tJDBCInput_56.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_56_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_56.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms_devices");
 		                    
 		                    java.util.List<Object> tJDBCInput_56_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_56_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_56.trimTable).setValue("trim",tJDBCInput_56_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_56_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_56_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("vm_join_id");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("device_id");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("device_join_id");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("type");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("address");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("is_managed");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("is_plugged");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("is_readonly");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("vm_configuration_version");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("device_configuration_version");
 		                            
 		                            tJDBCInput_56_trimTable_columnName.add("create_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_56.trimTable).setValue("columnName",tJDBCInput_56_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_56.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_56 = props_tJDBCInput_56.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_56 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_56 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_56 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_56.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_56);
        }
    }
globalMap.put("tJDBCInput_56_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_56);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_56= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_56_MAPPINGS_URL", mappings_url_tJDBCInput_56);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_56 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_56";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_56 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_56 = null;
topology_tJDBCInput_56 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_56 = def_tJDBCInput_56.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_56, topology_tJDBCInput_56);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_56 = def_tJDBCInput_56.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_56 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_56.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_56 = componentRuntime_tJDBCInput_56.initialize(container_tJDBCInput_56, props_tJDBCInput_56);

if (initVr_tJDBCInput_56.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_56.getMessage());
}

if(componentRuntime_tJDBCInput_56 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_56 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_56;
	compDriverInitialization_tJDBCInput_56.runAtDriver(container_tJDBCInput_56);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_56 = null;
if(componentRuntime_tJDBCInput_56 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_56 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_56;
	if (doesNodeBelongToRequest_tJDBCInput_56) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_56 = sourceOrSink_tJDBCInput_56.validate(container_tJDBCInput_56);
        if (vr_tJDBCInput_56.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_56.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_56 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_56 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_56;
        reader_tJDBCInput_56 = source_tJDBCInput_56.createReader(container_tJDBCInput_56);
	    reader_tJDBCInput_56 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_56, container_tJDBCInput_56);

            boolean multi_output_is_allowed_tJDBCInput_56 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_56 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_56.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_56 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_56 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_56 = props_tJDBCInput_56.getSchema(c_tJDBCInput_56, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_56 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_56, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_56 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_56 = reader_tJDBCInput_56.start();

        resourceMap.put("reader_tJDBCInput_56", reader_tJDBCInput_56);

        for (; available_tJDBCInput_56; available_tJDBCInput_56 = reader_tJDBCInput_56.advance()) {
			nb_line_tJDBCInput_56++;

			
			if (multi_output_is_allowed_tJDBCInput_56) {
				
					row48 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_56 = reader_tJDBCInput_56.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_56) {
						row48 = new row48Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_56 == null) {
            factory_tJDBCInput_56 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_56.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_56.setWrapped(factory_tJDBCInput_56.convertToAvro(data_tJDBCInput_56));
                Object columnValue_0_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(0);
                        row48.vm_id = (Object) (columnValue_0_tJDBCInput_56);
                Object columnValue_1_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(1);
                        row48.vm_join_id = (String) (columnValue_1_tJDBCInput_56);
                Object columnValue_2_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(2);
                        row48.device_id = (Object) (columnValue_2_tJDBCInput_56);
                Object columnValue_3_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(3);
                        row48.device_join_id = (String) (columnValue_3_tJDBCInput_56);
                Object columnValue_4_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(4);
                        row48.type = (String) (columnValue_4_tJDBCInput_56);
                Object columnValue_5_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(5);
                        row48.address = (String) (columnValue_5_tJDBCInput_56);
                Object columnValue_6_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(6);
                        row48.is_managed = (Boolean) (columnValue_6_tJDBCInput_56);
                Object columnValue_7_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(7);
                        row48.is_plugged = (Boolean) (columnValue_7_tJDBCInput_56);
                Object columnValue_8_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(8);
                        row48.is_readonly = (Boolean) (columnValue_8_tJDBCInput_56);
                Object columnValue_9_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(9);
                        row48.vm_configuration_version = (Integer) (columnValue_9_tJDBCInput_56);
                Object columnValue_10_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(10);
                        row48.device_configuration_version = (Integer) (columnValue_10_tJDBCInput_56);
                Object columnValue_11_tJDBCInput_56 = outgoingEnforcer_tJDBCInput_56.get(11);
                        row48.create_date = (java.util.Date) (columnValue_11_tJDBCInput_56);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_56) {
				java.util.Map<String,Object> info_tJDBCInput_56 = e_tJDBCInput_56.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_56 = null;
					if(info_tJDBCInput_56.containsKey("error")){
						errorMessage_tJDBCInput_56 = info_tJDBCInput_56.get("error");
					}else if(info_tJDBCInput_56.containsKey("errorMessage")){
						errorMessage_tJDBCInput_56 = info_tJDBCInput_56.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_56 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_56 = "Row "+ nb_line_tJDBCInput_56 + ": "+errorMessage_tJDBCInput_56;
					System.err.println(errorMessage_tJDBCInput_56);
				
					// If the record is reject, the main line record should put NULL
					row48 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_56 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_56 = null;


 



/**
 * [tJDBCInput_56 begin ] stop
 */
	
	/**
	 * [tJDBCInput_56 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_56";

	


 


	tos_count_tJDBCInput_56++;

/**
 * [tJDBCInput_56 main ] stop
 */
	
	/**
	 * [tJDBCInput_56 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_56";

	


 



/**
 * [tJDBCInput_56 process_data_begin ] stop
 */

	
	/**
	 * [tMap_32 main ] start
	 */

	

	
	
	currentComponent="tMap_32";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_32 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_32 = false;
		  boolean mainRowRejected_tMap_32 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row47" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow47 = false;
       		  	    	
       		  	    	
 							row47Struct row47ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row47HashKey.device_join_id = row48.device_join_id ;
                        		    		
                        		    		    row47HashKey.vm_join_id = row48.vm_join_id ;
                        		    		

								
		                        	row47HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row47.lookup( row47HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row47.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_32 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row47 != null && tHash_Lookup_row47.getCount(row47HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row47' and it contains more one result from keys :  row47.device_join_id = '" + row47HashKey.device_join_id + "', row47.vm_join_id = '" + row47HashKey.vm_join_id + "'");
								} // G 071
							

							row47Struct row47 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row47Struct fromLookup_row47 = null;
							row47 = row47Default;
										 
							
								 
							
							
								if (tHash_Lookup_row47 !=null && tHash_Lookup_row47.hasNext()) { // G 099
								
							
								
								fromLookup_row47 = tHash_Lookup_row47.next();

							
							
								} // G 099
							
							

							if(fromLookup_row47 != null) {
								row47 = fromLookup_row47;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_32__Struct Var = Var__tMap_32;// ###############################
        // ###############################
        // # Output tables

delete_vm_device_connection = null;

if(!rejectedInnerJoin_tMap_32 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_vm_device_connection'
// # Filter conditions 
if( rejectedInnerJoin_tMap_32 ) {
delete_vm_device_connection_tmp.vm_id = row48.vm_id ;
delete_vm_device_connection_tmp.device_id = row48.device_id;
delete_vm_device_connection_tmp.type = row48.type;
delete_vm_device_connection_tmp.address = row48.address;
delete_vm_device_connection_tmp.is_managed = row48.is_managed;
delete_vm_device_connection_tmp.is_plugged = row48.is_plugged;
delete_vm_device_connection_tmp.is_readonly = row48.is_readonly;
delete_vm_device_connection_tmp.vm_configuration_version = row48.vm_configuration_version;
delete_vm_device_connection_tmp.device_configuration_version = row48.device_configuration_version;
delete_vm_device_connection_tmp.create_date = row48.create_date;
delete_vm_device_connection_tmp.update_date = context.runTime;
delete_vm_device_connection_tmp.delete_date = context.runTime;
delete_vm_device_connection = delete_vm_device_connection_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_32 = false;










 


	tos_count_tMap_32++;

/**
 * [tMap_32 main ] stop
 */
	
	/**
	 * [tMap_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_32";

	

 



/**
 * [tMap_32 process_data_begin ] stop
 */
// Start of branch "delete_vm_device_connection"
if(delete_vm_device_connection != null) { 



	
	/**
	 * [tJDBCOutput_32 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_32";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_vm_device_connection"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_32 != null) {
            incomingEnforcer_tJDBCOutput_32.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_32.put("vm_id", delete_vm_device_connection.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("device_id") != null){
                    incomingEnforcer_tJDBCOutput_32.put("device_id", delete_vm_device_connection.device_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("type") != null){
                    incomingEnforcer_tJDBCOutput_32.put("type", delete_vm_device_connection.type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("address") != null){
                    incomingEnforcer_tJDBCOutput_32.put("address", delete_vm_device_connection.address);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("is_managed") != null){
                    incomingEnforcer_tJDBCOutput_32.put("is_managed", delete_vm_device_connection.is_managed);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("is_plugged") != null){
                    incomingEnforcer_tJDBCOutput_32.put("is_plugged", delete_vm_device_connection.is_plugged);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("is_readonly") != null){
                    incomingEnforcer_tJDBCOutput_32.put("is_readonly", delete_vm_device_connection.is_readonly);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("vm_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_32.put("vm_configuration_version", delete_vm_device_connection.vm_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("device_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_32.put("device_configuration_version", delete_vm_device_connection.device_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_32.put("create_date", delete_vm_device_connection.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_32.put("update_date", delete_vm_device_connection.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_32 != null && incomingEnforcer_tJDBCOutput_32.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_32.put("delete_date", delete_vm_device_connection.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_32 = null;
        if (incomingEnforcer_tJDBCOutput_32 != null) {
            data_tJDBCOutput_32 = incomingEnforcer_tJDBCOutput_32.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_32 != null && data_tJDBCOutput_32 != null) {
        	writer_tJDBCOutput_32.write(data_tJDBCOutput_32);
        }
        
        nb_line_tJDBCOutput_32++;

 


	tos_count_tJDBCOutput_32++;

/**
 * [tJDBCOutput_32 main ] stop
 */
	
	/**
	 * [tJDBCOutput_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_32";

	


 



/**
 * [tJDBCOutput_32 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_32";

	


 



/**
 * [tJDBCOutput_32 process_data_end ] stop
 */

} // End of branch "delete_vm_device_connection"




	
	/**
	 * [tMap_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_32";

	

 



/**
 * [tMap_32 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_56 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_56";

	


 



/**
 * [tJDBCInput_56 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_56 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_56";

	
// end of generic


resourceMap.put("finish_tJDBCInput_56", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_56 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_56 = null;
    if (reader_tJDBCInput_56 != null) {
        reader_tJDBCInput_56.close();
        resultMap_tJDBCInput_56 = reader_tJDBCInput_56.getReturnValues();
    }
if(resultMap_tJDBCInput_56!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_56 : resultMap_tJDBCInput_56.entrySet()) {
		switch(entry_tJDBCInput_56.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_56.setComponentData("tJDBCInput_56", "ERROR_MESSAGE", entry_tJDBCInput_56.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_56.setComponentData("tJDBCInput_56", "NB_LINE", entry_tJDBCInput_56.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_56.setComponentData("tJDBCInput_56", "NB_SUCCESS", entry_tJDBCInput_56.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_56.setComponentData("tJDBCInput_56", "NB_REJECT", entry_tJDBCInput_56.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_56 = new StringBuilder();
            for (int i_tJDBCInput_56 = 0; i_tJDBCInput_56 < entry_tJDBCInput_56.getKey().length(); i_tJDBCInput_56++) {
                char ch_tJDBCInput_56 = entry_tJDBCInput_56.getKey().charAt(i_tJDBCInput_56);
                if(Character.isUpperCase(ch_tJDBCInput_56) && i_tJDBCInput_56> 0) {
                	studio_key_tJDBCInput_56.append('_');
                }
                studio_key_tJDBCInput_56.append(ch_tJDBCInput_56);
            }
			container_tJDBCInput_56.setComponentData("tJDBCInput_56", studio_key_tJDBCInput_56.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_56.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_56", true);
end_Hash.put("tJDBCInput_56", System.currentTimeMillis());




/**
 * [tJDBCInput_56 end ] stop
 */

	
	/**
	 * [tMap_32 end ] start
	 */

	

	
	
	currentComponent="tMap_32";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row47 != null) {
						tHash_Lookup_row47.endGet();
					}
					globalMap.remove( "tHash_Lookup_row47" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tMap_32", true);
end_Hash.put("tMap_32", System.currentTimeMillis());




/**
 * [tMap_32 end ] stop
 */

	
	/**
	 * [tJDBCOutput_32 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_32";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_32", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_32 = null;
    if (writer_tJDBCOutput_32 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_32 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_32.close();
        resultMap_tJDBCOutput_32 = writer_tJDBCOutput_32.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_32), container_tJDBCOutput_32);
    }
if(resultMap_tJDBCOutput_32!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_32 : resultMap_tJDBCOutput_32.entrySet()) {
		switch(entry_tJDBCOutput_32.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_32.setComponentData("tJDBCOutput_32", "ERROR_MESSAGE", entry_tJDBCOutput_32.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_32.setComponentData("tJDBCOutput_32", "NB_LINE", entry_tJDBCOutput_32.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_32.setComponentData("tJDBCOutput_32", "NB_SUCCESS", entry_tJDBCOutput_32.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_32.setComponentData("tJDBCOutput_32", "NB_REJECT", entry_tJDBCOutput_32.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_32 = new StringBuilder();
            for (int i_tJDBCOutput_32 = 0; i_tJDBCOutput_32 < entry_tJDBCOutput_32.getKey().length(); i_tJDBCOutput_32++) {
                char ch_tJDBCOutput_32 = entry_tJDBCOutput_32.getKey().charAt(i_tJDBCOutput_32);
                if(Character.isUpperCase(ch_tJDBCOutput_32) && i_tJDBCOutput_32> 0) {
                	studio_key_tJDBCOutput_32.append('_');
                }
                studio_key_tJDBCOutput_32.append(ch_tJDBCOutput_32);
            }
			container_tJDBCOutput_32.setComponentData("tJDBCOutput_32", studio_key_tJDBCOutput_32.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_32.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_vm_device_connection");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_32", true);
end_Hash.put("tJDBCOutput_32", System.currentTimeMillis());




/**
 * [tJDBCOutput_32 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_56:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk37", 0, "ok");
								} 
							
							tJDBCInput_45Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_32"
					     			globalMap.remove("tHash_Lookup_row47"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_56 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_56";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_56")==null){
    if(resourceMap.get("reader_tJDBCInput_56")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_56")).close();
		} catch (java.io.IOException e_tJDBCInput_56) {
			String errorMessage_tJDBCInput_56 = "failed to release the resource in tJDBCInput_56 :" + e_tJDBCInput_56.getMessage();
			System.err.println(errorMessage_tJDBCInput_56);
		}
	}
}
 



/**
 * [tJDBCInput_56 finally ] stop
 */

	
	/**
	 * [tMap_32 finally ] start
	 */

	

	
	
	currentComponent="tMap_32";

	

 



/**
 * [tMap_32 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_32 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_32";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_32")==null){
    if(resourceMap.get("writer_tJDBCOutput_32")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_32")).close();
		} catch (java.io.IOException e_tJDBCOutput_32) {
			String errorMessage_tJDBCOutput_32 = "failed to release the resource in tJDBCOutput_32 :" + e_tJDBCOutput_32.getMessage();
			System.err.println(errorMessage_tJDBCOutput_32);
		}
	}
}
 



/**
 * [tJDBCOutput_32 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_56_SUBPROCESS_STATE", 1);
	}
	


public static class new_tag_relationsStruct implements routines.system.IPersistableRow<new_tag_relationsStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object entity_id;

				public Object getEntity_id () {
					return this.entity_id;
				}
				
			    public short entity_type;

				public short getEntity_type () {
					return this.entity_type;
				}
				
			    public Object parent_id;

				public Object getParent_id () {
					return this.parent_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date detach_date;

				public java.util.Date getDetach_date () {
					return this.detach_date;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("entity_id="+String.valueOf(entity_id));
		sb.append(",entity_type="+String.valueOf(entity_type));
		sb.append(",parent_id="+String.valueOf(parent_id));
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",detach_date="+String.valueOf(detach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(new_tag_relationsStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object entity_id;

				public Object getEntity_id () {
					return this.entity_id;
				}
				
			    public String entity_join_id;

				public String getEntity_join_id () {
					return this.entity_join_id;
				}
				
			    public Short entity_type;

				public Short getEntity_type () {
					return this.entity_type;
				}
				
			    public Object parent_id;

				public Object getParent_id () {
					return this.parent_id;
				}
				
			    public String parent_join_id;

				public String getParent_join_id () {
					return this.parent_join_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date move_date;

				public java.util.Date getMove_date () {
					return this.move_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.entity_type = null;
           				} else {
           			    	this.entity_type = dis.readShort();
           				}
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.move_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.entity_type = null;
           				} else {
           			    	this.entity_type = dis.readShort();
           				}
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.move_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// Short
				
						if(this.entity_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.entity_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.move_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// Short
				
						if(this.entity_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.entity_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.move_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("entity_id="+String.valueOf(entity_id));
		sb.append(",entity_join_id="+entity_join_id);
		sb.append(",entity_type="+String.valueOf(entity_type));
		sb.append(",parent_id="+String.valueOf(parent_id));
		sb.append(",parent_join_id="+parent_join_id);
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",move_date="+String.valueOf(move_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_45Struct implements routines.system.IPersistableRow<after_tJDBCInput_45Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object entity_id;

				public Object getEntity_id () {
					return this.entity_id;
				}
				
			    public String entity_join_id;

				public String getEntity_join_id () {
					return this.entity_join_id;
				}
				
			    public Short entity_type;

				public Short getEntity_type () {
					return this.entity_type;
				}
				
			    public Object parent_id;

				public Object getParent_id () {
					return this.parent_id;
				}
				
			    public String parent_join_id;

				public String getParent_join_id () {
					return this.parent_join_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date move_date;

				public java.util.Date getMove_date () {
					return this.move_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.entity_type = null;
           				} else {
           			    	this.entity_type = dis.readShort();
           				}
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.move_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.entity_type = null;
           				} else {
           			    	this.entity_type = dis.readShort();
           				}
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.move_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// Short
				
						if(this.entity_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.entity_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.move_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// Short
				
						if(this.entity_type == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.entity_type);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.move_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("entity_id="+String.valueOf(entity_id));
		sb.append(",entity_join_id="+entity_join_id);
		sb.append(",entity_type="+String.valueOf(entity_type));
		sb.append(",parent_id="+String.valueOf(parent_id));
		sb.append(",parent_join_id="+parent_join_id);
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",move_date="+String.valueOf(move_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_45Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_45_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_58Process(globalMap);

		row9Struct row9 = new row9Struct();
new_tag_relationsStruct new_tag_relations = new new_tag_relationsStruct();





	
	/**
	 * [tJDBCOutput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_26", false);
		start_Hash.put("tJDBCOutput_26", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_26";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"new_tag_relations");
					}
				
		int tos_count_tJDBCOutput_26 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_26 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_26 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_26 = (String)(restRequest_tJDBCOutput_26 != null ? restRequest_tJDBCOutput_26.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_26 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_26 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_26 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_26 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_26.createRuntimeProperties();
 		                    props_tJDBCOutput_26.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_26.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_26.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_26.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_26.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_26.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_26.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_26.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.tableSelection.setValue("tablename",
 		                    "tag_relations_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_26_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_relations_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_26\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_26_1_fisrt sst_tJDBCOutput_26_1_fisrt = new SchemaSettingTool_tJDBCOutput_26_1_fisrt();
 		                    
 		                    props_tJDBCOutput_26.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_26_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_26_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_relations_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_26\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_26_2_fisrt sst_tJDBCOutput_26_2_fisrt = new SchemaSettingTool_tJDBCOutput_26_2_fisrt();
 		                    
 		                    props_tJDBCOutput_26.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_26_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_26_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_26\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_26_3_fisrt sst_tJDBCOutput_26_3_fisrt = new SchemaSettingTool_tJDBCOutput_26_3_fisrt();
 		                    
 		                    props_tJDBCOutput_26.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_26_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_26.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_26.additionalColumns.setValue("referenceColumns",
 		                    "entity_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_26.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_26 = props_tJDBCOutput_26.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_26 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_26 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_26 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_26.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_26);
        }
    }
globalMap.put("tJDBCOutput_26_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_26);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_26= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_26_MAPPINGS_URL", mappings_url_tJDBCOutput_26);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_26 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_26";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_26 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_26 = null;
topology_tJDBCOutput_26 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_26 = def_tJDBCOutput_26.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_26, topology_tJDBCOutput_26);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_26 = def_tJDBCOutput_26.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_26 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_26.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_26 = componentRuntime_tJDBCOutput_26.initialize(container_tJDBCOutput_26, props_tJDBCOutput_26);

if (initVr_tJDBCOutput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_26.getMessage());
}

if(componentRuntime_tJDBCOutput_26 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_26 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_26;
	compDriverInitialization_tJDBCOutput_26.runAtDriver(container_tJDBCOutput_26);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_26 = null;
if(componentRuntime_tJDBCOutput_26 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_26 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_26;
	if (doesNodeBelongToRequest_tJDBCOutput_26) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_26 = sourceOrSink_tJDBCOutput_26.validate(container_tJDBCOutput_26);
        if (vr_tJDBCOutput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_26.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_26 = null;
    if (sourceOrSink_tJDBCOutput_26 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_26 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_26;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_26 = sink_tJDBCOutput_26.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_26) {
            writeOperation_tJDBCOutput_26.initialize(container_tJDBCOutput_26);
        }
        writer_tJDBCOutput_26 = writeOperation_tJDBCOutput_26.createWriter(container_tJDBCOutput_26);
        if (doesNodeBelongToRequest_tJDBCOutput_26) {
            writer_tJDBCOutput_26.open("tJDBCOutput_26");
        }

        resourceMap.put("writer_tJDBCOutput_26", writer_tJDBCOutput_26);
    } // end of "sourceOrSink_tJDBCOutput_26 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_26 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_26.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_26 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_26 = props_tJDBCOutput_26.getSchema(c_tJDBCOutput_26, false);
    incomingEnforcer_tJDBCOutput_26 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_26);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_26 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_26 = null;


 



/**
 * [tJDBCOutput_26 begin ] stop
 */



	
	/**
	 * [tMap_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_26", false);
		start_Hash.put("tMap_26", System.currentTimeMillis());
		
	
	currentComponent="tMap_26";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_26 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) 
					globalMap.get( "tHash_Lookup_row34" ))
					;					
					
	

row34Struct row34HashKey = new row34Struct();
row34Struct row34Default = new row34Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_26__Struct  {
}
Var__tMap_26__Struct Var__tMap_26 = new Var__tMap_26__Struct();
// ###############################

// ###############################
// # Outputs initialization
new_tag_relationsStruct new_tag_relations_tmp = new new_tag_relationsStruct();
// ###############################

        
        



        









 



/**
 * [tMap_26 begin ] stop
 */



	
	/**
	 * [tJDBCInput_45 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_45", false);
		start_Hash.put("tJDBCInput_45", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_45";

	
		int tos_count_tJDBCInput_45 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_45 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_45 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_45 = (String)(restRequest_tJDBCInput_45 != null ? restRequest_tJDBCInput_45.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_45 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_45 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_45 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_45 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_45.createRuntimeProperties();
 		                    props_tJDBCInput_45.setValue("sql",
 		                    "SELECT entity_id,\n  		upper(cast(entity_id as char(36))) as entity_join_id,\n		entity_type,\n		parent_id,\n  		upper(cast("
+"parent_id as char(36))) as parent_join_id,\n		attach_date,\n		move_date\nFROM	dwh_add_tags_relations_history_view");
 		                    
 		                    props_tJDBCInput_45.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_45.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_45.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_45.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_45.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_45.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_45.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_45.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_45.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_45_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_add_tags_relations_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"entity_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"parent_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"move_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"move_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"move_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_45\",\"di.table.label\":\"dwh_add_tags_relations_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_45_1_fisrt sst_tJDBCInput_45_1_fisrt = new SchemaSettingTool_tJDBCInput_45_1_fisrt();
 		                    
 		                    props_tJDBCInput_45.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_45_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_45.tableSelection.setValue("tablename",
 		                    "dwh_add_tags_relations_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_45_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_45_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_45_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_45_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_45_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_45_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_45_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_45_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_45.trimTable).setValue("trim",tJDBCInput_45_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_45_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_45_trimTable_columnName.add("entity_id");
 		                            
 		                            tJDBCInput_45_trimTable_columnName.add("entity_join_id");
 		                            
 		                            tJDBCInput_45_trimTable_columnName.add("entity_type");
 		                            
 		                            tJDBCInput_45_trimTable_columnName.add("parent_id");
 		                            
 		                            tJDBCInput_45_trimTable_columnName.add("parent_join_id");
 		                            
 		                            tJDBCInput_45_trimTable_columnName.add("attach_date");
 		                            
 		                            tJDBCInput_45_trimTable_columnName.add("move_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_45.trimTable).setValue("columnName",tJDBCInput_45_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_45.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_45 = props_tJDBCInput_45.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_45 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_45 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_45 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_45.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_45);
        }
    }
globalMap.put("tJDBCInput_45_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_45);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_45= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_45_MAPPINGS_URL", mappings_url_tJDBCInput_45);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_45 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_45";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_45 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_45 = null;
topology_tJDBCInput_45 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_45 = def_tJDBCInput_45.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_45, topology_tJDBCInput_45);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_45 = def_tJDBCInput_45.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_45 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_45.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_45 = componentRuntime_tJDBCInput_45.initialize(container_tJDBCInput_45, props_tJDBCInput_45);

if (initVr_tJDBCInput_45.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_45.getMessage());
}

if(componentRuntime_tJDBCInput_45 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_45 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_45;
	compDriverInitialization_tJDBCInput_45.runAtDriver(container_tJDBCInput_45);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_45 = null;
if(componentRuntime_tJDBCInput_45 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_45 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_45;
	if (doesNodeBelongToRequest_tJDBCInput_45) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_45 = sourceOrSink_tJDBCInput_45.validate(container_tJDBCInput_45);
        if (vr_tJDBCInput_45.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_45.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_45 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_45 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_45;
        reader_tJDBCInput_45 = source_tJDBCInput_45.createReader(container_tJDBCInput_45);
	    reader_tJDBCInput_45 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_45, container_tJDBCInput_45);

            boolean multi_output_is_allowed_tJDBCInput_45 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_45 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_45.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_45 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_45 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_45 = props_tJDBCInput_45.getSchema(c_tJDBCInput_45, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_45 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_45, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_45 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_45 = reader_tJDBCInput_45.start();

        resourceMap.put("reader_tJDBCInput_45", reader_tJDBCInput_45);

        for (; available_tJDBCInput_45; available_tJDBCInput_45 = reader_tJDBCInput_45.advance()) {
			nb_line_tJDBCInput_45++;

			
			if (multi_output_is_allowed_tJDBCInput_45) {
				
					row9 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_45 = reader_tJDBCInput_45.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_45) {
						row9 = new row9Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_45 == null) {
            factory_tJDBCInput_45 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_45.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_45.setWrapped(factory_tJDBCInput_45.convertToAvro(data_tJDBCInput_45));
                Object columnValue_0_tJDBCInput_45 = outgoingEnforcer_tJDBCInput_45.get(0);
                        row9.entity_id = (Object) (columnValue_0_tJDBCInput_45);
                Object columnValue_1_tJDBCInput_45 = outgoingEnforcer_tJDBCInput_45.get(1);
                        row9.entity_join_id = (String) (columnValue_1_tJDBCInput_45);
                Object columnValue_2_tJDBCInput_45 = outgoingEnforcer_tJDBCInput_45.get(2);
                        row9.entity_type = (Short) (columnValue_2_tJDBCInput_45);
                Object columnValue_3_tJDBCInput_45 = outgoingEnforcer_tJDBCInput_45.get(3);
                        row9.parent_id = (Object) (columnValue_3_tJDBCInput_45);
                Object columnValue_4_tJDBCInput_45 = outgoingEnforcer_tJDBCInput_45.get(4);
                        row9.parent_join_id = (String) (columnValue_4_tJDBCInput_45);
                Object columnValue_5_tJDBCInput_45 = outgoingEnforcer_tJDBCInput_45.get(5);
                        row9.attach_date = (java.util.Date) (columnValue_5_tJDBCInput_45);
                Object columnValue_6_tJDBCInput_45 = outgoingEnforcer_tJDBCInput_45.get(6);
                        row9.move_date = (java.util.Date) (columnValue_6_tJDBCInput_45);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_45) {
				java.util.Map<String,Object> info_tJDBCInput_45 = e_tJDBCInput_45.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_45 = null;
					if(info_tJDBCInput_45.containsKey("error")){
						errorMessage_tJDBCInput_45 = info_tJDBCInput_45.get("error");
					}else if(info_tJDBCInput_45.containsKey("errorMessage")){
						errorMessage_tJDBCInput_45 = info_tJDBCInput_45.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_45 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_45 = "Row "+ nb_line_tJDBCInput_45 + ": "+errorMessage_tJDBCInput_45;
					System.err.println(errorMessage_tJDBCInput_45);
				
					// If the record is reject, the main line record should put NULL
					row9 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_45 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_45 = null;


 



/**
 * [tJDBCInput_45 begin ] stop
 */
	
	/**
	 * [tJDBCInput_45 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_45";

	


 


	tos_count_tJDBCInput_45++;

/**
 * [tJDBCInput_45 main ] stop
 */
	
	/**
	 * [tJDBCInput_45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_45";

	


 



/**
 * [tJDBCInput_45 process_data_begin ] stop
 */

	
	/**
	 * [tMap_26 main ] start
	 */

	

	
	
	currentComponent="tMap_26";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_26 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_26 = false;
		  boolean mainRowRejected_tMap_26 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row9.move_date == null ? TalendDate.compareDate(row9.attach_date,context.runTime) <=0 : TalendDate.compareDate(row9.move_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row9'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row34" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow34 = false;
       		  	    	
       		  	    	
 							row34Struct row34ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_26) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_26 = false;
								
                        		    		    row34HashKey.entity_join_id = row9.entity_join_id;
                        		    		
                        		    		    row34HashKey.parent_join_id = row9.parent_join_id;
                        		    		

								
		                        	row34HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row34.lookup( row34HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row34.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_26 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row34 != null && tHash_Lookup_row34.getCount(row34HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row34' and it contains more one result from keys :  row34.entity_join_id = '" + row34HashKey.entity_join_id + "', row34.parent_join_id = '" + row34HashKey.parent_join_id + "'");
								} // G 071
							

							row34Struct row34 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row34Struct fromLookup_row34 = null;
							row34 = row34Default;
										 
							
								 
							
							
								if (tHash_Lookup_row34 !=null && tHash_Lookup_row34.hasNext()) { // G 099
								
							
								
								fromLookup_row34 = tHash_Lookup_row34.next();

							
							
								} // G 099
							
							

							if(fromLookup_row34 != null) {
								row34 = fromLookup_row34;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_26__Struct Var = Var__tMap_26;// ###############################
        // ###############################
        // # Output tables

new_tag_relations = null;

if(!rejectedInnerJoin_tMap_26 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'new_tag_relations'
// # Filter conditions 
if( rejectedInnerJoin_tMap_26 ) {
new_tag_relations_tmp.entity_id = row9.entity_id;
new_tag_relations_tmp.entity_type = row9.entity_type ;
new_tag_relations_tmp.parent_id = row9.parent_id;
new_tag_relations_tmp.attach_date = row9.move_date == null ? row9.attach_date : row9.move_date   ;
new_tag_relations_tmp.detach_date = null;
new_tag_relations = new_tag_relations_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_26 = false;










 


	tos_count_tMap_26++;

/**
 * [tMap_26 main ] stop
 */
	
	/**
	 * [tMap_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_26";

	

 



/**
 * [tMap_26 process_data_begin ] stop
 */
// Start of branch "new_tag_relations"
if(new_tag_relations != null) { 



	
	/**
	 * [tJDBCOutput_26 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"new_tag_relations"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_26 != null) {
            incomingEnforcer_tJDBCOutput_26.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_26 != null && incomingEnforcer_tJDBCOutput_26.getRuntimeSchema().getField("entity_id") != null){
                    incomingEnforcer_tJDBCOutput_26.put("entity_id", new_tag_relations.entity_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_26 != null && incomingEnforcer_tJDBCOutput_26.getRuntimeSchema().getField("entity_type") != null){
                    incomingEnforcer_tJDBCOutput_26.put("entity_type", new_tag_relations.entity_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_26 != null && incomingEnforcer_tJDBCOutput_26.getRuntimeSchema().getField("parent_id") != null){
                    incomingEnforcer_tJDBCOutput_26.put("parent_id", new_tag_relations.parent_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_26 != null && incomingEnforcer_tJDBCOutput_26.getRuntimeSchema().getField("attach_date") != null){
                    incomingEnforcer_tJDBCOutput_26.put("attach_date", new_tag_relations.attach_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_26 != null && incomingEnforcer_tJDBCOutput_26.getRuntimeSchema().getField("detach_date") != null){
                    incomingEnforcer_tJDBCOutput_26.put("detach_date", new_tag_relations.detach_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_26 = null;
        if (incomingEnforcer_tJDBCOutput_26 != null) {
            data_tJDBCOutput_26 = incomingEnforcer_tJDBCOutput_26.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_26 != null && data_tJDBCOutput_26 != null) {
        	writer_tJDBCOutput_26.write(data_tJDBCOutput_26);
        }
        
        nb_line_tJDBCOutput_26++;

 


	tos_count_tJDBCOutput_26++;

/**
 * [tJDBCOutput_26 main ] stop
 */
	
	/**
	 * [tJDBCOutput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	


 



/**
 * [tJDBCOutput_26 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	


 



/**
 * [tJDBCOutput_26 process_data_end ] stop
 */

} // End of branch "new_tag_relations"



	
		} // G_TM_M_280 close main tMap filter for table 'row9'
	
	
	/**
	 * [tMap_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_26";

	

 



/**
 * [tMap_26 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_45 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_45";

	


 



/**
 * [tJDBCInput_45 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_45 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_45";

	
// end of generic


resourceMap.put("finish_tJDBCInput_45", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_45 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_45 = null;
    if (reader_tJDBCInput_45 != null) {
        reader_tJDBCInput_45.close();
        resultMap_tJDBCInput_45 = reader_tJDBCInput_45.getReturnValues();
    }
if(resultMap_tJDBCInput_45!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_45 : resultMap_tJDBCInput_45.entrySet()) {
		switch(entry_tJDBCInput_45.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_45.setComponentData("tJDBCInput_45", "ERROR_MESSAGE", entry_tJDBCInput_45.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_45.setComponentData("tJDBCInput_45", "NB_LINE", entry_tJDBCInput_45.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_45.setComponentData("tJDBCInput_45", "NB_SUCCESS", entry_tJDBCInput_45.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_45.setComponentData("tJDBCInput_45", "NB_REJECT", entry_tJDBCInput_45.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_45 = new StringBuilder();
            for (int i_tJDBCInput_45 = 0; i_tJDBCInput_45 < entry_tJDBCInput_45.getKey().length(); i_tJDBCInput_45++) {
                char ch_tJDBCInput_45 = entry_tJDBCInput_45.getKey().charAt(i_tJDBCInput_45);
                if(Character.isUpperCase(ch_tJDBCInput_45) && i_tJDBCInput_45> 0) {
                	studio_key_tJDBCInput_45.append('_');
                }
                studio_key_tJDBCInput_45.append(ch_tJDBCInput_45);
            }
			container_tJDBCInput_45.setComponentData("tJDBCInput_45", studio_key_tJDBCInput_45.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_45.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_45", true);
end_Hash.put("tJDBCInput_45", System.currentTimeMillis());




/**
 * [tJDBCInput_45 end ] stop
 */

	
	/**
	 * [tMap_26 end ] start
	 */

	

	
	
	currentComponent="tMap_26";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row34 != null) {
						tHash_Lookup_row34.endGet();
					}
					globalMap.remove( "tHash_Lookup_row34" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_26", true);
end_Hash.put("tMap_26", System.currentTimeMillis());




/**
 * [tMap_26 end ] stop
 */

	
	/**
	 * [tJDBCOutput_26 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_26", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_26 = null;
    if (writer_tJDBCOutput_26 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_26 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_26.close();
        resultMap_tJDBCOutput_26 = writer_tJDBCOutput_26.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_26), container_tJDBCOutput_26);
    }
if(resultMap_tJDBCOutput_26!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_26 : resultMap_tJDBCOutput_26.entrySet()) {
		switch(entry_tJDBCOutput_26.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "ERROR_MESSAGE", entry_tJDBCOutput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "NB_LINE", entry_tJDBCOutput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "NB_SUCCESS", entry_tJDBCOutput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "NB_REJECT", entry_tJDBCOutput_26.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_26 = new StringBuilder();
            for (int i_tJDBCOutput_26 = 0; i_tJDBCOutput_26 < entry_tJDBCOutput_26.getKey().length(); i_tJDBCOutput_26++) {
                char ch_tJDBCOutput_26 = entry_tJDBCOutput_26.getKey().charAt(i_tJDBCOutput_26);
                if(Character.isUpperCase(ch_tJDBCOutput_26) && i_tJDBCOutput_26> 0) {
                	studio_key_tJDBCOutput_26.append('_');
                }
                studio_key_tJDBCOutput_26.append(ch_tJDBCOutput_26);
            }
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", studio_key_tJDBCOutput_26.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_26.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"new_tag_relations");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_26", true);
end_Hash.put("tJDBCOutput_26", System.currentTimeMillis());




/**
 * [tJDBCOutput_26 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_45:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk19", 0, "ok");
								} 
							
							tJDBCInput_48Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_26"
					     			globalMap.remove("tHash_Lookup_row34"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_45 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_45";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_45")==null){
    if(resourceMap.get("reader_tJDBCInput_45")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_45")).close();
		} catch (java.io.IOException e_tJDBCInput_45) {
			String errorMessage_tJDBCInput_45 = "failed to release the resource in tJDBCInput_45 :" + e_tJDBCInput_45.getMessage();
			System.err.println(errorMessage_tJDBCInput_45);
		}
	}
}
 



/**
 * [tJDBCInput_45 finally ] stop
 */

	
	/**
	 * [tMap_26 finally ] start
	 */

	

	
	
	currentComponent="tMap_26";

	

 



/**
 * [tMap_26 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_26 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_26")==null){
    if(resourceMap.get("writer_tJDBCOutput_26")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_26")).close();
		} catch (java.io.IOException e_tJDBCOutput_26) {
			String errorMessage_tJDBCOutput_26 = "failed to release the resource in tJDBCOutput_26 :" + e_tJDBCOutput_26.getMessage();
			System.err.println(errorMessage_tJDBCOutput_26);
		}
	}
}
 



/**
 * [tJDBCOutput_26 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_45_SUBPROCESS_STATE", 1);
	}
	


public static class detach_tagsStruct implements routines.system.IPersistableRow<detach_tagsStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object entity_id;

				public Object getEntity_id () {
					return this.entity_id;
				}
				
			    public short entity_type;

				public short getEntity_type () {
					return this.entity_type;
				}
				
			    public Object parent_id;

				public Object getParent_id () {
					return this.parent_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date detach_date;

				public java.util.Date getDetach_date () {
					return this.detach_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.entity_id == null) ? 0 : this.entity_id.hashCode());
					
						result = prime * result + ((this.parent_id == null) ? 0 : this.parent_id.hashCode());
					
						result = prime * result + ((this.attach_date == null) ? 0 : this.attach_date.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final detach_tagsStruct other = (detach_tagsStruct) obj;
		
						if (this.entity_id == null) {
							if (other.entity_id != null)
								return false;
						
						} else if (!this.entity_id.equals(other.entity_id))
						
							return false;
					
						if (this.parent_id == null) {
							if (other.parent_id != null)
								return false;
						
						} else if (!this.parent_id.equals(other.parent_id))
						
							return false;
					
						if (this.attach_date == null) {
							if (other.attach_date != null)
								return false;
						
						} else if (!this.attach_date.equals(other.attach_date))
						
							return false;
					

		return true;
    }

	public void copyDataTo(detach_tagsStruct other) {

		other.entity_id = this.entity_id;
	            other.entity_type = this.entity_type;
	            other.parent_id = this.parent_id;
	            other.attach_date = this.attach_date;
	            other.detach_date = this.detach_date;
	            
	}

	public void copyKeysDataTo(detach_tagsStruct other) {

		other.entity_id = this.entity_id;
	            	other.parent_id = this.parent_id;
	            	other.attach_date = this.attach_date;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.entity_id = (Object) dis.readObject();
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("entity_id="+String.valueOf(entity_id));
		sb.append(",entity_type="+String.valueOf(entity_type));
		sb.append(",parent_id="+String.valueOf(parent_id));
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",detach_date="+String.valueOf(detach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(detach_tagsStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.entity_id, other.entity_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.parent_id, other.parent_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.attach_date, other.attach_date);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object entity_id;

				public Object getEntity_id () {
					return this.entity_id;
				}
				
			    public String entity_join_id;

				public String getEntity_join_id () {
					return this.entity_join_id;
				}
				
			    public short entity_type;

				public short getEntity_type () {
					return this.entity_type;
				}
				
			    public Object parent_id;

				public Object getParent_id () {
					return this.parent_id;
				}
				
			    public String parent_join_id;

				public String getParent_join_id () {
					return this.parent_join_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date detach_date;

				public java.util.Date getDetach_date () {
					return this.detach_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",entity_id="+String.valueOf(entity_id));
		sb.append(",entity_join_id="+entity_join_id);
		sb.append(",entity_type="+String.valueOf(entity_type));
		sb.append(",parent_id="+String.valueOf(parent_id));
		sb.append(",parent_join_id="+parent_join_id);
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",detach_date="+String.valueOf(detach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_48Struct implements routines.system.IPersistableRow<after_tJDBCInput_48Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public Object entity_id;

				public Object getEntity_id () {
					return this.entity_id;
				}
				
			    public String entity_join_id;

				public String getEntity_join_id () {
					return this.entity_join_id;
				}
				
			    public short entity_type;

				public short getEntity_type () {
					return this.entity_type;
				}
				
			    public Object parent_id;

				public Object getParent_id () {
					return this.parent_id;
				}
				
			    public String parent_join_id;

				public String getParent_join_id () {
					return this.parent_join_id;
				}
				
			    public java.util.Date attach_date;

				public java.util.Date getAttach_date () {
					return this.attach_date;
				}
				
			    public java.util.Date detach_date;

				public java.util.Date getDetach_date () {
					return this.detach_date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.history_id = readInteger(dis);
					
						this.entity_id = (Object) dis.readObject();
					
					this.entity_join_id = readString(dis);
					
			        this.entity_type = dis.readShort();
					
						this.parent_id = (Object) dis.readObject();
					
					this.parent_join_id = readString(dis);
					
					this.attach_date = readDate(dis);
					
					this.detach_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.history_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.entity_id);
					
					// String
				
						writeString(this.entity_join_id,dos);
					
					// short
				
		            	dos.writeShort(this.entity_type);
					
					// Object
				
       			    	dos.writeObject(this.parent_id);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
					// java.util.Date
				
						writeDate(this.attach_date,dos);
					
					// java.util.Date
				
						writeDate(this.detach_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",entity_id="+String.valueOf(entity_id));
		sb.append(",entity_join_id="+entity_join_id);
		sb.append(",entity_type="+String.valueOf(entity_type));
		sb.append(",parent_id="+String.valueOf(parent_id));
		sb.append(",parent_join_id="+parent_join_id);
		sb.append(",attach_date="+String.valueOf(attach_date));
		sb.append(",detach_date="+String.valueOf(detach_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_48Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_48Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_48_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_47Process(globalMap);

		row12Struct row12 = new row12Struct();
detach_tagsStruct detach_tags = new detach_tagsStruct();





	
	/**
	 * [tJDBCOutput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_27", false);
		start_Hash.put("tJDBCOutput_27", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_27";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"detach_tags");
					}
				
		int tos_count_tJDBCOutput_27 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_27 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_27 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_27 = (String)(restRequest_tJDBCOutput_27 != null ? restRequest_tJDBCOutput_27.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_27 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_27 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_27 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_27 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_27.createRuntimeProperties();
 		                    props_tJDBCOutput_27.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE);
 		                    
 		                    props_tJDBCOutput_27.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_27.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_27.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_27.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_27.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_27.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_27.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_27.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_27.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_27.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_27.tableSelection.setValue("tablename",
 		                    "tag_relations_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_27_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_relations_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"talend.field.dbType\":\"POINT\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_27\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_27_1_fisrt sst_tJDBCOutput_27_1_fisrt = new SchemaSettingTool_tJDBCOutput_27_1_fisrt();
 		                    
 		                    props_tJDBCOutput_27.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_27_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_27_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_relations_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"talend.field.dbType\":\"POINT\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_27\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_27_2_fisrt sst_tJDBCOutput_27_2_fisrt = new SchemaSettingTool_tJDBCOutput_27_2_fisrt();
 		                    
 		                    props_tJDBCOutput_27.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_27_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_27_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"talend.field.dbType\":\"POINT\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_27\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_27_3_fisrt sst_tJDBCOutput_27_3_fisrt = new SchemaSettingTool_tJDBCOutput_27_3_fisrt();
 		                    
 		                    props_tJDBCOutput_27.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_27_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_27.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_27.additionalColumns.setValue("referenceColumns",
 		                    "entity_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_27.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_27 = props_tJDBCOutput_27.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_27 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_27 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_27 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_27.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_27);
        }
    }
globalMap.put("tJDBCOutput_27_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_27);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_27= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_27_MAPPINGS_URL", mappings_url_tJDBCOutput_27);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_27 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_27";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_27 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_27 = null;
topology_tJDBCOutput_27 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_27 = def_tJDBCOutput_27.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_27, topology_tJDBCOutput_27);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_27 = def_tJDBCOutput_27.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_27 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_27.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_27 = componentRuntime_tJDBCOutput_27.initialize(container_tJDBCOutput_27, props_tJDBCOutput_27);

if (initVr_tJDBCOutput_27.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_27.getMessage());
}

if(componentRuntime_tJDBCOutput_27 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_27 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_27;
	compDriverInitialization_tJDBCOutput_27.runAtDriver(container_tJDBCOutput_27);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_27 = null;
if(componentRuntime_tJDBCOutput_27 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_27 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_27;
	if (doesNodeBelongToRequest_tJDBCOutput_27) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_27 = sourceOrSink_tJDBCOutput_27.validate(container_tJDBCOutput_27);
        if (vr_tJDBCOutput_27.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_27.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_27 = null;
    if (sourceOrSink_tJDBCOutput_27 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_27 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_27;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_27 = sink_tJDBCOutput_27.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_27) {
            writeOperation_tJDBCOutput_27.initialize(container_tJDBCOutput_27);
        }
        writer_tJDBCOutput_27 = writeOperation_tJDBCOutput_27.createWriter(container_tJDBCOutput_27);
        if (doesNodeBelongToRequest_tJDBCOutput_27) {
            writer_tJDBCOutput_27.open("tJDBCOutput_27");
        }

        resourceMap.put("writer_tJDBCOutput_27", writer_tJDBCOutput_27);
    } // end of "sourceOrSink_tJDBCOutput_27 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_27 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_27.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_27 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_27 = props_tJDBCOutput_27.getSchema(c_tJDBCOutput_27, false);
    incomingEnforcer_tJDBCOutput_27 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_27);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_27 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_27 = null;


 



/**
 * [tJDBCOutput_27 begin ] stop
 */



	
	/**
	 * [tMap_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_27", false);
		start_Hash.put("tMap_27", System.currentTimeMillis());
		
	
	currentComponent="tMap_27";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tMap_27 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
					globalMap.get( "tHash_Lookup_row11" ))
					;					
					
	

row11Struct row11HashKey = new row11Struct();
row11Struct row11Default = new row11Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_27__Struct  {
}
Var__tMap_27__Struct Var__tMap_27 = new Var__tMap_27__Struct();
// ###############################

// ###############################
// # Outputs initialization
detach_tagsStruct detach_tags_tmp = new detach_tagsStruct();
// ###############################

        
        



        









 



/**
 * [tMap_27 begin ] stop
 */



	
	/**
	 * [tJDBCInput_48 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_48", false);
		start_Hash.put("tJDBCInput_48", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_48";

	
		int tos_count_tJDBCInput_48 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_48 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_48 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_48 = (String)(restRequest_tJDBCInput_48 != null ? restRequest_tJDBCInput_48.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_48 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_48 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_48 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_48 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_48.createRuntimeProperties();
 		                    props_tJDBCInput_48.setValue("sql",
 		                    "SELECT \n  history_id,\n  entity_id, \n  upper(cast(entity_id as char(36))) as entity_join_id,\n  entity_type, \n  parent_id"
+", \n  upper(cast(parent_id as char(36))) as parent_join_id,\n  attach_date, \n  detach_date\nFROM v4_5_latest_tags_relations"
+"");
 		                    
 		                    props_tJDBCInput_48.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_48.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_48.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_48.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_48.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_48.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_48.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_48.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_48.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_48_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_relations_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"entity_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"entity_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"entity_type\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"entity_type\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"parent_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"attach_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"attach_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"attach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"detach_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"detach_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"detach_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_48\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_48_1_fisrt sst_tJDBCInput_48_1_fisrt = new SchemaSettingTool_tJDBCInput_48_1_fisrt();
 		                    
 		                    props_tJDBCInput_48.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_48_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_48.tableSelection.setValue("tablename",
 		                    "v4_5_latest_tags_relations");
 		                    
 		                    java.util.List<Object> tJDBCInput_48_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_48_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_48.trimTable).setValue("trim",tJDBCInput_48_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_48_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_48_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_48_trimTable_columnName.add("entity_id");
 		                            
 		                            tJDBCInput_48_trimTable_columnName.add("entity_join_id");
 		                            
 		                            tJDBCInput_48_trimTable_columnName.add("entity_type");
 		                            
 		                            tJDBCInput_48_trimTable_columnName.add("parent_id");
 		                            
 		                            tJDBCInput_48_trimTable_columnName.add("parent_join_id");
 		                            
 		                            tJDBCInput_48_trimTable_columnName.add("attach_date");
 		                            
 		                            tJDBCInput_48_trimTable_columnName.add("detach_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_48.trimTable).setValue("columnName",tJDBCInput_48_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_48.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_48 = props_tJDBCInput_48.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_48 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_48 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_48 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_48.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_48);
        }
    }
globalMap.put("tJDBCInput_48_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_48);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_48= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_48_MAPPINGS_URL", mappings_url_tJDBCInput_48);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_48 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_48";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_48 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_48 = null;
topology_tJDBCInput_48 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_48 = def_tJDBCInput_48.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_48, topology_tJDBCInput_48);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_48 = def_tJDBCInput_48.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_48 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_48.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_48 = componentRuntime_tJDBCInput_48.initialize(container_tJDBCInput_48, props_tJDBCInput_48);

if (initVr_tJDBCInput_48.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_48.getMessage());
}

if(componentRuntime_tJDBCInput_48 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_48 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_48;
	compDriverInitialization_tJDBCInput_48.runAtDriver(container_tJDBCInput_48);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_48 = null;
if(componentRuntime_tJDBCInput_48 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_48 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_48;
	if (doesNodeBelongToRequest_tJDBCInput_48) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_48 = sourceOrSink_tJDBCInput_48.validate(container_tJDBCInput_48);
        if (vr_tJDBCInput_48.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_48.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_48 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_48 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_48;
        reader_tJDBCInput_48 = source_tJDBCInput_48.createReader(container_tJDBCInput_48);
	    reader_tJDBCInput_48 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_48, container_tJDBCInput_48);

            boolean multi_output_is_allowed_tJDBCInput_48 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_48 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_48.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_48 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_48 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_48 = props_tJDBCInput_48.getSchema(c_tJDBCInput_48, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_48 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_48, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_48 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_48 = reader_tJDBCInput_48.start();

        resourceMap.put("reader_tJDBCInput_48", reader_tJDBCInput_48);

        for (; available_tJDBCInput_48; available_tJDBCInput_48 = reader_tJDBCInput_48.advance()) {
			nb_line_tJDBCInput_48++;

			
			if (multi_output_is_allowed_tJDBCInput_48) {
				
					row12 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_48 = reader_tJDBCInput_48.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_48) {
						row12 = new row12Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_48 == null) {
            factory_tJDBCInput_48 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_48.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_48.setWrapped(factory_tJDBCInput_48.convertToAvro(data_tJDBCInput_48));
                Object columnValue_0_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(0);
                        row12.history_id = (Integer) (columnValue_0_tJDBCInput_48);
                Object columnValue_1_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(1);
                        row12.entity_id = (Object) (columnValue_1_tJDBCInput_48);
                Object columnValue_2_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(2);
                        row12.entity_join_id = (String) (columnValue_2_tJDBCInput_48);
                Object columnValue_3_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(3);
                    if (columnValue_3_tJDBCInput_48 == null) {
                        row12.entity_type = 0;
                    } else {
                            row12.entity_type = (short) (columnValue_3_tJDBCInput_48);
                    }
                Object columnValue_4_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(4);
                        row12.parent_id = (Object) (columnValue_4_tJDBCInput_48);
                Object columnValue_5_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(5);
                        row12.parent_join_id = (String) (columnValue_5_tJDBCInput_48);
                Object columnValue_6_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(6);
                        row12.attach_date = (java.util.Date) (columnValue_6_tJDBCInput_48);
                Object columnValue_7_tJDBCInput_48 = outgoingEnforcer_tJDBCInput_48.get(7);
                        row12.detach_date = (java.util.Date) (columnValue_7_tJDBCInput_48);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_48) {
				java.util.Map<String,Object> info_tJDBCInput_48 = e_tJDBCInput_48.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_48 = null;
					if(info_tJDBCInput_48.containsKey("error")){
						errorMessage_tJDBCInput_48 = info_tJDBCInput_48.get("error");
					}else if(info_tJDBCInput_48.containsKey("errorMessage")){
						errorMessage_tJDBCInput_48 = info_tJDBCInput_48.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_48 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_48 = "Row "+ nb_line_tJDBCInput_48 + ": "+errorMessage_tJDBCInput_48;
					System.err.println(errorMessage_tJDBCInput_48);
				
					// If the record is reject, the main line record should put NULL
					row12 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_48 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_48 = null;


 



/**
 * [tJDBCInput_48 begin ] stop
 */
	
	/**
	 * [tJDBCInput_48 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_48";

	


 


	tos_count_tJDBCInput_48++;

/**
 * [tJDBCInput_48 main ] stop
 */
	
	/**
	 * [tJDBCInput_48 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_48";

	


 



/**
 * [tJDBCInput_48 process_data_begin ] stop
 */

	
	/**
	 * [tMap_27 main ] start
	 */

	

	
	
	currentComponent="tMap_27";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_27 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_27 = false;
		  boolean mainRowRejected_tMap_27 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row11" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow11 = false;
       		  	    	
       		  	    	
 							row11Struct row11ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_27) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_27 = false;
								
                        		    		    row11HashKey.entity_join_id = row12.entity_join_id ;
                        		    		
                        		    		    row11HashKey.parent_join_id = row12.parent_join_id ;
                        		    		

								
		                        	row11HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row11.lookup( row11HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row11.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_27 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row11 != null && tHash_Lookup_row11.getCount(row11HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row11' and it contains more one result from keys :  row11.entity_join_id = '" + row11HashKey.entity_join_id + "', row11.parent_join_id = '" + row11HashKey.parent_join_id + "'");
								} // G 071
							

							row11Struct row11 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row11Struct fromLookup_row11 = null;
							row11 = row11Default;
										 
							
								 
							
							
								if (tHash_Lookup_row11 !=null && tHash_Lookup_row11.hasNext()) { // G 099
								
							
								
								fromLookup_row11 = tHash_Lookup_row11.next();

							
							
								} // G 099
							
							

							if(fromLookup_row11 != null) {
								row11 = fromLookup_row11;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_27__Struct Var = Var__tMap_27;// ###############################
        // ###############################
        // # Output tables

detach_tags = null;

if(!rejectedInnerJoin_tMap_27 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'detach_tags'
// # Filter conditions 
if( rejectedInnerJoin_tMap_27 ) {
detach_tags_tmp.entity_id = row12.entity_id;
detach_tags_tmp.entity_type = row12.entity_type;
detach_tags_tmp.parent_id = row12.parent_id;
detach_tags_tmp.attach_date = row12.attach_date;
detach_tags_tmp.detach_date = context.runTime;
detach_tags = detach_tags_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_27 = false;










 


	tos_count_tMap_27++;

/**
 * [tMap_27 main ] stop
 */
	
	/**
	 * [tMap_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_27";

	

 



/**
 * [tMap_27 process_data_begin ] stop
 */
// Start of branch "detach_tags"
if(detach_tags != null) { 



	
	/**
	 * [tJDBCOutput_27 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_27";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"detach_tags"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_27 != null) {
            incomingEnforcer_tJDBCOutput_27.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_27 != null && incomingEnforcer_tJDBCOutput_27.getRuntimeSchema().getField("entity_id") != null){
                    incomingEnforcer_tJDBCOutput_27.put("entity_id", detach_tags.entity_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_27 != null && incomingEnforcer_tJDBCOutput_27.getRuntimeSchema().getField("entity_type") != null){
                    incomingEnforcer_tJDBCOutput_27.put("entity_type", detach_tags.entity_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_27 != null && incomingEnforcer_tJDBCOutput_27.getRuntimeSchema().getField("parent_id") != null){
                    incomingEnforcer_tJDBCOutput_27.put("parent_id", detach_tags.parent_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_27 != null && incomingEnforcer_tJDBCOutput_27.getRuntimeSchema().getField("attach_date") != null){
                    incomingEnforcer_tJDBCOutput_27.put("attach_date", detach_tags.attach_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_27 != null && incomingEnforcer_tJDBCOutput_27.getRuntimeSchema().getField("detach_date") != null){
                    incomingEnforcer_tJDBCOutput_27.put("detach_date", detach_tags.detach_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_27 = null;
        if (incomingEnforcer_tJDBCOutput_27 != null) {
            data_tJDBCOutput_27 = incomingEnforcer_tJDBCOutput_27.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_27 != null && data_tJDBCOutput_27 != null) {
        	writer_tJDBCOutput_27.write(data_tJDBCOutput_27);
        }
        
        nb_line_tJDBCOutput_27++;

 


	tos_count_tJDBCOutput_27++;

/**
 * [tJDBCOutput_27 main ] stop
 */
	
	/**
	 * [tJDBCOutput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_27";

	


 



/**
 * [tJDBCOutput_27 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_27";

	


 



/**
 * [tJDBCOutput_27 process_data_end ] stop
 */

} // End of branch "detach_tags"




	
	/**
	 * [tMap_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_27";

	

 



/**
 * [tMap_27 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_48 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_48";

	


 



/**
 * [tJDBCInput_48 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_48 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_48";

	
// end of generic


resourceMap.put("finish_tJDBCInput_48", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_48 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_48 = null;
    if (reader_tJDBCInput_48 != null) {
        reader_tJDBCInput_48.close();
        resultMap_tJDBCInput_48 = reader_tJDBCInput_48.getReturnValues();
    }
if(resultMap_tJDBCInput_48!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_48 : resultMap_tJDBCInput_48.entrySet()) {
		switch(entry_tJDBCInput_48.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_48.setComponentData("tJDBCInput_48", "ERROR_MESSAGE", entry_tJDBCInput_48.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_48.setComponentData("tJDBCInput_48", "NB_LINE", entry_tJDBCInput_48.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_48.setComponentData("tJDBCInput_48", "NB_SUCCESS", entry_tJDBCInput_48.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_48.setComponentData("tJDBCInput_48", "NB_REJECT", entry_tJDBCInput_48.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_48 = new StringBuilder();
            for (int i_tJDBCInput_48 = 0; i_tJDBCInput_48 < entry_tJDBCInput_48.getKey().length(); i_tJDBCInput_48++) {
                char ch_tJDBCInput_48 = entry_tJDBCInput_48.getKey().charAt(i_tJDBCInput_48);
                if(Character.isUpperCase(ch_tJDBCInput_48) && i_tJDBCInput_48> 0) {
                	studio_key_tJDBCInput_48.append('_');
                }
                studio_key_tJDBCInput_48.append(ch_tJDBCInput_48);
            }
			container_tJDBCInput_48.setComponentData("tJDBCInput_48", studio_key_tJDBCInput_48.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_48.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_48", true);
end_Hash.put("tJDBCInput_48", System.currentTimeMillis());




/**
 * [tJDBCInput_48 end ] stop
 */

	
	/**
	 * [tMap_27 end ] start
	 */

	

	
	
	currentComponent="tMap_27";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row11 != null) {
						tHash_Lookup_row11.endGet();
					}
					globalMap.remove( "tHash_Lookup_row11" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tMap_27", true);
end_Hash.put("tMap_27", System.currentTimeMillis());




/**
 * [tMap_27 end ] stop
 */

	
	/**
	 * [tJDBCOutput_27 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_27";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_27", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_27 = null;
    if (writer_tJDBCOutput_27 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_27 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_27.close();
        resultMap_tJDBCOutput_27 = writer_tJDBCOutput_27.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_27), container_tJDBCOutput_27);
    }
if(resultMap_tJDBCOutput_27!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_27 : resultMap_tJDBCOutput_27.entrySet()) {
		switch(entry_tJDBCOutput_27.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_27.setComponentData("tJDBCOutput_27", "ERROR_MESSAGE", entry_tJDBCOutput_27.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_27.setComponentData("tJDBCOutput_27", "NB_LINE", entry_tJDBCOutput_27.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_27.setComponentData("tJDBCOutput_27", "NB_SUCCESS", entry_tJDBCOutput_27.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_27.setComponentData("tJDBCOutput_27", "NB_REJECT", entry_tJDBCOutput_27.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_27 = new StringBuilder();
            for (int i_tJDBCOutput_27 = 0; i_tJDBCOutput_27 < entry_tJDBCOutput_27.getKey().length(); i_tJDBCOutput_27++) {
                char ch_tJDBCOutput_27 = entry_tJDBCOutput_27.getKey().charAt(i_tJDBCOutput_27);
                if(Character.isUpperCase(ch_tJDBCOutput_27) && i_tJDBCOutput_27> 0) {
                	studio_key_tJDBCOutput_27.append('_');
                }
                studio_key_tJDBCOutput_27.append(ch_tJDBCOutput_27);
            }
			container_tJDBCOutput_27.setComponentData("tJDBCOutput_27", studio_key_tJDBCOutput_27.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_27.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"detach_tags");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_27", true);
end_Hash.put("tJDBCOutput_27", System.currentTimeMillis());




/**
 * [tJDBCOutput_27 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_48:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk211", 0, "ok");
								} 
							
							tJDBCInput_46Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_27"
					     			globalMap.remove("tHash_Lookup_row11"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_48 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_48";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_48")==null){
    if(resourceMap.get("reader_tJDBCInput_48")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_48")).close();
		} catch (java.io.IOException e_tJDBCInput_48) {
			String errorMessage_tJDBCInput_48 = "failed to release the resource in tJDBCInput_48 :" + e_tJDBCInput_48.getMessage();
			System.err.println(errorMessage_tJDBCInput_48);
		}
	}
}
 



/**
 * [tJDBCInput_48 finally ] stop
 */

	
	/**
	 * [tMap_27 finally ] start
	 */

	

	
	
	currentComponent="tMap_27";

	

 



/**
 * [tMap_27 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_27 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_27";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_27")==null){
    if(resourceMap.get("writer_tJDBCOutput_27")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_27")).close();
		} catch (java.io.IOException e_tJDBCOutput_27) {
			String errorMessage_tJDBCOutput_27 = "failed to release the resource in tJDBCOutput_27 :" + e_tJDBCOutput_27.getMessage();
			System.err.println(errorMessage_tJDBCOutput_27);
		}
	}
}
 



/**
 * [tJDBCOutput_27 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_48_SUBPROCESS_STATE", 1);
	}
	


public static class tag_details_updateStruct implements routines.system.IPersistableRow<tag_details_updateStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object tag_id;

				public Object getTag_id () {
					return this.tag_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public String tag_path;

				public String getTag_path () {
					return this.tag_path;
				}
				
			    public short tag_level;

				public short getTag_level () {
					return this.tag_level;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			        this.tag_level = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			        this.tag_level = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// short
				
		            	dos.writeShort(this.tag_level);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// short
				
		            	dos.writeShort(this.tag_level);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_id="+String.valueOf(tag_id));
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",tag_path="+tag_path);
		sb.append(",tag_level="+String.valueOf(tag_level));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(tag_details_updateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object tag_id;

				public Object getTag_id () {
					return this.tag_id;
				}
				
			    public String tag_join_id;

				public String getTag_join_id () {
					return this.tag_join_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public String tag_path;

				public String getTag_path () {
					return this.tag_path;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_id="+String.valueOf(tag_id));
		sb.append(",tag_join_id="+tag_join_id);
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",tag_path="+tag_path);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object tag_id;

				public Object getTag_id () {
					return this.tag_id;
				}
				
			    public String tag_join_id;

				public String getTag_join_id () {
					return this.tag_join_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_id="+String.valueOf(tag_id));
		sb.append(",tag_join_id="+tag_join_id);
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_46Struct implements routines.system.IPersistableRow<after_tJDBCInput_46Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object tag_id;

				public Object getTag_id () {
					return this.tag_id;
				}
				
			    public String tag_join_id;

				public String getTag_join_id () {
					return this.tag_join_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_id="+String.valueOf(tag_id));
		sb.append(",tag_join_id="+tag_join_id);
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_46Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_46_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_59Process(globalMap);

		row10Struct row10 = new row10Struct();
row42Struct row42 = new row42Struct();
tag_details_updateStruct tag_details_update = new tag_details_updateStruct();






	
	/**
	 * [tJDBCOutput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_28", false);
		start_Hash.put("tJDBCOutput_28", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_28";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"tag_details_update");
					}
				
		int tos_count_tJDBCOutput_28 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_28 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_28 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_28 = (String)(restRequest_tJDBCOutput_28 != null ? restRequest_tJDBCOutput_28.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_28 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_28 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_28 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_28 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_28.createRuntimeProperties();
 		                    props_tJDBCOutput_28.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_28.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_28.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_28.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_28.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_28.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_28.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_28.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_28.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_28.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_28.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_28.tableSelection.setValue("tablename",
 		                    "tag_details");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_28_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_details\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_level\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"tag_level\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_level\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_28\",\"di.table.label\":\"tag_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_28_1_fisrt sst_tJDBCOutput_28_1_fisrt = new SchemaSettingTool_tJDBCOutput_28_1_fisrt();
 		                    
 		                    props_tJDBCOutput_28.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_28_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_28_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_details\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_level\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"tag_level\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_level\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_28\",\"di.table.label\":\"tag_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_28_2_fisrt sst_tJDBCOutput_28_2_fisrt = new SchemaSettingTool_tJDBCOutput_28_2_fisrt();
 		                    
 		                    props_tJDBCOutput_28.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_28_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_28_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_level\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"tag_level\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_level\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_28\",\"di.table.label\":\"tag_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_28_3_fisrt sst_tJDBCOutput_28_3_fisrt = new SchemaSettingTool_tJDBCOutput_28_3_fisrt();
 		                    
 		                    props_tJDBCOutput_28.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_28_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_28.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_28.additionalColumns.setValue("referenceColumns",
 		                    "tag_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_28.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_28 = props_tJDBCOutput_28.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_28 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_28 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_28 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_28.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_28);
        }
    }
globalMap.put("tJDBCOutput_28_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_28);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_28= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_28_MAPPINGS_URL", mappings_url_tJDBCOutput_28);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_28 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_28";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_28 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_28 = null;
topology_tJDBCOutput_28 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_28 = def_tJDBCOutput_28.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_28, topology_tJDBCOutput_28);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_28 = def_tJDBCOutput_28.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_28 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_28.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_28 = componentRuntime_tJDBCOutput_28.initialize(container_tJDBCOutput_28, props_tJDBCOutput_28);

if (initVr_tJDBCOutput_28.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_28.getMessage());
}

if(componentRuntime_tJDBCOutput_28 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_28 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_28;
	compDriverInitialization_tJDBCOutput_28.runAtDriver(container_tJDBCOutput_28);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_28 = null;
if(componentRuntime_tJDBCOutput_28 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_28 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_28;
	if (doesNodeBelongToRequest_tJDBCOutput_28) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_28 = sourceOrSink_tJDBCOutput_28.validate(container_tJDBCOutput_28);
        if (vr_tJDBCOutput_28.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_28.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_28 = null;
    if (sourceOrSink_tJDBCOutput_28 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_28 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_28;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_28 = sink_tJDBCOutput_28.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_28) {
            writeOperation_tJDBCOutput_28.initialize(container_tJDBCOutput_28);
        }
        writer_tJDBCOutput_28 = writeOperation_tJDBCOutput_28.createWriter(container_tJDBCOutput_28);
        if (doesNodeBelongToRequest_tJDBCOutput_28) {
            writer_tJDBCOutput_28.open("tJDBCOutput_28");
        }

        resourceMap.put("writer_tJDBCOutput_28", writer_tJDBCOutput_28);
    } // end of "sourceOrSink_tJDBCOutput_28 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_28 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_28.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_28 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_28 = props_tJDBCOutput_28.getSchema(c_tJDBCOutput_28, false);
    incomingEnforcer_tJDBCOutput_28 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_28);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_28 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_28 = null;


 



/**
 * [tJDBCOutput_28 begin ] stop
 */



	
	/**
	 * [tMap_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_28", false);
		start_Hash.put("tMap_28", System.currentTimeMillis());
		
	
	currentComponent="tMap_28";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tMap_28 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
					globalMap.get( "tHash_Lookup_row43" ))
					;					
					
	

row43Struct row43HashKey = new row43Struct();
row43Struct row43Default = new row43Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_28__Struct  {
}
Var__tMap_28__Struct Var__tMap_28 = new Var__tMap_28__Struct();
// ###############################

// ###############################
// # Outputs initialization
tag_details_updateStruct tag_details_update_tmp = new tag_details_updateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_28 begin ] stop
 */



	
	/**
	 * [tJDBCSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCSP_1", false);
		start_Hash.put("tJDBCSP_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCSP_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tJDBCSP_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCSP_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCSP_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCSP_1 = (String)(restRequest_tJDBCSP_1 != null ? restRequest_tJDBCSP_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCSP_1 =
        new org.talend.components.jdbc.tjdbcsp.TJDBCSPDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCSP_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCSP_1 = null;


org.talend.components.jdbc.tjdbcsp.TJDBCSPProperties props_tJDBCSP_1 =
        (org.talend.components.jdbc.tjdbcsp.TJDBCSPProperties) def_tJDBCSP_1.createRuntimeProperties();
 		                    props_tJDBCSP_1.setValue("spName",
 		                    "GetPathIDs");
 		                    
 		                    props_tJDBCSP_1.setValue("isFunction",
 		                    true);
 		                    
 		                    props_tJDBCSP_1.setValue("returnResultIn",
 		                    "tag_path");
 		                    
 		                    props_tJDBCSP_1.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCSP_1.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCSP_1.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCSP_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCSP_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_tags_details_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCSP_1\",\"di.table.label\":\"dwh_tags_details_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCSP_1_1_fisrt sst_tJDBCSP_1_1_fisrt = new SchemaSettingTool_tJDBCSP_1_1_fisrt();
 		                    
 		                    props_tJDBCSP_1.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCSP_1_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCSP_1_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_tags_details_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCSP_1\",\"di.table.label\":\"dwh_tags_details_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCSP_1_2_fisrt sst_tJDBCSP_1_2_fisrt = new SchemaSettingTool_tJDBCSP_1_2_fisrt();
 		                    
 		                    props_tJDBCSP_1.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCSP_1_2_fisrt.getSchemaValue()));
 		                    
 		                    java.util.List<Object> tJDBCSP_1_spParameterTable_schemaColumns = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCSP_1_spParameterTable_schemaColumns.add("tag_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCSP_1.spParameterTable).setValue("schemaColumns",tJDBCSP_1_spParameterTable_schemaColumns);
 		                    
 		                    java.util.List<Object> tJDBCSP_1_spParameterTable_parameterTypes = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCSP_1_spParameterTable_parameterTypes.add("IN");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCSP_1.spParameterTable).setValue("parameterTypes",tJDBCSP_1_spParameterTable_parameterTypes);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCSP_1.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCSP_1 = props_tJDBCSP_1.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCSP_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCSP_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCSP_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCSP_1.referencedComponent.setReference(referencedComponentProperties_tJDBCSP_1);
        }
    }
globalMap.put("tJDBCSP_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCSP_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCSP_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCSP_1_MAPPINGS_URL", mappings_url_tJDBCSP_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCSP_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCSP_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCSP_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCSP_1 = null;
topology_tJDBCSP_1 = org.talend.components.api.component.ConnectorTopology.INCOMING_AND_OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCSP_1 = def_tJDBCSP_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCSP_1, topology_tJDBCSP_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCSP_1 = def_tJDBCSP_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCSP_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCSP_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCSP_1 = componentRuntime_tJDBCSP_1.initialize(container_tJDBCSP_1, props_tJDBCSP_1);

if (initVr_tJDBCSP_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCSP_1.getMessage());
}

if(componentRuntime_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCSP_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCSP_1;
	compDriverInitialization_tJDBCSP_1.runAtDriver(container_tJDBCSP_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCSP_1 = null;
if(componentRuntime_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCSP_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCSP_1;
	if (doesNodeBelongToRequest_tJDBCSP_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCSP_1 = sourceOrSink_tJDBCSP_1.validate(container_tJDBCSP_1);
        if (vr_tJDBCSP_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCSP_1.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCSP_1 = null;
    if (sourceOrSink_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCSP_1 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCSP_1;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCSP_1 = sink_tJDBCSP_1.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCSP_1) {
            writeOperation_tJDBCSP_1.initialize(container_tJDBCSP_1);
        }
        writer_tJDBCSP_1 = writeOperation_tJDBCSP_1.createWriter(container_tJDBCSP_1);
        if (doesNodeBelongToRequest_tJDBCSP_1) {
            writer_tJDBCSP_1.open("tJDBCSP_1");
        }

        resourceMap.put("writer_tJDBCSP_1", writer_tJDBCSP_1);
    } // end of "sourceOrSink_tJDBCSP_1 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCSP_1 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCSP_1.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCSP_1 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCSP_1 = props_tJDBCSP_1.getSchema(c_tJDBCSP_1, false);
    incomingEnforcer_tJDBCSP_1 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCSP_1);
                c_tJDBCSP_1 = null;
                for (org.talend.components.api.component.Connector currentConnector : props_tJDBCSP_1.getAvailableConnectors(null, true)) {
                    if (currentConnector.getName().equals("MAIN")) {
                        c_tJDBCSP_1 = currentConnector;
                    }
                }
                org.apache.avro.Schema mainSchema_tJDBCSP_1 = props_tJDBCSP_1.getSchema(c_tJDBCSP_1, true);
        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCSP_1OutMain = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(mainSchema_tJDBCSP_1, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCSP_1OutMain = null;

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCSP_1 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCSP_1 = null;


 



/**
 * [tJDBCSP_1 begin ] stop
 */



	
	/**
	 * [tJDBCInput_46 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_46", false);
		start_Hash.put("tJDBCInput_46", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_46";

	
		int tos_count_tJDBCInput_46 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_46 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_46 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_46 = (String)(restRequest_tJDBCInput_46 != null ? restRequest_tJDBCInput_46.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_46 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_46 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_46 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_46 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_46.createRuntimeProperties();
 		                    props_tJDBCInput_46.setValue("sql",
 		                    "SELECT tag_id,\n		upper(cast(tag_id as char(36))) as tag_join_id,\n		tag_name,\n		tag_description,\n		create_date,\n		update"
+"_date\nFROM	dwh_tags_details_history_view\nORDER BY (CASE \n			WHEN  update_date IS NOT NULL THEN update_date\n			ELSE  crea"
+"te_date\n		  END) ASC");
 		                    
 		                    props_tJDBCInput_46.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_46.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_46.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_46.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_46.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_46.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_46.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_46.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_46.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_46_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_tags_details_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_46\",\"di.table.label\":\"dwh_tags_details_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_46_1_fisrt sst_tJDBCInput_46_1_fisrt = new SchemaSettingTool_tJDBCInput_46_1_fisrt();
 		                    
 		                    props_tJDBCInput_46.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_46_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_46.tableSelection.setValue("tablename",
 		                    "dwh_tags_details_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_46_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_46_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_46_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_46_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_46_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_46_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_46_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_46.trimTable).setValue("trim",tJDBCInput_46_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_46_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_46_trimTable_columnName.add("tag_id");
 		                            
 		                            tJDBCInput_46_trimTable_columnName.add("tag_join_id");
 		                            
 		                            tJDBCInput_46_trimTable_columnName.add("tag_name");
 		                            
 		                            tJDBCInput_46_trimTable_columnName.add("tag_description");
 		                            
 		                            tJDBCInput_46_trimTable_columnName.add("create_date");
 		                            
 		                            tJDBCInput_46_trimTable_columnName.add("update_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_46.trimTable).setValue("columnName",tJDBCInput_46_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_46.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_46 = props_tJDBCInput_46.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_46 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_46 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_46 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_46.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_46);
        }
    }
globalMap.put("tJDBCInput_46_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_46);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_46= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_46_MAPPINGS_URL", mappings_url_tJDBCInput_46);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_46 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_46";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_46 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_46 = null;
topology_tJDBCInput_46 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_46 = def_tJDBCInput_46.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_46, topology_tJDBCInput_46);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_46 = def_tJDBCInput_46.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_46 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_46.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_46 = componentRuntime_tJDBCInput_46.initialize(container_tJDBCInput_46, props_tJDBCInput_46);

if (initVr_tJDBCInput_46.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_46.getMessage());
}

if(componentRuntime_tJDBCInput_46 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_46 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_46;
	compDriverInitialization_tJDBCInput_46.runAtDriver(container_tJDBCInput_46);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_46 = null;
if(componentRuntime_tJDBCInput_46 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_46 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_46;
	if (doesNodeBelongToRequest_tJDBCInput_46) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_46 = sourceOrSink_tJDBCInput_46.validate(container_tJDBCInput_46);
        if (vr_tJDBCInput_46.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_46.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_46 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_46 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_46;
        reader_tJDBCInput_46 = source_tJDBCInput_46.createReader(container_tJDBCInput_46);
	    reader_tJDBCInput_46 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_46, container_tJDBCInput_46);

            boolean multi_output_is_allowed_tJDBCInput_46 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_46 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_46.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_46 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_46 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_46 = props_tJDBCInput_46.getSchema(c_tJDBCInput_46, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_46 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_46, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_46 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_46 = reader_tJDBCInput_46.start();

        resourceMap.put("reader_tJDBCInput_46", reader_tJDBCInput_46);

        for (; available_tJDBCInput_46; available_tJDBCInput_46 = reader_tJDBCInput_46.advance()) {
			nb_line_tJDBCInput_46++;

			
			if (multi_output_is_allowed_tJDBCInput_46) {
				
					row10 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_46 = reader_tJDBCInput_46.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_46) {
						row10 = new row10Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_46 == null) {
            factory_tJDBCInput_46 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_46.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_46.setWrapped(factory_tJDBCInput_46.convertToAvro(data_tJDBCInput_46));
                Object columnValue_0_tJDBCInput_46 = outgoingEnforcer_tJDBCInput_46.get(0);
                        row10.tag_id = (Object) (columnValue_0_tJDBCInput_46);
                Object columnValue_1_tJDBCInput_46 = outgoingEnforcer_tJDBCInput_46.get(1);
                        row10.tag_join_id = (String) (columnValue_1_tJDBCInput_46);
                Object columnValue_2_tJDBCInput_46 = outgoingEnforcer_tJDBCInput_46.get(2);
                        row10.tag_name = (String) (columnValue_2_tJDBCInput_46);
                Object columnValue_3_tJDBCInput_46 = outgoingEnforcer_tJDBCInput_46.get(3);
                        row10.tag_description = (String) (columnValue_3_tJDBCInput_46);
                Object columnValue_4_tJDBCInput_46 = outgoingEnforcer_tJDBCInput_46.get(4);
                        row10.create_date = (java.util.Date) (columnValue_4_tJDBCInput_46);
                Object columnValue_5_tJDBCInput_46 = outgoingEnforcer_tJDBCInput_46.get(5);
                        row10.update_date = (java.util.Date) (columnValue_5_tJDBCInput_46);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_46) {
				java.util.Map<String,Object> info_tJDBCInput_46 = e_tJDBCInput_46.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_46 = null;
					if(info_tJDBCInput_46.containsKey("error")){
						errorMessage_tJDBCInput_46 = info_tJDBCInput_46.get("error");
					}else if(info_tJDBCInput_46.containsKey("errorMessage")){
						errorMessage_tJDBCInput_46 = info_tJDBCInput_46.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_46 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_46 = "Row "+ nb_line_tJDBCInput_46 + ": "+errorMessage_tJDBCInput_46;
					System.err.println(errorMessage_tJDBCInput_46);
				
					// If the record is reject, the main line record should put NULL
					row10 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_46 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_46 = null;


 



/**
 * [tJDBCInput_46 begin ] stop
 */
	
	/**
	 * [tJDBCInput_46 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_46";

	


 


	tos_count_tJDBCInput_46++;

/**
 * [tJDBCInput_46 main ] stop
 */
	
	/**
	 * [tJDBCInput_46 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_46";

	


 



/**
 * [tJDBCInput_46 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCSP_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCSP_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

        if (incomingEnforcer_tJDBCSP_1 != null) {
            incomingEnforcer_tJDBCSP_1.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCSP_1 != null && incomingEnforcer_tJDBCSP_1.getRuntimeSchema().getField("tag_id") != null){
                    incomingEnforcer_tJDBCSP_1.put("tag_id", row10.tag_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCSP_1 != null && incomingEnforcer_tJDBCSP_1.getRuntimeSchema().getField("tag_join_id") != null){
                    incomingEnforcer_tJDBCSP_1.put("tag_join_id", row10.tag_join_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCSP_1 != null && incomingEnforcer_tJDBCSP_1.getRuntimeSchema().getField("tag_name") != null){
                    incomingEnforcer_tJDBCSP_1.put("tag_name", row10.tag_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCSP_1 != null && incomingEnforcer_tJDBCSP_1.getRuntimeSchema().getField("tag_description") != null){
                    incomingEnforcer_tJDBCSP_1.put("tag_description", row10.tag_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCSP_1 != null && incomingEnforcer_tJDBCSP_1.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCSP_1.put("create_date", row10.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCSP_1 != null && incomingEnforcer_tJDBCSP_1.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCSP_1.put("update_date", row10.update_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCSP_1 = null;
        if (incomingEnforcer_tJDBCSP_1 != null) {
            data_tJDBCSP_1 = incomingEnforcer_tJDBCSP_1.getCurrentRecord();
        }
        
        if (writer_tJDBCSP_1 != null && data_tJDBCSP_1 != null) {
        	writer_tJDBCSP_1.write(data_tJDBCSP_1);
        }
        
        nb_line_tJDBCSP_1++;
        	if(!(writer_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback)) {
          		// For no feedback writer,just pass the input record to the output
          		if (data_tJDBCSP_1!=null) {
          			outgoingMainRecordsList_tJDBCSP_1 = java.util.Arrays.asList(data_tJDBCSP_1);
              	}
                }

 


	tos_count_tJDBCSP_1++;

/**
 * [tJDBCSP_1 main ] stop
 */
	
	/**
	 * [tJDBCSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCSP_1";

	

                row42 = null;
            	if (writer_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tJDBCSP_1 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tJDBCSP_1;
					writerWithFeedbackMain_tJDBCSP_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tJDBCSP_1, container_tJDBCSP_1);
					java.lang.Iterable<?> outgoingRecs_tJDBCSP_1 = writerWithFeedbackMain_tJDBCSP_1.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tJDBCSP_1 = outgoingRecs_tJDBCSP_1.iterator();
                    Object outgoingMain_tJDBCSP_1 = null;
                    if (outgoingMainRecords_tJDBCSP_1.hasNext()) {
                    	outgoingMainRecordsList_tJDBCSP_1 = outgoingRecs_tJDBCSP_1;
                    }
              	}
            	outgoingMainRecordsIt_tJDBCSP_1 = outgoingMainRecordsList_tJDBCSP_1.iterator();
            	while(outgoingMainRecordsIt_tJDBCSP_1.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tJDBCSP_1.hasNext()) {
            				row42 = new row42Struct();
            				Object outgoingMain_tJDBCSP_1 = outgoingMainRecordsIt_tJDBCSP_1.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCSP_1OutMain == null) {
            factory_tJDBCSP_1OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tJDBCSP_1.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCSP_1OutMain.setWrapped(factory_tJDBCSP_1OutMain.convertToAvro(outgoingMain_tJDBCSP_1));
                Object columnValue_0_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(0);
                        row42.tag_id = (Object) (columnValue_0_tJDBCSP_1OutMain);
                Object columnValue_1_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(1);
                        row42.tag_join_id = (String) (columnValue_1_tJDBCSP_1OutMain);
                Object columnValue_2_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(2);
                        row42.tag_name = (String) (columnValue_2_tJDBCSP_1OutMain);
                Object columnValue_3_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(3);
                        row42.tag_description = (String) (columnValue_3_tJDBCSP_1OutMain);
                Object columnValue_4_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(4);
                        row42.tag_path = (String) (columnValue_4_tJDBCSP_1OutMain);
                Object columnValue_5_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(5);
                        row42.create_date = (java.util.Date) (columnValue_5_tJDBCSP_1OutMain);
                Object columnValue_6_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(6);
                        row42.update_date = (java.util.Date) (columnValue_6_tJDBCSP_1OutMain);
            			} else {
            				row42 = null;
            			}
            		

 



/**
 * [tJDBCSP_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_28 main ] start
	 */

	

	
	
	currentComponent="tMap_28";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_28 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_28 = false;
		  boolean mainRowRejected_tMap_28 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row42.update_date == null ? TalendDate.compareDate(row42.create_date,context.runTime) <=0 : TalendDate.compareDate(row42.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row42'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row43" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow43 = false;
       		  	    	
       		  	    	
 							row43Struct row43ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_28) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_28 = false;
								
                        		    		    row43HashKey.tag_join_id = row42.tag_join_id ;
                        		    		
                        		    		    row43HashKey.tag_name = row42.tag_name ;
                        		    		
                        		    		    row43HashKey.tag_description = row42.tag_description ;
                        		    		
                        		    		    row43HashKey.tag_path = row42.tag_path ;
                        		    		

								
		                        	row43HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row43.lookup( row43HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row43.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_28 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row43 != null && tHash_Lookup_row43.getCount(row43HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row43' and it contains more one result from keys :  row43.tag_join_id = '" + row43HashKey.tag_join_id + "', row43.tag_name = '" + row43HashKey.tag_name + "', row43.tag_description = '" + row43HashKey.tag_description + "', row43.tag_path = '" + row43HashKey.tag_path + "'");
								} // G 071
							

							row43Struct row43 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row43Struct fromLookup_row43 = null;
							row43 = row43Default;
										 
							
								 
							
							
								if (tHash_Lookup_row43 !=null && tHash_Lookup_row43.hasNext()) { // G 099
								
							
								
								fromLookup_row43 = tHash_Lookup_row43.next();

							
							
								} // G 099
							
							

							if(fromLookup_row43 != null) {
								row43 = fromLookup_row43;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_28__Struct Var = Var__tMap_28;// ###############################
        // ###############################
        // # Output tables

tag_details_update = null;

if(!rejectedInnerJoin_tMap_28 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'tag_details_update'
// # Filter conditions 
if( rejectedInnerJoin_tMap_28 ) {
tag_details_update_tmp.tag_id = row42.tag_id;
tag_details_update_tmp.tag_name = StringHandling.TRIM(row42.tag_name);
tag_details_update_tmp.tag_description = StringHandling.TRIM(row42.tag_description);
tag_details_update_tmp.tag_path = row42.tag_path;
tag_details_update_tmp.tag_level = (short) StringHandling.COUNT(row42.tag_path,"/")  ;
tag_details_update_tmp.create_date = row42.create_date ;
tag_details_update_tmp.update_date = row42.update_date == null ? row42.update_date : context.runTime   ;
tag_details_update_tmp.delete_date = null;
tag_details_update = tag_details_update_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_28 = false;










 


	tos_count_tMap_28++;

/**
 * [tMap_28 main ] stop
 */
	
	/**
	 * [tMap_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_28";

	

 



/**
 * [tMap_28 process_data_begin ] stop
 */
// Start of branch "tag_details_update"
if(tag_details_update != null) { 



	
	/**
	 * [tJDBCOutput_28 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"tag_details_update"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_28 != null) {
            incomingEnforcer_tJDBCOutput_28.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_id") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_id", tag_details_update.tag_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_name") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_name", tag_details_update.tag_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_description") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_description", tag_details_update.tag_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_path") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_path", tag_details_update.tag_path);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_level") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_level", tag_details_update.tag_level);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_28.put("create_date", tag_details_update.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_28.put("update_date", tag_details_update.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_28.put("delete_date", tag_details_update.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_28 = null;
        if (incomingEnforcer_tJDBCOutput_28 != null) {
            data_tJDBCOutput_28 = incomingEnforcer_tJDBCOutput_28.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_28 != null && data_tJDBCOutput_28 != null) {
        	writer_tJDBCOutput_28.write(data_tJDBCOutput_28);
        }
        
        nb_line_tJDBCOutput_28++;

 


	tos_count_tJDBCOutput_28++;

/**
 * [tJDBCOutput_28 main ] stop
 */
	
	/**
	 * [tJDBCOutput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	


 



/**
 * [tJDBCOutput_28 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	


 



/**
 * [tJDBCOutput_28 process_data_end ] stop
 */

} // End of branch "tag_details_update"



	
		} // G_TM_M_280 close main tMap filter for table 'row42'
	
	
	/**
	 * [tMap_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_28";

	

 



/**
 * [tMap_28 process_data_end ] stop
 */



	
	/**
	 * [tJDBCSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCSP_1";

	
	} //end of data processing while block
	if (writer_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tJDBCSP_1).cleanWrites();
    }
	

 



/**
 * [tJDBCSP_1 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_46 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_46";

	


 



/**
 * [tJDBCInput_46 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_46 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_46";

	
// end of generic


resourceMap.put("finish_tJDBCInput_46", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_46 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_46 = null;
    if (reader_tJDBCInput_46 != null) {
        reader_tJDBCInput_46.close();
        resultMap_tJDBCInput_46 = reader_tJDBCInput_46.getReturnValues();
    }
if(resultMap_tJDBCInput_46!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_46 : resultMap_tJDBCInput_46.entrySet()) {
		switch(entry_tJDBCInput_46.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_46.setComponentData("tJDBCInput_46", "ERROR_MESSAGE", entry_tJDBCInput_46.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_46.setComponentData("tJDBCInput_46", "NB_LINE", entry_tJDBCInput_46.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_46.setComponentData("tJDBCInput_46", "NB_SUCCESS", entry_tJDBCInput_46.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_46.setComponentData("tJDBCInput_46", "NB_REJECT", entry_tJDBCInput_46.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_46 = new StringBuilder();
            for (int i_tJDBCInput_46 = 0; i_tJDBCInput_46 < entry_tJDBCInput_46.getKey().length(); i_tJDBCInput_46++) {
                char ch_tJDBCInput_46 = entry_tJDBCInput_46.getKey().charAt(i_tJDBCInput_46);
                if(Character.isUpperCase(ch_tJDBCInput_46) && i_tJDBCInput_46> 0) {
                	studio_key_tJDBCInput_46.append('_');
                }
                studio_key_tJDBCInput_46.append(ch_tJDBCInput_46);
            }
			container_tJDBCInput_46.setComponentData("tJDBCInput_46", studio_key_tJDBCInput_46.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_46.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_46", true);
end_Hash.put("tJDBCInput_46", System.currentTimeMillis());




/**
 * [tJDBCInput_46 end ] stop
 */

	
	/**
	 * [tJDBCSP_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCSP_1";

	
// end of generic


resourceMap.put("finish_tJDBCSP_1", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCSP_1 = null;
    if (writer_tJDBCSP_1 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCSP_1 = (org.talend.components.api.component.runtime.Result)writer_tJDBCSP_1.close();
        resultMap_tJDBCSP_1 = writer_tJDBCSP_1.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCSP_1), container_tJDBCSP_1);
    }
if(resultMap_tJDBCSP_1!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCSP_1 : resultMap_tJDBCSP_1.entrySet()) {
		switch(entry_tJDBCSP_1.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCSP_1.setComponentData("tJDBCSP_1", "ERROR_MESSAGE", entry_tJDBCSP_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCSP_1.setComponentData("tJDBCSP_1", "NB_LINE", entry_tJDBCSP_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCSP_1.setComponentData("tJDBCSP_1", "NB_SUCCESS", entry_tJDBCSP_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCSP_1.setComponentData("tJDBCSP_1", "NB_REJECT", entry_tJDBCSP_1.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCSP_1 = new StringBuilder();
            for (int i_tJDBCSP_1 = 0; i_tJDBCSP_1 < entry_tJDBCSP_1.getKey().length(); i_tJDBCSP_1++) {
                char ch_tJDBCSP_1 = entry_tJDBCSP_1.getKey().charAt(i_tJDBCSP_1);
                if(Character.isUpperCase(ch_tJDBCSP_1) && i_tJDBCSP_1> 0) {
                	studio_key_tJDBCSP_1.append('_');
                }
                studio_key_tJDBCSP_1.append(ch_tJDBCSP_1);
            }
			container_tJDBCSP_1.setComponentData("tJDBCSP_1", studio_key_tJDBCSP_1.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCSP_1.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tJDBCSP_1", true);
end_Hash.put("tJDBCSP_1", System.currentTimeMillis());




/**
 * [tJDBCSP_1 end ] stop
 */
	
	/**
	 * [tJDBCSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCSP_1";

	

                row42 = null;
            	if (writer_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tJDBCSP_1 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tJDBCSP_1;
					writerWithFeedbackMain_tJDBCSP_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tJDBCSP_1, container_tJDBCSP_1);
					java.lang.Iterable<?> outgoingRecs_tJDBCSP_1 = writerWithFeedbackMain_tJDBCSP_1.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tJDBCSP_1 = outgoingRecs_tJDBCSP_1.iterator();
                    Object outgoingMain_tJDBCSP_1 = null;
                    if (outgoingMainRecords_tJDBCSP_1.hasNext()) {
                    	outgoingMainRecordsList_tJDBCSP_1 = outgoingRecs_tJDBCSP_1;
                    }
              	}
            	outgoingMainRecordsIt_tJDBCSP_1 = outgoingMainRecordsList_tJDBCSP_1.iterator();
            	while(outgoingMainRecordsIt_tJDBCSP_1.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tJDBCSP_1.hasNext()) {
            				row42 = new row42Struct();
            				Object outgoingMain_tJDBCSP_1 = outgoingMainRecordsIt_tJDBCSP_1.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCSP_1OutMain == null) {
            factory_tJDBCSP_1OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tJDBCSP_1.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCSP_1OutMain.setWrapped(factory_tJDBCSP_1OutMain.convertToAvro(outgoingMain_tJDBCSP_1));
                Object columnValue_0_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(0);
                        row42.tag_id = (Object) (columnValue_0_tJDBCSP_1OutMain);
                Object columnValue_1_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(1);
                        row42.tag_join_id = (String) (columnValue_1_tJDBCSP_1OutMain);
                Object columnValue_2_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(2);
                        row42.tag_name = (String) (columnValue_2_tJDBCSP_1OutMain);
                Object columnValue_3_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(3);
                        row42.tag_description = (String) (columnValue_3_tJDBCSP_1OutMain);
                Object columnValue_4_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(4);
                        row42.tag_path = (String) (columnValue_4_tJDBCSP_1OutMain);
                Object columnValue_5_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(5);
                        row42.create_date = (java.util.Date) (columnValue_5_tJDBCSP_1OutMain);
                Object columnValue_6_tJDBCSP_1OutMain = outgoingEnforcer_tJDBCSP_1OutMain.get(6);
                        row42.update_date = (java.util.Date) (columnValue_6_tJDBCSP_1OutMain);
            			} else {
            				row42 = null;
            			}
            		

 



/**
 * [tJDBCSP_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_28 main ] start
	 */

	

	
	
	currentComponent="tMap_28";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_28 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_28 = false;
		  boolean mainRowRejected_tMap_28 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row42.update_date == null ? TalendDate.compareDate(row42.create_date,context.runTime) <=0 : TalendDate.compareDate(row42.update_date,context.runTime) <=0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row42'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row43" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow43 = false;
       		  	    	
       		  	    	
 							row43Struct row43ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_28) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_28 = false;
								
                        		    		    row43HashKey.tag_join_id = row42.tag_join_id ;
                        		    		
                        		    		    row43HashKey.tag_name = row42.tag_name ;
                        		    		
                        		    		    row43HashKey.tag_description = row42.tag_description ;
                        		    		
                        		    		    row43HashKey.tag_path = row42.tag_path ;
                        		    		

								
		                        	row43HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row43.lookup( row43HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row43.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_28 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row43 != null && tHash_Lookup_row43.getCount(row43HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row43' and it contains more one result from keys :  row43.tag_join_id = '" + row43HashKey.tag_join_id + "', row43.tag_name = '" + row43HashKey.tag_name + "', row43.tag_description = '" + row43HashKey.tag_description + "', row43.tag_path = '" + row43HashKey.tag_path + "'");
								} // G 071
							

							row43Struct row43 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row43Struct fromLookup_row43 = null;
							row43 = row43Default;
										 
							
								 
							
							
								if (tHash_Lookup_row43 !=null && tHash_Lookup_row43.hasNext()) { // G 099
								
							
								
								fromLookup_row43 = tHash_Lookup_row43.next();

							
							
								} // G 099
							
							

							if(fromLookup_row43 != null) {
								row43 = fromLookup_row43;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_28__Struct Var = Var__tMap_28;// ###############################
        // ###############################
        // # Output tables

tag_details_update = null;

if(!rejectedInnerJoin_tMap_28 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'tag_details_update'
// # Filter conditions 
if( rejectedInnerJoin_tMap_28 ) {
tag_details_update_tmp.tag_id = row42.tag_id;
tag_details_update_tmp.tag_name = StringHandling.TRIM(row42.tag_name);
tag_details_update_tmp.tag_description = StringHandling.TRIM(row42.tag_description);
tag_details_update_tmp.tag_path = row42.tag_path;
tag_details_update_tmp.tag_level = (short) StringHandling.COUNT(row42.tag_path,"/")  ;
tag_details_update_tmp.create_date = row42.create_date ;
tag_details_update_tmp.update_date = row42.update_date == null ? row42.update_date : context.runTime   ;
tag_details_update_tmp.delete_date = null;
tag_details_update = tag_details_update_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_28 = false;










 


	tos_count_tMap_28++;

/**
 * [tMap_28 main ] stop
 */
	
	/**
	 * [tMap_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_28";

	

 



/**
 * [tMap_28 process_data_begin ] stop
 */
// Start of branch "tag_details_update"
if(tag_details_update != null) { 



	
	/**
	 * [tJDBCOutput_28 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"tag_details_update"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_28 != null) {
            incomingEnforcer_tJDBCOutput_28.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_id") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_id", tag_details_update.tag_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_name") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_name", tag_details_update.tag_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_description") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_description", tag_details_update.tag_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_path") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_path", tag_details_update.tag_path);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("tag_level") != null){
                    incomingEnforcer_tJDBCOutput_28.put("tag_level", tag_details_update.tag_level);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_28.put("create_date", tag_details_update.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_28.put("update_date", tag_details_update.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_28 != null && incomingEnforcer_tJDBCOutput_28.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_28.put("delete_date", tag_details_update.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_28 = null;
        if (incomingEnforcer_tJDBCOutput_28 != null) {
            data_tJDBCOutput_28 = incomingEnforcer_tJDBCOutput_28.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_28 != null && data_tJDBCOutput_28 != null) {
        	writer_tJDBCOutput_28.write(data_tJDBCOutput_28);
        }
        
        nb_line_tJDBCOutput_28++;

 


	tos_count_tJDBCOutput_28++;

/**
 * [tJDBCOutput_28 main ] stop
 */
	
	/**
	 * [tJDBCOutput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	


 



/**
 * [tJDBCOutput_28 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	


 



/**
 * [tJDBCOutput_28 process_data_end ] stop
 */

} // End of branch "tag_details_update"



	
		} // G_TM_M_280 close main tMap filter for table 'row42'
	
	
	/**
	 * [tMap_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_28";

	

 



/**
 * [tMap_28 process_data_end ] stop
 */



	
	/**
	 * [tJDBCSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCSP_1";

	
	} //end of data processing while block
	if (writer_tJDBCSP_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tJDBCSP_1).cleanWrites();
    }
	

 



/**
 * [tJDBCSP_1 process_data_end ] stop
 */

	
	/**
	 * [tMap_28 end ] start
	 */

	

	
	
	currentComponent="tMap_28";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row43 != null) {
						tHash_Lookup_row43.endGet();
					}
					globalMap.remove( "tHash_Lookup_row43" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tMap_28", true);
end_Hash.put("tMap_28", System.currentTimeMillis());




/**
 * [tMap_28 end ] stop
 */

	
	/**
	 * [tJDBCOutput_28 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_28", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_28 = null;
    if (writer_tJDBCOutput_28 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_28 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_28.close();
        resultMap_tJDBCOutput_28 = writer_tJDBCOutput_28.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_28), container_tJDBCOutput_28);
    }
if(resultMap_tJDBCOutput_28!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_28 : resultMap_tJDBCOutput_28.entrySet()) {
		switch(entry_tJDBCOutput_28.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_28.setComponentData("tJDBCOutput_28", "ERROR_MESSAGE", entry_tJDBCOutput_28.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_28.setComponentData("tJDBCOutput_28", "NB_LINE", entry_tJDBCOutput_28.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_28.setComponentData("tJDBCOutput_28", "NB_SUCCESS", entry_tJDBCOutput_28.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_28.setComponentData("tJDBCOutput_28", "NB_REJECT", entry_tJDBCOutput_28.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_28 = new StringBuilder();
            for (int i_tJDBCOutput_28 = 0; i_tJDBCOutput_28 < entry_tJDBCOutput_28.getKey().length(); i_tJDBCOutput_28++) {
                char ch_tJDBCOutput_28 = entry_tJDBCOutput_28.getKey().charAt(i_tJDBCOutput_28);
                if(Character.isUpperCase(ch_tJDBCOutput_28) && i_tJDBCOutput_28> 0) {
                	studio_key_tJDBCOutput_28.append('_');
                }
                studio_key_tJDBCOutput_28.append(ch_tJDBCOutput_28);
            }
			container_tJDBCOutput_28.setComponentData("tJDBCOutput_28", studio_key_tJDBCOutput_28.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_28.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"tag_details_update");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_28", true);
end_Hash.put("tJDBCOutput_28", System.currentTimeMillis());




/**
 * [tJDBCOutput_28 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_46:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk221", 0, "ok");
								} 
							
							tJDBCInput_50Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_28"
					     			globalMap.remove("tHash_Lookup_row43"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_46 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_46";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_46")==null){
    if(resourceMap.get("reader_tJDBCInput_46")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_46")).close();
		} catch (java.io.IOException e_tJDBCInput_46) {
			String errorMessage_tJDBCInput_46 = "failed to release the resource in tJDBCInput_46 :" + e_tJDBCInput_46.getMessage();
			System.err.println(errorMessage_tJDBCInput_46);
		}
	}
}
 



/**
 * [tJDBCInput_46 finally ] stop
 */

	
	/**
	 * [tJDBCSP_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCSP_1";

	
// finally of generic


if(resourceMap.get("finish_tJDBCSP_1")==null){
    if(resourceMap.get("writer_tJDBCSP_1")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCSP_1")).close();
		} catch (java.io.IOException e_tJDBCSP_1) {
			String errorMessage_tJDBCSP_1 = "failed to release the resource in tJDBCSP_1 :" + e_tJDBCSP_1.getMessage();
			System.err.println(errorMessage_tJDBCSP_1);
		}
	}
}
 



/**
 * [tJDBCSP_1 finally ] stop
 */

	
	/**
	 * [tMap_28 finally ] start
	 */

	

	
	
	currentComponent="tMap_28";

	

 



/**
 * [tMap_28 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_28 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_28";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_28")==null){
    if(resourceMap.get("writer_tJDBCOutput_28")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_28")).close();
		} catch (java.io.IOException e_tJDBCOutput_28) {
			String errorMessage_tJDBCOutput_28 = "failed to release the resource in tJDBCOutput_28 :" + e_tJDBCOutput_28.getMessage();
			System.err.println(errorMessage_tJDBCOutput_28);
		}
	}
}
 



/**
 * [tJDBCOutput_28 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_46_SUBPROCESS_STATE", 1);
	}
	


public static class delete_tag_detalisStruct implements routines.system.IPersistableRow<delete_tag_detalisStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object tag_id;

				public Object getTag_id () {
					return this.tag_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public String tag_path;

				public String getTag_path () {
					return this.tag_path;
				}
				
			    public short tag_level;

				public short getTag_level () {
					return this.tag_level;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public java.util.Date delete_date;

				public java.util.Date getDelete_date () {
					return this.delete_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			        this.tag_level = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			        this.tag_level = dis.readShort();
					
					this.create_date = readDate(dis);
					
					this.update_date = readDate(dis);
					
					this.delete_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// short
				
		            	dos.writeShort(this.tag_level);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// short
				
		            	dos.writeShort(this.tag_level);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// java.util.Date
				
						writeDate(this.delete_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_id="+String.valueOf(tag_id));
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",tag_path="+tag_path);
		sb.append(",tag_level="+String.valueOf(tag_level));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",delete_date="+String.valueOf(delete_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(delete_tag_detalisStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object tag_id;

				public Object getTag_id () {
					return this.tag_id;
				}
				
			    public String tag_join_id;

				public String getTag_join_id () {
					return this.tag_join_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public String tag_path;

				public String getTag_path () {
					return this.tag_path;
				}
				
			    public Short tag_level;

				public Short getTag_level () {
					return this.tag_level;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tag_level = null;
           				} else {
           			    	this.tag_level = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tag_level = null;
           				} else {
           			    	this.tag_level = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// Short
				
						if(this.tag_level == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.tag_level);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// Short
				
						if(this.tag_level == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.tag_level);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_id="+String.valueOf(tag_id));
		sb.append(",tag_join_id="+tag_join_id);
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",tag_path="+tag_path);
		sb.append(",tag_level="+String.valueOf(tag_level));
		sb.append(",create_date="+String.valueOf(create_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_50Struct implements routines.system.IPersistableRow<after_tJDBCInput_50Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public Object tag_id;

				public Object getTag_id () {
					return this.tag_id;
				}
				
			    public String tag_join_id;

				public String getTag_join_id () {
					return this.tag_join_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public String tag_path;

				public String getTag_path () {
					return this.tag_path;
				}
				
			    public Short tag_level;

				public Short getTag_level () {
					return this.tag_level;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tag_level = null;
           				} else {
           			    	this.tag_level = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
						this.tag_id = (Object) dis.readObject();
					
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tag_level = null;
           				} else {
           			    	this.tag_level = dis.readShort();
           				}
					
					this.create_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// Short
				
						if(this.tag_level == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.tag_level);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.tag_id);
					
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
					// Short
				
						if(this.tag_level == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.tag_level);
		            	}
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_id="+String.valueOf(tag_id));
		sb.append(",tag_join_id="+tag_join_id);
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",tag_path="+tag_path);
		sb.append(",tag_level="+String.valueOf(tag_level));
		sb.append(",create_date="+String.valueOf(create_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_50Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_50Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_50_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_49Process(globalMap);

		row41Struct row41 = new row41Struct();
delete_tag_detalisStruct delete_tag_detalis = new delete_tag_detalisStruct();





	
	/**
	 * [tJDBCOutput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_29", false);
		start_Hash.put("tJDBCOutput_29", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_29";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"delete_tag_detalis");
					}
				
		int tos_count_tJDBCOutput_29 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_29 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_29 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_29 = (String)(restRequest_tJDBCOutput_29 != null ? restRequest_tJDBCOutput_29.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_29 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_29 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_29 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_29 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_29.createRuntimeProperties();
 		                    props_tJDBCOutput_29.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_29.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_29.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_29.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_29.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_29.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_29.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_29.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_29.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_29.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_29.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_29.tableSelection.setValue("tablename",
 		                    "tag_details");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_29_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_details\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_level\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"tag_level\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_level\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_29\",\"di.table.label\":\"tag_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_29_1_fisrt sst_tJDBCOutput_29_1_fisrt = new SchemaSettingTool_tJDBCOutput_29_1_fisrt();
 		                    
 		                    props_tJDBCOutput_29.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_29_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_29_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_details\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_level\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"tag_level\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_level\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_29\",\"di.table.label\":\"tag_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_29_2_fisrt sst_tJDBCOutput_29_2_fisrt = new SchemaSettingTool_tJDBCOutput_29_2_fisrt();
 		                    
 		                    props_tJDBCOutput_29.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_29_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_29_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_level\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"tag_level\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_level\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"delete_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"delete_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"delete_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_29\",\"di.table.label\":\"tag_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_29_3_fisrt sst_tJDBCOutput_29_3_fisrt = new SchemaSettingTool_tJDBCOutput_29_3_fisrt();
 		                    
 		                    props_tJDBCOutput_29.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_29_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_29.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_29.additionalColumns.setValue("referenceColumns",
 		                    "tag_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_29.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_29 = props_tJDBCOutput_29.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_29 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_29 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_29 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_29.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_29);
        }
    }
globalMap.put("tJDBCOutput_29_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_29);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_29= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_29_MAPPINGS_URL", mappings_url_tJDBCOutput_29);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_29 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_29";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_29 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_29 = null;
topology_tJDBCOutput_29 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_29 = def_tJDBCOutput_29.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_29, topology_tJDBCOutput_29);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_29 = def_tJDBCOutput_29.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_29 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_29.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_29 = componentRuntime_tJDBCOutput_29.initialize(container_tJDBCOutput_29, props_tJDBCOutput_29);

if (initVr_tJDBCOutput_29.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_29.getMessage());
}

if(componentRuntime_tJDBCOutput_29 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_29 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_29;
	compDriverInitialization_tJDBCOutput_29.runAtDriver(container_tJDBCOutput_29);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_29 = null;
if(componentRuntime_tJDBCOutput_29 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_29 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_29;
	if (doesNodeBelongToRequest_tJDBCOutput_29) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_29 = sourceOrSink_tJDBCOutput_29.validate(container_tJDBCOutput_29);
        if (vr_tJDBCOutput_29.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_29.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_29 = null;
    if (sourceOrSink_tJDBCOutput_29 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_29 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_29;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_29 = sink_tJDBCOutput_29.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_29) {
            writeOperation_tJDBCOutput_29.initialize(container_tJDBCOutput_29);
        }
        writer_tJDBCOutput_29 = writeOperation_tJDBCOutput_29.createWriter(container_tJDBCOutput_29);
        if (doesNodeBelongToRequest_tJDBCOutput_29) {
            writer_tJDBCOutput_29.open("tJDBCOutput_29");
        }

        resourceMap.put("writer_tJDBCOutput_29", writer_tJDBCOutput_29);
    } // end of "sourceOrSink_tJDBCOutput_29 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_29 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_29.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_29 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_29 = props_tJDBCOutput_29.getSchema(c_tJDBCOutput_29, false);
    incomingEnforcer_tJDBCOutput_29 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_29);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_29 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_29 = null;


 



/**
 * [tJDBCOutput_29 begin ] stop
 */



	
	/**
	 * [tMap_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_29", false);
		start_Hash.put("tMap_29", System.currentTimeMillis());
		
	
	currentComponent="tMap_29";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tMap_29 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_29__Struct  {
}
Var__tMap_29__Struct Var__tMap_29 = new Var__tMap_29__Struct();
// ###############################

// ###############################
// # Outputs initialization
delete_tag_detalisStruct delete_tag_detalis_tmp = new delete_tag_detalisStruct();
// ###############################

        
        



        









 



/**
 * [tMap_29 begin ] stop
 */



	
	/**
	 * [tJDBCInput_50 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_50", false);
		start_Hash.put("tJDBCInput_50", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_50";

	
		int tos_count_tJDBCInput_50 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_50 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_50 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_50 = (String)(restRequest_tJDBCInput_50 != null ? restRequest_tJDBCInput_50.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_50 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_50 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_50 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_50 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_50.createRuntimeProperties();
 		                    props_tJDBCInput_50.setValue("sql",
 		                    "SELECT \n  tag_id, \n  upper(cast(tag_id as char(36))) as tag_join_id,\n  tag_name, \n  tag_description, \n  tag_path,\n  "
+"tag_level,\n  create_date\nFROM v4_5_latest_tags_details");
 		                    
 		                    props_tJDBCInput_50.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_50.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_50.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_50.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_50.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_50.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_50.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_50.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_50.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_50_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_tags_details\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"tag_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_level\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"tag_level\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_level\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_50\",\"di.table.label\":\"v4_5_latest_tags_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_50_1_fisrt sst_tJDBCInput_50_1_fisrt = new SchemaSettingTool_tJDBCInput_50_1_fisrt();
 		                    
 		                    props_tJDBCInput_50.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_50_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_50.tableSelection.setValue("tablename",
 		                    "v4_5_latest_tags_details");
 		                    
 		                    java.util.List<Object> tJDBCInput_50_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_50_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_50_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_50_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_50_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_50_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_50_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_50_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_50.trimTable).setValue("trim",tJDBCInput_50_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_50_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_50_trimTable_columnName.add("tag_id");
 		                            
 		                            tJDBCInput_50_trimTable_columnName.add("tag_join_id");
 		                            
 		                            tJDBCInput_50_trimTable_columnName.add("tag_name");
 		                            
 		                            tJDBCInput_50_trimTable_columnName.add("tag_description");
 		                            
 		                            tJDBCInput_50_trimTable_columnName.add("tag_path");
 		                            
 		                            tJDBCInput_50_trimTable_columnName.add("tag_level");
 		                            
 		                            tJDBCInput_50_trimTable_columnName.add("create_date");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_50.trimTable).setValue("columnName",tJDBCInput_50_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_50.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_50 = props_tJDBCInput_50.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_50 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_50 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_50 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_50.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_50);
        }
    }
globalMap.put("tJDBCInput_50_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_50);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_50= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_50_MAPPINGS_URL", mappings_url_tJDBCInput_50);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_50 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_50";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_50 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_50 = null;
topology_tJDBCInput_50 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_50 = def_tJDBCInput_50.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_50, topology_tJDBCInput_50);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_50 = def_tJDBCInput_50.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_50 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_50.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_50 = componentRuntime_tJDBCInput_50.initialize(container_tJDBCInput_50, props_tJDBCInput_50);

if (initVr_tJDBCInput_50.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_50.getMessage());
}

if(componentRuntime_tJDBCInput_50 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_50 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_50;
	compDriverInitialization_tJDBCInput_50.runAtDriver(container_tJDBCInput_50);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_50 = null;
if(componentRuntime_tJDBCInput_50 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_50 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_50;
	if (doesNodeBelongToRequest_tJDBCInput_50) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_50 = sourceOrSink_tJDBCInput_50.validate(container_tJDBCInput_50);
        if (vr_tJDBCInput_50.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_50.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_50 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_50 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_50;
        reader_tJDBCInput_50 = source_tJDBCInput_50.createReader(container_tJDBCInput_50);
	    reader_tJDBCInput_50 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_50, container_tJDBCInput_50);

            boolean multi_output_is_allowed_tJDBCInput_50 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_50 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_50.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_50 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_50 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_50 = props_tJDBCInput_50.getSchema(c_tJDBCInput_50, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_50 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_50, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_50 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_50 = reader_tJDBCInput_50.start();

        resourceMap.put("reader_tJDBCInput_50", reader_tJDBCInput_50);

        for (; available_tJDBCInput_50; available_tJDBCInput_50 = reader_tJDBCInput_50.advance()) {
			nb_line_tJDBCInput_50++;

			
			if (multi_output_is_allowed_tJDBCInput_50) {
				
					row41 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_50 = reader_tJDBCInput_50.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_50) {
						row41 = new row41Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_50 == null) {
            factory_tJDBCInput_50 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_50.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_50.setWrapped(factory_tJDBCInput_50.convertToAvro(data_tJDBCInput_50));
                Object columnValue_0_tJDBCInput_50 = outgoingEnforcer_tJDBCInput_50.get(0);
                        row41.tag_id = (Object) (columnValue_0_tJDBCInput_50);
                Object columnValue_1_tJDBCInput_50 = outgoingEnforcer_tJDBCInput_50.get(1);
                        row41.tag_join_id = (String) (columnValue_1_tJDBCInput_50);
                Object columnValue_2_tJDBCInput_50 = outgoingEnforcer_tJDBCInput_50.get(2);
                        row41.tag_name = (String) (columnValue_2_tJDBCInput_50);
                Object columnValue_3_tJDBCInput_50 = outgoingEnforcer_tJDBCInput_50.get(3);
                        row41.tag_description = (String) (columnValue_3_tJDBCInput_50);
                Object columnValue_4_tJDBCInput_50 = outgoingEnforcer_tJDBCInput_50.get(4);
                        row41.tag_path = (String) (columnValue_4_tJDBCInput_50);
                Object columnValue_5_tJDBCInput_50 = outgoingEnforcer_tJDBCInput_50.get(5);
                        row41.tag_level = (Short) (columnValue_5_tJDBCInput_50);
                Object columnValue_6_tJDBCInput_50 = outgoingEnforcer_tJDBCInput_50.get(6);
                        row41.create_date = (java.util.Date) (columnValue_6_tJDBCInput_50);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_50) {
				java.util.Map<String,Object> info_tJDBCInput_50 = e_tJDBCInput_50.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_50 = null;
					if(info_tJDBCInput_50.containsKey("error")){
						errorMessage_tJDBCInput_50 = info_tJDBCInput_50.get("error");
					}else if(info_tJDBCInput_50.containsKey("errorMessage")){
						errorMessage_tJDBCInput_50 = info_tJDBCInput_50.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_50 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_50 = "Row "+ nb_line_tJDBCInput_50 + ": "+errorMessage_tJDBCInput_50;
					System.err.println(errorMessage_tJDBCInput_50);
				
					// If the record is reject, the main line record should put NULL
					row41 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_50 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_50 = null;


 



/**
 * [tJDBCInput_50 begin ] stop
 */
	
	/**
	 * [tJDBCInput_50 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_50";

	


 


	tos_count_tJDBCInput_50++;

/**
 * [tJDBCInput_50 main ] stop
 */
	
	/**
	 * [tJDBCInput_50 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_50";

	


 



/**
 * [tJDBCInput_50 process_data_begin ] stop
 */

	
	/**
	 * [tMap_29 main ] start
	 */

	

	
	
	currentComponent="tMap_29";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_29 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_29 = false;
		  boolean mainRowRejected_tMap_29 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_29) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_29 = false;
								
                        		    		    row13HashKey.tag_join_id = row41.tag_join_id ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row13.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_29 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.tag_join_id = '" + row13HashKey.tag_join_id + "'");
								} // G 071
							

							row13Struct row13 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_29__Struct Var = Var__tMap_29;// ###############################
        // ###############################
        // # Output tables

delete_tag_detalis = null;

if(!rejectedInnerJoin_tMap_29 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'delete_tag_detalis'
// # Filter conditions 
if( rejectedInnerJoin_tMap_29 ) {
delete_tag_detalis_tmp.tag_id = row41.tag_id;
delete_tag_detalis_tmp.tag_name = row41.tag_name;
delete_tag_detalis_tmp.tag_description = row41.tag_description;
delete_tag_detalis_tmp.tag_path = row41.tag_path ;
delete_tag_detalis_tmp.tag_level = row41.tag_level ;
delete_tag_detalis_tmp.create_date = row41.create_date;
delete_tag_detalis_tmp.update_date = context.runTime;
delete_tag_detalis_tmp.delete_date = context.runTime;
delete_tag_detalis = delete_tag_detalis_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_29 = false;










 


	tos_count_tMap_29++;

/**
 * [tMap_29 main ] stop
 */
	
	/**
	 * [tMap_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_29";

	

 



/**
 * [tMap_29 process_data_begin ] stop
 */
// Start of branch "delete_tag_detalis"
if(delete_tag_detalis != null) { 



	
	/**
	 * [tJDBCOutput_29 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_29";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"delete_tag_detalis"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_29 != null) {
            incomingEnforcer_tJDBCOutput_29.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("tag_id") != null){
                    incomingEnforcer_tJDBCOutput_29.put("tag_id", delete_tag_detalis.tag_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("tag_name") != null){
                    incomingEnforcer_tJDBCOutput_29.put("tag_name", delete_tag_detalis.tag_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("tag_description") != null){
                    incomingEnforcer_tJDBCOutput_29.put("tag_description", delete_tag_detalis.tag_description);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("tag_path") != null){
                    incomingEnforcer_tJDBCOutput_29.put("tag_path", delete_tag_detalis.tag_path);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("tag_level") != null){
                    incomingEnforcer_tJDBCOutput_29.put("tag_level", delete_tag_detalis.tag_level);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_29.put("create_date", delete_tag_detalis.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_29.put("update_date", delete_tag_detalis.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_29 != null && incomingEnforcer_tJDBCOutput_29.getRuntimeSchema().getField("delete_date") != null){
                    incomingEnforcer_tJDBCOutput_29.put("delete_date", delete_tag_detalis.delete_date);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_29 = null;
        if (incomingEnforcer_tJDBCOutput_29 != null) {
            data_tJDBCOutput_29 = incomingEnforcer_tJDBCOutput_29.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_29 != null && data_tJDBCOutput_29 != null) {
        	writer_tJDBCOutput_29.write(data_tJDBCOutput_29);
        }
        
        nb_line_tJDBCOutput_29++;

 


	tos_count_tJDBCOutput_29++;

/**
 * [tJDBCOutput_29 main ] stop
 */
	
	/**
	 * [tJDBCOutput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_29";

	


 



/**
 * [tJDBCOutput_29 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_29";

	


 



/**
 * [tJDBCOutput_29 process_data_end ] stop
 */

} // End of branch "delete_tag_detalis"




	
	/**
	 * [tMap_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_29";

	

 



/**
 * [tMap_29 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_50 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_50";

	


 



/**
 * [tJDBCInput_50 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_50 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_50";

	
// end of generic


resourceMap.put("finish_tJDBCInput_50", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_50 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_50 = null;
    if (reader_tJDBCInput_50 != null) {
        reader_tJDBCInput_50.close();
        resultMap_tJDBCInput_50 = reader_tJDBCInput_50.getReturnValues();
    }
if(resultMap_tJDBCInput_50!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_50 : resultMap_tJDBCInput_50.entrySet()) {
		switch(entry_tJDBCInput_50.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_50.setComponentData("tJDBCInput_50", "ERROR_MESSAGE", entry_tJDBCInput_50.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_50.setComponentData("tJDBCInput_50", "NB_LINE", entry_tJDBCInput_50.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_50.setComponentData("tJDBCInput_50", "NB_SUCCESS", entry_tJDBCInput_50.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_50.setComponentData("tJDBCInput_50", "NB_REJECT", entry_tJDBCInput_50.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_50 = new StringBuilder();
            for (int i_tJDBCInput_50 = 0; i_tJDBCInput_50 < entry_tJDBCInput_50.getKey().length(); i_tJDBCInput_50++) {
                char ch_tJDBCInput_50 = entry_tJDBCInput_50.getKey().charAt(i_tJDBCInput_50);
                if(Character.isUpperCase(ch_tJDBCInput_50) && i_tJDBCInput_50> 0) {
                	studio_key_tJDBCInput_50.append('_');
                }
                studio_key_tJDBCInput_50.append(ch_tJDBCInput_50);
            }
			container_tJDBCInput_50.setComponentData("tJDBCInput_50", studio_key_tJDBCInput_50.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_50.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_50", true);
end_Hash.put("tJDBCInput_50", System.currentTimeMillis());




/**
 * [tJDBCInput_50 end ] stop
 */

	
	/**
	 * [tMap_29 end ] start
	 */

	

	
	
	currentComponent="tMap_29";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tMap_29", true);
end_Hash.put("tMap_29", System.currentTimeMillis());




/**
 * [tMap_29 end ] stop
 */

	
	/**
	 * [tJDBCOutput_29 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_29";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_29", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_29 = null;
    if (writer_tJDBCOutput_29 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_29 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_29.close();
        resultMap_tJDBCOutput_29 = writer_tJDBCOutput_29.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_29), container_tJDBCOutput_29);
    }
if(resultMap_tJDBCOutput_29!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_29 : resultMap_tJDBCOutput_29.entrySet()) {
		switch(entry_tJDBCOutput_29.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_29.setComponentData("tJDBCOutput_29", "ERROR_MESSAGE", entry_tJDBCOutput_29.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_29.setComponentData("tJDBCOutput_29", "NB_LINE", entry_tJDBCOutput_29.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_29.setComponentData("tJDBCOutput_29", "NB_SUCCESS", entry_tJDBCOutput_29.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_29.setComponentData("tJDBCOutput_29", "NB_REJECT", entry_tJDBCOutput_29.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_29 = new StringBuilder();
            for (int i_tJDBCOutput_29 = 0; i_tJDBCOutput_29 < entry_tJDBCOutput_29.getKey().length(); i_tJDBCOutput_29++) {
                char ch_tJDBCOutput_29 = entry_tJDBCOutput_29.getKey().charAt(i_tJDBCOutput_29);
                if(Character.isUpperCase(ch_tJDBCOutput_29) && i_tJDBCOutput_29> 0) {
                	studio_key_tJDBCOutput_29.append('_');
                }
                studio_key_tJDBCOutput_29.append(ch_tJDBCOutput_29);
            }
			container_tJDBCOutput_29.setComponentData("tJDBCOutput_29", studio_key_tJDBCOutput_29.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_29.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"delete_tag_detalis");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_29", true);
end_Hash.put("tJDBCOutput_29", System.currentTimeMillis());




/**
 * [tJDBCOutput_29 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_50:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk222", 0, "ok");
								} 
							
							tJDBCRow_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_29"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_50 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_50";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_50")==null){
    if(resourceMap.get("reader_tJDBCInput_50")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_50")).close();
		} catch (java.io.IOException e_tJDBCInput_50) {
			String errorMessage_tJDBCInput_50 = "failed to release the resource in tJDBCInput_50 :" + e_tJDBCInput_50.getMessage();
			System.err.println(errorMessage_tJDBCInput_50);
		}
	}
}
 



/**
 * [tJDBCInput_50 finally ] stop
 */

	
	/**
	 * [tMap_29 finally ] start
	 */

	

	
	
	currentComponent="tMap_29";

	

 



/**
 * [tMap_29 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_29 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_29";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_29")==null){
    if(resourceMap.get("writer_tJDBCOutput_29")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_29")).close();
		} catch (java.io.IOException e_tJDBCOutput_29) {
			String errorMessage_tJDBCOutput_29 = "failed to release the resource in tJDBCOutput_29 :" + e_tJDBCOutput_29.getMessage();
			System.err.println(errorMessage_tJDBCOutput_29);
		}
	}
}
 



/**
 * [tJDBCOutput_29 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_50_SUBPROCESS_STATE", 1);
	}
	

public void tJDBCRow_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCRow_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJDBCRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCRow_1", false);
		start_Hash.put("tJDBCRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCRow_1";

	
		int tos_count_tJDBCRow_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCRow_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCRow_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCRow_1 = (String)(restRequest_tJDBCRow_1 != null ? restRequest_tJDBCRow_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCRow_1 =
        new org.talend.components.jdbc.tjdbcrow.TJDBCRowDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCRow_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCRow_1 = null;


org.talend.components.jdbc.tjdbcrow.TJDBCRowProperties props_tJDBCRow_1 =
        (org.talend.components.jdbc.tjdbcrow.TJDBCRowProperties) def_tJDBCRow_1.createRuntimeProperties();
 		                    props_tJDBCRow_1.setValue("sql",
 		                    "select update_tags_path_child('"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(context.runTime)+"')");
 		                    
 		                    props_tJDBCRow_1.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCRow_1.setValue("propagateQueryResultSet",
 		                    false);
 		                    
 		                    props_tJDBCRow_1.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCRow_1.setValue("detectErrorOnMultipleSQL",
 		                    false);
 		                    
 		                    props_tJDBCRow_1.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCRow_1.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCRow_1.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCRow_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCRow_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCRow_1\",\"fields\":[],\"di.table.name\":\"tJDBCRow_1\",\"di.table.label\":\"tJDBCRow_1\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCRow_1_1_fisrt sst_tJDBCRow_1_1_fisrt = new SchemaSettingTool_tJDBCRow_1_1_fisrt();
 		                    
 		                    props_tJDBCRow_1.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCRow_1_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCRow_1_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCRow_1\",\"fields\":[],\"di.table.name\":\"tJDBCRow_1\",\"di.table.label\":\"tJDBCRow_1\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCRow_1_2_fisrt sst_tJDBCRow_1_2_fisrt = new SchemaSettingTool_tJDBCRow_1_2_fisrt();
 		                    
 		                    props_tJDBCRow_1.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCRow_1_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCRow_1_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCRow_1\",\"di.table.label\":\"tJDBCRow_1\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCRow_1_3_fisrt sst_tJDBCRow_1_3_fisrt = new SchemaSettingTool_tJDBCRow_1_3_fisrt();
 		                    
 		                    props_tJDBCRow_1.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCRow_1_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCRow_1.tableSelection.setValue("tablename",
 		                    "");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCRow_1.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCRow_1 = props_tJDBCRow_1.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCRow_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCRow_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCRow_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCRow_1.referencedComponent.setReference(referencedComponentProperties_tJDBCRow_1);
        }
    }
globalMap.put("tJDBCRow_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCRow_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCRow_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCRow_1_MAPPINGS_URL", mappings_url_tJDBCRow_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCRow_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCRow_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCRow_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCRow_1 = null;
topology_tJDBCRow_1 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCRow_1 = def_tJDBCRow_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCRow_1, topology_tJDBCRow_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCRow_1 = def_tJDBCRow_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCRow_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCRow_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCRow_1 = componentRuntime_tJDBCRow_1.initialize(container_tJDBCRow_1, props_tJDBCRow_1);

if (initVr_tJDBCRow_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCRow_1.getMessage());
}

if(componentRuntime_tJDBCRow_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCRow_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCRow_1;
	compDriverInitialization_tJDBCRow_1.runAtDriver(container_tJDBCRow_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCRow_1 = null;
if(componentRuntime_tJDBCRow_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCRow_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCRow_1;
	if (doesNodeBelongToRequest_tJDBCRow_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCRow_1 = sourceOrSink_tJDBCRow_1.validate(container_tJDBCRow_1);
        if (vr_tJDBCRow_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCRow_1.getMessage());
        }
	}
}

 



/**
 * [tJDBCRow_1 begin ] stop
 */
	
	/**
	 * [tJDBCRow_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCRow_1";

	


 


	tos_count_tJDBCRow_1++;

/**
 * [tJDBCRow_1 main ] stop
 */
	
	/**
	 * [tJDBCRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCRow_1";

	


 



/**
 * [tJDBCRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCRow_1";

	


 



/**
 * [tJDBCRow_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCRow_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCRow_1";

	
// end of generic


resourceMap.put("finish_tJDBCRow_1", Boolean.TRUE);

 

ok_Hash.put("tJDBCRow_1", true);
end_Hash.put("tJDBCRow_1", System.currentTimeMillis());




/**
 * [tJDBCRow_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCRow_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk25", 0, "ok");
								} 
							
							tJDBCInput_52Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCRow_1";

	
// finally of generic


if(resourceMap.get("finish_tJDBCRow_1")==null){
}
 



/**
 * [tJDBCRow_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCRow_1_SUBPROCESS_STATE", 1);
	}
	


public static class update_lastSyncStruct implements routines.system.IPersistableRow<update_lastSyncStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String var_name;

				public String getVar_name () {
					return this.var_name;
				}
				
			    public String var_value;

				public String getVar_value () {
					return this.var_value;
				}
				
			    public java.util.Date var_datetime;

				public java.util.Date getVar_datetime () {
					return this.var_datetime;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.var_name == null) ? 0 : this.var_name.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final update_lastSyncStruct other = (update_lastSyncStruct) obj;
		
						if (this.var_name == null) {
							if (other.var_name != null)
								return false;
						
						} else if (!this.var_name.equals(other.var_name))
						
							return false;
					

		return true;
    }

	public void copyDataTo(update_lastSyncStruct other) {

		other.var_name = this.var_name;
	            other.var_value = this.var_value;
	            other.var_datetime = this.var_datetime;
	            
	}

	public void copyKeysDataTo(update_lastSyncStruct other) {

		other.var_name = this.var_name;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("var_name="+var_name);
		sb.append(",var_value="+var_value);
		sb.append(",var_datetime="+String.valueOf(var_datetime));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_lastSyncStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.var_name, other.var_name);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public String var_name;

				public String getVar_name () {
					return this.var_name;
				}
				
			    public String var_value;

				public String getVar_value () {
					return this.var_value;
				}
				
			    public java.util.Date var_datetime;

				public java.util.Date getVar_datetime () {
					return this.var_datetime;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("var_name="+var_name);
		sb.append(",var_value="+var_value);
		sb.append(",var_datetime="+String.valueOf(var_datetime));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_52Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_52_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();
update_lastSyncStruct update_lastSync = new update_lastSyncStruct();





	
	/**
	 * [tJDBCOutput_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_33", false);
		start_Hash.put("tJDBCOutput_33", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_33";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_lastSync");
					}
				
		int tos_count_tJDBCOutput_33 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_33 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_33 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_33 = (String)(restRequest_tJDBCOutput_33 != null ? restRequest_tJDBCOutput_33.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_33 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_33 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_33 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_33 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_33.createRuntimeProperties();
 		                    props_tJDBCOutput_33.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE);
 		                    
 		                    props_tJDBCOutput_33.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_33.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_33.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_33.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_33.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_33.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_33.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_33.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_33.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_33.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_33.tableSelection.setValue("tablename",
 		                    "dwh_history_timekeeping");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_33_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_history_timekeeping\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATETIME\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_33\",\"di.table.label\":\"dwh_history_timekeeping\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_33_1_fisrt sst_tJDBCOutput_33_1_fisrt = new SchemaSettingTool_tJDBCOutput_33_1_fisrt();
 		                    
 		                    props_tJDBCOutput_33.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_33_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_33_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_history_timekeeping\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATETIME\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_33\",\"di.table.label\":\"dwh_history_timekeeping\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_33_2_fisrt sst_tJDBCOutput_33_2_fisrt = new SchemaSettingTool_tJDBCOutput_33_2_fisrt();
 		                    
 		                    props_tJDBCOutput_33.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_33_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_33_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATETIME\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_33\",\"di.table.label\":\"dwh_history_timekeeping\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_33_3_fisrt sst_tJDBCOutput_33_3_fisrt = new SchemaSettingTool_tJDBCOutput_33_3_fisrt();
 		                    
 		                    props_tJDBCOutput_33.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_33_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_33.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_33.additionalColumns.setValue("referenceColumns",
 		                    "var_name");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_33.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_33 = props_tJDBCOutput_33.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_33 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_33 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_33 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_33.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_33);
        }
    }
globalMap.put("tJDBCOutput_33_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_33);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_33= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_33_MAPPINGS_URL", mappings_url_tJDBCOutput_33);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_33 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_33";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_33 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_33 = null;
topology_tJDBCOutput_33 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_33 = def_tJDBCOutput_33.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_33, topology_tJDBCOutput_33);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_33 = def_tJDBCOutput_33.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_33 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_33.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_33 = componentRuntime_tJDBCOutput_33.initialize(container_tJDBCOutput_33, props_tJDBCOutput_33);

if (initVr_tJDBCOutput_33.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_33.getMessage());
}

if(componentRuntime_tJDBCOutput_33 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_33 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_33;
	compDriverInitialization_tJDBCOutput_33.runAtDriver(container_tJDBCOutput_33);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_33 = null;
if(componentRuntime_tJDBCOutput_33 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_33 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_33;
	if (doesNodeBelongToRequest_tJDBCOutput_33) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_33 = sourceOrSink_tJDBCOutput_33.validate(container_tJDBCOutput_33);
        if (vr_tJDBCOutput_33.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_33.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_33 = null;
    if (sourceOrSink_tJDBCOutput_33 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_33 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_33;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_33 = sink_tJDBCOutput_33.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_33) {
            writeOperation_tJDBCOutput_33.initialize(container_tJDBCOutput_33);
        }
        writer_tJDBCOutput_33 = writeOperation_tJDBCOutput_33.createWriter(container_tJDBCOutput_33);
        if (doesNodeBelongToRequest_tJDBCOutput_33) {
            writer_tJDBCOutput_33.open("tJDBCOutput_33");
        }

        resourceMap.put("writer_tJDBCOutput_33", writer_tJDBCOutput_33);
    } // end of "sourceOrSink_tJDBCOutput_33 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_33 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_33.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_33 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_33 = props_tJDBCOutput_33.getSchema(c_tJDBCOutput_33, false);
    incomingEnforcer_tJDBCOutput_33 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_33);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_33 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_33 = null;


 



/**
 * [tJDBCOutput_33 begin ] stop
 */



	
	/**
	 * [tMap_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_30", false);
		start_Hash.put("tMap_30", System.currentTimeMillis());
		
	
	currentComponent="tMap_30";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tMap_30 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_30__Struct  {
}
Var__tMap_30__Struct Var__tMap_30 = new Var__tMap_30__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_lastSyncStruct update_lastSync_tmp = new update_lastSyncStruct();
// ###############################

        
        



        









 



/**
 * [tMap_30 begin ] stop
 */



	
	/**
	 * [tJDBCInput_52 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_52", false);
		start_Hash.put("tJDBCInput_52", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_52";

	
		int tos_count_tJDBCInput_52 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_52 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_52 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_52 = (String)(restRequest_tJDBCInput_52 != null ? restRequest_tJDBCInput_52.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_52 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_52 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_52 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_52 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_52.createRuntimeProperties();
 		                    props_tJDBCInput_52.setValue("sql",
 		                    "SELECT \n  var_name, \n  var_value, \n  var_datetime\nFROM history_configuration\nWHERE var_name = 'firstSync'");
 		                    
 		                    props_tJDBCInput_52.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_52.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_52.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_52.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_52.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_52.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_52.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_52.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_52.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_52_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"history_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_52\",\"di.table.label\":\"history_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_52_1_fisrt sst_tJDBCInput_52_1_fisrt = new SchemaSettingTool_tJDBCInput_52_1_fisrt();
 		                    
 		                    props_tJDBCInput_52.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_52_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_52.tableSelection.setValue("tablename",
 		                    "history_configuration");
 		                    
 		                    java.util.List<Object> tJDBCInput_52_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_52_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_52_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_52_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_52.trimTable).setValue("trim",tJDBCInput_52_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_52_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_52_trimTable_columnName.add("var_name");
 		                            
 		                            tJDBCInput_52_trimTable_columnName.add("var_value");
 		                            
 		                            tJDBCInput_52_trimTable_columnName.add("var_datetime");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_52.trimTable).setValue("columnName",tJDBCInput_52_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_52.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_52 = props_tJDBCInput_52.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_52 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_52 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_52 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_52.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_52);
        }
    }
globalMap.put("tJDBCInput_52_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_52);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_52= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_52_MAPPINGS_URL", mappings_url_tJDBCInput_52);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_52 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_52";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_52 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_52 = null;
topology_tJDBCInput_52 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_52 = def_tJDBCInput_52.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_52, topology_tJDBCInput_52);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_52 = def_tJDBCInput_52.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_52 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_52.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_52 = componentRuntime_tJDBCInput_52.initialize(container_tJDBCInput_52, props_tJDBCInput_52);

if (initVr_tJDBCInput_52.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_52.getMessage());
}

if(componentRuntime_tJDBCInput_52 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_52 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_52;
	compDriverInitialization_tJDBCInput_52.runAtDriver(container_tJDBCInput_52);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_52 = null;
if(componentRuntime_tJDBCInput_52 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_52 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_52;
	if (doesNodeBelongToRequest_tJDBCInput_52) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_52 = sourceOrSink_tJDBCInput_52.validate(container_tJDBCInput_52);
        if (vr_tJDBCInput_52.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_52.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_52 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_52 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_52;
        reader_tJDBCInput_52 = source_tJDBCInput_52.createReader(container_tJDBCInput_52);
	    reader_tJDBCInput_52 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_52, container_tJDBCInput_52);

            boolean multi_output_is_allowed_tJDBCInput_52 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_52 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_52.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_52 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_52 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_52 = props_tJDBCInput_52.getSchema(c_tJDBCInput_52, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_52 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_52, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_52 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_52 = reader_tJDBCInput_52.start();

        resourceMap.put("reader_tJDBCInput_52", reader_tJDBCInput_52);

        for (; available_tJDBCInput_52; available_tJDBCInput_52 = reader_tJDBCInput_52.advance()) {
			nb_line_tJDBCInput_52++;

			
			if (multi_output_is_allowed_tJDBCInput_52) {
				
					row44 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_52 = reader_tJDBCInput_52.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_52) {
						row44 = new row44Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_52 == null) {
            factory_tJDBCInput_52 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_52.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_52.setWrapped(factory_tJDBCInput_52.convertToAvro(data_tJDBCInput_52));
                Object columnValue_0_tJDBCInput_52 = outgoingEnforcer_tJDBCInput_52.get(0);
                        row44.var_name = (String) (columnValue_0_tJDBCInput_52);
                Object columnValue_1_tJDBCInput_52 = outgoingEnforcer_tJDBCInput_52.get(1);
                        row44.var_value = (String) (columnValue_1_tJDBCInput_52);
                Object columnValue_2_tJDBCInput_52 = outgoingEnforcer_tJDBCInput_52.get(2);
                        row44.var_datetime = (java.util.Date) (columnValue_2_tJDBCInput_52);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_52) {
				java.util.Map<String,Object> info_tJDBCInput_52 = e_tJDBCInput_52.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_52 = null;
					if(info_tJDBCInput_52.containsKey("error")){
						errorMessage_tJDBCInput_52 = info_tJDBCInput_52.get("error");
					}else if(info_tJDBCInput_52.containsKey("errorMessage")){
						errorMessage_tJDBCInput_52 = info_tJDBCInput_52.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_52 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_52 = "Row "+ nb_line_tJDBCInput_52 + ": "+errorMessage_tJDBCInput_52;
					System.err.println(errorMessage_tJDBCInput_52);
				
					// If the record is reject, the main line record should put NULL
					row44 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_52 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_52 = null;


 



/**
 * [tJDBCInput_52 begin ] stop
 */
	
	/**
	 * [tJDBCInput_52 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_52";

	


 


	tos_count_tJDBCInput_52++;

/**
 * [tJDBCInput_52 main ] stop
 */
	
	/**
	 * [tJDBCInput_52 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_52";

	


 



/**
 * [tJDBCInput_52 process_data_begin ] stop
 */

	
	/**
	 * [tMap_30 main ] start
	 */

	

	
	
	currentComponent="tMap_30";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_30 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_30 = false;
		  boolean mainRowRejected_tMap_30 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_30__Struct Var = Var__tMap_30;// ###############################
        // ###############################
        // # Output tables

update_lastSync = null;


// # Output table : 'update_lastSync'
update_lastSync_tmp.var_name = "lastSync";
update_lastSync_tmp.var_value = null;
update_lastSync_tmp.var_datetime = row44.var_value.equals("true") ? TalendDate.parseDate("yyyy-MM-dd HH:mm:ss","2001-01-01 01:01:00") : context.runTime ;
update_lastSync = update_lastSync_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_30 = false;










 


	tos_count_tMap_30++;

/**
 * [tMap_30 main ] stop
 */
	
	/**
	 * [tMap_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_30";

	

 



/**
 * [tMap_30 process_data_begin ] stop
 */
// Start of branch "update_lastSync"
if(update_lastSync != null) { 



	
	/**
	 * [tJDBCOutput_33 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_33";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_lastSync"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_33 != null) {
            incomingEnforcer_tJDBCOutput_33.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_33 != null && incomingEnforcer_tJDBCOutput_33.getRuntimeSchema().getField("var_name") != null){
                    incomingEnforcer_tJDBCOutput_33.put("var_name", update_lastSync.var_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_33 != null && incomingEnforcer_tJDBCOutput_33.getRuntimeSchema().getField("var_value") != null){
                    incomingEnforcer_tJDBCOutput_33.put("var_value", update_lastSync.var_value);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_33 != null && incomingEnforcer_tJDBCOutput_33.getRuntimeSchema().getField("var_datetime") != null){
                    incomingEnforcer_tJDBCOutput_33.put("var_datetime", update_lastSync.var_datetime);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_33 = null;
        if (incomingEnforcer_tJDBCOutput_33 != null) {
            data_tJDBCOutput_33 = incomingEnforcer_tJDBCOutput_33.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_33 != null && data_tJDBCOutput_33 != null) {
        	writer_tJDBCOutput_33.write(data_tJDBCOutput_33);
        }
        
        nb_line_tJDBCOutput_33++;

 


	tos_count_tJDBCOutput_33++;

/**
 * [tJDBCOutput_33 main ] stop
 */
	
	/**
	 * [tJDBCOutput_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_33";

	


 



/**
 * [tJDBCOutput_33 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_33";

	


 



/**
 * [tJDBCOutput_33 process_data_end ] stop
 */

} // End of branch "update_lastSync"




	
	/**
	 * [tMap_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_30";

	

 



/**
 * [tMap_30 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_52 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_52";

	


 



/**
 * [tJDBCInput_52 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_52 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_52";

	
// end of generic


resourceMap.put("finish_tJDBCInput_52", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_52 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_52 = null;
    if (reader_tJDBCInput_52 != null) {
        reader_tJDBCInput_52.close();
        resultMap_tJDBCInput_52 = reader_tJDBCInput_52.getReturnValues();
    }
if(resultMap_tJDBCInput_52!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_52 : resultMap_tJDBCInput_52.entrySet()) {
		switch(entry_tJDBCInput_52.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_52.setComponentData("tJDBCInput_52", "ERROR_MESSAGE", entry_tJDBCInput_52.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_52.setComponentData("tJDBCInput_52", "NB_LINE", entry_tJDBCInput_52.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_52.setComponentData("tJDBCInput_52", "NB_SUCCESS", entry_tJDBCInput_52.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_52.setComponentData("tJDBCInput_52", "NB_REJECT", entry_tJDBCInput_52.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_52 = new StringBuilder();
            for (int i_tJDBCInput_52 = 0; i_tJDBCInput_52 < entry_tJDBCInput_52.getKey().length(); i_tJDBCInput_52++) {
                char ch_tJDBCInput_52 = entry_tJDBCInput_52.getKey().charAt(i_tJDBCInput_52);
                if(Character.isUpperCase(ch_tJDBCInput_52) && i_tJDBCInput_52> 0) {
                	studio_key_tJDBCInput_52.append('_');
                }
                studio_key_tJDBCInput_52.append(ch_tJDBCInput_52);
            }
			container_tJDBCInput_52.setComponentData("tJDBCInput_52", studio_key_tJDBCInput_52.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_52.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_52", true);
end_Hash.put("tJDBCInput_52", System.currentTimeMillis());




/**
 * [tJDBCInput_52 end ] stop
 */

	
	/**
	 * [tMap_30 end ] start
	 */

	

	
	
	currentComponent="tMap_30";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tMap_30", true);
end_Hash.put("tMap_30", System.currentTimeMillis());




/**
 * [tMap_30 end ] stop
 */

	
	/**
	 * [tJDBCOutput_33 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_33";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_33", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_33 = null;
    if (writer_tJDBCOutput_33 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_33 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_33.close();
        resultMap_tJDBCOutput_33 = writer_tJDBCOutput_33.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_33), container_tJDBCOutput_33);
    }
if(resultMap_tJDBCOutput_33!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_33 : resultMap_tJDBCOutput_33.entrySet()) {
		switch(entry_tJDBCOutput_33.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_33.setComponentData("tJDBCOutput_33", "ERROR_MESSAGE", entry_tJDBCOutput_33.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_33.setComponentData("tJDBCOutput_33", "NB_LINE", entry_tJDBCOutput_33.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_33.setComponentData("tJDBCOutput_33", "NB_SUCCESS", entry_tJDBCOutput_33.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_33.setComponentData("tJDBCOutput_33", "NB_REJECT", entry_tJDBCOutput_33.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_33 = new StringBuilder();
            for (int i_tJDBCOutput_33 = 0; i_tJDBCOutput_33 < entry_tJDBCOutput_33.getKey().length(); i_tJDBCOutput_33++) {
                char ch_tJDBCOutput_33 = entry_tJDBCOutput_33.getKey().charAt(i_tJDBCOutput_33);
                if(Character.isUpperCase(ch_tJDBCOutput_33) && i_tJDBCOutput_33> 0) {
                	studio_key_tJDBCOutput_33.append('_');
                }
                studio_key_tJDBCOutput_33.append(ch_tJDBCOutput_33);
            }
			container_tJDBCOutput_33.setComponentData("tJDBCOutput_33", studio_key_tJDBCOutput_33.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_33.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_lastSync");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_33", true);
end_Hash.put("tJDBCOutput_33", System.currentTimeMillis());




/**
 * [tJDBCOutput_33 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJDBCInput_52:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk38", 0, "ok");
								} 
							
							tJDBCInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_52 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_52";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_52")==null){
    if(resourceMap.get("reader_tJDBCInput_52")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_52")).close();
		} catch (java.io.IOException e_tJDBCInput_52) {
			String errorMessage_tJDBCInput_52 = "failed to release the resource in tJDBCInput_52 :" + e_tJDBCInput_52.getMessage();
			System.err.println(errorMessage_tJDBCInput_52);
		}
	}
}
 



/**
 * [tJDBCInput_52 finally ] stop
 */

	
	/**
	 * [tMap_30 finally ] start
	 */

	

	
	
	currentComponent="tMap_30";

	

 



/**
 * [tMap_30 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_33 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_33";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_33")==null){
    if(resourceMap.get("writer_tJDBCOutput_33")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_33")).close();
		} catch (java.io.IOException e_tJDBCOutput_33) {
			String errorMessage_tJDBCOutput_33 = "failed to release the resource in tJDBCOutput_33 :" + e_tJDBCOutput_33.getMessage();
			System.err.println(errorMessage_tJDBCOutput_33);
		}
	}
}
 



/**
 * [tJDBCOutput_33 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_52_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfupdateFirstSyncStruct implements routines.system.IPersistableRow<copyOfupdateFirstSyncStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String var_name;

				public String getVar_name () {
					return this.var_name;
				}
				
			    public String var_value;

				public String getVar_value () {
					return this.var_value;
				}
				
			    public java.util.Date var_datetime;

				public java.util.Date getVar_datetime () {
					return this.var_datetime;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.var_name == null) ? 0 : this.var_name.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfupdateFirstSyncStruct other = (copyOfupdateFirstSyncStruct) obj;
		
						if (this.var_name == null) {
							if (other.var_name != null)
								return false;
						
						} else if (!this.var_name.equals(other.var_name))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfupdateFirstSyncStruct other) {

		other.var_name = this.var_name;
	            other.var_value = this.var_value;
	            other.var_datetime = this.var_datetime;
	            
	}

	public void copyKeysDataTo(copyOfupdateFirstSyncStruct other) {

		other.var_name = this.var_name;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("var_name="+var_name);
		sb.append(",var_value="+var_value);
		sb.append(",var_datetime="+String.valueOf(var_datetime));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfupdateFirstSyncStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.var_name, other.var_name);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row49Struct implements routines.system.IPersistableRow<row49Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public String var_name;

				public String getVar_name () {
					return this.var_name;
				}
				
			    public String var_value;

				public String getVar_value () {
					return this.var_value;
				}
				
			    public java.util.Date var_datetime;

				public java.util.Date getVar_datetime () {
					return this.var_datetime;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.var_name = readString(dis);
					
					this.var_value = readString(dis);
					
					this.var_datetime = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.var_name,dos);
					
					// String
				
						writeString(this.var_value,dos);
					
					// java.util.Date
				
						writeDate(this.var_datetime,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("var_name="+var_name);
		sb.append(",var_value="+var_value);
		sb.append(",var_datetime="+String.valueOf(var_datetime));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row49Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row49Struct row49 = new row49Struct();
copyOfupdateFirstSyncStruct copyOfupdateFirstSync = new copyOfupdateFirstSyncStruct();





	
	/**
	 * [tJDBCOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_11", false);
		start_Hash.put("tJDBCOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_11";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfupdateFirstSync");
					}
				
		int tos_count_tJDBCOutput_11 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_11 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_11 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_11 = (String)(restRequest_tJDBCOutput_11 != null ? restRequest_tJDBCOutput_11.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_11 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_11 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_11 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_11 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_11.createRuntimeProperties();
 		                    props_tJDBCOutput_11.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE);
 		                    
 		                    props_tJDBCOutput_11.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_11.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_11.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_11.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.tableSelection.setValue("tablename",
 		                    "history_configuration");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"history_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"history_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_1_fisrt sst_tJDBCOutput_11_1_fisrt = new SchemaSettingTool_tJDBCOutput_11_1_fisrt();
 		                    
 		                    props_tJDBCOutput_11.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"history_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"history_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_2_fisrt sst_tJDBCOutput_11_2_fisrt = new SchemaSettingTool_tJDBCOutput_11_2_fisrt();
 		                    
 		                    props_tJDBCOutput_11.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"history_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_3_fisrt sst_tJDBCOutput_11_3_fisrt = new SchemaSettingTool_tJDBCOutput_11_3_fisrt();
 		                    
 		                    props_tJDBCOutput_11.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_11.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_11.additionalColumns.setValue("referenceColumns",
 		                    "var_name");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_11.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_11 = props_tJDBCOutput_11.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_11.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_11);
        }
    }
globalMap.put("tJDBCOutput_11_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_11);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_11= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_11_MAPPINGS_URL", mappings_url_tJDBCOutput_11);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_11 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_11";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_11 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_11 = null;
topology_tJDBCOutput_11 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_11 = def_tJDBCOutput_11.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_11, topology_tJDBCOutput_11);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_11 = def_tJDBCOutput_11.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_11 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_11.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_11 = componentRuntime_tJDBCOutput_11.initialize(container_tJDBCOutput_11, props_tJDBCOutput_11);

if (initVr_tJDBCOutput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_11.getMessage());
}

if(componentRuntime_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_11 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_11;
	compDriverInitialization_tJDBCOutput_11.runAtDriver(container_tJDBCOutput_11);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_11 = null;
if(componentRuntime_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_11 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_11;
	if (doesNodeBelongToRequest_tJDBCOutput_11) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_11 = sourceOrSink_tJDBCOutput_11.validate(container_tJDBCOutput_11);
        if (vr_tJDBCOutput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_11.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_11 = null;
    if (sourceOrSink_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_11 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_11;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_11 = sink_tJDBCOutput_11.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_11) {
            writeOperation_tJDBCOutput_11.initialize(container_tJDBCOutput_11);
        }
        writer_tJDBCOutput_11 = writeOperation_tJDBCOutput_11.createWriter(container_tJDBCOutput_11);
        if (doesNodeBelongToRequest_tJDBCOutput_11) {
            writer_tJDBCOutput_11.open("tJDBCOutput_11");
        }

        resourceMap.put("writer_tJDBCOutput_11", writer_tJDBCOutput_11);
    } // end of "sourceOrSink_tJDBCOutput_11 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_11 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_11.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_11 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_11 = props_tJDBCOutput_11.getSchema(c_tJDBCOutput_11, false);
    incomingEnforcer_tJDBCOutput_11 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_11);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_11 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_11 = null;


 



/**
 * [tJDBCOutput_11 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row49");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfupdateFirstSyncStruct copyOfupdateFirstSync_tmp = new copyOfupdateFirstSyncStruct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tJDBCInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_10", false);
		start_Hash.put("tJDBCInput_10", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_10";

	
		int tos_count_tJDBCInput_10 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_10 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_10 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_10 = (String)(restRequest_tJDBCInput_10 != null ? restRequest_tJDBCInput_10.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_10 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_10 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_10 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_10 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_10.createRuntimeProperties();
 		                    props_tJDBCInput_10.setValue("sql",
 		                    "SELECT \n  var_name, \n  var_value, \n  var_datetime\nFROM history_configuration\nWHERE var_name = 'firstSync'");
 		                    
 		                    props_tJDBCInput_10.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_10.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_10.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_10_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"history_configuration\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"var_name\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_name\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_name\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_value\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"var_value\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_value\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"var_datetime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"var_datetime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"var_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_10\",\"di.table.label\":\"history_configuration\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_10_1_fisrt sst_tJDBCInput_10_1_fisrt = new SchemaSettingTool_tJDBCInput_10_1_fisrt();
 		                    
 		                    props_tJDBCInput_10.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_10_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_10.tableSelection.setValue("tablename",
 		                    "history_configuration");
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("trim",tJDBCInput_10_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_10_trimTable_columnName.add("var_name");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("var_value");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("var_datetime");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("columnName",tJDBCInput_10_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_10.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_10 = props_tJDBCInput_10.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_10 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_10 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_10 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_10.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_10);
        }
    }
globalMap.put("tJDBCInput_10_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_10);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_10= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_10_MAPPINGS_URL", mappings_url_tJDBCInput_10);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_10 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_10";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_10 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_10 = null;
topology_tJDBCInput_10 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_10 = def_tJDBCInput_10.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_10, topology_tJDBCInput_10);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_10 = def_tJDBCInput_10.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_10 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_10.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_10 = componentRuntime_tJDBCInput_10.initialize(container_tJDBCInput_10, props_tJDBCInput_10);

if (initVr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_10.getMessage());
}

if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_10 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_10;
	compDriverInitialization_tJDBCInput_10.runAtDriver(container_tJDBCInput_10);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_10 = null;
if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_10 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_10;
	if (doesNodeBelongToRequest_tJDBCInput_10) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_10 = sourceOrSink_tJDBCInput_10.validate(container_tJDBCInput_10);
        if (vr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_10.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_10 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_10;
        reader_tJDBCInput_10 = source_tJDBCInput_10.createReader(container_tJDBCInput_10);
	    reader_tJDBCInput_10 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_10, container_tJDBCInput_10);

            boolean multi_output_is_allowed_tJDBCInput_10 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_10 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_10.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_10 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_10 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_10 = props_tJDBCInput_10.getSchema(c_tJDBCInput_10, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_10 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_10, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_10 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_10 = reader_tJDBCInput_10.start();

        resourceMap.put("reader_tJDBCInput_10", reader_tJDBCInput_10);

        for (; available_tJDBCInput_10; available_tJDBCInput_10 = reader_tJDBCInput_10.advance()) {
			nb_line_tJDBCInput_10++;

			
			if (multi_output_is_allowed_tJDBCInput_10) {
				
					row49 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_10 = reader_tJDBCInput_10.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_10) {
						row49 = new row49Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_10 == null) {
            factory_tJDBCInput_10 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_10.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_10.setWrapped(factory_tJDBCInput_10.convertToAvro(data_tJDBCInput_10));
                Object columnValue_0_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(0);
                        row49.var_name = (String) (columnValue_0_tJDBCInput_10);
                Object columnValue_1_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(1);
                        row49.var_value = (String) (columnValue_1_tJDBCInput_10);
                Object columnValue_2_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(2);
                        row49.var_datetime = (java.util.Date) (columnValue_2_tJDBCInput_10);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_10) {
				java.util.Map<String,Object> info_tJDBCInput_10 = e_tJDBCInput_10.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_10 = null;
					if(info_tJDBCInput_10.containsKey("error")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("error");
					}else if(info_tJDBCInput_10.containsKey("errorMessage")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_10 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_10 = "Row "+ nb_line_tJDBCInput_10 + ": "+errorMessage_tJDBCInput_10;
					System.err.println(errorMessage_tJDBCInput_10);
				
					// If the record is reject, the main line record should put NULL
					row49 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_10 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_10 = null;


 



/**
 * [tJDBCInput_10 begin ] stop
 */
	
	/**
	 * [tJDBCInput_10 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 


	tos_count_tJDBCInput_10++;

/**
 * [tJDBCInput_10 main ] stop
 */
	
	/**
	 * [tJDBCInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row49"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_11 = false;
		  boolean mainRowRejected_tMap_11 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row49.var_value.equals("true")
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row49'
							// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

copyOfupdateFirstSync = null;


// # Output table : 'copyOfupdateFirstSync'
copyOfupdateFirstSync_tmp.var_name = row49.var_name ;
copyOfupdateFirstSync_tmp.var_value = "false" ;
copyOfupdateFirstSync_tmp.var_datetime = context.runTime ;
copyOfupdateFirstSync = copyOfupdateFirstSync_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "copyOfupdateFirstSync"
if(copyOfupdateFirstSync != null) { 



	
	/**
	 * [tJDBCOutput_11 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfupdateFirstSync"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_11 != null) {
            incomingEnforcer_tJDBCOutput_11.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("var_name") != null){
                    incomingEnforcer_tJDBCOutput_11.put("var_name", copyOfupdateFirstSync.var_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("var_value") != null){
                    incomingEnforcer_tJDBCOutput_11.put("var_value", copyOfupdateFirstSync.var_value);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("var_datetime") != null){
                    incomingEnforcer_tJDBCOutput_11.put("var_datetime", copyOfupdateFirstSync.var_datetime);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_11 = null;
        if (incomingEnforcer_tJDBCOutput_11 != null) {
            data_tJDBCOutput_11 = incomingEnforcer_tJDBCOutput_11.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_11 != null && data_tJDBCOutput_11 != null) {
        	writer_tJDBCOutput_11.write(data_tJDBCOutput_11);
        }
        
        nb_line_tJDBCOutput_11++;

 


	tos_count_tJDBCOutput_11++;

/**
 * [tJDBCOutput_11 main ] stop
 */
	
	/**
	 * [tJDBCOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	


 



/**
 * [tJDBCOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	


 



/**
 * [tJDBCOutput_11 process_data_end ] stop
 */

} // End of branch "copyOfupdateFirstSync"



	
		} // G_TM_M_280 close main tMap filter for table 'row49'
	
	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_10 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// end of generic


resourceMap.put("finish_tJDBCInput_10", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_10 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_10 = null;
    if (reader_tJDBCInput_10 != null) {
        reader_tJDBCInput_10.close();
        resultMap_tJDBCInput_10 = reader_tJDBCInput_10.getReturnValues();
    }
if(resultMap_tJDBCInput_10!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_10 : resultMap_tJDBCInput_10.entrySet()) {
		switch(entry_tJDBCInput_10.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "ERROR_MESSAGE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_LINE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_SUCCESS", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_REJECT", entry_tJDBCInput_10.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_10 = new StringBuilder();
            for (int i_tJDBCInput_10 = 0; i_tJDBCInput_10 < entry_tJDBCInput_10.getKey().length(); i_tJDBCInput_10++) {
                char ch_tJDBCInput_10 = entry_tJDBCInput_10.getKey().charAt(i_tJDBCInput_10);
                if(Character.isUpperCase(ch_tJDBCInput_10) && i_tJDBCInput_10> 0) {
                	studio_key_tJDBCInput_10.append('_');
                }
                studio_key_tJDBCInput_10.append(ch_tJDBCInput_10);
            }
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", studio_key_tJDBCInput_10.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_10.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_10", true);
end_Hash.put("tJDBCInput_10", System.currentTimeMillis());




/**
 * [tJDBCInput_10 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row49");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tJDBCOutput_11 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_11", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_11 = null;
    if (writer_tJDBCOutput_11 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_11 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_11.close();
        resultMap_tJDBCOutput_11 = writer_tJDBCOutput_11.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_11), container_tJDBCOutput_11);
    }
if(resultMap_tJDBCOutput_11!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_11 : resultMap_tJDBCOutput_11.entrySet()) {
		switch(entry_tJDBCOutput_11.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "ERROR_MESSAGE", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_LINE", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_SUCCESS", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_REJECT", entry_tJDBCOutput_11.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_11 = new StringBuilder();
            for (int i_tJDBCOutput_11 = 0; i_tJDBCOutput_11 < entry_tJDBCOutput_11.getKey().length(); i_tJDBCOutput_11++) {
                char ch_tJDBCOutput_11 = entry_tJDBCOutput_11.getKey().charAt(i_tJDBCOutput_11);
                if(Character.isUpperCase(ch_tJDBCOutput_11) && i_tJDBCOutput_11> 0) {
                	studio_key_tJDBCOutput_11.append('_');
                }
                studio_key_tJDBCOutput_11.append(ch_tJDBCOutput_11);
            }
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", studio_key_tJDBCOutput_11.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_11.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfupdateFirstSync");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_11", true);
end_Hash.put("tJDBCOutput_11", System.currentTimeMillis());




/**
 * [tJDBCOutput_11 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_10 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_10")==null){
    if(resourceMap.get("reader_tJDBCInput_10")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_10")).close();
		} catch (java.io.IOException e_tJDBCInput_10) {
			String errorMessage_tJDBCInput_10 = "failed to release the resource in tJDBCInput_10 :" + e_tJDBCInput_10.getMessage();
			System.err.println(errorMessage_tJDBCInput_10);
		}
	}
}
 



/**
 * [tJDBCInput_10 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_11")==null){
    if(resourceMap.get("writer_tJDBCOutput_11")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_11")).close();
		} catch (java.io.IOException e_tJDBCOutput_11) {
			String errorMessage_tJDBCOutput_11 = "failed to release the resource in tJDBCOutput_11 :" + e_tJDBCOutput_11.getMessage();
			System.err.println(errorMessage_tJDBCOutput_11);
		}
	}
}
 



/**
 * [tJDBCOutput_11 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row35Struct implements routines.system.IPersistableComparableLookupRow<row35Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.datacenter_join_id == null) ? 0 : this.datacenter_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row35Struct other = (row35Struct) obj;
		
						if (this.datacenter_join_id == null) {
							if (other.datacenter_join_id != null)
								return false;
						
						} else if (!this.datacenter_join_id.equals(other.datacenter_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row35Struct other) {

		other.history_id = this.history_id;
	            other.datacenter_join_id = this.datacenter_join_id;
	            
	}

	public void copyKeysDataTo(row35Struct other) {

		other.datacenter_join_id = this.datacenter_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",datacenter_join_id="+datacenter_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.datacenter_join_id, other.datacenter_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_39Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_39_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row35Struct row35 = new row35Struct();




	
	/**
	 * [tAdvancedHash_row35 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row35", false);
		start_Hash.put("tAdvancedHash_row35", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row35";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tAdvancedHash_row35 = 0;
		

			   		// connection name:row35
			   		// source node:tJDBCInput_39 - inputs:(after_tJDBCInput_1) outputs:(row35,row35) | target node:tAdvancedHash_row35 - inputs:(row35) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row35) outputs:(cluster_configuration)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row35 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct> tHash_Lookup_row35 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row35Struct>getLookup(matchingModeEnum_row35);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row35", tHash_Lookup_row35);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row35 begin ] stop
 */



	
	/**
	 * [tJDBCInput_39 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_39", false);
		start_Hash.put("tJDBCInput_39", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_39";

	
		int tos_count_tJDBCInput_39 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_39 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_39 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_39 = (String)(restRequest_tJDBCInput_39 != null ? restRequest_tJDBCInput_39.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_39 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_39 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_39 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_39 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_39.createRuntimeProperties();
 		                    props_tJDBCInput_39.setValue("sql",
 		                    "SELECT history_id, upper(cast(datacenter_id as char(36))) as datacenter_join_id\nFROM  v4_5_latest_configuration_datace"
+"nters");
 		                    
 		                    props_tJDBCInput_39.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_39.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_39.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_39.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_39.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_39.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_39.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_39.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_39.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_39_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_datacenters\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_39\",\"di.table.label\":\"v4_5_latest_configuration_datacenters\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_39_1_fisrt sst_tJDBCInput_39_1_fisrt = new SchemaSettingTool_tJDBCInput_39_1_fisrt();
 		                    
 		                    props_tJDBCInput_39.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_39_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_39.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_datacenters");
 		                    
 		                    java.util.List<Object> tJDBCInput_39_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_39_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_39_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_39.trimTable).setValue("trim",tJDBCInput_39_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_39_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_39_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_39_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_39.trimTable).setValue("columnName",tJDBCInput_39_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_39.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_39 = props_tJDBCInput_39.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_39 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_39 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_39 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_39.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_39);
        }
    }
globalMap.put("tJDBCInput_39_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_39);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_39= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_39_MAPPINGS_URL", mappings_url_tJDBCInput_39);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_39 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_39";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_39 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_39 = null;
topology_tJDBCInput_39 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_39 = def_tJDBCInput_39.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_39, topology_tJDBCInput_39);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_39 = def_tJDBCInput_39.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_39 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_39.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_39 = componentRuntime_tJDBCInput_39.initialize(container_tJDBCInput_39, props_tJDBCInput_39);

if (initVr_tJDBCInput_39.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_39.getMessage());
}

if(componentRuntime_tJDBCInput_39 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_39 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_39;
	compDriverInitialization_tJDBCInput_39.runAtDriver(container_tJDBCInput_39);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_39 = null;
if(componentRuntime_tJDBCInput_39 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_39 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_39;
	if (doesNodeBelongToRequest_tJDBCInput_39) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_39 = sourceOrSink_tJDBCInput_39.validate(container_tJDBCInput_39);
        if (vr_tJDBCInput_39.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_39.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_39 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_39 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_39;
        reader_tJDBCInput_39 = source_tJDBCInput_39.createReader(container_tJDBCInput_39);
	    reader_tJDBCInput_39 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_39, container_tJDBCInput_39);

            boolean multi_output_is_allowed_tJDBCInput_39 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_39 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_39.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_39 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_39 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_39 = props_tJDBCInput_39.getSchema(c_tJDBCInput_39, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_39 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_39, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_39 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_39 = reader_tJDBCInput_39.start();

        resourceMap.put("reader_tJDBCInput_39", reader_tJDBCInput_39);

        for (; available_tJDBCInput_39; available_tJDBCInput_39 = reader_tJDBCInput_39.advance()) {
			nb_line_tJDBCInput_39++;

			
			if (multi_output_is_allowed_tJDBCInput_39) {
				
					row35 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_39 = reader_tJDBCInput_39.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_39) {
						row35 = new row35Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_39 == null) {
            factory_tJDBCInput_39 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_39.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_39.setWrapped(factory_tJDBCInput_39.convertToAvro(data_tJDBCInput_39));
                Object columnValue_0_tJDBCInput_39 = outgoingEnforcer_tJDBCInput_39.get(0);
                        row35.history_id = (Integer) (columnValue_0_tJDBCInput_39);
                Object columnValue_1_tJDBCInput_39 = outgoingEnforcer_tJDBCInput_39.get(1);
                        row35.datacenter_join_id = (String) (columnValue_1_tJDBCInput_39);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_39) {
				java.util.Map<String,Object> info_tJDBCInput_39 = e_tJDBCInput_39.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_39 = null;
					if(info_tJDBCInput_39.containsKey("error")){
						errorMessage_tJDBCInput_39 = info_tJDBCInput_39.get("error");
					}else if(info_tJDBCInput_39.containsKey("errorMessage")){
						errorMessage_tJDBCInput_39 = info_tJDBCInput_39.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_39 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_39 = "Row "+ nb_line_tJDBCInput_39 + ": "+errorMessage_tJDBCInput_39;
					System.err.println(errorMessage_tJDBCInput_39);
				
					// If the record is reject, the main line record should put NULL
					row35 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_39 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_39 = null;


 



/**
 * [tJDBCInput_39 begin ] stop
 */
	
	/**
	 * [tJDBCInput_39 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_39";

	


 


	tos_count_tJDBCInput_39++;

/**
 * [tJDBCInput_39 main ] stop
 */
	
	/**
	 * [tJDBCInput_39 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_39";

	


 



/**
 * [tJDBCInput_39 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					


			   
			   

					row35Struct row35_HashRow = new row35Struct();
		   	   	   
				
				row35_HashRow.history_id = row35.history_id;
				
				row35_HashRow.datacenter_join_id = row35.datacenter_join_id;
				
			tHash_Lookup_row35.put(row35_HashRow);
			
            




 


	tos_count_tAdvancedHash_row35++;

/**
 * [tAdvancedHash_row35 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";

	

 



/**
 * [tAdvancedHash_row35 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row35 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";

	

 



/**
 * [tAdvancedHash_row35 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_39 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_39";

	


 



/**
 * [tJDBCInput_39 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_39 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_39";

	
// end of generic


resourceMap.put("finish_tJDBCInput_39", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_39 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_39 = null;
    if (reader_tJDBCInput_39 != null) {
        reader_tJDBCInput_39.close();
        resultMap_tJDBCInput_39 = reader_tJDBCInput_39.getReturnValues();
    }
if(resultMap_tJDBCInput_39!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_39 : resultMap_tJDBCInput_39.entrySet()) {
		switch(entry_tJDBCInput_39.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_39.setComponentData("tJDBCInput_39", "ERROR_MESSAGE", entry_tJDBCInput_39.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_39.setComponentData("tJDBCInput_39", "NB_LINE", entry_tJDBCInput_39.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_39.setComponentData("tJDBCInput_39", "NB_SUCCESS", entry_tJDBCInput_39.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_39.setComponentData("tJDBCInput_39", "NB_REJECT", entry_tJDBCInput_39.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_39 = new StringBuilder();
            for (int i_tJDBCInput_39 = 0; i_tJDBCInput_39 < entry_tJDBCInput_39.getKey().length(); i_tJDBCInput_39++) {
                char ch_tJDBCInput_39 = entry_tJDBCInput_39.getKey().charAt(i_tJDBCInput_39);
                if(Character.isUpperCase(ch_tJDBCInput_39) && i_tJDBCInput_39> 0) {
                	studio_key_tJDBCInput_39.append('_');
                }
                studio_key_tJDBCInput_39.append(ch_tJDBCInput_39);
            }
			container_tJDBCInput_39.setComponentData("tJDBCInput_39", studio_key_tJDBCInput_39.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_39.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_39", true);
end_Hash.put("tJDBCInput_39", System.currentTimeMillis());




/**
 * [tJDBCInput_39 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";

	

tHash_Lookup_row35.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row35", true);
end_Hash.put("tAdvancedHash_row35", System.currentTimeMillis());




/**
 * [tAdvancedHash_row35 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_39 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_39";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_39")==null){
    if(resourceMap.get("reader_tJDBCInput_39")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_39")).close();
		} catch (java.io.IOException e_tJDBCInput_39) {
			String errorMessage_tJDBCInput_39 = "failed to release the resource in tJDBCInput_39 :" + e_tJDBCInput_39.getMessage();
			System.err.println(errorMessage_tJDBCInput_39);
		}
	}
}
 



/**
 * [tJDBCInput_39 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";

	

 



/**
 * [tAdvancedHash_row35 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_39_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableComparableLookupRow<row36Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cluster_join_id == null) ? 0 : this.cluster_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row36Struct other = (row36Struct) obj;
		
						if (this.cluster_join_id == null) {
							if (other.cluster_join_id != null)
								return false;
						
						} else if (!this.cluster_join_id.equals(other.cluster_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row36Struct other) {

		other.history_id = this.history_id;
	            other.cluster_join_id = this.cluster_join_id;
	            
	}

	public void copyKeysDataTo(row36Struct other) {

		other.cluster_join_id = this.cluster_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.cluster_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.cluster_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cluster_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cluster_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",cluster_join_id="+cluster_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cluster_join_id, other.cluster_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_40Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_40_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();




	
	/**
	 * [tAdvancedHash_row36 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row36", false);
		start_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row36";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tAdvancedHash_row36 = 0;
		

			   		// connection name:row36
			   		// source node:tJDBCInput_40 - inputs:(after_tJDBCInput_4) outputs:(row36,row36) | target node:tAdvancedHash_row36 - inputs:(row36) outputs:()
			   		// linked node: tMap_4 - inputs:(row7,row36) outputs:(host_configuration)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row36 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row36Struct>getLookup(matchingModeEnum_row36);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row36", tHash_Lookup_row36);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row36 begin ] stop
 */



	
	/**
	 * [tJDBCInput_40 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_40", false);
		start_Hash.put("tJDBCInput_40", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_40";

	
		int tos_count_tJDBCInput_40 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_40 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_40 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_40 = (String)(restRequest_tJDBCInput_40 != null ? restRequest_tJDBCInput_40.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_40 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_40 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_40 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_40 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_40.createRuntimeProperties();
 		                    props_tJDBCInput_40.setValue("sql",
 		                    "SELECT history_id, upper(cast(cluster_id as char(36))) as cluster_join_id\nFROM  v4_5_latest_configuration_clusters");
 		                    
 		                    props_tJDBCInput_40.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_40.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_40.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_40.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_40.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_40.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_40.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_40.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_40.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_40_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_40\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_40_1_fisrt sst_tJDBCInput_40_1_fisrt = new SchemaSettingTool_tJDBCInput_40_1_fisrt();
 		                    
 		                    props_tJDBCInput_40.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_40_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_40.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_clusters");
 		                    
 		                    java.util.List<Object> tJDBCInput_40_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_40_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_40_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_40.trimTable).setValue("trim",tJDBCInput_40_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_40_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_40_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_40_trimTable_columnName.add("cluster_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_40.trimTable).setValue("columnName",tJDBCInput_40_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_40.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_40 = props_tJDBCInput_40.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_40 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_40 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_40 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_40.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_40);
        }
    }
globalMap.put("tJDBCInput_40_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_40);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_40= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_40_MAPPINGS_URL", mappings_url_tJDBCInput_40);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_40 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_40";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_40 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_40 = null;
topology_tJDBCInput_40 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_40 = def_tJDBCInput_40.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_40, topology_tJDBCInput_40);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_40 = def_tJDBCInput_40.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_40 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_40.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_40 = componentRuntime_tJDBCInput_40.initialize(container_tJDBCInput_40, props_tJDBCInput_40);

if (initVr_tJDBCInput_40.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_40.getMessage());
}

if(componentRuntime_tJDBCInput_40 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_40 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_40;
	compDriverInitialization_tJDBCInput_40.runAtDriver(container_tJDBCInput_40);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_40 = null;
if(componentRuntime_tJDBCInput_40 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_40 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_40;
	if (doesNodeBelongToRequest_tJDBCInput_40) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_40 = sourceOrSink_tJDBCInput_40.validate(container_tJDBCInput_40);
        if (vr_tJDBCInput_40.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_40.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_40 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_40 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_40;
        reader_tJDBCInput_40 = source_tJDBCInput_40.createReader(container_tJDBCInput_40);
	    reader_tJDBCInput_40 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_40, container_tJDBCInput_40);

            boolean multi_output_is_allowed_tJDBCInput_40 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_40 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_40.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_40 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_40 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_40 = props_tJDBCInput_40.getSchema(c_tJDBCInput_40, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_40 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_40, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_40 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_40 = reader_tJDBCInput_40.start();

        resourceMap.put("reader_tJDBCInput_40", reader_tJDBCInput_40);

        for (; available_tJDBCInput_40; available_tJDBCInput_40 = reader_tJDBCInput_40.advance()) {
			nb_line_tJDBCInput_40++;

			
			if (multi_output_is_allowed_tJDBCInput_40) {
				
					row36 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_40 = reader_tJDBCInput_40.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_40) {
						row36 = new row36Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_40 == null) {
            factory_tJDBCInput_40 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_40.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_40.setWrapped(factory_tJDBCInput_40.convertToAvro(data_tJDBCInput_40));
                Object columnValue_0_tJDBCInput_40 = outgoingEnforcer_tJDBCInput_40.get(0);
                        row36.history_id = (Integer) (columnValue_0_tJDBCInput_40);
                Object columnValue_1_tJDBCInput_40 = outgoingEnforcer_tJDBCInput_40.get(1);
                        row36.cluster_join_id = (String) (columnValue_1_tJDBCInput_40);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_40) {
				java.util.Map<String,Object> info_tJDBCInput_40 = e_tJDBCInput_40.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_40 = null;
					if(info_tJDBCInput_40.containsKey("error")){
						errorMessage_tJDBCInput_40 = info_tJDBCInput_40.get("error");
					}else if(info_tJDBCInput_40.containsKey("errorMessage")){
						errorMessage_tJDBCInput_40 = info_tJDBCInput_40.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_40 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_40 = "Row "+ nb_line_tJDBCInput_40 + ": "+errorMessage_tJDBCInput_40;
					System.err.println(errorMessage_tJDBCInput_40);
				
					// If the record is reject, the main line record should put NULL
					row36 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_40 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_40 = null;


 



/**
 * [tJDBCInput_40 begin ] stop
 */
	
	/**
	 * [tJDBCInput_40 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_40";

	


 


	tos_count_tJDBCInput_40++;

/**
 * [tJDBCInput_40 main ] stop
 */
	
	/**
	 * [tJDBCInput_40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_40";

	


 



/**
 * [tJDBCInput_40 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					


			   
			   

					row36Struct row36_HashRow = new row36Struct();
		   	   	   
				
				row36_HashRow.history_id = row36.history_id;
				
				row36_HashRow.cluster_join_id = row36.cluster_join_id;
				
			tHash_Lookup_row36.put(row36_HashRow);
			
            




 


	tos_count_tAdvancedHash_row36++;

/**
 * [tAdvancedHash_row36 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";

	

 



/**
 * [tAdvancedHash_row36 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";

	

 



/**
 * [tAdvancedHash_row36 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_40 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_40";

	


 



/**
 * [tJDBCInput_40 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_40 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_40";

	
// end of generic


resourceMap.put("finish_tJDBCInput_40", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_40 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_40 = null;
    if (reader_tJDBCInput_40 != null) {
        reader_tJDBCInput_40.close();
        resultMap_tJDBCInput_40 = reader_tJDBCInput_40.getReturnValues();
    }
if(resultMap_tJDBCInput_40!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_40 : resultMap_tJDBCInput_40.entrySet()) {
		switch(entry_tJDBCInput_40.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_40.setComponentData("tJDBCInput_40", "ERROR_MESSAGE", entry_tJDBCInput_40.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_40.setComponentData("tJDBCInput_40", "NB_LINE", entry_tJDBCInput_40.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_40.setComponentData("tJDBCInput_40", "NB_SUCCESS", entry_tJDBCInput_40.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_40.setComponentData("tJDBCInput_40", "NB_REJECT", entry_tJDBCInput_40.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_40 = new StringBuilder();
            for (int i_tJDBCInput_40 = 0; i_tJDBCInput_40 < entry_tJDBCInput_40.getKey().length(); i_tJDBCInput_40++) {
                char ch_tJDBCInput_40 = entry_tJDBCInput_40.getKey().charAt(i_tJDBCInput_40);
                if(Character.isUpperCase(ch_tJDBCInput_40) && i_tJDBCInput_40> 0) {
                	studio_key_tJDBCInput_40.append('_');
                }
                studio_key_tJDBCInput_40.append(ch_tJDBCInput_40);
            }
			container_tJDBCInput_40.setComponentData("tJDBCInput_40", studio_key_tJDBCInput_40.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_40.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_40", true);
end_Hash.put("tJDBCInput_40", System.currentTimeMillis());




/**
 * [tJDBCInput_40 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";

	

tHash_Lookup_row36.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row36", true);
end_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());




/**
 * [tAdvancedHash_row36 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_40 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_40";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_40")==null){
    if(resourceMap.get("reader_tJDBCInput_40")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_40")).close();
		} catch (java.io.IOException e_tJDBCInput_40) {
			String errorMessage_tJDBCInput_40 = "failed to release the resource in tJDBCInput_40 :" + e_tJDBCInput_40.getMessage();
			System.err.println(errorMessage_tJDBCInput_40);
		}
	}
}
 



/**
 * [tJDBCInput_40 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";

	

 



/**
 * [tAdvancedHash_row36 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_40_SUBPROCESS_STATE", 1);
	}
	


public static class row37Struct implements routines.system.IPersistableComparableLookupRow<row37Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.host_join_id == null) ? 0 : this.host_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row37Struct other = (row37Struct) obj;
		
						if (this.host_join_id == null) {
							if (other.host_join_id != null)
								return false;
						
						} else if (!this.host_join_id.equals(other.host_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row37Struct other) {

		other.history_id = this.history_id;
	            other.host_join_id = this.host_join_id;
	            
	}

	public void copyKeysDataTo(row37Struct other) {

		other.host_join_id = this.host_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_join_id="+host_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.host_join_id, other.host_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_41Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_41_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row37Struct row37 = new row37Struct();




	
	/**
	 * [tAdvancedHash_row37 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row37", false);
		start_Hash.put("tAdvancedHash_row37", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row37";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tAdvancedHash_row37 = 0;
		

			   		// connection name:row37
			   		// source node:tJDBCInput_41 - inputs:(after_tJDBCInput_5) outputs:(row37,row37) | target node:tAdvancedHash_row37 - inputs:(row37) outputs:()
			   		// linked node: tMap_5 - inputs:(row2,row37) outputs:(hinterface_configuration)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row37 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct> tHash_Lookup_row37 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row37Struct>getLookup(matchingModeEnum_row37);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row37", tHash_Lookup_row37);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row37 begin ] stop
 */



	
	/**
	 * [tJDBCInput_41 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_41", false);
		start_Hash.put("tJDBCInput_41", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_41";

	
		int tos_count_tJDBCInput_41 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_41 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_41 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_41 = (String)(restRequest_tJDBCInput_41 != null ? restRequest_tJDBCInput_41.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_41 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_41 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_41 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_41 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_41.createRuntimeProperties();
 		                    props_tJDBCInput_41.setValue("sql",
 		                    "SELECT history_id, upper(cast(host_id as char(36))) as host_join_id\nFROM  v4_5_latest_configuration_hosts");
 		                    
 		                    props_tJDBCInput_41.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_41.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_41.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_41.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_41.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_41.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_41.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_41.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_41.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_41_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_41\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_41_1_fisrt sst_tJDBCInput_41_1_fisrt = new SchemaSettingTool_tJDBCInput_41_1_fisrt();
 		                    
 		                    props_tJDBCInput_41.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_41_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_41.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_hosts");
 		                    
 		                    java.util.List<Object> tJDBCInput_41_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_41_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_41_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_41.trimTable).setValue("trim",tJDBCInput_41_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_41_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_41_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_41_trimTable_columnName.add("host_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_41.trimTable).setValue("columnName",tJDBCInput_41_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_41.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_41 = props_tJDBCInput_41.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_41 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_41 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_41 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_41.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_41);
        }
    }
globalMap.put("tJDBCInput_41_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_41);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_41= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_41_MAPPINGS_URL", mappings_url_tJDBCInput_41);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_41 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_41";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_41 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_41 = null;
topology_tJDBCInput_41 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_41 = def_tJDBCInput_41.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_41, topology_tJDBCInput_41);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_41 = def_tJDBCInput_41.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_41 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_41.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_41 = componentRuntime_tJDBCInput_41.initialize(container_tJDBCInput_41, props_tJDBCInput_41);

if (initVr_tJDBCInput_41.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_41.getMessage());
}

if(componentRuntime_tJDBCInput_41 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_41 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_41;
	compDriverInitialization_tJDBCInput_41.runAtDriver(container_tJDBCInput_41);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_41 = null;
if(componentRuntime_tJDBCInput_41 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_41 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_41;
	if (doesNodeBelongToRequest_tJDBCInput_41) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_41 = sourceOrSink_tJDBCInput_41.validate(container_tJDBCInput_41);
        if (vr_tJDBCInput_41.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_41.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_41 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_41 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_41;
        reader_tJDBCInput_41 = source_tJDBCInput_41.createReader(container_tJDBCInput_41);
	    reader_tJDBCInput_41 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_41, container_tJDBCInput_41);

            boolean multi_output_is_allowed_tJDBCInput_41 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_41 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_41.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_41 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_41 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_41 = props_tJDBCInput_41.getSchema(c_tJDBCInput_41, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_41 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_41, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_41 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_41 = reader_tJDBCInput_41.start();

        resourceMap.put("reader_tJDBCInput_41", reader_tJDBCInput_41);

        for (; available_tJDBCInput_41; available_tJDBCInput_41 = reader_tJDBCInput_41.advance()) {
			nb_line_tJDBCInput_41++;

			
			if (multi_output_is_allowed_tJDBCInput_41) {
				
					row37 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_41 = reader_tJDBCInput_41.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_41) {
						row37 = new row37Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_41 == null) {
            factory_tJDBCInput_41 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_41.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_41.setWrapped(factory_tJDBCInput_41.convertToAvro(data_tJDBCInput_41));
                Object columnValue_0_tJDBCInput_41 = outgoingEnforcer_tJDBCInput_41.get(0);
                        row37.history_id = (Integer) (columnValue_0_tJDBCInput_41);
                Object columnValue_1_tJDBCInput_41 = outgoingEnforcer_tJDBCInput_41.get(1);
                        row37.host_join_id = (String) (columnValue_1_tJDBCInput_41);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_41) {
				java.util.Map<String,Object> info_tJDBCInput_41 = e_tJDBCInput_41.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_41 = null;
					if(info_tJDBCInput_41.containsKey("error")){
						errorMessage_tJDBCInput_41 = info_tJDBCInput_41.get("error");
					}else if(info_tJDBCInput_41.containsKey("errorMessage")){
						errorMessage_tJDBCInput_41 = info_tJDBCInput_41.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_41 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_41 = "Row "+ nb_line_tJDBCInput_41 + ": "+errorMessage_tJDBCInput_41;
					System.err.println(errorMessage_tJDBCInput_41);
				
					// If the record is reject, the main line record should put NULL
					row37 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_41 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_41 = null;


 



/**
 * [tJDBCInput_41 begin ] stop
 */
	
	/**
	 * [tJDBCInput_41 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_41";

	


 


	tos_count_tJDBCInput_41++;

/**
 * [tJDBCInput_41 main ] stop
 */
	
	/**
	 * [tJDBCInput_41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_41";

	


 



/**
 * [tJDBCInput_41 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					


			   
			   

					row37Struct row37_HashRow = new row37Struct();
		   	   	   
				
				row37_HashRow.history_id = row37.history_id;
				
				row37_HashRow.host_join_id = row37.host_join_id;
				
			tHash_Lookup_row37.put(row37_HashRow);
			
            




 


	tos_count_tAdvancedHash_row37++;

/**
 * [tAdvancedHash_row37 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row37 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";

	

 



/**
 * [tAdvancedHash_row37 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row37 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";

	

 



/**
 * [tAdvancedHash_row37 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_41 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_41";

	


 



/**
 * [tJDBCInput_41 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_41 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_41";

	
// end of generic


resourceMap.put("finish_tJDBCInput_41", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_41 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_41 = null;
    if (reader_tJDBCInput_41 != null) {
        reader_tJDBCInput_41.close();
        resultMap_tJDBCInput_41 = reader_tJDBCInput_41.getReturnValues();
    }
if(resultMap_tJDBCInput_41!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_41 : resultMap_tJDBCInput_41.entrySet()) {
		switch(entry_tJDBCInput_41.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_41.setComponentData("tJDBCInput_41", "ERROR_MESSAGE", entry_tJDBCInput_41.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_41.setComponentData("tJDBCInput_41", "NB_LINE", entry_tJDBCInput_41.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_41.setComponentData("tJDBCInput_41", "NB_SUCCESS", entry_tJDBCInput_41.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_41.setComponentData("tJDBCInput_41", "NB_REJECT", entry_tJDBCInput_41.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_41 = new StringBuilder();
            for (int i_tJDBCInput_41 = 0; i_tJDBCInput_41 < entry_tJDBCInput_41.getKey().length(); i_tJDBCInput_41++) {
                char ch_tJDBCInput_41 = entry_tJDBCInput_41.getKey().charAt(i_tJDBCInput_41);
                if(Character.isUpperCase(ch_tJDBCInput_41) && i_tJDBCInput_41> 0) {
                	studio_key_tJDBCInput_41.append('_');
                }
                studio_key_tJDBCInput_41.append(ch_tJDBCInput_41);
            }
			container_tJDBCInput_41.setComponentData("tJDBCInput_41", studio_key_tJDBCInput_41.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_41.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_41", true);
end_Hash.put("tJDBCInput_41", System.currentTimeMillis());




/**
 * [tJDBCInput_41 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";

	

tHash_Lookup_row37.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row37", true);
end_Hash.put("tAdvancedHash_row37", System.currentTimeMillis());




/**
 * [tAdvancedHash_row37 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_41 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_41";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_41")==null){
    if(resourceMap.get("reader_tJDBCInput_41")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_41")).close();
		} catch (java.io.IOException e_tJDBCInput_41) {
			String errorMessage_tJDBCInput_41 = "failed to release the resource in tJDBCInput_41 :" + e_tJDBCInput_41.getMessage();
			System.err.println(errorMessage_tJDBCInput_41);
		}
	}
}
 



/**
 * [tJDBCInput_41 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";

	

 



/**
 * [tAdvancedHash_row37 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_41_SUBPROCESS_STATE", 1);
	}
	


public static class row38Struct implements routines.system.IPersistableComparableLookupRow<row38Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.host_join_id == null) ? 0 : this.host_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row38Struct other = (row38Struct) obj;
		
						if (this.host_join_id == null) {
							if (other.host_join_id != null)
								return false;
						
						} else if (!this.host_join_id.equals(other.host_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row38Struct other) {

		other.history_id = this.history_id;
	            other.host_join_id = this.host_join_id;
	            
	}

	public void copyKeysDataTo(row38Struct other) {

		other.host_join_id = this.host_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_join_id="+host_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.host_join_id, other.host_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_43Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_43_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row38Struct row38 = new row38Struct();




	
	/**
	 * [tAdvancedHash_row38 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row38", false);
		start_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row38";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tAdvancedHash_row38 = 0;
		

			   		// connection name:row38
			   		// source node:tJDBCInput_43 - inputs:(after_tJDBCInput_6) outputs:(row38,row38) | target node:tAdvancedHash_row38 - inputs:(row38) outputs:()
			   		// linked node: tMap_6 - inputs:(row4,row38,row39) outputs:(vm_configuration)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row38 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row38Struct>getLookup(matchingModeEnum_row38);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row38", tHash_Lookup_row38);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row38 begin ] stop
 */



	
	/**
	 * [tJDBCInput_43 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_43", false);
		start_Hash.put("tJDBCInput_43", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_43";

	
		int tos_count_tJDBCInput_43 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_43 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_43 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_43 = (String)(restRequest_tJDBCInput_43 != null ? restRequest_tJDBCInput_43.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_43 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_43 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_43 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_43 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_43.createRuntimeProperties();
 		                    props_tJDBCInput_43.setValue("sql",
 		                    "SELECT history_id, upper(cast(host_id as char(36))) as host_join_id\nFROM  v4_5_latest_configuration_hosts");
 		                    
 		                    props_tJDBCInput_43.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_43.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_43.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_43.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_43.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_43.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_43.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_43.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_43.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_43_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_43\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_43_1_fisrt sst_tJDBCInput_43_1_fisrt = new SchemaSettingTool_tJDBCInput_43_1_fisrt();
 		                    
 		                    props_tJDBCInput_43.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_43_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_43.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_hosts");
 		                    
 		                    java.util.List<Object> tJDBCInput_43_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_43_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_43_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_43.trimTable).setValue("trim",tJDBCInput_43_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_43_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_43_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_43_trimTable_columnName.add("host_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_43.trimTable).setValue("columnName",tJDBCInput_43_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_43.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_43 = props_tJDBCInput_43.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_43 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_43 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_43 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_43.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_43);
        }
    }
globalMap.put("tJDBCInput_43_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_43);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_43= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_43_MAPPINGS_URL", mappings_url_tJDBCInput_43);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_43 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_43";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_43 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_43 = null;
topology_tJDBCInput_43 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_43 = def_tJDBCInput_43.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_43, topology_tJDBCInput_43);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_43 = def_tJDBCInput_43.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_43 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_43.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_43 = componentRuntime_tJDBCInput_43.initialize(container_tJDBCInput_43, props_tJDBCInput_43);

if (initVr_tJDBCInput_43.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_43.getMessage());
}

if(componentRuntime_tJDBCInput_43 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_43 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_43;
	compDriverInitialization_tJDBCInput_43.runAtDriver(container_tJDBCInput_43);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_43 = null;
if(componentRuntime_tJDBCInput_43 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_43 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_43;
	if (doesNodeBelongToRequest_tJDBCInput_43) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_43 = sourceOrSink_tJDBCInput_43.validate(container_tJDBCInput_43);
        if (vr_tJDBCInput_43.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_43.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_43 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_43 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_43;
        reader_tJDBCInput_43 = source_tJDBCInput_43.createReader(container_tJDBCInput_43);
	    reader_tJDBCInput_43 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_43, container_tJDBCInput_43);

            boolean multi_output_is_allowed_tJDBCInput_43 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_43 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_43.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_43 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_43 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_43 = props_tJDBCInput_43.getSchema(c_tJDBCInput_43, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_43 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_43, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_43 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_43 = reader_tJDBCInput_43.start();

        resourceMap.put("reader_tJDBCInput_43", reader_tJDBCInput_43);

        for (; available_tJDBCInput_43; available_tJDBCInput_43 = reader_tJDBCInput_43.advance()) {
			nb_line_tJDBCInput_43++;

			
			if (multi_output_is_allowed_tJDBCInput_43) {
				
					row38 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_43 = reader_tJDBCInput_43.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_43) {
						row38 = new row38Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_43 == null) {
            factory_tJDBCInput_43 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_43.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_43.setWrapped(factory_tJDBCInput_43.convertToAvro(data_tJDBCInput_43));
                Object columnValue_0_tJDBCInput_43 = outgoingEnforcer_tJDBCInput_43.get(0);
                        row38.history_id = (Integer) (columnValue_0_tJDBCInput_43);
                Object columnValue_1_tJDBCInput_43 = outgoingEnforcer_tJDBCInput_43.get(1);
                        row38.host_join_id = (String) (columnValue_1_tJDBCInput_43);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_43) {
				java.util.Map<String,Object> info_tJDBCInput_43 = e_tJDBCInput_43.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_43 = null;
					if(info_tJDBCInput_43.containsKey("error")){
						errorMessage_tJDBCInput_43 = info_tJDBCInput_43.get("error");
					}else if(info_tJDBCInput_43.containsKey("errorMessage")){
						errorMessage_tJDBCInput_43 = info_tJDBCInput_43.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_43 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_43 = "Row "+ nb_line_tJDBCInput_43 + ": "+errorMessage_tJDBCInput_43;
					System.err.println(errorMessage_tJDBCInput_43);
				
					// If the record is reject, the main line record should put NULL
					row38 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_43 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_43 = null;


 



/**
 * [tJDBCInput_43 begin ] stop
 */
	
	/**
	 * [tJDBCInput_43 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_43";

	


 


	tos_count_tJDBCInput_43++;

/**
 * [tJDBCInput_43 main ] stop
 */
	
	/**
	 * [tJDBCInput_43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_43";

	


 



/**
 * [tJDBCInput_43 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					


			   
			   

					row38Struct row38_HashRow = new row38Struct();
		   	   	   
				
				row38_HashRow.history_id = row38.history_id;
				
				row38_HashRow.host_join_id = row38.host_join_id;
				
			tHash_Lookup_row38.put(row38_HashRow);
			
            




 


	tos_count_tAdvancedHash_row38++;

/**
 * [tAdvancedHash_row38 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";

	

 



/**
 * [tAdvancedHash_row38 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row38 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";

	

 



/**
 * [tAdvancedHash_row38 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_43 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_43";

	


 



/**
 * [tJDBCInput_43 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_43 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_43";

	
// end of generic


resourceMap.put("finish_tJDBCInput_43", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_43 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_43 = null;
    if (reader_tJDBCInput_43 != null) {
        reader_tJDBCInput_43.close();
        resultMap_tJDBCInput_43 = reader_tJDBCInput_43.getReturnValues();
    }
if(resultMap_tJDBCInput_43!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_43 : resultMap_tJDBCInput_43.entrySet()) {
		switch(entry_tJDBCInput_43.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_43.setComponentData("tJDBCInput_43", "ERROR_MESSAGE", entry_tJDBCInput_43.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_43.setComponentData("tJDBCInput_43", "NB_LINE", entry_tJDBCInput_43.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_43.setComponentData("tJDBCInput_43", "NB_SUCCESS", entry_tJDBCInput_43.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_43.setComponentData("tJDBCInput_43", "NB_REJECT", entry_tJDBCInput_43.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_43 = new StringBuilder();
            for (int i_tJDBCInput_43 = 0; i_tJDBCInput_43 < entry_tJDBCInput_43.getKey().length(); i_tJDBCInput_43++) {
                char ch_tJDBCInput_43 = entry_tJDBCInput_43.getKey().charAt(i_tJDBCInput_43);
                if(Character.isUpperCase(ch_tJDBCInput_43) && i_tJDBCInput_43> 0) {
                	studio_key_tJDBCInput_43.append('_');
                }
                studio_key_tJDBCInput_43.append(ch_tJDBCInput_43);
            }
			container_tJDBCInput_43.setComponentData("tJDBCInput_43", studio_key_tJDBCInput_43.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_43.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_43", true);
end_Hash.put("tJDBCInput_43", System.currentTimeMillis());




/**
 * [tJDBCInput_43 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";

	

tHash_Lookup_row38.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row38", true);
end_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());




/**
 * [tAdvancedHash_row38 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_43 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_43";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_43")==null){
    if(resourceMap.get("reader_tJDBCInput_43")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_43")).close();
		} catch (java.io.IOException e_tJDBCInput_43) {
			String errorMessage_tJDBCInput_43 = "failed to release the resource in tJDBCInput_43 :" + e_tJDBCInput_43.getMessage();
			System.err.println(errorMessage_tJDBCInput_43);
		}
	}
}
 



/**
 * [tJDBCInput_43 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";

	

 



/**
 * [tAdvancedHash_row38 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_43_SUBPROCESS_STATE", 1);
	}
	


public static class row39Struct implements routines.system.IPersistableComparableLookupRow<row39Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cluster_join_id == null) ? 0 : this.cluster_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row39Struct other = (row39Struct) obj;
		
						if (this.cluster_join_id == null) {
							if (other.cluster_join_id != null)
								return false;
						
						} else if (!this.cluster_join_id.equals(other.cluster_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row39Struct other) {

		other.history_id = this.history_id;
	            other.cluster_join_id = this.cluster_join_id;
	            
	}

	public void copyKeysDataTo(row39Struct other) {

		other.cluster_join_id = this.cluster_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.cluster_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.cluster_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cluster_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cluster_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",cluster_join_id="+cluster_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cluster_join_id, other.cluster_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_42Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_42_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();




	
	/**
	 * [tAdvancedHash_row39 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row39", false);
		start_Hash.put("tAdvancedHash_row39", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row39";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tAdvancedHash_row39 = 0;
		

			   		// connection name:row39
			   		// source node:tJDBCInput_42 - inputs:(after_tJDBCInput_6) outputs:(row39,row39) | target node:tAdvancedHash_row39 - inputs:(row39) outputs:()
			   		// linked node: tMap_6 - inputs:(row4,row38,row39) outputs:(vm_configuration)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row39 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct> tHash_Lookup_row39 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row39Struct>getLookup(matchingModeEnum_row39);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row39", tHash_Lookup_row39);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row39 begin ] stop
 */



	
	/**
	 * [tJDBCInput_42 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_42", false);
		start_Hash.put("tJDBCInput_42", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_42";

	
		int tos_count_tJDBCInput_42 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_42 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_42 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_42 = (String)(restRequest_tJDBCInput_42 != null ? restRequest_tJDBCInput_42.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_42 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_42 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_42 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_42 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_42.createRuntimeProperties();
 		                    props_tJDBCInput_42.setValue("sql",
 		                    "SELECT history_id, upper(cast(cluster_id as char(36))) as cluster_join_id\nFROM  v4_5_latest_configuration_clusters");
 		                    
 		                    props_tJDBCInput_42.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_42.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_42.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_42.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_42.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_42.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_42.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_42.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_42.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_42_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cluster_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"cluster_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_42\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_42_1_fisrt sst_tJDBCInput_42_1_fisrt = new SchemaSettingTool_tJDBCInput_42_1_fisrt();
 		                    
 		                    props_tJDBCInput_42.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_42_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_42.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_clusters");
 		                    
 		                    java.util.List<Object> tJDBCInput_42_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_42_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_42_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_42.trimTable).setValue("trim",tJDBCInput_42_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_42_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_42_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_42_trimTable_columnName.add("cluster_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_42.trimTable).setValue("columnName",tJDBCInput_42_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_42.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_42 = props_tJDBCInput_42.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_42 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_42 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_42 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_42.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_42);
        }
    }
globalMap.put("tJDBCInput_42_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_42);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_42= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_42_MAPPINGS_URL", mappings_url_tJDBCInput_42);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_42 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_42";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_42 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_42 = null;
topology_tJDBCInput_42 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_42 = def_tJDBCInput_42.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_42, topology_tJDBCInput_42);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_42 = def_tJDBCInput_42.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_42 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_42.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_42 = componentRuntime_tJDBCInput_42.initialize(container_tJDBCInput_42, props_tJDBCInput_42);

if (initVr_tJDBCInput_42.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_42.getMessage());
}

if(componentRuntime_tJDBCInput_42 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_42 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_42;
	compDriverInitialization_tJDBCInput_42.runAtDriver(container_tJDBCInput_42);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_42 = null;
if(componentRuntime_tJDBCInput_42 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_42 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_42;
	if (doesNodeBelongToRequest_tJDBCInput_42) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_42 = sourceOrSink_tJDBCInput_42.validate(container_tJDBCInput_42);
        if (vr_tJDBCInput_42.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_42.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_42 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_42 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_42;
        reader_tJDBCInput_42 = source_tJDBCInput_42.createReader(container_tJDBCInput_42);
	    reader_tJDBCInput_42 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_42, container_tJDBCInput_42);

            boolean multi_output_is_allowed_tJDBCInput_42 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_42 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_42.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_42 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_42 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_42 = props_tJDBCInput_42.getSchema(c_tJDBCInput_42, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_42 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_42, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_42 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_42 = reader_tJDBCInput_42.start();

        resourceMap.put("reader_tJDBCInput_42", reader_tJDBCInput_42);

        for (; available_tJDBCInput_42; available_tJDBCInput_42 = reader_tJDBCInput_42.advance()) {
			nb_line_tJDBCInput_42++;

			
			if (multi_output_is_allowed_tJDBCInput_42) {
				
					row39 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_42 = reader_tJDBCInput_42.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_42) {
						row39 = new row39Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_42 == null) {
            factory_tJDBCInput_42 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_42.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_42.setWrapped(factory_tJDBCInput_42.convertToAvro(data_tJDBCInput_42));
                Object columnValue_0_tJDBCInput_42 = outgoingEnforcer_tJDBCInput_42.get(0);
                        row39.history_id = (Integer) (columnValue_0_tJDBCInput_42);
                Object columnValue_1_tJDBCInput_42 = outgoingEnforcer_tJDBCInput_42.get(1);
                        row39.cluster_join_id = (String) (columnValue_1_tJDBCInput_42);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_42) {
				java.util.Map<String,Object> info_tJDBCInput_42 = e_tJDBCInput_42.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_42 = null;
					if(info_tJDBCInput_42.containsKey("error")){
						errorMessage_tJDBCInput_42 = info_tJDBCInput_42.get("error");
					}else if(info_tJDBCInput_42.containsKey("errorMessage")){
						errorMessage_tJDBCInput_42 = info_tJDBCInput_42.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_42 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_42 = "Row "+ nb_line_tJDBCInput_42 + ": "+errorMessage_tJDBCInput_42;
					System.err.println(errorMessage_tJDBCInput_42);
				
					// If the record is reject, the main line record should put NULL
					row39 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_42 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_42 = null;


 



/**
 * [tJDBCInput_42 begin ] stop
 */
	
	/**
	 * [tJDBCInput_42 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_42";

	


 


	tos_count_tJDBCInput_42++;

/**
 * [tJDBCInput_42 main ] stop
 */
	
	/**
	 * [tJDBCInput_42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_42";

	


 



/**
 * [tJDBCInput_42 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					


			   
			   

					row39Struct row39_HashRow = new row39Struct();
		   	   	   
				
				row39_HashRow.history_id = row39.history_id;
				
				row39_HashRow.cluster_join_id = row39.cluster_join_id;
				
			tHash_Lookup_row39.put(row39_HashRow);
			
            




 


	tos_count_tAdvancedHash_row39++;

/**
 * [tAdvancedHash_row39 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row39 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";

	

 



/**
 * [tAdvancedHash_row39 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row39 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";

	

 



/**
 * [tAdvancedHash_row39 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_42 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_42";

	


 



/**
 * [tJDBCInput_42 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_42 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_42";

	
// end of generic


resourceMap.put("finish_tJDBCInput_42", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_42 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_42 = null;
    if (reader_tJDBCInput_42 != null) {
        reader_tJDBCInput_42.close();
        resultMap_tJDBCInput_42 = reader_tJDBCInput_42.getReturnValues();
    }
if(resultMap_tJDBCInput_42!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_42 : resultMap_tJDBCInput_42.entrySet()) {
		switch(entry_tJDBCInput_42.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_42.setComponentData("tJDBCInput_42", "ERROR_MESSAGE", entry_tJDBCInput_42.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_42.setComponentData("tJDBCInput_42", "NB_LINE", entry_tJDBCInput_42.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_42.setComponentData("tJDBCInput_42", "NB_SUCCESS", entry_tJDBCInput_42.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_42.setComponentData("tJDBCInput_42", "NB_REJECT", entry_tJDBCInput_42.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_42 = new StringBuilder();
            for (int i_tJDBCInput_42 = 0; i_tJDBCInput_42 < entry_tJDBCInput_42.getKey().length(); i_tJDBCInput_42++) {
                char ch_tJDBCInput_42 = entry_tJDBCInput_42.getKey().charAt(i_tJDBCInput_42);
                if(Character.isUpperCase(ch_tJDBCInput_42) && i_tJDBCInput_42> 0) {
                	studio_key_tJDBCInput_42.append('_');
                }
                studio_key_tJDBCInput_42.append(ch_tJDBCInput_42);
            }
			container_tJDBCInput_42.setComponentData("tJDBCInput_42", studio_key_tJDBCInput_42.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_42.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_42", true);
end_Hash.put("tJDBCInput_42", System.currentTimeMillis());




/**
 * [tJDBCInput_42 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";

	

tHash_Lookup_row39.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row39", true);
end_Hash.put("tAdvancedHash_row39", System.currentTimeMillis());




/**
 * [tAdvancedHash_row39 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_42 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_42";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_42")==null){
    if(resourceMap.get("reader_tJDBCInput_42")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_42")).close();
		} catch (java.io.IOException e_tJDBCInput_42) {
			String errorMessage_tJDBCInput_42 = "failed to release the resource in tJDBCInput_42 :" + e_tJDBCInput_42.getMessage();
			System.err.println(errorMessage_tJDBCInput_42);
		}
	}
}
 



/**
 * [tJDBCInput_42 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";

	

 



/**
 * [tAdvancedHash_row39 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_42_SUBPROCESS_STATE", 1);
	}
	


public static class row40Struct implements routines.system.IPersistableComparableLookupRow<row40Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_join_id == null) ? 0 : this.vm_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row40Struct other = (row40Struct) obj;
		
						if (this.vm_join_id == null) {
							if (other.vm_join_id != null)
								return false;
						
						} else if (!this.vm_join_id.equals(other.vm_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row40Struct other) {

		other.history_id = this.history_id;
	            other.vm_join_id = this.vm_join_id;
	            
	}

	public void copyKeysDataTo(row40Struct other) {

		other.vm_join_id = this.vm_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_join_id="+vm_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_join_id, other.vm_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_44Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_44_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row40Struct row40 = new row40Struct();




	
	/**
	 * [tAdvancedHash_row40 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row40", false);
		start_Hash.put("tAdvancedHash_row40", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row40";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tAdvancedHash_row40 = 0;
		

			   		// connection name:row40
			   		// source node:tJDBCInput_44 - inputs:(after_tJDBCInput_8) outputs:(row40,row40) | target node:tAdvancedHash_row40 - inputs:(row40) outputs:()
			   		// linked node: tMap_8 - inputs:(row8,row40) outputs:(vm_interface_configuration)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row40 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct> tHash_Lookup_row40 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row40Struct>getLookup(matchingModeEnum_row40);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row40", tHash_Lookup_row40);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row40 begin ] stop
 */



	
	/**
	 * [tJDBCInput_44 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_44", false);
		start_Hash.put("tJDBCInput_44", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_44";

	
		int tos_count_tJDBCInput_44 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_44 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_44 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_44 = (String)(restRequest_tJDBCInput_44 != null ? restRequest_tJDBCInput_44.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_44 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_44 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_44 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_44 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_44.createRuntimeProperties();
 		                    props_tJDBCInput_44.setValue("sql",
 		                    "SELECT history_id, upper(cast(vm_id as char(36))) as vm_join_id\nFROM  v4_5_latest_configuration_vms");
 		                    
 		                    props_tJDBCInput_44.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_44.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_44.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_44.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_44.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_44.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_44.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_44.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_44.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_44_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_44\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_44_1_fisrt sst_tJDBCInput_44_1_fisrt = new SchemaSettingTool_tJDBCInput_44_1_fisrt();
 		                    
 		                    props_tJDBCInput_44.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_44_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_44.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms");
 		                    
 		                    java.util.List<Object> tJDBCInput_44_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_44_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_44_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_44.trimTable).setValue("trim",tJDBCInput_44_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_44_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_44_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_44_trimTable_columnName.add("vm_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_44.trimTable).setValue("columnName",tJDBCInput_44_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_44.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_44 = props_tJDBCInput_44.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_44 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_44 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_44 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_44.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_44);
        }
    }
globalMap.put("tJDBCInput_44_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_44);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_44= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_44_MAPPINGS_URL", mappings_url_tJDBCInput_44);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_44 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_44";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_44 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_44 = null;
topology_tJDBCInput_44 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_44 = def_tJDBCInput_44.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_44, topology_tJDBCInput_44);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_44 = def_tJDBCInput_44.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_44 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_44.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_44 = componentRuntime_tJDBCInput_44.initialize(container_tJDBCInput_44, props_tJDBCInput_44);

if (initVr_tJDBCInput_44.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_44.getMessage());
}

if(componentRuntime_tJDBCInput_44 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_44 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_44;
	compDriverInitialization_tJDBCInput_44.runAtDriver(container_tJDBCInput_44);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_44 = null;
if(componentRuntime_tJDBCInput_44 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_44 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_44;
	if (doesNodeBelongToRequest_tJDBCInput_44) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_44 = sourceOrSink_tJDBCInput_44.validate(container_tJDBCInput_44);
        if (vr_tJDBCInput_44.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_44.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_44 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_44 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_44;
        reader_tJDBCInput_44 = source_tJDBCInput_44.createReader(container_tJDBCInput_44);
	    reader_tJDBCInput_44 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_44, container_tJDBCInput_44);

            boolean multi_output_is_allowed_tJDBCInput_44 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_44 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_44.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_44 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_44 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_44 = props_tJDBCInput_44.getSchema(c_tJDBCInput_44, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_44 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_44, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_44 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_44 = reader_tJDBCInput_44.start();

        resourceMap.put("reader_tJDBCInput_44", reader_tJDBCInput_44);

        for (; available_tJDBCInput_44; available_tJDBCInput_44 = reader_tJDBCInput_44.advance()) {
			nb_line_tJDBCInput_44++;

			
			if (multi_output_is_allowed_tJDBCInput_44) {
				
					row40 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_44 = reader_tJDBCInput_44.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_44) {
						row40 = new row40Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_44 == null) {
            factory_tJDBCInput_44 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_44.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_44.setWrapped(factory_tJDBCInput_44.convertToAvro(data_tJDBCInput_44));
                Object columnValue_0_tJDBCInput_44 = outgoingEnforcer_tJDBCInput_44.get(0);
                        row40.history_id = (Integer) (columnValue_0_tJDBCInput_44);
                Object columnValue_1_tJDBCInput_44 = outgoingEnforcer_tJDBCInput_44.get(1);
                        row40.vm_join_id = (String) (columnValue_1_tJDBCInput_44);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_44) {
				java.util.Map<String,Object> info_tJDBCInput_44 = e_tJDBCInput_44.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_44 = null;
					if(info_tJDBCInput_44.containsKey("error")){
						errorMessage_tJDBCInput_44 = info_tJDBCInput_44.get("error");
					}else if(info_tJDBCInput_44.containsKey("errorMessage")){
						errorMessage_tJDBCInput_44 = info_tJDBCInput_44.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_44 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_44 = "Row "+ nb_line_tJDBCInput_44 + ": "+errorMessage_tJDBCInput_44;
					System.err.println(errorMessage_tJDBCInput_44);
				
					// If the record is reject, the main line record should put NULL
					row40 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_44 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_44 = null;


 



/**
 * [tJDBCInput_44 begin ] stop
 */
	
	/**
	 * [tJDBCInput_44 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_44";

	


 


	tos_count_tJDBCInput_44++;

/**
 * [tJDBCInput_44 main ] stop
 */
	
	/**
	 * [tJDBCInput_44 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_44";

	


 



/**
 * [tJDBCInput_44 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row40 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					


			   
			   

					row40Struct row40_HashRow = new row40Struct();
		   	   	   
				
				row40_HashRow.history_id = row40.history_id;
				
				row40_HashRow.vm_join_id = row40.vm_join_id;
				
			tHash_Lookup_row40.put(row40_HashRow);
			
            




 


	tos_count_tAdvancedHash_row40++;

/**
 * [tAdvancedHash_row40 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";

	

 



/**
 * [tAdvancedHash_row40 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row40 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";

	

 



/**
 * [tAdvancedHash_row40 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_44 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_44";

	


 



/**
 * [tJDBCInput_44 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_44 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_44";

	
// end of generic


resourceMap.put("finish_tJDBCInput_44", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_44 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_44 = null;
    if (reader_tJDBCInput_44 != null) {
        reader_tJDBCInput_44.close();
        resultMap_tJDBCInput_44 = reader_tJDBCInput_44.getReturnValues();
    }
if(resultMap_tJDBCInput_44!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_44 : resultMap_tJDBCInput_44.entrySet()) {
		switch(entry_tJDBCInput_44.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_44.setComponentData("tJDBCInput_44", "ERROR_MESSAGE", entry_tJDBCInput_44.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_44.setComponentData("tJDBCInput_44", "NB_LINE", entry_tJDBCInput_44.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_44.setComponentData("tJDBCInput_44", "NB_SUCCESS", entry_tJDBCInput_44.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_44.setComponentData("tJDBCInput_44", "NB_REJECT", entry_tJDBCInput_44.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_44 = new StringBuilder();
            for (int i_tJDBCInput_44 = 0; i_tJDBCInput_44 < entry_tJDBCInput_44.getKey().length(); i_tJDBCInput_44++) {
                char ch_tJDBCInput_44 = entry_tJDBCInput_44.getKey().charAt(i_tJDBCInput_44);
                if(Character.isUpperCase(ch_tJDBCInput_44) && i_tJDBCInput_44> 0) {
                	studio_key_tJDBCInput_44.append('_');
                }
                studio_key_tJDBCInput_44.append(ch_tJDBCInput_44);
            }
			container_tJDBCInput_44.setComponentData("tJDBCInput_44", studio_key_tJDBCInput_44.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_44.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_44", true);
end_Hash.put("tJDBCInput_44", System.currentTimeMillis());




/**
 * [tJDBCInput_44 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row40 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";

	

tHash_Lookup_row40.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row40", true);
end_Hash.put("tAdvancedHash_row40", System.currentTimeMillis());




/**
 * [tAdvancedHash_row40 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_44 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_44";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_44")==null){
    if(resourceMap.get("reader_tJDBCInput_44")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_44")).close();
		} catch (java.io.IOException e_tJDBCInput_44) {
			String errorMessage_tJDBCInput_44 = "failed to release the resource in tJDBCInput_44 :" + e_tJDBCInput_44.getMessage();
			System.err.println(errorMessage_tJDBCInput_44);
		}
	}
}
 



/**
 * [tJDBCInput_44 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row40 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";

	

 



/**
 * [tAdvancedHash_row40 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_44_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.datacenter_join_id == null) ? 0 : this.datacenter_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.datacenter_join_id == null) {
							if (other.datacenter_join_id != null)
								return false;
						
						} else if (!this.datacenter_join_id.equals(other.datacenter_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.datacenter_join_id = this.datacenter_join_id;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.datacenter_join_id = this.datacenter_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datacenter_join_id="+datacenter_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.datacenter_join_id, other.datacenter_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tJDBCInput_14 - inputs:(after_tJDBCInput_15) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_14 - inputs:(row14,row15) outputs:(delete_datacenters)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tJDBCInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_14", false);
		start_Hash.put("tJDBCInput_14", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_14";

	
		int tos_count_tJDBCInput_14 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_14 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_14 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_14 = (String)(restRequest_tJDBCInput_14 != null ? restRequest_tJDBCInput_14.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_14 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_14 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_14 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_14 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_14.createRuntimeProperties();
 		                    props_tJDBCInput_14.setValue("sql",
 		                    "SELECT upper(cast(id as char(36))) as datacenter_join_id\nFROM  storage_pool");
 		                    
 		                    props_tJDBCInput_14.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_14.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_14.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_14_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_pool\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_14\",\"di.table.label\":\"storage_pool\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_14_1_fisrt sst_tJDBCInput_14_1_fisrt = new SchemaSettingTool_tJDBCInput_14_1_fisrt();
 		                    
 		                    props_tJDBCInput_14.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_14_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_14.tableSelection.setValue("tablename",
 		                    "storage_pool");
 		                    
 		                    java.util.List<Object> tJDBCInput_14_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_14_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_14.trimTable).setValue("trim",tJDBCInput_14_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_14_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_14_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_14.trimTable).setValue("columnName",tJDBCInput_14_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_14.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_14 = props_tJDBCInput_14.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_14 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_14 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_14 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_14.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_14);
        }
    }
globalMap.put("tJDBCInput_14_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_14);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_14= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_14_MAPPINGS_URL", mappings_url_tJDBCInput_14);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_14 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_14";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_14 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_14 = null;
topology_tJDBCInput_14 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_14 = def_tJDBCInput_14.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_14, topology_tJDBCInput_14);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_14 = def_tJDBCInput_14.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_14 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_14.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_14 = componentRuntime_tJDBCInput_14.initialize(container_tJDBCInput_14, props_tJDBCInput_14);

if (initVr_tJDBCInput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_14.getMessage());
}

if(componentRuntime_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_14 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_14;
	compDriverInitialization_tJDBCInput_14.runAtDriver(container_tJDBCInput_14);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_14 = null;
if(componentRuntime_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_14 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_14;
	if (doesNodeBelongToRequest_tJDBCInput_14) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_14 = sourceOrSink_tJDBCInput_14.validate(container_tJDBCInput_14);
        if (vr_tJDBCInput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_14.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_14 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_14;
        reader_tJDBCInput_14 = source_tJDBCInput_14.createReader(container_tJDBCInput_14);
	    reader_tJDBCInput_14 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_14, container_tJDBCInput_14);

            boolean multi_output_is_allowed_tJDBCInput_14 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_14 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_14.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_14 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_14 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_14 = props_tJDBCInput_14.getSchema(c_tJDBCInput_14, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_14 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_14, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_14 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_14 = reader_tJDBCInput_14.start();

        resourceMap.put("reader_tJDBCInput_14", reader_tJDBCInput_14);

        for (; available_tJDBCInput_14; available_tJDBCInput_14 = reader_tJDBCInput_14.advance()) {
			nb_line_tJDBCInput_14++;

			
			if (multi_output_is_allowed_tJDBCInput_14) {
				
					row15 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_14 = reader_tJDBCInput_14.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_14) {
						row15 = new row15Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_14 == null) {
            factory_tJDBCInput_14 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_14.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_14.setWrapped(factory_tJDBCInput_14.convertToAvro(data_tJDBCInput_14));
                Object columnValue_0_tJDBCInput_14 = outgoingEnforcer_tJDBCInput_14.get(0);
                        row15.datacenter_join_id = (String) (columnValue_0_tJDBCInput_14);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_14) {
				java.util.Map<String,Object> info_tJDBCInput_14 = e_tJDBCInput_14.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_14 = null;
					if(info_tJDBCInput_14.containsKey("error")){
						errorMessage_tJDBCInput_14 = info_tJDBCInput_14.get("error");
					}else if(info_tJDBCInput_14.containsKey("errorMessage")){
						errorMessage_tJDBCInput_14 = info_tJDBCInput_14.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_14 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_14 = "Row "+ nb_line_tJDBCInput_14 + ": "+errorMessage_tJDBCInput_14;
					System.err.println(errorMessage_tJDBCInput_14);
				
					// If the record is reject, the main line record should put NULL
					row15 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_14 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_14 = null;


 



/**
 * [tJDBCInput_14 begin ] stop
 */
	
	/**
	 * [tJDBCInput_14 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 


	tos_count_tJDBCInput_14++;

/**
 * [tJDBCInput_14 main ] stop
 */
	
	/**
	 * [tJDBCInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 



/**
 * [tJDBCInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.datacenter_join_id = row15.datacenter_join_id;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";

	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";

	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 



/**
 * [tJDBCInput_14 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_14 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	
// end of generic


resourceMap.put("finish_tJDBCInput_14", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_14 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_14 = null;
    if (reader_tJDBCInput_14 != null) {
        reader_tJDBCInput_14.close();
        resultMap_tJDBCInput_14 = reader_tJDBCInput_14.getReturnValues();
    }
if(resultMap_tJDBCInput_14!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_14 : resultMap_tJDBCInput_14.entrySet()) {
		switch(entry_tJDBCInput_14.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "ERROR_MESSAGE", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_LINE", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_SUCCESS", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_REJECT", entry_tJDBCInput_14.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_14 = new StringBuilder();
            for (int i_tJDBCInput_14 = 0; i_tJDBCInput_14 < entry_tJDBCInput_14.getKey().length(); i_tJDBCInput_14++) {
                char ch_tJDBCInput_14 = entry_tJDBCInput_14.getKey().charAt(i_tJDBCInput_14);
                if(Character.isUpperCase(ch_tJDBCInput_14) && i_tJDBCInput_14> 0) {
                	studio_key_tJDBCInput_14.append('_');
                }
                studio_key_tJDBCInput_14.append(ch_tJDBCInput_14);
            }
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", studio_key_tJDBCInput_14.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_14.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_14", true);
end_Hash.put("tJDBCInput_14", System.currentTimeMillis());




/**
 * [tJDBCInput_14 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";

	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_14 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_14")==null){
    if(resourceMap.get("reader_tJDBCInput_14")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_14")).close();
		} catch (java.io.IOException e_tJDBCInput_14) {
			String errorMessage_tJDBCInput_14 = "failed to release the resource in tJDBCInput_14 :" + e_tJDBCInput_14.getMessage();
			System.err.println(errorMessage_tJDBCInput_14);
		}
	}
}
 



/**
 * [tJDBCInput_14 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";

	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cluster_join_id;

				public String getCluster_join_id () {
					return this.cluster_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cluster_join_id == null) ? 0 : this.cluster_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.cluster_join_id == null) {
							if (other.cluster_join_id != null)
								return false;
						
						} else if (!this.cluster_join_id.equals(other.cluster_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.cluster_join_id = this.cluster_join_id;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.cluster_join_id = this.cluster_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.cluster_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.cluster_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cluster_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cluster_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cluster_join_id="+cluster_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cluster_join_id, other.cluster_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tJDBCInput_17 - inputs:(after_tJDBCInput_18) outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_15 - inputs:(row17,row16) outputs:(delete_cluster)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tJDBCInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_17", false);
		start_Hash.put("tJDBCInput_17", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_17";

	
		int tos_count_tJDBCInput_17 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_17 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_17 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_17 = (String)(restRequest_tJDBCInput_17 != null ? restRequest_tJDBCInput_17.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_17 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_17 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_17 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_17 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_17.createRuntimeProperties();
 		                    props_tJDBCInput_17.setValue("sql",
 		                    "SELECT upper(cast(cluster_id as char(36))) as cluster_join_id\nFROM  cluster");
 		                    
 		                    props_tJDBCInput_17.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_17.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_17.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_17.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_17.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_17_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"cluster_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"cluster_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cluster_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_17\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_17_1_fisrt sst_tJDBCInput_17_1_fisrt = new SchemaSettingTool_tJDBCInput_17_1_fisrt();
 		                    
 		                    props_tJDBCInput_17.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_17_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_17.tableSelection.setValue("tablename",
 		                    "cluster");
 		                    
 		                    java.util.List<Object> tJDBCInput_17_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_17_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_17.trimTable).setValue("trim",tJDBCInput_17_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_17_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_17_trimTable_columnName.add("cluster_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_17.trimTable).setValue("columnName",tJDBCInput_17_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_17.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_17 = props_tJDBCInput_17.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_17 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_17 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_17 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_17.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_17);
        }
    }
globalMap.put("tJDBCInput_17_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_17);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_17= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_17_MAPPINGS_URL", mappings_url_tJDBCInput_17);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_17 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_17";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_17 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_17 = null;
topology_tJDBCInput_17 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_17 = def_tJDBCInput_17.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_17, topology_tJDBCInput_17);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_17 = def_tJDBCInput_17.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_17 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_17.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_17 = componentRuntime_tJDBCInput_17.initialize(container_tJDBCInput_17, props_tJDBCInput_17);

if (initVr_tJDBCInput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_17.getMessage());
}

if(componentRuntime_tJDBCInput_17 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_17 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_17;
	compDriverInitialization_tJDBCInput_17.runAtDriver(container_tJDBCInput_17);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_17 = null;
if(componentRuntime_tJDBCInput_17 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_17 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_17;
	if (doesNodeBelongToRequest_tJDBCInput_17) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_17 = sourceOrSink_tJDBCInput_17.validate(container_tJDBCInput_17);
        if (vr_tJDBCInput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_17.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_17 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_17 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_17;
        reader_tJDBCInput_17 = source_tJDBCInput_17.createReader(container_tJDBCInput_17);
	    reader_tJDBCInput_17 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_17, container_tJDBCInput_17);

            boolean multi_output_is_allowed_tJDBCInput_17 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_17 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_17.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_17 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_17 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_17 = props_tJDBCInput_17.getSchema(c_tJDBCInput_17, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_17 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_17, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_17 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_17 = reader_tJDBCInput_17.start();

        resourceMap.put("reader_tJDBCInput_17", reader_tJDBCInput_17);

        for (; available_tJDBCInput_17; available_tJDBCInput_17 = reader_tJDBCInput_17.advance()) {
			nb_line_tJDBCInput_17++;

			
			if (multi_output_is_allowed_tJDBCInput_17) {
				
					row16 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_17 = reader_tJDBCInput_17.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_17) {
						row16 = new row16Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_17 == null) {
            factory_tJDBCInput_17 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_17.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_17.setWrapped(factory_tJDBCInput_17.convertToAvro(data_tJDBCInput_17));
                Object columnValue_0_tJDBCInput_17 = outgoingEnforcer_tJDBCInput_17.get(0);
                        row16.cluster_join_id = (String) (columnValue_0_tJDBCInput_17);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_17) {
				java.util.Map<String,Object> info_tJDBCInput_17 = e_tJDBCInput_17.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_17 = null;
					if(info_tJDBCInput_17.containsKey("error")){
						errorMessage_tJDBCInput_17 = info_tJDBCInput_17.get("error");
					}else if(info_tJDBCInput_17.containsKey("errorMessage")){
						errorMessage_tJDBCInput_17 = info_tJDBCInput_17.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_17 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_17 = "Row "+ nb_line_tJDBCInput_17 + ": "+errorMessage_tJDBCInput_17;
					System.err.println(errorMessage_tJDBCInput_17);
				
					// If the record is reject, the main line record should put NULL
					row16 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_17 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_17 = null;


 



/**
 * [tJDBCInput_17 begin ] stop
 */
	
	/**
	 * [tJDBCInput_17 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	


 


	tos_count_tJDBCInput_17++;

/**
 * [tJDBCInput_17 main ] stop
 */
	
	/**
	 * [tJDBCInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	


 



/**
 * [tJDBCInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.cluster_join_id = row16.cluster_join_id;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	


 



/**
 * [tJDBCInput_17 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_17 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	
// end of generic


resourceMap.put("finish_tJDBCInput_17", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_17 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_17 = null;
    if (reader_tJDBCInput_17 != null) {
        reader_tJDBCInput_17.close();
        resultMap_tJDBCInput_17 = reader_tJDBCInput_17.getReturnValues();
    }
if(resultMap_tJDBCInput_17!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_17 : resultMap_tJDBCInput_17.entrySet()) {
		switch(entry_tJDBCInput_17.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "ERROR_MESSAGE", entry_tJDBCInput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "NB_LINE", entry_tJDBCInput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "NB_SUCCESS", entry_tJDBCInput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "NB_REJECT", entry_tJDBCInput_17.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_17 = new StringBuilder();
            for (int i_tJDBCInput_17 = 0; i_tJDBCInput_17 < entry_tJDBCInput_17.getKey().length(); i_tJDBCInput_17++) {
                char ch_tJDBCInput_17 = entry_tJDBCInput_17.getKey().charAt(i_tJDBCInput_17);
                if(Character.isUpperCase(ch_tJDBCInput_17) && i_tJDBCInput_17> 0) {
                	studio_key_tJDBCInput_17.append('_');
                }
                studio_key_tJDBCInput_17.append(ch_tJDBCInput_17);
            }
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", studio_key_tJDBCInput_17.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_17.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_17", true);
end_Hash.put("tJDBCInput_17", System.currentTimeMillis());




/**
 * [tJDBCInput_17 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

tHash_Lookup_row16.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_17 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_17")==null){
    if(resourceMap.get("reader_tJDBCInput_17")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_17")).close();
		} catch (java.io.IOException e_tJDBCInput_17) {
			String errorMessage_tJDBCInput_17 = "failed to release the resource in tJDBCInput_17 :" + e_tJDBCInput_17.getMessage();
			System.err.println(errorMessage_tJDBCInput_17);
		}
	}
}
 



/**
 * [tJDBCInput_17 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableComparableLookupRow<row18Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.storage_domain_join_id == null) ? 0 : this.storage_domain_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.storage_domain_join_id == null) {
							if (other.storage_domain_join_id != null)
								return false;
						
						} else if (!this.storage_domain_join_id.equals(other.storage_domain_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.storage_domain_join_id = this.storage_domain_join_id;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.storage_domain_join_id = this.storage_domain_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_join_id="+storage_domain_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.storage_domain_join_id, other.storage_domain_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tAdvancedHash_row18 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row18", false);
		start_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row18";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tAdvancedHash_row18 = 0;
		

			   		// connection name:row18
			   		// source node:tJDBCInput_19 - inputs:(after_tJDBCInput_20) outputs:(row18,row18) | target node:tAdvancedHash_row18 - inputs:(row18) outputs:()
			   		// linked node: tMap_16 - inputs:(row19,row18) outputs:(delete_storage)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row18 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row18Struct>getLookup(matchingModeEnum_row18);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row18", tHash_Lookup_row18);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row18 begin ] stop
 */



	
	/**
	 * [tJDBCInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_19", false);
		start_Hash.put("tJDBCInput_19", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_19";

	
		int tos_count_tJDBCInput_19 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_19 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_19 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_19 = (String)(restRequest_tJDBCInput_19 != null ? restRequest_tJDBCInput_19.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_19 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_19 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_19 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_19 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_19.createRuntimeProperties();
 		                    props_tJDBCInput_19.setValue("sql",
 		                    "SELECT upper(cast(id as char(36))) as storage_domain_join_id\nFROM  storage_domain_static");
 		                    
 		                    props_tJDBCInput_19.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_19.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_19.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_19.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_19.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_19_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_19\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_19_1_fisrt sst_tJDBCInput_19_1_fisrt = new SchemaSettingTool_tJDBCInput_19_1_fisrt();
 		                    
 		                    props_tJDBCInput_19.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_19_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_19.tableSelection.setValue("tablename",
 		                    "storage_domain_static");
 		                    
 		                    java.util.List<Object> tJDBCInput_19_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_19_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_19.trimTable).setValue("trim",tJDBCInput_19_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_19_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_19_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_19.trimTable).setValue("columnName",tJDBCInput_19_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_19.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_19 = props_tJDBCInput_19.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_19 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_19 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_19 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_19.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_19);
        }
    }
globalMap.put("tJDBCInput_19_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_19);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_19= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_19_MAPPINGS_URL", mappings_url_tJDBCInput_19);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_19 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_19";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_19 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_19 = null;
topology_tJDBCInput_19 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_19 = def_tJDBCInput_19.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_19, topology_tJDBCInput_19);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_19 = def_tJDBCInput_19.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_19 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_19.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_19 = componentRuntime_tJDBCInput_19.initialize(container_tJDBCInput_19, props_tJDBCInput_19);

if (initVr_tJDBCInput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_19.getMessage());
}

if(componentRuntime_tJDBCInput_19 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_19 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_19;
	compDriverInitialization_tJDBCInput_19.runAtDriver(container_tJDBCInput_19);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_19 = null;
if(componentRuntime_tJDBCInput_19 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_19 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_19;
	if (doesNodeBelongToRequest_tJDBCInput_19) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_19 = sourceOrSink_tJDBCInput_19.validate(container_tJDBCInput_19);
        if (vr_tJDBCInput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_19.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_19 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_19 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_19;
        reader_tJDBCInput_19 = source_tJDBCInput_19.createReader(container_tJDBCInput_19);
	    reader_tJDBCInput_19 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_19, container_tJDBCInput_19);

            boolean multi_output_is_allowed_tJDBCInput_19 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_19 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_19.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_19 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_19 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_19 = props_tJDBCInput_19.getSchema(c_tJDBCInput_19, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_19 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_19, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_19 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_19 = reader_tJDBCInput_19.start();

        resourceMap.put("reader_tJDBCInput_19", reader_tJDBCInput_19);

        for (; available_tJDBCInput_19; available_tJDBCInput_19 = reader_tJDBCInput_19.advance()) {
			nb_line_tJDBCInput_19++;

			
			if (multi_output_is_allowed_tJDBCInput_19) {
				
					row18 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_19 = reader_tJDBCInput_19.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_19) {
						row18 = new row18Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_19 == null) {
            factory_tJDBCInput_19 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_19.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_19.setWrapped(factory_tJDBCInput_19.convertToAvro(data_tJDBCInput_19));
                Object columnValue_0_tJDBCInput_19 = outgoingEnforcer_tJDBCInput_19.get(0);
                        row18.storage_domain_join_id = (String) (columnValue_0_tJDBCInput_19);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_19) {
				java.util.Map<String,Object> info_tJDBCInput_19 = e_tJDBCInput_19.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_19 = null;
					if(info_tJDBCInput_19.containsKey("error")){
						errorMessage_tJDBCInput_19 = info_tJDBCInput_19.get("error");
					}else if(info_tJDBCInput_19.containsKey("errorMessage")){
						errorMessage_tJDBCInput_19 = info_tJDBCInput_19.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_19 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_19 = "Row "+ nb_line_tJDBCInput_19 + ": "+errorMessage_tJDBCInput_19;
					System.err.println(errorMessage_tJDBCInput_19);
				
					// If the record is reject, the main line record should put NULL
					row18 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_19 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_19 = null;


 



/**
 * [tJDBCInput_19 begin ] stop
 */
	
	/**
	 * [tJDBCInput_19 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	


 


	tos_count_tJDBCInput_19++;

/**
 * [tJDBCInput_19 main ] stop
 */
	
	/**
	 * [tJDBCInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	


 



/**
 * [tJDBCInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					


			   
			   

					row18Struct row18_HashRow = new row18Struct();
		   	   	   
				
				row18_HashRow.storage_domain_join_id = row18.storage_domain_join_id;
				
			tHash_Lookup_row18.put(row18_HashRow);
			
            




 


	tos_count_tAdvancedHash_row18++;

/**
 * [tAdvancedHash_row18 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

 



/**
 * [tAdvancedHash_row18 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

 



/**
 * [tAdvancedHash_row18 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	


 



/**
 * [tJDBCInput_19 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_19 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	
// end of generic


resourceMap.put("finish_tJDBCInput_19", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_19 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_19 = null;
    if (reader_tJDBCInput_19 != null) {
        reader_tJDBCInput_19.close();
        resultMap_tJDBCInput_19 = reader_tJDBCInput_19.getReturnValues();
    }
if(resultMap_tJDBCInput_19!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_19 : resultMap_tJDBCInput_19.entrySet()) {
		switch(entry_tJDBCInput_19.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "ERROR_MESSAGE", entry_tJDBCInput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "NB_LINE", entry_tJDBCInput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "NB_SUCCESS", entry_tJDBCInput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "NB_REJECT", entry_tJDBCInput_19.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_19 = new StringBuilder();
            for (int i_tJDBCInput_19 = 0; i_tJDBCInput_19 < entry_tJDBCInput_19.getKey().length(); i_tJDBCInput_19++) {
                char ch_tJDBCInput_19 = entry_tJDBCInput_19.getKey().charAt(i_tJDBCInput_19);
                if(Character.isUpperCase(ch_tJDBCInput_19) && i_tJDBCInput_19> 0) {
                	studio_key_tJDBCInput_19.append('_');
                }
                studio_key_tJDBCInput_19.append(ch_tJDBCInput_19);
            }
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", studio_key_tJDBCInput_19.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_19.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_19", true);
end_Hash.put("tJDBCInput_19", System.currentTimeMillis());




/**
 * [tJDBCInput_19 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

tHash_Lookup_row18.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row18", true);
end_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());




/**
 * [tAdvancedHash_row18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_19 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_19")==null){
    if(resourceMap.get("reader_tJDBCInput_19")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_19")).close();
		} catch (java.io.IOException e_tJDBCInput_19) {
			String errorMessage_tJDBCInput_19 = "failed to release the resource in tJDBCInput_19 :" + e_tJDBCInput_19.getMessage();
			System.err.println(errorMessage_tJDBCInput_19);
		}
	}
}
 



/**
 * [tJDBCInput_19 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

 



/**
 * [tAdvancedHash_row18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableComparableLookupRow<row20Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.host_join_id == null) ? 0 : this.host_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row20Struct other = (row20Struct) obj;
		
						if (this.host_join_id == null) {
							if (other.host_join_id != null)
								return false;
						
						} else if (!this.host_join_id.equals(other.host_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row20Struct other) {

		other.host_join_id = this.host_join_id;
	            
	}

	public void copyKeysDataTo(row20Struct other) {

		other.host_join_id = this.host_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_join_id="+host_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.host_join_id, other.host_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();




	
	/**
	 * [tAdvancedHash_row20 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row20", false);
		start_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row20";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tAdvancedHash_row20 = 0;
		

			   		// connection name:row20
			   		// source node:tJDBCInput_21 - inputs:(after_tJDBCInput_22) outputs:(row20,row20) | target node:tAdvancedHash_row20 - inputs:(row20) outputs:()
			   		// linked node: tMap_17 - inputs:(row21,row20) outputs:(delete_hosts)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row20 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row20Struct>getLookup(matchingModeEnum_row20);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row20", tHash_Lookup_row20);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row20 begin ] stop
 */



	
	/**
	 * [tJDBCInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_21", false);
		start_Hash.put("tJDBCInput_21", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_21";

	
		int tos_count_tJDBCInput_21 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_21 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_21 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_21 = (String)(restRequest_tJDBCInput_21 != null ? restRequest_tJDBCInput_21.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_21 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_21 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_21 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_21 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_21.createRuntimeProperties();
 		                    props_tJDBCInput_21.setValue("sql",
 		                    "SELECT upper(cast(vds_id as char(36))) as host_join_id\nFROM  vds_static");
 		                    
 		                    props_tJDBCInput_21.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_21.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_21.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_21_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_21\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_21_1_fisrt sst_tJDBCInput_21_1_fisrt = new SchemaSettingTool_tJDBCInput_21_1_fisrt();
 		                    
 		                    props_tJDBCInput_21.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_21_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_21.tableSelection.setValue("tablename",
 		                    "vds_static");
 		                    
 		                    java.util.List<Object> tJDBCInput_21_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_21_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_21.trimTable).setValue("trim",tJDBCInput_21_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_21_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_21_trimTable_columnName.add("host_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_21.trimTable).setValue("columnName",tJDBCInput_21_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_21.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_21 = props_tJDBCInput_21.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_21 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_21 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_21 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_21.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_21);
        }
    }
globalMap.put("tJDBCInput_21_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_21);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_21= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_21_MAPPINGS_URL", mappings_url_tJDBCInput_21);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_21 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_21";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_21 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_21 = null;
topology_tJDBCInput_21 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_21 = def_tJDBCInput_21.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_21, topology_tJDBCInput_21);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_21 = def_tJDBCInput_21.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_21 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_21.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_21 = componentRuntime_tJDBCInput_21.initialize(container_tJDBCInput_21, props_tJDBCInput_21);

if (initVr_tJDBCInput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_21.getMessage());
}

if(componentRuntime_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_21 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_21;
	compDriverInitialization_tJDBCInput_21.runAtDriver(container_tJDBCInput_21);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_21 = null;
if(componentRuntime_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_21 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_21;
	if (doesNodeBelongToRequest_tJDBCInput_21) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_21 = sourceOrSink_tJDBCInput_21.validate(container_tJDBCInput_21);
        if (vr_tJDBCInput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_21.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_21 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_21;
        reader_tJDBCInput_21 = source_tJDBCInput_21.createReader(container_tJDBCInput_21);
	    reader_tJDBCInput_21 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_21, container_tJDBCInput_21);

            boolean multi_output_is_allowed_tJDBCInput_21 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_21 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_21.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_21 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_21 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_21 = props_tJDBCInput_21.getSchema(c_tJDBCInput_21, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_21 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_21, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_21 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_21 = reader_tJDBCInput_21.start();

        resourceMap.put("reader_tJDBCInput_21", reader_tJDBCInput_21);

        for (; available_tJDBCInput_21; available_tJDBCInput_21 = reader_tJDBCInput_21.advance()) {
			nb_line_tJDBCInput_21++;

			
			if (multi_output_is_allowed_tJDBCInput_21) {
				
					row20 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_21 = reader_tJDBCInput_21.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_21) {
						row20 = new row20Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_21 == null) {
            factory_tJDBCInput_21 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_21.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_21.setWrapped(factory_tJDBCInput_21.convertToAvro(data_tJDBCInput_21));
                Object columnValue_0_tJDBCInput_21 = outgoingEnforcer_tJDBCInput_21.get(0);
                        row20.host_join_id = (String) (columnValue_0_tJDBCInput_21);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_21) {
				java.util.Map<String,Object> info_tJDBCInput_21 = e_tJDBCInput_21.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_21 = null;
					if(info_tJDBCInput_21.containsKey("error")){
						errorMessage_tJDBCInput_21 = info_tJDBCInput_21.get("error");
					}else if(info_tJDBCInput_21.containsKey("errorMessage")){
						errorMessage_tJDBCInput_21 = info_tJDBCInput_21.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_21 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_21 = "Row "+ nb_line_tJDBCInput_21 + ": "+errorMessage_tJDBCInput_21;
					System.err.println(errorMessage_tJDBCInput_21);
				
					// If the record is reject, the main line record should put NULL
					row20 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_21 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_21 = null;


 



/**
 * [tJDBCInput_21 begin ] stop
 */
	
	/**
	 * [tJDBCInput_21 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 


	tos_count_tJDBCInput_21++;

/**
 * [tJDBCInput_21 main ] stop
 */
	
	/**
	 * [tJDBCInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 



/**
 * [tJDBCInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					


			   
			   

					row20Struct row20_HashRow = new row20Struct();
		   	   	   
				
				row20_HashRow.host_join_id = row20.host_join_id;
				
			tHash_Lookup_row20.put(row20_HashRow);
			
            




 


	tos_count_tAdvancedHash_row20++;

/**
 * [tAdvancedHash_row20 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";

	

 



/**
 * [tAdvancedHash_row20 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";

	

 



/**
 * [tAdvancedHash_row20 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 



/**
 * [tJDBCInput_21 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_21 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	
// end of generic


resourceMap.put("finish_tJDBCInput_21", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_21 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_21 = null;
    if (reader_tJDBCInput_21 != null) {
        reader_tJDBCInput_21.close();
        resultMap_tJDBCInput_21 = reader_tJDBCInput_21.getReturnValues();
    }
if(resultMap_tJDBCInput_21!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_21 : resultMap_tJDBCInput_21.entrySet()) {
		switch(entry_tJDBCInput_21.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "ERROR_MESSAGE", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_LINE", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_SUCCESS", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_REJECT", entry_tJDBCInput_21.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_21 = new StringBuilder();
            for (int i_tJDBCInput_21 = 0; i_tJDBCInput_21 < entry_tJDBCInput_21.getKey().length(); i_tJDBCInput_21++) {
                char ch_tJDBCInput_21 = entry_tJDBCInput_21.getKey().charAt(i_tJDBCInput_21);
                if(Character.isUpperCase(ch_tJDBCInput_21) && i_tJDBCInput_21> 0) {
                	studio_key_tJDBCInput_21.append('_');
                }
                studio_key_tJDBCInput_21.append(ch_tJDBCInput_21);
            }
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", studio_key_tJDBCInput_21.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_21.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_21", true);
end_Hash.put("tJDBCInput_21", System.currentTimeMillis());




/**
 * [tJDBCInput_21 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";

	

tHash_Lookup_row20.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row20", true);
end_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());




/**
 * [tAdvancedHash_row20 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_21 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_21")==null){
    if(resourceMap.get("reader_tJDBCInput_21")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_21")).close();
		} catch (java.io.IOException e_tJDBCInput_21) {
			String errorMessage_tJDBCInput_21 = "failed to release the resource in tJDBCInput_21 :" + e_tJDBCInput_21.getMessage();
			System.err.println(errorMessage_tJDBCInput_21);
		}
	}
}
 



/**
 * [tJDBCInput_21 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";

	

 



/**
 * [tAdvancedHash_row20 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableComparableLookupRow<row22Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String host_interface_join_id;

				public String getHost_interface_join_id () {
					return this.host_interface_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.host_interface_join_id == null) ? 0 : this.host_interface_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row22Struct other = (row22Struct) obj;
		
						if (this.host_interface_join_id == null) {
							if (other.host_interface_join_id != null)
								return false;
						
						} else if (!this.host_interface_join_id.equals(other.host_interface_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row22Struct other) {

		other.host_interface_join_id = this.host_interface_join_id;
	            
	}

	public void copyKeysDataTo(row22Struct other) {

		other.host_interface_join_id = this.host_interface_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.host_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.host_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.host_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_interface_join_id="+host_interface_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.host_interface_join_id, other.host_interface_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tAdvancedHash_row22 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row22", false);
		start_Hash.put("tAdvancedHash_row22", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row22";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tAdvancedHash_row22 = 0;
		

			   		// connection name:row22
			   		// source node:tJDBCInput_23 - inputs:(after_tJDBCInput_24) outputs:(row22,row22) | target node:tAdvancedHash_row22 - inputs:(row22) outputs:()
			   		// linked node: tMap_18 - inputs:(row23,row22) outputs:(delete_hinterface)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row22 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct> tHash_Lookup_row22 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row22Struct>getLookup(matchingModeEnum_row22);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row22", tHash_Lookup_row22);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row22 begin ] stop
 */



	
	/**
	 * [tJDBCInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_23", false);
		start_Hash.put("tJDBCInput_23", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_23";

	
		int tos_count_tJDBCInput_23 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_23 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_23 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_23 = (String)(restRequest_tJDBCInput_23 != null ? restRequest_tJDBCInput_23.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_23 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_23 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_23 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_23 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_23.createRuntimeProperties();
 		                    props_tJDBCInput_23.setValue("sql",
 		                    "SELECT  upper(cast(id as char(36))) as host_interface_join_id\nFROM  vds_interface");
 		                    
 		                    props_tJDBCInput_23.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_23.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_23.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_23.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_23.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_23_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"host_interface_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_23\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_23_1_fisrt sst_tJDBCInput_23_1_fisrt = new SchemaSettingTool_tJDBCInput_23_1_fisrt();
 		                    
 		                    props_tJDBCInput_23.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_23_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_23.tableSelection.setValue("tablename",
 		                    "vds_interface");
 		                    
 		                    java.util.List<Object> tJDBCInput_23_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_23_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_23.trimTable).setValue("trim",tJDBCInput_23_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_23_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_23_trimTable_columnName.add("host_interface_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_23.trimTable).setValue("columnName",tJDBCInput_23_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_23.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_23 = props_tJDBCInput_23.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_23 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_23 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_23 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_23.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_23);
        }
    }
globalMap.put("tJDBCInput_23_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_23);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_23= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_23_MAPPINGS_URL", mappings_url_tJDBCInput_23);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_23 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_23";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_23 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_23 = null;
topology_tJDBCInput_23 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_23 = def_tJDBCInput_23.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_23, topology_tJDBCInput_23);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_23 = def_tJDBCInput_23.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_23 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_23.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_23 = componentRuntime_tJDBCInput_23.initialize(container_tJDBCInput_23, props_tJDBCInput_23);

if (initVr_tJDBCInput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_23.getMessage());
}

if(componentRuntime_tJDBCInput_23 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_23 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_23;
	compDriverInitialization_tJDBCInput_23.runAtDriver(container_tJDBCInput_23);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_23 = null;
if(componentRuntime_tJDBCInput_23 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_23 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_23;
	if (doesNodeBelongToRequest_tJDBCInput_23) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_23 = sourceOrSink_tJDBCInput_23.validate(container_tJDBCInput_23);
        if (vr_tJDBCInput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_23.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_23 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_23 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_23;
        reader_tJDBCInput_23 = source_tJDBCInput_23.createReader(container_tJDBCInput_23);
	    reader_tJDBCInput_23 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_23, container_tJDBCInput_23);

            boolean multi_output_is_allowed_tJDBCInput_23 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_23 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_23.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_23 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_23 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_23 = props_tJDBCInput_23.getSchema(c_tJDBCInput_23, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_23 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_23, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_23 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_23 = reader_tJDBCInput_23.start();

        resourceMap.put("reader_tJDBCInput_23", reader_tJDBCInput_23);

        for (; available_tJDBCInput_23; available_tJDBCInput_23 = reader_tJDBCInput_23.advance()) {
			nb_line_tJDBCInput_23++;

			
			if (multi_output_is_allowed_tJDBCInput_23) {
				
					row22 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_23 = reader_tJDBCInput_23.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_23) {
						row22 = new row22Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_23 == null) {
            factory_tJDBCInput_23 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_23.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_23.setWrapped(factory_tJDBCInput_23.convertToAvro(data_tJDBCInput_23));
                Object columnValue_0_tJDBCInput_23 = outgoingEnforcer_tJDBCInput_23.get(0);
                        row22.host_interface_join_id = (String) (columnValue_0_tJDBCInput_23);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_23) {
				java.util.Map<String,Object> info_tJDBCInput_23 = e_tJDBCInput_23.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_23 = null;
					if(info_tJDBCInput_23.containsKey("error")){
						errorMessage_tJDBCInput_23 = info_tJDBCInput_23.get("error");
					}else if(info_tJDBCInput_23.containsKey("errorMessage")){
						errorMessage_tJDBCInput_23 = info_tJDBCInput_23.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_23 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_23 = "Row "+ nb_line_tJDBCInput_23 + ": "+errorMessage_tJDBCInput_23;
					System.err.println(errorMessage_tJDBCInput_23);
				
					// If the record is reject, the main line record should put NULL
					row22 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_23 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_23 = null;


 



/**
 * [tJDBCInput_23 begin ] stop
 */
	
	/**
	 * [tJDBCInput_23 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	


 


	tos_count_tJDBCInput_23++;

/**
 * [tJDBCInput_23 main ] stop
 */
	
	/**
	 * [tJDBCInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	


 



/**
 * [tJDBCInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					


			   
			   

					row22Struct row22_HashRow = new row22Struct();
		   	   	   
				
				row22_HashRow.host_interface_join_id = row22.host_interface_join_id;
				
			tHash_Lookup_row22.put(row22_HashRow);
			
            




 


	tos_count_tAdvancedHash_row22++;

/**
 * [tAdvancedHash_row22 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";

	

 



/**
 * [tAdvancedHash_row22 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row22 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";

	

 



/**
 * [tAdvancedHash_row22 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	


 



/**
 * [tJDBCInput_23 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_23 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	
// end of generic


resourceMap.put("finish_tJDBCInput_23", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_23 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_23 = null;
    if (reader_tJDBCInput_23 != null) {
        reader_tJDBCInput_23.close();
        resultMap_tJDBCInput_23 = reader_tJDBCInput_23.getReturnValues();
    }
if(resultMap_tJDBCInput_23!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_23 : resultMap_tJDBCInput_23.entrySet()) {
		switch(entry_tJDBCInput_23.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "ERROR_MESSAGE", entry_tJDBCInput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "NB_LINE", entry_tJDBCInput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "NB_SUCCESS", entry_tJDBCInput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "NB_REJECT", entry_tJDBCInput_23.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_23 = new StringBuilder();
            for (int i_tJDBCInput_23 = 0; i_tJDBCInput_23 < entry_tJDBCInput_23.getKey().length(); i_tJDBCInput_23++) {
                char ch_tJDBCInput_23 = entry_tJDBCInput_23.getKey().charAt(i_tJDBCInput_23);
                if(Character.isUpperCase(ch_tJDBCInput_23) && i_tJDBCInput_23> 0) {
                	studio_key_tJDBCInput_23.append('_');
                }
                studio_key_tJDBCInput_23.append(ch_tJDBCInput_23);
            }
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", studio_key_tJDBCInput_23.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_23.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_23", true);
end_Hash.put("tJDBCInput_23", System.currentTimeMillis());




/**
 * [tJDBCInput_23 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";

	

tHash_Lookup_row22.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row22", true);
end_Hash.put("tAdvancedHash_row22", System.currentTimeMillis());




/**
 * [tAdvancedHash_row22 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_23 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_23")==null){
    if(resourceMap.get("reader_tJDBCInput_23")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_23")).close();
		} catch (java.io.IOException e_tJDBCInput_23) {
			String errorMessage_tJDBCInput_23 = "failed to release the resource in tJDBCInput_23 :" + e_tJDBCInput_23.getMessage();
			System.err.println(errorMessage_tJDBCInput_23);
		}
	}
}
 



/**
 * [tJDBCInput_23 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";

	

 



/**
 * [tAdvancedHash_row22 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_23_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableComparableLookupRow<row24Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_join_id == null) ? 0 : this.vm_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row24Struct other = (row24Struct) obj;
		
						if (this.vm_join_id == null) {
							if (other.vm_join_id != null)
								return false;
						
						} else if (!this.vm_join_id.equals(other.vm_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row24Struct other) {

		other.vm_join_id = this.vm_join_id;
	            
	}

	public void copyKeysDataTo(row24Struct other) {

		other.vm_join_id = this.vm_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_join_id="+vm_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_join_id, other.vm_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_25Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_25_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tAdvancedHash_row24 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row24", false);
		start_Hash.put("tAdvancedHash_row24", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row24";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tAdvancedHash_row24 = 0;
		

			   		// connection name:row24
			   		// source node:tJDBCInput_25 - inputs:(after_tJDBCInput_26) outputs:(row24,row24) | target node:tAdvancedHash_row24 - inputs:(row24) outputs:()
			   		// linked node: tMap_19 - inputs:(row25,row24) outputs:(delete_vms)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row24 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct> tHash_Lookup_row24 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row24Struct>getLookup(matchingModeEnum_row24);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row24", tHash_Lookup_row24);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row24 begin ] stop
 */



	
	/**
	 * [tJDBCInput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_25", false);
		start_Hash.put("tJDBCInput_25", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_25";

	
		int tos_count_tJDBCInput_25 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_25 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_25 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_25 = (String)(restRequest_tJDBCInput_25 != null ? restRequest_tJDBCInput_25.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_25 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_25 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_25 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_25 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_25.createRuntimeProperties();
 		                    props_tJDBCInput_25.setValue("sql",
 		                    "SELECT upper(cast(vm_guid as char(36))) as vm_join_id\nFROM  vm_static");
 		                    
 		                    props_tJDBCInput_25.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_25.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_25.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_25.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_25.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_25_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_25\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_25_1_fisrt sst_tJDBCInput_25_1_fisrt = new SchemaSettingTool_tJDBCInput_25_1_fisrt();
 		                    
 		                    props_tJDBCInput_25.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_25_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_25.tableSelection.setValue("tablename",
 		                    "vm_static");
 		                    
 		                    java.util.List<Object> tJDBCInput_25_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_25_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_25.trimTable).setValue("trim",tJDBCInput_25_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_25_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_25_trimTable_columnName.add("vm_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_25.trimTable).setValue("columnName",tJDBCInput_25_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_25.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_25 = props_tJDBCInput_25.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_25 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_25 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_25 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_25.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_25);
        }
    }
globalMap.put("tJDBCInput_25_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_25);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_25= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_25_MAPPINGS_URL", mappings_url_tJDBCInput_25);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_25 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_25";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_25 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_25 = null;
topology_tJDBCInput_25 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_25 = def_tJDBCInput_25.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_25, topology_tJDBCInput_25);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_25 = def_tJDBCInput_25.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_25 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_25.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_25 = componentRuntime_tJDBCInput_25.initialize(container_tJDBCInput_25, props_tJDBCInput_25);

if (initVr_tJDBCInput_25.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_25.getMessage());
}

if(componentRuntime_tJDBCInput_25 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_25 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_25;
	compDriverInitialization_tJDBCInput_25.runAtDriver(container_tJDBCInput_25);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_25 = null;
if(componentRuntime_tJDBCInput_25 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_25 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_25;
	if (doesNodeBelongToRequest_tJDBCInput_25) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_25 = sourceOrSink_tJDBCInput_25.validate(container_tJDBCInput_25);
        if (vr_tJDBCInput_25.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_25.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_25 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_25 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_25;
        reader_tJDBCInput_25 = source_tJDBCInput_25.createReader(container_tJDBCInput_25);
	    reader_tJDBCInput_25 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_25, container_tJDBCInput_25);

            boolean multi_output_is_allowed_tJDBCInput_25 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_25 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_25.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_25 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_25 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_25 = props_tJDBCInput_25.getSchema(c_tJDBCInput_25, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_25 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_25, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_25 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_25 = reader_tJDBCInput_25.start();

        resourceMap.put("reader_tJDBCInput_25", reader_tJDBCInput_25);

        for (; available_tJDBCInput_25; available_tJDBCInput_25 = reader_tJDBCInput_25.advance()) {
			nb_line_tJDBCInput_25++;

			
			if (multi_output_is_allowed_tJDBCInput_25) {
				
					row24 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_25 = reader_tJDBCInput_25.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_25) {
						row24 = new row24Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_25 == null) {
            factory_tJDBCInput_25 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_25.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_25.setWrapped(factory_tJDBCInput_25.convertToAvro(data_tJDBCInput_25));
                Object columnValue_0_tJDBCInput_25 = outgoingEnforcer_tJDBCInput_25.get(0);
                        row24.vm_join_id = (String) (columnValue_0_tJDBCInput_25);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_25) {
				java.util.Map<String,Object> info_tJDBCInput_25 = e_tJDBCInput_25.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_25 = null;
					if(info_tJDBCInput_25.containsKey("error")){
						errorMessage_tJDBCInput_25 = info_tJDBCInput_25.get("error");
					}else if(info_tJDBCInput_25.containsKey("errorMessage")){
						errorMessage_tJDBCInput_25 = info_tJDBCInput_25.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_25 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_25 = "Row "+ nb_line_tJDBCInput_25 + ": "+errorMessage_tJDBCInput_25;
					System.err.println(errorMessage_tJDBCInput_25);
				
					// If the record is reject, the main line record should put NULL
					row24 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_25 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_25 = null;


 



/**
 * [tJDBCInput_25 begin ] stop
 */
	
	/**
	 * [tJDBCInput_25 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	


 


	tos_count_tJDBCInput_25++;

/**
 * [tJDBCInput_25 main ] stop
 */
	
	/**
	 * [tJDBCInput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	


 



/**
 * [tJDBCInput_25 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					


			   
			   

					row24Struct row24_HashRow = new row24Struct();
		   	   	   
				
				row24_HashRow.vm_join_id = row24.vm_join_id;
				
			tHash_Lookup_row24.put(row24_HashRow);
			
            




 


	tos_count_tAdvancedHash_row24++;

/**
 * [tAdvancedHash_row24 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

 



/**
 * [tAdvancedHash_row24 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row24 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

 



/**
 * [tAdvancedHash_row24 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	


 



/**
 * [tJDBCInput_25 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_25 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	
// end of generic


resourceMap.put("finish_tJDBCInput_25", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_25 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_25 = null;
    if (reader_tJDBCInput_25 != null) {
        reader_tJDBCInput_25.close();
        resultMap_tJDBCInput_25 = reader_tJDBCInput_25.getReturnValues();
    }
if(resultMap_tJDBCInput_25!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_25 : resultMap_tJDBCInput_25.entrySet()) {
		switch(entry_tJDBCInput_25.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "ERROR_MESSAGE", entry_tJDBCInput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "NB_LINE", entry_tJDBCInput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "NB_SUCCESS", entry_tJDBCInput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "NB_REJECT", entry_tJDBCInput_25.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_25 = new StringBuilder();
            for (int i_tJDBCInput_25 = 0; i_tJDBCInput_25 < entry_tJDBCInput_25.getKey().length(); i_tJDBCInput_25++) {
                char ch_tJDBCInput_25 = entry_tJDBCInput_25.getKey().charAt(i_tJDBCInput_25);
                if(Character.isUpperCase(ch_tJDBCInput_25) && i_tJDBCInput_25> 0) {
                	studio_key_tJDBCInput_25.append('_');
                }
                studio_key_tJDBCInput_25.append(ch_tJDBCInput_25);
            }
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", studio_key_tJDBCInput_25.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_25.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_25", true);
end_Hash.put("tJDBCInput_25", System.currentTimeMillis());




/**
 * [tJDBCInput_25 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

tHash_Lookup_row24.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row24", true);
end_Hash.put("tAdvancedHash_row24", System.currentTimeMillis());




/**
 * [tAdvancedHash_row24 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_25 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_25")==null){
    if(resourceMap.get("reader_tJDBCInput_25")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_25")).close();
		} catch (java.io.IOException e_tJDBCInput_25) {
			String errorMessage_tJDBCInput_25 = "failed to release the resource in tJDBCInput_25 :" + e_tJDBCInput_25.getMessage();
			System.err.println(errorMessage_tJDBCInput_25);
		}
	}
}
 



/**
 * [tJDBCInput_25 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

 



/**
 * [tAdvancedHash_row24 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_25_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableComparableLookupRow<row26Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String vm_disk_join_id;

				public String getVm_disk_join_id () {
					return this.vm_disk_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_disk_join_id == null) ? 0 : this.vm_disk_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row26Struct other = (row26Struct) obj;
		
						if (this.vm_disk_join_id == null) {
							if (other.vm_disk_join_id != null)
								return false;
						
						} else if (!this.vm_disk_join_id.equals(other.vm_disk_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row26Struct other) {

		other.vm_disk_join_id = this.vm_disk_join_id;
	            
	}

	public void copyKeysDataTo(row26Struct other) {

		other.vm_disk_join_id = this.vm_disk_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_disk_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_disk_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_disk_join_id="+vm_disk_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_disk_join_id, other.vm_disk_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_27Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_27_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();




	
	/**
	 * [tAdvancedHash_row26 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row26", false);
		start_Hash.put("tAdvancedHash_row26", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row26";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tAdvancedHash_row26 = 0;
		

			   		// connection name:row26
			   		// source node:tJDBCInput_27 - inputs:(after_tJDBCInput_28) outputs:(row26,row26) | target node:tAdvancedHash_row26 - inputs:(row26) outputs:()
			   		// linked node: tMap_20 - inputs:(row27,row26) outputs:(delete_disks)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row26 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct> tHash_Lookup_row26 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row26Struct>getLookup(matchingModeEnum_row26);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row26", tHash_Lookup_row26);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row26 begin ] stop
 */



	
	/**
	 * [tJDBCInput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_27", false);
		start_Hash.put("tJDBCInput_27", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_27";

	
		int tos_count_tJDBCInput_27 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_27 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_27 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_27 = (String)(restRequest_tJDBCInput_27 != null ? restRequest_tJDBCInput_27.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_27 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_27 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_27 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_27 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_27.createRuntimeProperties();
 		                    props_tJDBCInput_27.setValue("sql",
 		                    "SELECT upper(cast(disk_id as char(36))) as vm_disk_join_id\nFROM  base_disks");
 		                    
 		                    props_tJDBCInput_27.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_27.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_27.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_27.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_27.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_27.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_27.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_27.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_27.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_27_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"vm_disk_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_27\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_27_1_fisrt sst_tJDBCInput_27_1_fisrt = new SchemaSettingTool_tJDBCInput_27_1_fisrt();
 		                    
 		                    props_tJDBCInput_27.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_27_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_27.tableSelection.setValue("tablename",
 		                    "base_disks");
 		                    
 		                    java.util.List<Object> tJDBCInput_27_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_27_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_27.trimTable).setValue("trim",tJDBCInput_27_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_27_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_27_trimTable_columnName.add("vm_disk_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_27.trimTable).setValue("columnName",tJDBCInput_27_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_27.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_27 = props_tJDBCInput_27.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_27 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_27 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_27 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_27.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_27);
        }
    }
globalMap.put("tJDBCInput_27_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_27);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_27= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_27_MAPPINGS_URL", mappings_url_tJDBCInput_27);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_27 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_27";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_27 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_27 = null;
topology_tJDBCInput_27 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_27 = def_tJDBCInput_27.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_27, topology_tJDBCInput_27);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_27 = def_tJDBCInput_27.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_27 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_27.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_27 = componentRuntime_tJDBCInput_27.initialize(container_tJDBCInput_27, props_tJDBCInput_27);

if (initVr_tJDBCInput_27.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_27.getMessage());
}

if(componentRuntime_tJDBCInput_27 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_27 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_27;
	compDriverInitialization_tJDBCInput_27.runAtDriver(container_tJDBCInput_27);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_27 = null;
if(componentRuntime_tJDBCInput_27 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_27 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_27;
	if (doesNodeBelongToRequest_tJDBCInput_27) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_27 = sourceOrSink_tJDBCInput_27.validate(container_tJDBCInput_27);
        if (vr_tJDBCInput_27.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_27.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_27 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_27 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_27;
        reader_tJDBCInput_27 = source_tJDBCInput_27.createReader(container_tJDBCInput_27);
	    reader_tJDBCInput_27 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_27, container_tJDBCInput_27);

            boolean multi_output_is_allowed_tJDBCInput_27 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_27 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_27.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_27 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_27 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_27 = props_tJDBCInput_27.getSchema(c_tJDBCInput_27, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_27 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_27, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_27 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_27 = reader_tJDBCInput_27.start();

        resourceMap.put("reader_tJDBCInput_27", reader_tJDBCInput_27);

        for (; available_tJDBCInput_27; available_tJDBCInput_27 = reader_tJDBCInput_27.advance()) {
			nb_line_tJDBCInput_27++;

			
			if (multi_output_is_allowed_tJDBCInput_27) {
				
					row26 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_27 = reader_tJDBCInput_27.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_27) {
						row26 = new row26Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_27 == null) {
            factory_tJDBCInput_27 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_27.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_27.setWrapped(factory_tJDBCInput_27.convertToAvro(data_tJDBCInput_27));
                Object columnValue_0_tJDBCInput_27 = outgoingEnforcer_tJDBCInput_27.get(0);
                        row26.vm_disk_join_id = (String) (columnValue_0_tJDBCInput_27);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_27) {
				java.util.Map<String,Object> info_tJDBCInput_27 = e_tJDBCInput_27.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_27 = null;
					if(info_tJDBCInput_27.containsKey("error")){
						errorMessage_tJDBCInput_27 = info_tJDBCInput_27.get("error");
					}else if(info_tJDBCInput_27.containsKey("errorMessage")){
						errorMessage_tJDBCInput_27 = info_tJDBCInput_27.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_27 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_27 = "Row "+ nb_line_tJDBCInput_27 + ": "+errorMessage_tJDBCInput_27;
					System.err.println(errorMessage_tJDBCInput_27);
				
					// If the record is reject, the main line record should put NULL
					row26 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_27 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_27 = null;


 



/**
 * [tJDBCInput_27 begin ] stop
 */
	
	/**
	 * [tJDBCInput_27 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_27";

	


 


	tos_count_tJDBCInput_27++;

/**
 * [tJDBCInput_27 main ] stop
 */
	
	/**
	 * [tJDBCInput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_27";

	


 



/**
 * [tJDBCInput_27 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					


			   
			   

					row26Struct row26_HashRow = new row26Struct();
		   	   	   
				
				row26_HashRow.vm_disk_join_id = row26.vm_disk_join_id;
				
			tHash_Lookup_row26.put(row26_HashRow);
			
            




 


	tos_count_tAdvancedHash_row26++;

/**
 * [tAdvancedHash_row26 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";

	

 



/**
 * [tAdvancedHash_row26 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row26 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";

	

 



/**
 * [tAdvancedHash_row26 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_27";

	


 



/**
 * [tJDBCInput_27 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_27 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_27";

	
// end of generic


resourceMap.put("finish_tJDBCInput_27", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_27 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_27 = null;
    if (reader_tJDBCInput_27 != null) {
        reader_tJDBCInput_27.close();
        resultMap_tJDBCInput_27 = reader_tJDBCInput_27.getReturnValues();
    }
if(resultMap_tJDBCInput_27!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_27 : resultMap_tJDBCInput_27.entrySet()) {
		switch(entry_tJDBCInput_27.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_27.setComponentData("tJDBCInput_27", "ERROR_MESSAGE", entry_tJDBCInput_27.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_27.setComponentData("tJDBCInput_27", "NB_LINE", entry_tJDBCInput_27.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_27.setComponentData("tJDBCInput_27", "NB_SUCCESS", entry_tJDBCInput_27.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_27.setComponentData("tJDBCInput_27", "NB_REJECT", entry_tJDBCInput_27.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_27 = new StringBuilder();
            for (int i_tJDBCInput_27 = 0; i_tJDBCInput_27 < entry_tJDBCInput_27.getKey().length(); i_tJDBCInput_27++) {
                char ch_tJDBCInput_27 = entry_tJDBCInput_27.getKey().charAt(i_tJDBCInput_27);
                if(Character.isUpperCase(ch_tJDBCInput_27) && i_tJDBCInput_27> 0) {
                	studio_key_tJDBCInput_27.append('_');
                }
                studio_key_tJDBCInput_27.append(ch_tJDBCInput_27);
            }
			container_tJDBCInput_27.setComponentData("tJDBCInput_27", studio_key_tJDBCInput_27.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_27.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_27", true);
end_Hash.put("tJDBCInput_27", System.currentTimeMillis());




/**
 * [tJDBCInput_27 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";

	

tHash_Lookup_row26.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row26", true);
end_Hash.put("tAdvancedHash_row26", System.currentTimeMillis());




/**
 * [tAdvancedHash_row26 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_27 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_27";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_27")==null){
    if(resourceMap.get("reader_tJDBCInput_27")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_27")).close();
		} catch (java.io.IOException e_tJDBCInput_27) {
			String errorMessage_tJDBCInput_27 = "failed to release the resource in tJDBCInput_27 :" + e_tJDBCInput_27.getMessage();
			System.err.println(errorMessage_tJDBCInput_27);
		}
	}
}
 



/**
 * [tJDBCInput_27 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";

	

 



/**
 * [tAdvancedHash_row26 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_27_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableComparableLookupRow<row28Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String vm_interface_join_id;

				public String getVm_interface_join_id () {
					return this.vm_interface_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_interface_join_id == null) ? 0 : this.vm_interface_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row28Struct other = (row28Struct) obj;
		
						if (this.vm_interface_join_id == null) {
							if (other.vm_interface_join_id != null)
								return false;
						
						} else if (!this.vm_interface_join_id.equals(other.vm_interface_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row28Struct other) {

		other.vm_interface_join_id = this.vm_interface_join_id;
	            
	}

	public void copyKeysDataTo(row28Struct other) {

		other.vm_interface_join_id = this.vm_interface_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_interface_join_id="+vm_interface_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_interface_join_id, other.vm_interface_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_29Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_29_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row28Struct row28 = new row28Struct();




	
	/**
	 * [tAdvancedHash_row28 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row28", false);
		start_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row28";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tAdvancedHash_row28 = 0;
		

			   		// connection name:row28
			   		// source node:tJDBCInput_29 - inputs:(after_tJDBCInput_30) outputs:(row28,row28) | target node:tAdvancedHash_row28 - inputs:(row28) outputs:()
			   		// linked node: tMap_21 - inputs:(row29,row28) outputs:(delete_vm_interface)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row28 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row28Struct>getLookup(matchingModeEnum_row28);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row28", tHash_Lookup_row28);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row28 begin ] stop
 */



	
	/**
	 * [tJDBCInput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_29", false);
		start_Hash.put("tJDBCInput_29", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_29";

	
		int tos_count_tJDBCInput_29 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_29 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_29 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_29 = (String)(restRequest_tJDBCInput_29 != null ? restRequest_tJDBCInput_29.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_29 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_29 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_29 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_29 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_29.createRuntimeProperties();
 		                    props_tJDBCInput_29.setValue("sql",
 		                    "SELECT upper(cast(id as char(36))) as vm_interface_join_id\nFROM  vm_interface");
 		                    
 		                    props_tJDBCInput_29.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_29.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_29.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_29.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_29.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_29.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_29.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_29.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_29.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_29_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"vm_interface_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_29\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_29_1_fisrt sst_tJDBCInput_29_1_fisrt = new SchemaSettingTool_tJDBCInput_29_1_fisrt();
 		                    
 		                    props_tJDBCInput_29.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_29_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_29.tableSelection.setValue("tablename",
 		                    "vm_interface");
 		                    
 		                    java.util.List<Object> tJDBCInput_29_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_29_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_29.trimTable).setValue("trim",tJDBCInput_29_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_29_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_29_trimTable_columnName.add("vm_interface_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_29.trimTable).setValue("columnName",tJDBCInput_29_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_29.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_29 = props_tJDBCInput_29.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_29 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_29 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_29 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_29.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_29);
        }
    }
globalMap.put("tJDBCInput_29_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_29);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_29= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_29_MAPPINGS_URL", mappings_url_tJDBCInput_29);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_29 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_29";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_29 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_29 = null;
topology_tJDBCInput_29 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_29 = def_tJDBCInput_29.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_29, topology_tJDBCInput_29);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_29 = def_tJDBCInput_29.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_29 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_29.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_29 = componentRuntime_tJDBCInput_29.initialize(container_tJDBCInput_29, props_tJDBCInput_29);

if (initVr_tJDBCInput_29.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_29.getMessage());
}

if(componentRuntime_tJDBCInput_29 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_29 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_29;
	compDriverInitialization_tJDBCInput_29.runAtDriver(container_tJDBCInput_29);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_29 = null;
if(componentRuntime_tJDBCInput_29 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_29 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_29;
	if (doesNodeBelongToRequest_tJDBCInput_29) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_29 = sourceOrSink_tJDBCInput_29.validate(container_tJDBCInput_29);
        if (vr_tJDBCInput_29.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_29.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_29 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_29 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_29;
        reader_tJDBCInput_29 = source_tJDBCInput_29.createReader(container_tJDBCInput_29);
	    reader_tJDBCInput_29 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_29, container_tJDBCInput_29);

            boolean multi_output_is_allowed_tJDBCInput_29 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_29 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_29.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_29 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_29 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_29 = props_tJDBCInput_29.getSchema(c_tJDBCInput_29, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_29 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_29, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_29 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_29 = reader_tJDBCInput_29.start();

        resourceMap.put("reader_tJDBCInput_29", reader_tJDBCInput_29);

        for (; available_tJDBCInput_29; available_tJDBCInput_29 = reader_tJDBCInput_29.advance()) {
			nb_line_tJDBCInput_29++;

			
			if (multi_output_is_allowed_tJDBCInput_29) {
				
					row28 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_29 = reader_tJDBCInput_29.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_29) {
						row28 = new row28Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_29 == null) {
            factory_tJDBCInput_29 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_29.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_29.setWrapped(factory_tJDBCInput_29.convertToAvro(data_tJDBCInput_29));
                Object columnValue_0_tJDBCInput_29 = outgoingEnforcer_tJDBCInput_29.get(0);
                        row28.vm_interface_join_id = (String) (columnValue_0_tJDBCInput_29);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_29) {
				java.util.Map<String,Object> info_tJDBCInput_29 = e_tJDBCInput_29.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_29 = null;
					if(info_tJDBCInput_29.containsKey("error")){
						errorMessage_tJDBCInput_29 = info_tJDBCInput_29.get("error");
					}else if(info_tJDBCInput_29.containsKey("errorMessage")){
						errorMessage_tJDBCInput_29 = info_tJDBCInput_29.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_29 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_29 = "Row "+ nb_line_tJDBCInput_29 + ": "+errorMessage_tJDBCInput_29;
					System.err.println(errorMessage_tJDBCInput_29);
				
					// If the record is reject, the main line record should put NULL
					row28 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_29 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_29 = null;


 



/**
 * [tJDBCInput_29 begin ] stop
 */
	
	/**
	 * [tJDBCInput_29 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_29";

	


 


	tos_count_tJDBCInput_29++;

/**
 * [tJDBCInput_29 main ] stop
 */
	
	/**
	 * [tJDBCInput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_29";

	


 



/**
 * [tJDBCInput_29 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					


			   
			   

					row28Struct row28_HashRow = new row28Struct();
		   	   	   
				
				row28_HashRow.vm_interface_join_id = row28.vm_interface_join_id;
				
			tHash_Lookup_row28.put(row28_HashRow);
			
            




 


	tos_count_tAdvancedHash_row28++;

/**
 * [tAdvancedHash_row28 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";

	

 



/**
 * [tAdvancedHash_row28 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";

	

 



/**
 * [tAdvancedHash_row28 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_29";

	


 



/**
 * [tJDBCInput_29 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_29 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_29";

	
// end of generic


resourceMap.put("finish_tJDBCInput_29", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_29 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_29 = null;
    if (reader_tJDBCInput_29 != null) {
        reader_tJDBCInput_29.close();
        resultMap_tJDBCInput_29 = reader_tJDBCInput_29.getReturnValues();
    }
if(resultMap_tJDBCInput_29!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_29 : resultMap_tJDBCInput_29.entrySet()) {
		switch(entry_tJDBCInput_29.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_29.setComponentData("tJDBCInput_29", "ERROR_MESSAGE", entry_tJDBCInput_29.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_29.setComponentData("tJDBCInput_29", "NB_LINE", entry_tJDBCInput_29.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_29.setComponentData("tJDBCInput_29", "NB_SUCCESS", entry_tJDBCInput_29.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_29.setComponentData("tJDBCInput_29", "NB_REJECT", entry_tJDBCInput_29.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_29 = new StringBuilder();
            for (int i_tJDBCInput_29 = 0; i_tJDBCInput_29 < entry_tJDBCInput_29.getKey().length(); i_tJDBCInput_29++) {
                char ch_tJDBCInput_29 = entry_tJDBCInput_29.getKey().charAt(i_tJDBCInput_29);
                if(Character.isUpperCase(ch_tJDBCInput_29) && i_tJDBCInput_29> 0) {
                	studio_key_tJDBCInput_29.append('_');
                }
                studio_key_tJDBCInput_29.append(ch_tJDBCInput_29);
            }
			container_tJDBCInput_29.setComponentData("tJDBCInput_29", studio_key_tJDBCInput_29.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_29.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_29", true);
end_Hash.put("tJDBCInput_29", System.currentTimeMillis());




/**
 * [tJDBCInput_29 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";

	

tHash_Lookup_row28.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row28", true);
end_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());




/**
 * [tAdvancedHash_row28 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_29 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_29";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_29")==null){
    if(resourceMap.get("reader_tJDBCInput_29")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_29")).close();
		} catch (java.io.IOException e_tJDBCInput_29) {
			String errorMessage_tJDBCInput_29 = "failed to release the resource in tJDBCInput_29 :" + e_tJDBCInput_29.getMessage();
			System.err.println(errorMessage_tJDBCInput_29);
		}
	}
}
 



/**
 * [tJDBCInput_29 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";

	

 



/**
 * [tAdvancedHash_row28 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_29_SUBPROCESS_STATE", 1);
	}
	


public static class row33Struct implements routines.system.IPersistableComparableLookupRow<row33Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.storage_domain_join_id == null) ? 0 : this.storage_domain_join_id.hashCode());
					
						result = prime * result + ((this.datacenter_join_id == null) ? 0 : this.datacenter_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row33Struct other = (row33Struct) obj;
		
						if (this.storage_domain_join_id == null) {
							if (other.storage_domain_join_id != null)
								return false;
						
						} else if (!this.storage_domain_join_id.equals(other.storage_domain_join_id))
						
							return false;
					
						if (this.datacenter_join_id == null) {
							if (other.datacenter_join_id != null)
								return false;
						
						} else if (!this.datacenter_join_id.equals(other.datacenter_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row33Struct other) {

		other.storage_domain_join_id = this.storage_domain_join_id;
	            other.datacenter_join_id = this.datacenter_join_id;
	            
	}

	public void copyKeysDataTo(row33Struct other) {

		other.storage_domain_join_id = this.storage_domain_join_id;
	            	other.datacenter_join_id = this.datacenter_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_join_id="+storage_domain_join_id);
		sb.append(",datacenter_join_id="+datacenter_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.storage_domain_join_id, other.storage_domain_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.datacenter_join_id, other.datacenter_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_35Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_35_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row33Struct row33 = new row33Struct();




	
	/**
	 * [tAdvancedHash_row33 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row33", false);
		start_Hash.put("tAdvancedHash_row33", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row33";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tAdvancedHash_row33 = 0;
		

			   		// connection name:row33
			   		// source node:tJDBCInput_35 - inputs:(after_tJDBCInput_33) outputs:(row33,row33) | target node:tAdvancedHash_row33 - inputs:(row33) outputs:()
			   		// linked node: tMap_23 - inputs:(row31,row33) outputs:(insert_new_dc_storage_connection)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row33 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct> tHash_Lookup_row33 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row33Struct>getLookup(matchingModeEnum_row33);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row33", tHash_Lookup_row33);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row33 begin ] stop
 */



	
	/**
	 * [tJDBCInput_35 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_35", false);
		start_Hash.put("tJDBCInput_35", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_35";

	
		int tos_count_tJDBCInput_35 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_35 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_35 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_35 = (String)(restRequest_tJDBCInput_35 != null ? restRequest_tJDBCInput_35.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_35 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_35 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_35 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_35 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_35.createRuntimeProperties();
 		                    props_tJDBCInput_35.setValue("sql",
 		                    "SELECT  \n	upper(cast(storage_domain_id as char(36))) as storage_domain_join_id, \n	upper(cast(datacenter_id as char(36"
+"))) as datacenter_join_id\nFROM  v4_5_latest_map_datacenters_storage_domains");
 		                    
 		                    props_tJDBCInput_35.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_35.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_35.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_35.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_35.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_35.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_35.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_35.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_35.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_35_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_map_datacenters_storage_domains\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_35\",\"di.table.label\":\"v4_5_latest_map_datacenters_storage_domains\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_35_1_fisrt sst_tJDBCInput_35_1_fisrt = new SchemaSettingTool_tJDBCInput_35_1_fisrt();
 		                    
 		                    props_tJDBCInput_35.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_35_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_35.tableSelection.setValue("tablename",
 		                    "v4_5_latest_map_datacenters_storage_domains");
 		                    
 		                    java.util.List<Object> tJDBCInput_35_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_35_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_35_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_35.trimTable).setValue("trim",tJDBCInput_35_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_35_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_35_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                            tJDBCInput_35_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_35.trimTable).setValue("columnName",tJDBCInput_35_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_35.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_35 = props_tJDBCInput_35.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_35 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_35 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_35 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_35.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_35);
        }
    }
globalMap.put("tJDBCInput_35_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_35);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_35= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_35_MAPPINGS_URL", mappings_url_tJDBCInput_35);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_35 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_35";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_35 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_35 = null;
topology_tJDBCInput_35 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_35 = def_tJDBCInput_35.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_35, topology_tJDBCInput_35);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_35 = def_tJDBCInput_35.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_35 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_35.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_35 = componentRuntime_tJDBCInput_35.initialize(container_tJDBCInput_35, props_tJDBCInput_35);

if (initVr_tJDBCInput_35.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_35.getMessage());
}

if(componentRuntime_tJDBCInput_35 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_35 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_35;
	compDriverInitialization_tJDBCInput_35.runAtDriver(container_tJDBCInput_35);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_35 = null;
if(componentRuntime_tJDBCInput_35 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_35 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_35;
	if (doesNodeBelongToRequest_tJDBCInput_35) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_35 = sourceOrSink_tJDBCInput_35.validate(container_tJDBCInput_35);
        if (vr_tJDBCInput_35.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_35.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_35 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_35 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_35;
        reader_tJDBCInput_35 = source_tJDBCInput_35.createReader(container_tJDBCInput_35);
	    reader_tJDBCInput_35 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_35, container_tJDBCInput_35);

            boolean multi_output_is_allowed_tJDBCInput_35 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_35 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_35.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_35 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_35 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_35 = props_tJDBCInput_35.getSchema(c_tJDBCInput_35, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_35 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_35, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_35 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_35 = reader_tJDBCInput_35.start();

        resourceMap.put("reader_tJDBCInput_35", reader_tJDBCInput_35);

        for (; available_tJDBCInput_35; available_tJDBCInput_35 = reader_tJDBCInput_35.advance()) {
			nb_line_tJDBCInput_35++;

			
			if (multi_output_is_allowed_tJDBCInput_35) {
				
					row33 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_35 = reader_tJDBCInput_35.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_35) {
						row33 = new row33Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_35 == null) {
            factory_tJDBCInput_35 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_35.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_35.setWrapped(factory_tJDBCInput_35.convertToAvro(data_tJDBCInput_35));
                Object columnValue_0_tJDBCInput_35 = outgoingEnforcer_tJDBCInput_35.get(0);
                        row33.storage_domain_join_id = (String) (columnValue_0_tJDBCInput_35);
                Object columnValue_1_tJDBCInput_35 = outgoingEnforcer_tJDBCInput_35.get(1);
                        row33.datacenter_join_id = (String) (columnValue_1_tJDBCInput_35);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_35) {
				java.util.Map<String,Object> info_tJDBCInput_35 = e_tJDBCInput_35.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_35 = null;
					if(info_tJDBCInput_35.containsKey("error")){
						errorMessage_tJDBCInput_35 = info_tJDBCInput_35.get("error");
					}else if(info_tJDBCInput_35.containsKey("errorMessage")){
						errorMessage_tJDBCInput_35 = info_tJDBCInput_35.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_35 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_35 = "Row "+ nb_line_tJDBCInput_35 + ": "+errorMessage_tJDBCInput_35;
					System.err.println(errorMessage_tJDBCInput_35);
				
					// If the record is reject, the main line record should put NULL
					row33 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_35 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_35 = null;


 



/**
 * [tJDBCInput_35 begin ] stop
 */
	
	/**
	 * [tJDBCInput_35 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_35";

	


 


	tos_count_tJDBCInput_35++;

/**
 * [tJDBCInput_35 main ] stop
 */
	
	/**
	 * [tJDBCInput_35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_35";

	


 



/**
 * [tJDBCInput_35 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					


			   
			   

					row33Struct row33_HashRow = new row33Struct();
		   	   	   
				
				row33_HashRow.storage_domain_join_id = row33.storage_domain_join_id;
				
				row33_HashRow.datacenter_join_id = row33.datacenter_join_id;
				
			tHash_Lookup_row33.put(row33_HashRow);
			
            




 


	tos_count_tAdvancedHash_row33++;

/**
 * [tAdvancedHash_row33 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";

	

 



/**
 * [tAdvancedHash_row33 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row33 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";

	

 



/**
 * [tAdvancedHash_row33 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_35 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_35";

	


 



/**
 * [tJDBCInput_35 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_35 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_35";

	
// end of generic


resourceMap.put("finish_tJDBCInput_35", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_35 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_35 = null;
    if (reader_tJDBCInput_35 != null) {
        reader_tJDBCInput_35.close();
        resultMap_tJDBCInput_35 = reader_tJDBCInput_35.getReturnValues();
    }
if(resultMap_tJDBCInput_35!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_35 : resultMap_tJDBCInput_35.entrySet()) {
		switch(entry_tJDBCInput_35.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_35.setComponentData("tJDBCInput_35", "ERROR_MESSAGE", entry_tJDBCInput_35.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_35.setComponentData("tJDBCInput_35", "NB_LINE", entry_tJDBCInput_35.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_35.setComponentData("tJDBCInput_35", "NB_SUCCESS", entry_tJDBCInput_35.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_35.setComponentData("tJDBCInput_35", "NB_REJECT", entry_tJDBCInput_35.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_35 = new StringBuilder();
            for (int i_tJDBCInput_35 = 0; i_tJDBCInput_35 < entry_tJDBCInput_35.getKey().length(); i_tJDBCInput_35++) {
                char ch_tJDBCInput_35 = entry_tJDBCInput_35.getKey().charAt(i_tJDBCInput_35);
                if(Character.isUpperCase(ch_tJDBCInput_35) && i_tJDBCInput_35> 0) {
                	studio_key_tJDBCInput_35.append('_');
                }
                studio_key_tJDBCInput_35.append(ch_tJDBCInput_35);
            }
			container_tJDBCInput_35.setComponentData("tJDBCInput_35", studio_key_tJDBCInput_35.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_35.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_35", true);
end_Hash.put("tJDBCInput_35", System.currentTimeMillis());




/**
 * [tJDBCInput_35 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";

	

tHash_Lookup_row33.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row33", true);
end_Hash.put("tAdvancedHash_row33", System.currentTimeMillis());




/**
 * [tAdvancedHash_row33 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_35 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_35";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_35")==null){
    if(resourceMap.get("reader_tJDBCInput_35")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_35")).close();
		} catch (java.io.IOException e_tJDBCInput_35) {
			String errorMessage_tJDBCInput_35 = "failed to release the resource in tJDBCInput_35 :" + e_tJDBCInput_35.getMessage();
			System.err.println(errorMessage_tJDBCInput_35);
		}
	}
}
 



/**
 * [tJDBCInput_35 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";

	

 



/**
 * [tAdvancedHash_row33 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_35_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableComparableLookupRow<row32Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public String datacenter_join_id;

				public String getDatacenter_join_id () {
					return this.datacenter_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.storage_domain_join_id == null) ? 0 : this.storage_domain_join_id.hashCode());
					
						result = prime * result + ((this.datacenter_join_id == null) ? 0 : this.datacenter_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row32Struct other = (row32Struct) obj;
		
						if (this.storage_domain_join_id == null) {
							if (other.storage_domain_join_id != null)
								return false;
						
						} else if (!this.storage_domain_join_id.equals(other.storage_domain_join_id))
						
							return false;
					
						if (this.datacenter_join_id == null) {
							if (other.datacenter_join_id != null)
								return false;
						
						} else if (!this.datacenter_join_id.equals(other.datacenter_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row32Struct other) {

		other.storage_domain_join_id = this.storage_domain_join_id;
	            other.datacenter_join_id = this.datacenter_join_id;
	            
	}

	public void copyKeysDataTo(row32Struct other) {

		other.storage_domain_join_id = this.storage_domain_join_id;
	            	other.datacenter_join_id = this.datacenter_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
					this.datacenter_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// String
				
						writeString(this.datacenter_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_join_id="+storage_domain_join_id);
		sb.append(",datacenter_join_id="+datacenter_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.storage_domain_join_id, other.storage_domain_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.datacenter_join_id, other.datacenter_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_32Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_32_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row32Struct row32 = new row32Struct();




	
	/**
	 * [tAdvancedHash_row32 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row32", false);
		start_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row32";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tAdvancedHash_row32 = 0;
		

			   		// connection name:row32
			   		// source node:tJDBCInput_32 - inputs:(after_tJDBCInput_34) outputs:(row32,row32) | target node:tAdvancedHash_row32 - inputs:(row32) outputs:()
			   		// linked node: tMap_22 - inputs:(row30,row32) outputs:(delete_dc_storage_connection)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row32 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row32Struct>getLookup(matchingModeEnum_row32);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row32", tHash_Lookup_row32);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row32 begin ] stop
 */



	
	/**
	 * [tJDBCInput_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_32", false);
		start_Hash.put("tJDBCInput_32", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_32";

	
		int tos_count_tJDBCInput_32 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_32 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_32 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_32 = (String)(restRequest_tJDBCInput_32 != null ? restRequest_tJDBCInput_32.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_32 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_32 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_32 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_32 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_32.createRuntimeProperties();
 		                    props_tJDBCInput_32.setValue("sql",
 		                    "SELECT upper(cast(storage_id as char(36))) as storage_domain_join_id,\n		upper(cast(storage_pool_id as char(36))) as da"
+"tacenter_join_id\nFROM  storage_pool_iso_map");
 		                    
 		                    props_tJDBCInput_32.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_32.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_32.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_32.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_32.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_32.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_32.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_32.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_32.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_32_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_disk_vm_map_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"datacenter_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"datacenter_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"datacenter_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_32\",\"di.table.label\":\"dwh_disk_vm_map_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_32_1_fisrt sst_tJDBCInput_32_1_fisrt = new SchemaSettingTool_tJDBCInput_32_1_fisrt();
 		                    
 		                    props_tJDBCInput_32.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_32_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_32.tableSelection.setValue("tablename",
 		                    "storage_pool_iso_map");
 		                    
 		                    java.util.List<Object> tJDBCInput_32_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_32_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_32_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_32.trimTable).setValue("trim",tJDBCInput_32_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_32_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_32_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                            tJDBCInput_32_trimTable_columnName.add("datacenter_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_32.trimTable).setValue("columnName",tJDBCInput_32_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_32.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_32 = props_tJDBCInput_32.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_32 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_32 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_32 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_32.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_32);
        }
    }
globalMap.put("tJDBCInput_32_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_32);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_32= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_32_MAPPINGS_URL", mappings_url_tJDBCInput_32);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_32 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_32";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_32 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_32 = null;
topology_tJDBCInput_32 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_32 = def_tJDBCInput_32.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_32, topology_tJDBCInput_32);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_32 = def_tJDBCInput_32.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_32 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_32.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_32 = componentRuntime_tJDBCInput_32.initialize(container_tJDBCInput_32, props_tJDBCInput_32);

if (initVr_tJDBCInput_32.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_32.getMessage());
}

if(componentRuntime_tJDBCInput_32 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_32 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_32;
	compDriverInitialization_tJDBCInput_32.runAtDriver(container_tJDBCInput_32);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_32 = null;
if(componentRuntime_tJDBCInput_32 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_32 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_32;
	if (doesNodeBelongToRequest_tJDBCInput_32) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_32 = sourceOrSink_tJDBCInput_32.validate(container_tJDBCInput_32);
        if (vr_tJDBCInput_32.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_32.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_32 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_32 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_32;
        reader_tJDBCInput_32 = source_tJDBCInput_32.createReader(container_tJDBCInput_32);
	    reader_tJDBCInput_32 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_32, container_tJDBCInput_32);

            boolean multi_output_is_allowed_tJDBCInput_32 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_32 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_32.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_32 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_32 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_32 = props_tJDBCInput_32.getSchema(c_tJDBCInput_32, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_32 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_32, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_32 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_32 = reader_tJDBCInput_32.start();

        resourceMap.put("reader_tJDBCInput_32", reader_tJDBCInput_32);

        for (; available_tJDBCInput_32; available_tJDBCInput_32 = reader_tJDBCInput_32.advance()) {
			nb_line_tJDBCInput_32++;

			
			if (multi_output_is_allowed_tJDBCInput_32) {
				
					row32 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_32 = reader_tJDBCInput_32.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_32) {
						row32 = new row32Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_32 == null) {
            factory_tJDBCInput_32 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_32.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_32.setWrapped(factory_tJDBCInput_32.convertToAvro(data_tJDBCInput_32));
                Object columnValue_0_tJDBCInput_32 = outgoingEnforcer_tJDBCInput_32.get(0);
                        row32.storage_domain_join_id = (String) (columnValue_0_tJDBCInput_32);
                Object columnValue_1_tJDBCInput_32 = outgoingEnforcer_tJDBCInput_32.get(1);
                        row32.datacenter_join_id = (String) (columnValue_1_tJDBCInput_32);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_32) {
				java.util.Map<String,Object> info_tJDBCInput_32 = e_tJDBCInput_32.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_32 = null;
					if(info_tJDBCInput_32.containsKey("error")){
						errorMessage_tJDBCInput_32 = info_tJDBCInput_32.get("error");
					}else if(info_tJDBCInput_32.containsKey("errorMessage")){
						errorMessage_tJDBCInput_32 = info_tJDBCInput_32.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_32 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_32 = "Row "+ nb_line_tJDBCInput_32 + ": "+errorMessage_tJDBCInput_32;
					System.err.println(errorMessage_tJDBCInput_32);
				
					// If the record is reject, the main line record should put NULL
					row32 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_32 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_32 = null;


 



/**
 * [tJDBCInput_32 begin ] stop
 */
	
	/**
	 * [tJDBCInput_32 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_32";

	


 


	tos_count_tJDBCInput_32++;

/**
 * [tJDBCInput_32 main ] stop
 */
	
	/**
	 * [tJDBCInput_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_32";

	


 



/**
 * [tJDBCInput_32 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					


			   
			   

					row32Struct row32_HashRow = new row32Struct();
		   	   	   
				
				row32_HashRow.storage_domain_join_id = row32.storage_domain_join_id;
				
				row32_HashRow.datacenter_join_id = row32.datacenter_join_id;
				
			tHash_Lookup_row32.put(row32_HashRow);
			
            




 


	tos_count_tAdvancedHash_row32++;

/**
 * [tAdvancedHash_row32 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";

	

 



/**
 * [tAdvancedHash_row32 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";

	

 



/**
 * [tAdvancedHash_row32 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_32";

	


 



/**
 * [tJDBCInput_32 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_32 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_32";

	
// end of generic


resourceMap.put("finish_tJDBCInput_32", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_32 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_32 = null;
    if (reader_tJDBCInput_32 != null) {
        reader_tJDBCInput_32.close();
        resultMap_tJDBCInput_32 = reader_tJDBCInput_32.getReturnValues();
    }
if(resultMap_tJDBCInput_32!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_32 : resultMap_tJDBCInput_32.entrySet()) {
		switch(entry_tJDBCInput_32.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_32.setComponentData("tJDBCInput_32", "ERROR_MESSAGE", entry_tJDBCInput_32.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_32.setComponentData("tJDBCInput_32", "NB_LINE", entry_tJDBCInput_32.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_32.setComponentData("tJDBCInput_32", "NB_SUCCESS", entry_tJDBCInput_32.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_32.setComponentData("tJDBCInput_32", "NB_REJECT", entry_tJDBCInput_32.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_32 = new StringBuilder();
            for (int i_tJDBCInput_32 = 0; i_tJDBCInput_32 < entry_tJDBCInput_32.getKey().length(); i_tJDBCInput_32++) {
                char ch_tJDBCInput_32 = entry_tJDBCInput_32.getKey().charAt(i_tJDBCInput_32);
                if(Character.isUpperCase(ch_tJDBCInput_32) && i_tJDBCInput_32> 0) {
                	studio_key_tJDBCInput_32.append('_');
                }
                studio_key_tJDBCInput_32.append(ch_tJDBCInput_32);
            }
			container_tJDBCInput_32.setComponentData("tJDBCInput_32", studio_key_tJDBCInput_32.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_32.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_32", true);
end_Hash.put("tJDBCInput_32", System.currentTimeMillis());




/**
 * [tJDBCInput_32 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";

	

tHash_Lookup_row32.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row32", true);
end_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());




/**
 * [tAdvancedHash_row32 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_32 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_32";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_32")==null){
    if(resourceMap.get("reader_tJDBCInput_32")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_32")).close();
		} catch (java.io.IOException e_tJDBCInput_32) {
			String errorMessage_tJDBCInput_32 = "failed to release the resource in tJDBCInput_32 :" + e_tJDBCInput_32.getMessage();
			System.err.println(errorMessage_tJDBCInput_32);
		}
	}
}
 



/**
 * [tJDBCInput_32 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";

	

 



/**
 * [tAdvancedHash_row32 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_32_SUBPROCESS_STATE", 1);
	}
	


public static class row34Struct implements routines.system.IPersistableComparableLookupRow<row34Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String entity_join_id;

				public String getEntity_join_id () {
					return this.entity_join_id;
				}
				
			    public String parent_join_id;

				public String getParent_join_id () {
					return this.parent_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.entity_join_id == null) ? 0 : this.entity_join_id.hashCode());
					
						result = prime * result + ((this.parent_join_id == null) ? 0 : this.parent_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row34Struct other = (row34Struct) obj;
		
						if (this.entity_join_id == null) {
							if (other.entity_join_id != null)
								return false;
						
						} else if (!this.entity_join_id.equals(other.entity_join_id))
						
							return false;
					
						if (this.parent_join_id == null) {
							if (other.parent_join_id != null)
								return false;
						
						} else if (!this.parent_join_id.equals(other.parent_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row34Struct other) {

		other.entity_join_id = this.entity_join_id;
	            other.parent_join_id = this.parent_join_id;
	            
	}

	public void copyKeysDataTo(row34Struct other) {

		other.entity_join_id = this.entity_join_id;
	            	other.parent_join_id = this.parent_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.entity_join_id = readString(dis);
					
					this.parent_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.entity_join_id = readString(dis);
					
					this.parent_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.entity_join_id,dos);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.entity_join_id,dos);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("entity_join_id="+entity_join_id);
		sb.append(",parent_join_id="+parent_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.entity_join_id, other.entity_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.parent_join_id, other.parent_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_58Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_58_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row34Struct row34 = new row34Struct();




	
	/**
	 * [tAdvancedHash_row34 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row34", false);
		start_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row34";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tAdvancedHash_row34 = 0;
		

			   		// connection name:row34
			   		// source node:tJDBCInput_58 - inputs:(after_tJDBCInput_45) outputs:(row34,row34) | target node:tAdvancedHash_row34 - inputs:(row34) outputs:()
			   		// linked node: tMap_26 - inputs:(row9,row34) outputs:(new_tag_relations)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row34 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row34Struct>getLookup(matchingModeEnum_row34);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row34", tHash_Lookup_row34);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row34 begin ] stop
 */



	
	/**
	 * [tJDBCInput_58 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_58", false);
		start_Hash.put("tJDBCInput_58", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_58";

	
		int tos_count_tJDBCInput_58 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_58 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_58 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_58 = (String)(restRequest_tJDBCInput_58 != null ? restRequest_tJDBCInput_58.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_58 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_58 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_58 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_58 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_58.createRuntimeProperties();
 		                    props_tJDBCInput_58.setValue("sql",
 		                    "SELECT upper(cast(entity_id as char(36))) as entity_join_id,\n		upper(cast(parent_id as char(36))) as parent_join_id\nFRO"
+"M v4_5_latest_tags_relations");
 		                    
 		                    props_tJDBCInput_58.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_58.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_58.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_58.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_58.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_58.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_58.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_58.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_58.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_58_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tag_relations_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"entity_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"parent_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_58\",\"di.table.label\":\"tag_relations_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_58_1_fisrt sst_tJDBCInput_58_1_fisrt = new SchemaSettingTool_tJDBCInput_58_1_fisrt();
 		                    
 		                    props_tJDBCInput_58.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_58_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_58.tableSelection.setValue("tablename",
 		                    "v4_5_latest_tags_relations");
 		                    
 		                    java.util.List<Object> tJDBCInput_58_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_58_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_58_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_58.trimTable).setValue("trim",tJDBCInput_58_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_58_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_58_trimTable_columnName.add("entity_join_id");
 		                            
 		                            tJDBCInput_58_trimTable_columnName.add("parent_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_58.trimTable).setValue("columnName",tJDBCInput_58_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_58.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_58 = props_tJDBCInput_58.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_58 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_58 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_58 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_58.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_58);
        }
    }
globalMap.put("tJDBCInput_58_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_58);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_58= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_58_MAPPINGS_URL", mappings_url_tJDBCInput_58);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_58 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_58";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_58 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_58 = null;
topology_tJDBCInput_58 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_58 = def_tJDBCInput_58.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_58, topology_tJDBCInput_58);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_58 = def_tJDBCInput_58.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_58 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_58.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_58 = componentRuntime_tJDBCInput_58.initialize(container_tJDBCInput_58, props_tJDBCInput_58);

if (initVr_tJDBCInput_58.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_58.getMessage());
}

if(componentRuntime_tJDBCInput_58 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_58 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_58;
	compDriverInitialization_tJDBCInput_58.runAtDriver(container_tJDBCInput_58);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_58 = null;
if(componentRuntime_tJDBCInput_58 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_58 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_58;
	if (doesNodeBelongToRequest_tJDBCInput_58) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_58 = sourceOrSink_tJDBCInput_58.validate(container_tJDBCInput_58);
        if (vr_tJDBCInput_58.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_58.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_58 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_58 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_58;
        reader_tJDBCInput_58 = source_tJDBCInput_58.createReader(container_tJDBCInput_58);
	    reader_tJDBCInput_58 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_58, container_tJDBCInput_58);

            boolean multi_output_is_allowed_tJDBCInput_58 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_58 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_58.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_58 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_58 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_58 = props_tJDBCInput_58.getSchema(c_tJDBCInput_58, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_58 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_58, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_58 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_58 = reader_tJDBCInput_58.start();

        resourceMap.put("reader_tJDBCInput_58", reader_tJDBCInput_58);

        for (; available_tJDBCInput_58; available_tJDBCInput_58 = reader_tJDBCInput_58.advance()) {
			nb_line_tJDBCInput_58++;

			
			if (multi_output_is_allowed_tJDBCInput_58) {
				
					row34 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_58 = reader_tJDBCInput_58.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_58) {
						row34 = new row34Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_58 == null) {
            factory_tJDBCInput_58 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_58.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_58.setWrapped(factory_tJDBCInput_58.convertToAvro(data_tJDBCInput_58));
                Object columnValue_0_tJDBCInput_58 = outgoingEnforcer_tJDBCInput_58.get(0);
                        row34.entity_join_id = (String) (columnValue_0_tJDBCInput_58);
                Object columnValue_1_tJDBCInput_58 = outgoingEnforcer_tJDBCInput_58.get(1);
                        row34.parent_join_id = (String) (columnValue_1_tJDBCInput_58);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_58) {
				java.util.Map<String,Object> info_tJDBCInput_58 = e_tJDBCInput_58.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_58 = null;
					if(info_tJDBCInput_58.containsKey("error")){
						errorMessage_tJDBCInput_58 = info_tJDBCInput_58.get("error");
					}else if(info_tJDBCInput_58.containsKey("errorMessage")){
						errorMessage_tJDBCInput_58 = info_tJDBCInput_58.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_58 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_58 = "Row "+ nb_line_tJDBCInput_58 + ": "+errorMessage_tJDBCInput_58;
					System.err.println(errorMessage_tJDBCInput_58);
				
					// If the record is reject, the main line record should put NULL
					row34 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_58 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_58 = null;


 



/**
 * [tJDBCInput_58 begin ] stop
 */
	
	/**
	 * [tJDBCInput_58 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_58";

	


 


	tos_count_tJDBCInput_58++;

/**
 * [tJDBCInput_58 main ] stop
 */
	
	/**
	 * [tJDBCInput_58 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_58";

	


 



/**
 * [tJDBCInput_58 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					


			   
			   

					row34Struct row34_HashRow = new row34Struct();
		   	   	   
				
				row34_HashRow.entity_join_id = row34.entity_join_id;
				
				row34_HashRow.parent_join_id = row34.parent_join_id;
				
			tHash_Lookup_row34.put(row34_HashRow);
			
            




 


	tos_count_tAdvancedHash_row34++;

/**
 * [tAdvancedHash_row34 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";

	

 



/**
 * [tAdvancedHash_row34 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row34 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";

	

 



/**
 * [tAdvancedHash_row34 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_58 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_58";

	


 



/**
 * [tJDBCInput_58 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_58 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_58";

	
// end of generic


resourceMap.put("finish_tJDBCInput_58", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_58 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_58 = null;
    if (reader_tJDBCInput_58 != null) {
        reader_tJDBCInput_58.close();
        resultMap_tJDBCInput_58 = reader_tJDBCInput_58.getReturnValues();
    }
if(resultMap_tJDBCInput_58!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_58 : resultMap_tJDBCInput_58.entrySet()) {
		switch(entry_tJDBCInput_58.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_58.setComponentData("tJDBCInput_58", "ERROR_MESSAGE", entry_tJDBCInput_58.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_58.setComponentData("tJDBCInput_58", "NB_LINE", entry_tJDBCInput_58.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_58.setComponentData("tJDBCInput_58", "NB_SUCCESS", entry_tJDBCInput_58.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_58.setComponentData("tJDBCInput_58", "NB_REJECT", entry_tJDBCInput_58.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_58 = new StringBuilder();
            for (int i_tJDBCInput_58 = 0; i_tJDBCInput_58 < entry_tJDBCInput_58.getKey().length(); i_tJDBCInput_58++) {
                char ch_tJDBCInput_58 = entry_tJDBCInput_58.getKey().charAt(i_tJDBCInput_58);
                if(Character.isUpperCase(ch_tJDBCInput_58) && i_tJDBCInput_58> 0) {
                	studio_key_tJDBCInput_58.append('_');
                }
                studio_key_tJDBCInput_58.append(ch_tJDBCInput_58);
            }
			container_tJDBCInput_58.setComponentData("tJDBCInput_58", studio_key_tJDBCInput_58.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_58.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_58", true);
end_Hash.put("tJDBCInput_58", System.currentTimeMillis());




/**
 * [tJDBCInput_58 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";

	

tHash_Lookup_row34.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row34", true);
end_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());




/**
 * [tAdvancedHash_row34 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_58 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_58";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_58")==null){
    if(resourceMap.get("reader_tJDBCInput_58")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_58")).close();
		} catch (java.io.IOException e_tJDBCInput_58) {
			String errorMessage_tJDBCInput_58 = "failed to release the resource in tJDBCInput_58 :" + e_tJDBCInput_58.getMessage();
			System.err.println(errorMessage_tJDBCInput_58);
		}
	}
}
 



/**
 * [tJDBCInput_58 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";

	

 



/**
 * [tAdvancedHash_row34 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_58_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableComparableLookupRow<row11Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String entity_join_id;

				public String getEntity_join_id () {
					return this.entity_join_id;
				}
				
			    public String parent_join_id;

				public String getParent_join_id () {
					return this.parent_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.entity_join_id == null) ? 0 : this.entity_join_id.hashCode());
					
						result = prime * result + ((this.parent_join_id == null) ? 0 : this.parent_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.entity_join_id == null) {
							if (other.entity_join_id != null)
								return false;
						
						} else if (!this.entity_join_id.equals(other.entity_join_id))
						
							return false;
					
						if (this.parent_join_id == null) {
							if (other.parent_join_id != null)
								return false;
						
						} else if (!this.parent_join_id.equals(other.parent_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.entity_join_id = this.entity_join_id;
	            other.parent_join_id = this.parent_join_id;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.entity_join_id = this.entity_join_id;
	            	other.parent_join_id = this.parent_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.entity_join_id = readString(dis);
					
					this.parent_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.entity_join_id = readString(dis);
					
					this.parent_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.entity_join_id,dos);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.entity_join_id,dos);
					
					// String
				
						writeString(this.parent_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("entity_join_id="+entity_join_id);
		sb.append(",parent_join_id="+parent_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.entity_join_id, other.entity_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.parent_join_id, other.parent_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_47Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_47_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tAdvancedHash_row11 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row11", false);
		start_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row11";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tAdvancedHash_row11 = 0;
		

			   		// connection name:row11
			   		// source node:tJDBCInput_47 - inputs:(after_tJDBCInput_48) outputs:(row11,row11) | target node:tAdvancedHash_row11 - inputs:(row11) outputs:()
			   		// linked node: tMap_27 - inputs:(row12,row11) outputs:(detach_tags)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row11 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row11Struct>getLookup(matchingModeEnum_row11);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row11", tHash_Lookup_row11);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row11 begin ] stop
 */



	
	/**
	 * [tJDBCInput_47 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_47", false);
		start_Hash.put("tJDBCInput_47", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_47";

	
		int tos_count_tJDBCInput_47 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_47 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_47 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_47 = (String)(restRequest_tJDBCInput_47 != null ? restRequest_tJDBCInput_47.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_47 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_47 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_47 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_47 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_47.createRuntimeProperties();
 		                    props_tJDBCInput_47.setValue("sql",
 		                    "SELECT upper(cast(entity_id as char(36))) as entity_join_id,\n		upper(cast(parent_id as char(36))) as parent_join_id\nF"
+"ROM	dwh_remove_tags_relations_history_view");
 		                    
 		                    props_tJDBCInput_47.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_47.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_47.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_47.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_47.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_47.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_47.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_47.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_47.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_47_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tags\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"entity_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"entity_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"entity_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"parent_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"parent_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_47\",\"di.table.label\":\"tags\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_47_1_fisrt sst_tJDBCInput_47_1_fisrt = new SchemaSettingTool_tJDBCInput_47_1_fisrt();
 		                    
 		                    props_tJDBCInput_47.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_47_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_47.tableSelection.setValue("tablename",
 		                    "dwh_remove_tags_relations_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_47_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_47_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_47_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_47.trimTable).setValue("trim",tJDBCInput_47_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_47_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_47_trimTable_columnName.add("entity_join_id");
 		                            
 		                            tJDBCInput_47_trimTable_columnName.add("parent_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_47.trimTable).setValue("columnName",tJDBCInput_47_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_47.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_47 = props_tJDBCInput_47.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_47 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_47 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_47 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_47.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_47);
        }
    }
globalMap.put("tJDBCInput_47_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_47);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_47= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_47_MAPPINGS_URL", mappings_url_tJDBCInput_47);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_47 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_47";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_47 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_47 = null;
topology_tJDBCInput_47 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_47 = def_tJDBCInput_47.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_47, topology_tJDBCInput_47);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_47 = def_tJDBCInput_47.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_47 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_47.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_47 = componentRuntime_tJDBCInput_47.initialize(container_tJDBCInput_47, props_tJDBCInput_47);

if (initVr_tJDBCInput_47.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_47.getMessage());
}

if(componentRuntime_tJDBCInput_47 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_47 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_47;
	compDriverInitialization_tJDBCInput_47.runAtDriver(container_tJDBCInput_47);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_47 = null;
if(componentRuntime_tJDBCInput_47 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_47 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_47;
	if (doesNodeBelongToRequest_tJDBCInput_47) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_47 = sourceOrSink_tJDBCInput_47.validate(container_tJDBCInput_47);
        if (vr_tJDBCInput_47.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_47.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_47 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_47 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_47;
        reader_tJDBCInput_47 = source_tJDBCInput_47.createReader(container_tJDBCInput_47);
	    reader_tJDBCInput_47 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_47, container_tJDBCInput_47);

            boolean multi_output_is_allowed_tJDBCInput_47 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_47 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_47.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_47 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_47 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_47 = props_tJDBCInput_47.getSchema(c_tJDBCInput_47, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_47 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_47, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_47 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_47 = reader_tJDBCInput_47.start();

        resourceMap.put("reader_tJDBCInput_47", reader_tJDBCInput_47);

        for (; available_tJDBCInput_47; available_tJDBCInput_47 = reader_tJDBCInput_47.advance()) {
			nb_line_tJDBCInput_47++;

			
			if (multi_output_is_allowed_tJDBCInput_47) {
				
					row11 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_47 = reader_tJDBCInput_47.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_47) {
						row11 = new row11Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_47 == null) {
            factory_tJDBCInput_47 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_47.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_47.setWrapped(factory_tJDBCInput_47.convertToAvro(data_tJDBCInput_47));
                Object columnValue_0_tJDBCInput_47 = outgoingEnforcer_tJDBCInput_47.get(0);
                        row11.entity_join_id = (String) (columnValue_0_tJDBCInput_47);
                Object columnValue_1_tJDBCInput_47 = outgoingEnforcer_tJDBCInput_47.get(1);
                        row11.parent_join_id = (String) (columnValue_1_tJDBCInput_47);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_47) {
				java.util.Map<String,Object> info_tJDBCInput_47 = e_tJDBCInput_47.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_47 = null;
					if(info_tJDBCInput_47.containsKey("error")){
						errorMessage_tJDBCInput_47 = info_tJDBCInput_47.get("error");
					}else if(info_tJDBCInput_47.containsKey("errorMessage")){
						errorMessage_tJDBCInput_47 = info_tJDBCInput_47.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_47 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_47 = "Row "+ nb_line_tJDBCInput_47 + ": "+errorMessage_tJDBCInput_47;
					System.err.println(errorMessage_tJDBCInput_47);
				
					// If the record is reject, the main line record should put NULL
					row11 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_47 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_47 = null;


 



/**
 * [tJDBCInput_47 begin ] stop
 */
	
	/**
	 * [tJDBCInput_47 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_47";

	


 


	tos_count_tJDBCInput_47++;

/**
 * [tJDBCInput_47 main ] stop
 */
	
	/**
	 * [tJDBCInput_47 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_47";

	


 



/**
 * [tJDBCInput_47 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


			   
			   

					row11Struct row11_HashRow = new row11Struct();
		   	   	   
				
				row11_HashRow.entity_join_id = row11.entity_join_id;
				
				row11_HashRow.parent_join_id = row11.parent_join_id;
				
			tHash_Lookup_row11.put(row11_HashRow);
			
            




 


	tos_count_tAdvancedHash_row11++;

/**
 * [tAdvancedHash_row11 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";

	

 



/**
 * [tAdvancedHash_row11 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";

	

 



/**
 * [tAdvancedHash_row11 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_47 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_47";

	


 



/**
 * [tJDBCInput_47 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_47 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_47";

	
// end of generic


resourceMap.put("finish_tJDBCInput_47", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_47 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_47 = null;
    if (reader_tJDBCInput_47 != null) {
        reader_tJDBCInput_47.close();
        resultMap_tJDBCInput_47 = reader_tJDBCInput_47.getReturnValues();
    }
if(resultMap_tJDBCInput_47!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_47 : resultMap_tJDBCInput_47.entrySet()) {
		switch(entry_tJDBCInput_47.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_47.setComponentData("tJDBCInput_47", "ERROR_MESSAGE", entry_tJDBCInput_47.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_47.setComponentData("tJDBCInput_47", "NB_LINE", entry_tJDBCInput_47.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_47.setComponentData("tJDBCInput_47", "NB_SUCCESS", entry_tJDBCInput_47.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_47.setComponentData("tJDBCInput_47", "NB_REJECT", entry_tJDBCInput_47.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_47 = new StringBuilder();
            for (int i_tJDBCInput_47 = 0; i_tJDBCInput_47 < entry_tJDBCInput_47.getKey().length(); i_tJDBCInput_47++) {
                char ch_tJDBCInput_47 = entry_tJDBCInput_47.getKey().charAt(i_tJDBCInput_47);
                if(Character.isUpperCase(ch_tJDBCInput_47) && i_tJDBCInput_47> 0) {
                	studio_key_tJDBCInput_47.append('_');
                }
                studio_key_tJDBCInput_47.append(ch_tJDBCInput_47);
            }
			container_tJDBCInput_47.setComponentData("tJDBCInput_47", studio_key_tJDBCInput_47.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_47.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_47", true);
end_Hash.put("tJDBCInput_47", System.currentTimeMillis());




/**
 * [tJDBCInput_47 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";

	

tHash_Lookup_row11.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row11", true);
end_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());




/**
 * [tAdvancedHash_row11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_47 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_47";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_47")==null){
    if(resourceMap.get("reader_tJDBCInput_47")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_47")).close();
		} catch (java.io.IOException e_tJDBCInput_47) {
			String errorMessage_tJDBCInput_47 = "failed to release the resource in tJDBCInput_47 :" + e_tJDBCInput_47.getMessage();
			System.err.println(errorMessage_tJDBCInput_47);
		}
	}
}
 



/**
 * [tJDBCInput_47 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";

	

 



/**
 * [tAdvancedHash_row11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_47_SUBPROCESS_STATE", 1);
	}
	


public static class row43Struct implements routines.system.IPersistableComparableLookupRow<row43Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String tag_join_id;

				public String getTag_join_id () {
					return this.tag_join_id;
				}
				
			    public String tag_name;

				public String getTag_name () {
					return this.tag_name;
				}
				
			    public String tag_description;

				public String getTag_description () {
					return this.tag_description;
				}
				
			    public String tag_path;

				public String getTag_path () {
					return this.tag_path;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.tag_join_id == null) ? 0 : this.tag_join_id.hashCode());
					
						result = prime * result + ((this.tag_name == null) ? 0 : this.tag_name.hashCode());
					
						result = prime * result + ((this.tag_description == null) ? 0 : this.tag_description.hashCode());
					
						result = prime * result + ((this.tag_path == null) ? 0 : this.tag_path.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row43Struct other = (row43Struct) obj;
		
						if (this.tag_join_id == null) {
							if (other.tag_join_id != null)
								return false;
						
						} else if (!this.tag_join_id.equals(other.tag_join_id))
						
							return false;
					
						if (this.tag_name == null) {
							if (other.tag_name != null)
								return false;
						
						} else if (!this.tag_name.equals(other.tag_name))
						
							return false;
					
						if (this.tag_description == null) {
							if (other.tag_description != null)
								return false;
						
						} else if (!this.tag_description.equals(other.tag_description))
						
							return false;
					
						if (this.tag_path == null) {
							if (other.tag_path != null)
								return false;
						
						} else if (!this.tag_path.equals(other.tag_path))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row43Struct other) {

		other.tag_join_id = this.tag_join_id;
	            other.tag_name = this.tag_name;
	            other.tag_description = this.tag_description;
	            other.tag_path = this.tag_path;
	            
	}

	public void copyKeysDataTo(row43Struct other) {

		other.tag_join_id = this.tag_join_id;
	            	other.tag_name = this.tag_name;
	            	other.tag_description = this.tag_description;
	            	other.tag_path = this.tag_path;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.tag_join_id = readString(dis);
					
					this.tag_name = readString(dis);
					
					this.tag_description = readString(dis);
					
					this.tag_path = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.tag_join_id,dos);
					
					// String
				
						writeString(this.tag_name,dos);
					
					// String
				
						writeString(this.tag_description,dos);
					
					// String
				
						writeString(this.tag_path,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_join_id="+tag_join_id);
		sb.append(",tag_name="+tag_name);
		sb.append(",tag_description="+tag_description);
		sb.append(",tag_path="+tag_path);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.tag_join_id, other.tag_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.tag_name, other.tag_name);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.tag_description, other.tag_description);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.tag_path, other.tag_path);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_59Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_59_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row43Struct row43 = new row43Struct();




	
	/**
	 * [tAdvancedHash_row43 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row43", false);
		start_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row43";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tAdvancedHash_row43 = 0;
		

			   		// connection name:row43
			   		// source node:tJDBCInput_59 - inputs:(after_tJDBCInput_46) outputs:(row43,row43) | target node:tAdvancedHash_row43 - inputs:(row43) outputs:()
			   		// linked node: tMap_28 - inputs:(row42,row43) outputs:(tag_details_update)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row43 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row43Struct>getLookup(matchingModeEnum_row43);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row43", tHash_Lookup_row43);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row43 begin ] stop
 */



	
	/**
	 * [tJDBCInput_59 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_59", false);
		start_Hash.put("tJDBCInput_59", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_59";

	
		int tos_count_tJDBCInput_59 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_59 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_59 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_59 = (String)(restRequest_tJDBCInput_59 != null ? restRequest_tJDBCInput_59.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_59 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_59 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_59 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_59 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_59.createRuntimeProperties();
 		                    props_tJDBCInput_59.setValue("sql",
 		                    "SELECT upper(cast(tag_id as char(36))) as tag_join_id,\n		tag_name, \n		tag_description,\n		tag_path\nFROM v4_5_latest_tags"
+"_details");
 		                    
 		                    props_tJDBCInput_59.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_59.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_59.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_59.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_59.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_59.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_59.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_59.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_59.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_59_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_tags_details\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"50\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_description\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"tag_path\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"tag_path\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4000\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_path\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_59\",\"di.table.label\":\"v4_5_latest_tags_details\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_59_1_fisrt sst_tJDBCInput_59_1_fisrt = new SchemaSettingTool_tJDBCInput_59_1_fisrt();
 		                    
 		                    props_tJDBCInput_59.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_59_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_59.tableSelection.setValue("tablename",
 		                    "v4_5_latest_tags_details");
 		                    
 		                    java.util.List<Object> tJDBCInput_59_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_59_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_59_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_59_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_59_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_59.trimTable).setValue("trim",tJDBCInput_59_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_59_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_59_trimTable_columnName.add("tag_join_id");
 		                            
 		                            tJDBCInput_59_trimTable_columnName.add("tag_name");
 		                            
 		                            tJDBCInput_59_trimTable_columnName.add("tag_description");
 		                            
 		                            tJDBCInput_59_trimTable_columnName.add("tag_path");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_59.trimTable).setValue("columnName",tJDBCInput_59_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_59.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_59 = props_tJDBCInput_59.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_59 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_59 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_59 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_59.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_59);
        }
    }
globalMap.put("tJDBCInput_59_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_59);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_59= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_59_MAPPINGS_URL", mappings_url_tJDBCInput_59);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_59 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_59";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_59 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_59 = null;
topology_tJDBCInput_59 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_59 = def_tJDBCInput_59.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_59, topology_tJDBCInput_59);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_59 = def_tJDBCInput_59.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_59 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_59.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_59 = componentRuntime_tJDBCInput_59.initialize(container_tJDBCInput_59, props_tJDBCInput_59);

if (initVr_tJDBCInput_59.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_59.getMessage());
}

if(componentRuntime_tJDBCInput_59 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_59 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_59;
	compDriverInitialization_tJDBCInput_59.runAtDriver(container_tJDBCInput_59);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_59 = null;
if(componentRuntime_tJDBCInput_59 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_59 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_59;
	if (doesNodeBelongToRequest_tJDBCInput_59) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_59 = sourceOrSink_tJDBCInput_59.validate(container_tJDBCInput_59);
        if (vr_tJDBCInput_59.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_59.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_59 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_59 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_59;
        reader_tJDBCInput_59 = source_tJDBCInput_59.createReader(container_tJDBCInput_59);
	    reader_tJDBCInput_59 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_59, container_tJDBCInput_59);

            boolean multi_output_is_allowed_tJDBCInput_59 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_59 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_59.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_59 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_59 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_59 = props_tJDBCInput_59.getSchema(c_tJDBCInput_59, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_59 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_59, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_59 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_59 = reader_tJDBCInput_59.start();

        resourceMap.put("reader_tJDBCInput_59", reader_tJDBCInput_59);

        for (; available_tJDBCInput_59; available_tJDBCInput_59 = reader_tJDBCInput_59.advance()) {
			nb_line_tJDBCInput_59++;

			
			if (multi_output_is_allowed_tJDBCInput_59) {
				
					row43 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_59 = reader_tJDBCInput_59.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_59) {
						row43 = new row43Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_59 == null) {
            factory_tJDBCInput_59 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_59.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_59.setWrapped(factory_tJDBCInput_59.convertToAvro(data_tJDBCInput_59));
                Object columnValue_0_tJDBCInput_59 = outgoingEnforcer_tJDBCInput_59.get(0);
                        row43.tag_join_id = (String) (columnValue_0_tJDBCInput_59);
                Object columnValue_1_tJDBCInput_59 = outgoingEnforcer_tJDBCInput_59.get(1);
                        row43.tag_name = (String) (columnValue_1_tJDBCInput_59);
                Object columnValue_2_tJDBCInput_59 = outgoingEnforcer_tJDBCInput_59.get(2);
                        row43.tag_description = (String) (columnValue_2_tJDBCInput_59);
                Object columnValue_3_tJDBCInput_59 = outgoingEnforcer_tJDBCInput_59.get(3);
                        row43.tag_path = (String) (columnValue_3_tJDBCInput_59);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_59) {
				java.util.Map<String,Object> info_tJDBCInput_59 = e_tJDBCInput_59.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_59 = null;
					if(info_tJDBCInput_59.containsKey("error")){
						errorMessage_tJDBCInput_59 = info_tJDBCInput_59.get("error");
					}else if(info_tJDBCInput_59.containsKey("errorMessage")){
						errorMessage_tJDBCInput_59 = info_tJDBCInput_59.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_59 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_59 = "Row "+ nb_line_tJDBCInput_59 + ": "+errorMessage_tJDBCInput_59;
					System.err.println(errorMessage_tJDBCInput_59);
				
					// If the record is reject, the main line record should put NULL
					row43 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_59 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_59 = null;


 



/**
 * [tJDBCInput_59 begin ] stop
 */
	
	/**
	 * [tJDBCInput_59 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_59";

	


 


	tos_count_tJDBCInput_59++;

/**
 * [tJDBCInput_59 main ] stop
 */
	
	/**
	 * [tJDBCInput_59 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_59";

	


 



/**
 * [tJDBCInput_59 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					


			   
			   

					row43Struct row43_HashRow = new row43Struct();
		   	   	   
				
				row43_HashRow.tag_join_id = row43.tag_join_id;
				
				row43_HashRow.tag_name = row43.tag_name;
				
				row43_HashRow.tag_description = row43.tag_description;
				
				row43_HashRow.tag_path = row43.tag_path;
				
			tHash_Lookup_row43.put(row43_HashRow);
			
            




 


	tos_count_tAdvancedHash_row43++;

/**
 * [tAdvancedHash_row43 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

 



/**
 * [tAdvancedHash_row43 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

 



/**
 * [tAdvancedHash_row43 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_59 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_59";

	


 



/**
 * [tJDBCInput_59 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_59 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_59";

	
// end of generic


resourceMap.put("finish_tJDBCInput_59", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_59 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_59 = null;
    if (reader_tJDBCInput_59 != null) {
        reader_tJDBCInput_59.close();
        resultMap_tJDBCInput_59 = reader_tJDBCInput_59.getReturnValues();
    }
if(resultMap_tJDBCInput_59!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_59 : resultMap_tJDBCInput_59.entrySet()) {
		switch(entry_tJDBCInput_59.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_59.setComponentData("tJDBCInput_59", "ERROR_MESSAGE", entry_tJDBCInput_59.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_59.setComponentData("tJDBCInput_59", "NB_LINE", entry_tJDBCInput_59.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_59.setComponentData("tJDBCInput_59", "NB_SUCCESS", entry_tJDBCInput_59.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_59.setComponentData("tJDBCInput_59", "NB_REJECT", entry_tJDBCInput_59.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_59 = new StringBuilder();
            for (int i_tJDBCInput_59 = 0; i_tJDBCInput_59 < entry_tJDBCInput_59.getKey().length(); i_tJDBCInput_59++) {
                char ch_tJDBCInput_59 = entry_tJDBCInput_59.getKey().charAt(i_tJDBCInput_59);
                if(Character.isUpperCase(ch_tJDBCInput_59) && i_tJDBCInput_59> 0) {
                	studio_key_tJDBCInput_59.append('_');
                }
                studio_key_tJDBCInput_59.append(ch_tJDBCInput_59);
            }
			container_tJDBCInput_59.setComponentData("tJDBCInput_59", studio_key_tJDBCInput_59.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_59.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_59", true);
end_Hash.put("tJDBCInput_59", System.currentTimeMillis());




/**
 * [tJDBCInput_59 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

tHash_Lookup_row43.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row43", true);
end_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());




/**
 * [tAdvancedHash_row43 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_59 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_59";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_59")==null){
    if(resourceMap.get("reader_tJDBCInput_59")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_59")).close();
		} catch (java.io.IOException e_tJDBCInput_59) {
			String errorMessage_tJDBCInput_59 = "failed to release the resource in tJDBCInput_59 :" + e_tJDBCInput_59.getMessage();
			System.err.println(errorMessage_tJDBCInput_59);
		}
	}
}
 



/**
 * [tJDBCInput_59 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

 



/**
 * [tAdvancedHash_row43 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_59_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String tag_join_id;

				public String getTag_join_id () {
					return this.tag_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.tag_join_id == null) ? 0 : this.tag_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.tag_join_id == null) {
							if (other.tag_join_id != null)
								return false;
						
						} else if (!this.tag_join_id.equals(other.tag_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.tag_join_id = this.tag_join_id;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.tag_join_id = this.tag_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.tag_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.tag_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.tag_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.tag_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tag_join_id="+tag_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.tag_join_id, other.tag_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_49Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_49_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tJDBCInput_49 - inputs:(after_tJDBCInput_50) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_29 - inputs:(row41,row13) outputs:(delete_tag_detalis)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tJDBCInput_49 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_49", false);
		start_Hash.put("tJDBCInput_49", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_49";

	
		int tos_count_tJDBCInput_49 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_49 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_49 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_49 = (String)(restRequest_tJDBCInput_49 != null ? restRequest_tJDBCInput_49.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_49 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_49 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_49 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_49 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_49.createRuntimeProperties();
 		                    props_tJDBCInput_49.setValue("sql",
 		                    "SELECT upper(cast(tag_id as char(36))) as tag_join_id\nFROM	tags");
 		                    
 		                    props_tJDBCInput_49.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_49.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_49.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_49.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_49.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_49.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_49.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_49.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_49.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_49_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tags\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"tag_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"tag_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"tag_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_49\",\"di.table.label\":\"tags\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_49_1_fisrt sst_tJDBCInput_49_1_fisrt = new SchemaSettingTool_tJDBCInput_49_1_fisrt();
 		                    
 		                    props_tJDBCInput_49.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_49_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_49.tableSelection.setValue("tablename",
 		                    "tags");
 		                    
 		                    java.util.List<Object> tJDBCInput_49_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_49_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_49.trimTable).setValue("trim",tJDBCInput_49_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_49_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_49_trimTable_columnName.add("tag_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_49.trimTable).setValue("columnName",tJDBCInput_49_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_49.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_49 = props_tJDBCInput_49.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_49 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_49 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_49 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_49.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_49);
        }
    }
globalMap.put("tJDBCInput_49_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_49);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_49= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_49_MAPPINGS_URL", mappings_url_tJDBCInput_49);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_49 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_49";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_49 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_49 = null;
topology_tJDBCInput_49 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_49 = def_tJDBCInput_49.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_49, topology_tJDBCInput_49);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_49 = def_tJDBCInput_49.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_49 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_49.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_49 = componentRuntime_tJDBCInput_49.initialize(container_tJDBCInput_49, props_tJDBCInput_49);

if (initVr_tJDBCInput_49.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_49.getMessage());
}

if(componentRuntime_tJDBCInput_49 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_49 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_49;
	compDriverInitialization_tJDBCInput_49.runAtDriver(container_tJDBCInput_49);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_49 = null;
if(componentRuntime_tJDBCInput_49 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_49 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_49;
	if (doesNodeBelongToRequest_tJDBCInput_49) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_49 = sourceOrSink_tJDBCInput_49.validate(container_tJDBCInput_49);
        if (vr_tJDBCInput_49.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_49.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_49 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_49 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_49;
        reader_tJDBCInput_49 = source_tJDBCInput_49.createReader(container_tJDBCInput_49);
	    reader_tJDBCInput_49 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_49, container_tJDBCInput_49);

            boolean multi_output_is_allowed_tJDBCInput_49 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_49 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_49.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_49 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_49 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_49 = props_tJDBCInput_49.getSchema(c_tJDBCInput_49, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_49 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_49, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_49 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_49 = reader_tJDBCInput_49.start();

        resourceMap.put("reader_tJDBCInput_49", reader_tJDBCInput_49);

        for (; available_tJDBCInput_49; available_tJDBCInput_49 = reader_tJDBCInput_49.advance()) {
			nb_line_tJDBCInput_49++;

			
			if (multi_output_is_allowed_tJDBCInput_49) {
				
					row13 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_49 = reader_tJDBCInput_49.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_49) {
						row13 = new row13Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_49 == null) {
            factory_tJDBCInput_49 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_49.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_49.setWrapped(factory_tJDBCInput_49.convertToAvro(data_tJDBCInput_49));
                Object columnValue_0_tJDBCInput_49 = outgoingEnforcer_tJDBCInput_49.get(0);
                        row13.tag_join_id = (String) (columnValue_0_tJDBCInput_49);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_49) {
				java.util.Map<String,Object> info_tJDBCInput_49 = e_tJDBCInput_49.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_49 = null;
					if(info_tJDBCInput_49.containsKey("error")){
						errorMessage_tJDBCInput_49 = info_tJDBCInput_49.get("error");
					}else if(info_tJDBCInput_49.containsKey("errorMessage")){
						errorMessage_tJDBCInput_49 = info_tJDBCInput_49.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_49 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_49 = "Row "+ nb_line_tJDBCInput_49 + ": "+errorMessage_tJDBCInput_49;
					System.err.println(errorMessage_tJDBCInput_49);
				
					// If the record is reject, the main line record should put NULL
					row13 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_49 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_49 = null;


 



/**
 * [tJDBCInput_49 begin ] stop
 */
	
	/**
	 * [tJDBCInput_49 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_49";

	


 


	tos_count_tJDBCInput_49++;

/**
 * [tJDBCInput_49 main ] stop
 */
	
	/**
	 * [tJDBCInput_49 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_49";

	


 



/**
 * [tJDBCInput_49 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.tag_join_id = row13.tag_join_id;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";

	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";

	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_49 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_49";

	


 



/**
 * [tJDBCInput_49 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_49 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_49";

	
// end of generic


resourceMap.put("finish_tJDBCInput_49", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_49 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_49 = null;
    if (reader_tJDBCInput_49 != null) {
        reader_tJDBCInput_49.close();
        resultMap_tJDBCInput_49 = reader_tJDBCInput_49.getReturnValues();
    }
if(resultMap_tJDBCInput_49!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_49 : resultMap_tJDBCInput_49.entrySet()) {
		switch(entry_tJDBCInput_49.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_49.setComponentData("tJDBCInput_49", "ERROR_MESSAGE", entry_tJDBCInput_49.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_49.setComponentData("tJDBCInput_49", "NB_LINE", entry_tJDBCInput_49.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_49.setComponentData("tJDBCInput_49", "NB_SUCCESS", entry_tJDBCInput_49.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_49.setComponentData("tJDBCInput_49", "NB_REJECT", entry_tJDBCInput_49.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_49 = new StringBuilder();
            for (int i_tJDBCInput_49 = 0; i_tJDBCInput_49 < entry_tJDBCInput_49.getKey().length(); i_tJDBCInput_49++) {
                char ch_tJDBCInput_49 = entry_tJDBCInput_49.getKey().charAt(i_tJDBCInput_49);
                if(Character.isUpperCase(ch_tJDBCInput_49) && i_tJDBCInput_49> 0) {
                	studio_key_tJDBCInput_49.append('_');
                }
                studio_key_tJDBCInput_49.append(ch_tJDBCInput_49);
            }
			container_tJDBCInput_49.setComponentData("tJDBCInput_49", studio_key_tJDBCInput_49.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_49.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_49", true);
end_Hash.put("tJDBCInput_49", System.currentTimeMillis());




/**
 * [tJDBCInput_49 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";

	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_49 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_49";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_49")==null){
    if(resourceMap.get("reader_tJDBCInput_49")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_49")).close();
		} catch (java.io.IOException e_tJDBCInput_49) {
			String errorMessage_tJDBCInput_49 = "failed to release the resource in tJDBCInput_49 :" + e_tJDBCInput_49.getMessage();
			System.err.println(errorMessage_tJDBCInput_49);
		}
	}
}
 



/**
 * [tJDBCInput_49 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";

	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_49_SUBPROCESS_STATE", 1);
	}
	


public static class row47Struct implements routines.system.IPersistableComparableLookupRow<row47Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String device_join_id;

				public String getDevice_join_id () {
					return this.device_join_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.device_join_id == null) ? 0 : this.device_join_id.hashCode());
					
						result = prime * result + ((this.vm_join_id == null) ? 0 : this.vm_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row47Struct other = (row47Struct) obj;
		
						if (this.device_join_id == null) {
							if (other.device_join_id != null)
								return false;
						
						} else if (!this.device_join_id.equals(other.device_join_id))
						
							return false;
					
						if (this.vm_join_id == null) {
							if (other.vm_join_id != null)
								return false;
						
						} else if (!this.vm_join_id.equals(other.vm_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row47Struct other) {

		other.device_join_id = this.device_join_id;
	            other.vm_join_id = this.vm_join_id;
	            
	}

	public void copyKeysDataTo(row47Struct other) {

		other.device_join_id = this.device_join_id;
	            	other.vm_join_id = this.vm_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.device_join_id = readString(dis);
					
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.device_join_id = readString(dis);
					
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.device_join_id,dos);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.device_join_id,dos);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("device_join_id="+device_join_id);
		sb.append(",vm_join_id="+vm_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.device_join_id, other.device_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.vm_join_id, other.vm_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_55Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_55_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row47Struct row47 = new row47Struct();




	
	/**
	 * [tAdvancedHash_row47 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row47", false);
		start_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row47";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tAdvancedHash_row47 = 0;
		

			   		// connection name:row47
			   		// source node:tJDBCInput_55 - inputs:(after_tJDBCInput_56) outputs:(row47,row47) | target node:tAdvancedHash_row47 - inputs:(row47) outputs:()
			   		// linked node: tMap_32 - inputs:(row48,row47) outputs:(delete_vm_device_connection)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row47 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row47Struct>getLookup(matchingModeEnum_row47);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row47", tHash_Lookup_row47);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row47 begin ] stop
 */



	
	/**
	 * [tJDBCInput_55 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_55", false);
		start_Hash.put("tJDBCInput_55", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_55";

	
		int tos_count_tJDBCInput_55 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_55 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_55 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_55 = (String)(restRequest_tJDBCInput_55 != null ? restRequest_tJDBCInput_55.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_55 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_55 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_55 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_55 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_55.createRuntimeProperties();
 		                    props_tJDBCInput_55.setValue("sql",
 		                    "SELECT upper(cast(device_id as char(36))) as device_join_id,\n        upper(cast(vm_id as char(36))) as vm_join_id\n  FRO"
+"M vm_device\nWHERE  (type = 'disk' AND\n       device = 'disk') OR\n       type = 'interface'");
 		                    
 		                    props_tJDBCInput_55.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_55.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_55.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_55.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_55.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_55.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_55.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_55.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_55.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_55_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCInput_55\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"device_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"device_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"device_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_55\",\"di.table.label\":\"tJDBCInput_55\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_55_1_fisrt sst_tJDBCInput_55_1_fisrt = new SchemaSettingTool_tJDBCInput_55_1_fisrt();
 		                    
 		                    props_tJDBCInput_55.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_55_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_55.tableSelection.setValue("tablename",
 		                    "vm_device");
 		                    
 		                    java.util.List<Object> tJDBCInput_55_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_55_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_55_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_55.trimTable).setValue("trim",tJDBCInput_55_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_55_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_55_trimTable_columnName.add("device_join_id");
 		                            
 		                            tJDBCInput_55_trimTable_columnName.add("vm_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_55.trimTable).setValue("columnName",tJDBCInput_55_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_55.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_55 = props_tJDBCInput_55.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_55 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_55 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_55 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_55.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_55);
        }
    }
globalMap.put("tJDBCInput_55_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_55);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_55= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_55_MAPPINGS_URL", mappings_url_tJDBCInput_55);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_55 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_55";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_55 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_55 = null;
topology_tJDBCInput_55 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_55 = def_tJDBCInput_55.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_55, topology_tJDBCInput_55);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_55 = def_tJDBCInput_55.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_55 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_55.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_55 = componentRuntime_tJDBCInput_55.initialize(container_tJDBCInput_55, props_tJDBCInput_55);

if (initVr_tJDBCInput_55.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_55.getMessage());
}

if(componentRuntime_tJDBCInput_55 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_55 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_55;
	compDriverInitialization_tJDBCInput_55.runAtDriver(container_tJDBCInput_55);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_55 = null;
if(componentRuntime_tJDBCInput_55 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_55 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_55;
	if (doesNodeBelongToRequest_tJDBCInput_55) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_55 = sourceOrSink_tJDBCInput_55.validate(container_tJDBCInput_55);
        if (vr_tJDBCInput_55.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_55.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_55 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_55 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_55;
        reader_tJDBCInput_55 = source_tJDBCInput_55.createReader(container_tJDBCInput_55);
	    reader_tJDBCInput_55 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_55, container_tJDBCInput_55);

            boolean multi_output_is_allowed_tJDBCInput_55 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_55 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_55.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_55 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_55 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_55 = props_tJDBCInput_55.getSchema(c_tJDBCInput_55, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_55 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_55, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_55 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_55 = reader_tJDBCInput_55.start();

        resourceMap.put("reader_tJDBCInput_55", reader_tJDBCInput_55);

        for (; available_tJDBCInput_55; available_tJDBCInput_55 = reader_tJDBCInput_55.advance()) {
			nb_line_tJDBCInput_55++;

			
			if (multi_output_is_allowed_tJDBCInput_55) {
				
					row47 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_55 = reader_tJDBCInput_55.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_55) {
						row47 = new row47Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_55 == null) {
            factory_tJDBCInput_55 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_55.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_55.setWrapped(factory_tJDBCInput_55.convertToAvro(data_tJDBCInput_55));
                Object columnValue_0_tJDBCInput_55 = outgoingEnforcer_tJDBCInput_55.get(0);
                        row47.device_join_id = (String) (columnValue_0_tJDBCInput_55);
                Object columnValue_1_tJDBCInput_55 = outgoingEnforcer_tJDBCInput_55.get(1);
                        row47.vm_join_id = (String) (columnValue_1_tJDBCInput_55);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_55) {
				java.util.Map<String,Object> info_tJDBCInput_55 = e_tJDBCInput_55.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_55 = null;
					if(info_tJDBCInput_55.containsKey("error")){
						errorMessage_tJDBCInput_55 = info_tJDBCInput_55.get("error");
					}else if(info_tJDBCInput_55.containsKey("errorMessage")){
						errorMessage_tJDBCInput_55 = info_tJDBCInput_55.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_55 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_55 = "Row "+ nb_line_tJDBCInput_55 + ": "+errorMessage_tJDBCInput_55;
					System.err.println(errorMessage_tJDBCInput_55);
				
					// If the record is reject, the main line record should put NULL
					row47 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_55 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_55 = null;


 



/**
 * [tJDBCInput_55 begin ] stop
 */
	
	/**
	 * [tJDBCInput_55 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_55";

	


 


	tos_count_tJDBCInput_55++;

/**
 * [tJDBCInput_55 main ] stop
 */
	
	/**
	 * [tJDBCInput_55 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_55";

	


 



/**
 * [tJDBCInput_55 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					


			   
			   

					row47Struct row47_HashRow = new row47Struct();
		   	   	   
				
				row47_HashRow.device_join_id = row47.device_join_id;
				
				row47_HashRow.vm_join_id = row47.vm_join_id;
				
			tHash_Lookup_row47.put(row47_HashRow);
			
            




 


	tos_count_tAdvancedHash_row47++;

/**
 * [tAdvancedHash_row47 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

 



/**
 * [tAdvancedHash_row47 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

 



/**
 * [tAdvancedHash_row47 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_55 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_55";

	


 



/**
 * [tJDBCInput_55 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_55 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_55";

	
// end of generic


resourceMap.put("finish_tJDBCInput_55", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_55 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_55 = null;
    if (reader_tJDBCInput_55 != null) {
        reader_tJDBCInput_55.close();
        resultMap_tJDBCInput_55 = reader_tJDBCInput_55.getReturnValues();
    }
if(resultMap_tJDBCInput_55!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_55 : resultMap_tJDBCInput_55.entrySet()) {
		switch(entry_tJDBCInput_55.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_55.setComponentData("tJDBCInput_55", "ERROR_MESSAGE", entry_tJDBCInput_55.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_55.setComponentData("tJDBCInput_55", "NB_LINE", entry_tJDBCInput_55.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_55.setComponentData("tJDBCInput_55", "NB_SUCCESS", entry_tJDBCInput_55.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_55.setComponentData("tJDBCInput_55", "NB_REJECT", entry_tJDBCInput_55.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_55 = new StringBuilder();
            for (int i_tJDBCInput_55 = 0; i_tJDBCInput_55 < entry_tJDBCInput_55.getKey().length(); i_tJDBCInput_55++) {
                char ch_tJDBCInput_55 = entry_tJDBCInput_55.getKey().charAt(i_tJDBCInput_55);
                if(Character.isUpperCase(ch_tJDBCInput_55) && i_tJDBCInput_55> 0) {
                	studio_key_tJDBCInput_55.append('_');
                }
                studio_key_tJDBCInput_55.append(ch_tJDBCInput_55);
            }
			container_tJDBCInput_55.setComponentData("tJDBCInput_55", studio_key_tJDBCInput_55.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_55.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_55", true);
end_Hash.put("tJDBCInput_55", System.currentTimeMillis());




/**
 * [tJDBCInput_55 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

tHash_Lookup_row47.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row47", true);
end_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());




/**
 * [tAdvancedHash_row47 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_55 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_55";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_55")==null){
    if(resourceMap.get("reader_tJDBCInput_55")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_55")).close();
		} catch (java.io.IOException e_tJDBCInput_55) {
			String errorMessage_tJDBCInput_55 = "failed to release the resource in tJDBCInput_55 :" + e_tJDBCInput_55.getMessage();
			System.err.println(errorMessage_tJDBCInput_55);
		}
	}
}
 



/**
 * [tJDBCInput_55 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

 



/**
 * [tAdvancedHash_row47 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_55_SUBPROCESS_STATE", 1);
	}
	


public static class row46Struct implements routines.system.IPersistableComparableLookupRow<row46Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_join_id == null) ? 0 : this.vm_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row46Struct other = (row46Struct) obj;
		
						if (this.vm_join_id == null) {
							if (other.vm_join_id != null)
								return false;
						
						} else if (!this.vm_join_id.equals(other.vm_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row46Struct other) {

		other.history_id = this.history_id;
	            other.vm_join_id = this.vm_join_id;
	            
	}

	public void copyKeysDataTo(row46Struct other) {

		other.vm_join_id = this.vm_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_join_id="+vm_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_join_id, other.vm_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_54Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_54_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row46Struct row46 = new row46Struct();




	
	/**
	 * [tAdvancedHash_row46 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row46", false);
		start_Hash.put("tAdvancedHash_row46", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row46";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tAdvancedHash_row46 = 0;
		

			   		// connection name:row46
			   		// source node:tJDBCInput_54 - inputs:(after_tJDBCInput_53) outputs:(row46,row46) | target node:tAdvancedHash_row46 - inputs:(row46) outputs:()
			   		// linked node: tMap_31 - inputs:(row45,row46,row53,row54) outputs:(insert_new_vm_device_connection)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row46 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct> tHash_Lookup_row46 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row46Struct>getLookup(matchingModeEnum_row46);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row46", tHash_Lookup_row46);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row46 begin ] stop
 */



	
	/**
	 * [tJDBCInput_54 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_54", false);
		start_Hash.put("tJDBCInput_54", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_54";

	
		int tos_count_tJDBCInput_54 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_54 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_54 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_54 = (String)(restRequest_tJDBCInput_54 != null ? restRequest_tJDBCInput_54.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_54 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_54 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_54 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_54 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_54.createRuntimeProperties();
 		                    props_tJDBCInput_54.setValue("sql",
 		                    "SELECT history_id, upper(cast(vm_id as char(36))) as vm_join_id\nFROM  v4_5_latest_configuration_vms");
 		                    
 		                    props_tJDBCInput_54.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_54.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_54.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_54.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_54.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_54.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_54.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_54.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_54.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_54_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_54\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_54_1_fisrt sst_tJDBCInput_54_1_fisrt = new SchemaSettingTool_tJDBCInput_54_1_fisrt();
 		                    
 		                    props_tJDBCInput_54.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_54_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_54.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms");
 		                    
 		                    java.util.List<Object> tJDBCInput_54_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_54_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_54_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_54.trimTable).setValue("trim",tJDBCInput_54_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_54_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_54_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_54_trimTable_columnName.add("vm_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_54.trimTable).setValue("columnName",tJDBCInput_54_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_54.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_54 = props_tJDBCInput_54.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_54 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_54 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_54 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_54.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_54);
        }
    }
globalMap.put("tJDBCInput_54_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_54);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_54= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_54_MAPPINGS_URL", mappings_url_tJDBCInput_54);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_54 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_54";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_54 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_54 = null;
topology_tJDBCInput_54 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_54 = def_tJDBCInput_54.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_54, topology_tJDBCInput_54);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_54 = def_tJDBCInput_54.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_54 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_54.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_54 = componentRuntime_tJDBCInput_54.initialize(container_tJDBCInput_54, props_tJDBCInput_54);

if (initVr_tJDBCInput_54.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_54.getMessage());
}

if(componentRuntime_tJDBCInput_54 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_54 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_54;
	compDriverInitialization_tJDBCInput_54.runAtDriver(container_tJDBCInput_54);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_54 = null;
if(componentRuntime_tJDBCInput_54 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_54 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_54;
	if (doesNodeBelongToRequest_tJDBCInput_54) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_54 = sourceOrSink_tJDBCInput_54.validate(container_tJDBCInput_54);
        if (vr_tJDBCInput_54.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_54.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_54 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_54 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_54;
        reader_tJDBCInput_54 = source_tJDBCInput_54.createReader(container_tJDBCInput_54);
	    reader_tJDBCInput_54 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_54, container_tJDBCInput_54);

            boolean multi_output_is_allowed_tJDBCInput_54 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_54 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_54.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_54 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_54 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_54 = props_tJDBCInput_54.getSchema(c_tJDBCInput_54, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_54 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_54, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_54 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_54 = reader_tJDBCInput_54.start();

        resourceMap.put("reader_tJDBCInput_54", reader_tJDBCInput_54);

        for (; available_tJDBCInput_54; available_tJDBCInput_54 = reader_tJDBCInput_54.advance()) {
			nb_line_tJDBCInput_54++;

			
			if (multi_output_is_allowed_tJDBCInput_54) {
				
					row46 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_54 = reader_tJDBCInput_54.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_54) {
						row46 = new row46Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_54 == null) {
            factory_tJDBCInput_54 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_54.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_54.setWrapped(factory_tJDBCInput_54.convertToAvro(data_tJDBCInput_54));
                Object columnValue_0_tJDBCInput_54 = outgoingEnforcer_tJDBCInput_54.get(0);
                        row46.history_id = (Integer) (columnValue_0_tJDBCInput_54);
                Object columnValue_1_tJDBCInput_54 = outgoingEnforcer_tJDBCInput_54.get(1);
                        row46.vm_join_id = (String) (columnValue_1_tJDBCInput_54);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_54) {
				java.util.Map<String,Object> info_tJDBCInput_54 = e_tJDBCInput_54.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_54 = null;
					if(info_tJDBCInput_54.containsKey("error")){
						errorMessage_tJDBCInput_54 = info_tJDBCInput_54.get("error");
					}else if(info_tJDBCInput_54.containsKey("errorMessage")){
						errorMessage_tJDBCInput_54 = info_tJDBCInput_54.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_54 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_54 = "Row "+ nb_line_tJDBCInput_54 + ": "+errorMessage_tJDBCInput_54;
					System.err.println(errorMessage_tJDBCInput_54);
				
					// If the record is reject, the main line record should put NULL
					row46 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_54 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_54 = null;


 



/**
 * [tJDBCInput_54 begin ] stop
 */
	
	/**
	 * [tJDBCInput_54 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_54";

	


 


	tos_count_tJDBCInput_54++;

/**
 * [tJDBCInput_54 main ] stop
 */
	
	/**
	 * [tJDBCInput_54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_54";

	


 



/**
 * [tJDBCInput_54 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row46 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					


			   
			   

					row46Struct row46_HashRow = new row46Struct();
		   	   	   
				
				row46_HashRow.history_id = row46.history_id;
				
				row46_HashRow.vm_join_id = row46.vm_join_id;
				
			tHash_Lookup_row46.put(row46_HashRow);
			
            




 


	tos_count_tAdvancedHash_row46++;

/**
 * [tAdvancedHash_row46 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row46 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";

	

 



/**
 * [tAdvancedHash_row46 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row46 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";

	

 



/**
 * [tAdvancedHash_row46 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_54 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_54";

	


 



/**
 * [tJDBCInput_54 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_54 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_54";

	
// end of generic


resourceMap.put("finish_tJDBCInput_54", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_54 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_54 = null;
    if (reader_tJDBCInput_54 != null) {
        reader_tJDBCInput_54.close();
        resultMap_tJDBCInput_54 = reader_tJDBCInput_54.getReturnValues();
    }
if(resultMap_tJDBCInput_54!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_54 : resultMap_tJDBCInput_54.entrySet()) {
		switch(entry_tJDBCInput_54.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_54.setComponentData("tJDBCInput_54", "ERROR_MESSAGE", entry_tJDBCInput_54.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_54.setComponentData("tJDBCInput_54", "NB_LINE", entry_tJDBCInput_54.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_54.setComponentData("tJDBCInput_54", "NB_SUCCESS", entry_tJDBCInput_54.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_54.setComponentData("tJDBCInput_54", "NB_REJECT", entry_tJDBCInput_54.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_54 = new StringBuilder();
            for (int i_tJDBCInput_54 = 0; i_tJDBCInput_54 < entry_tJDBCInput_54.getKey().length(); i_tJDBCInput_54++) {
                char ch_tJDBCInput_54 = entry_tJDBCInput_54.getKey().charAt(i_tJDBCInput_54);
                if(Character.isUpperCase(ch_tJDBCInput_54) && i_tJDBCInput_54> 0) {
                	studio_key_tJDBCInput_54.append('_');
                }
                studio_key_tJDBCInput_54.append(ch_tJDBCInput_54);
            }
			container_tJDBCInput_54.setComponentData("tJDBCInput_54", studio_key_tJDBCInput_54.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_54.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_54", true);
end_Hash.put("tJDBCInput_54", System.currentTimeMillis());




/**
 * [tJDBCInput_54 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row46 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";

	

tHash_Lookup_row46.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row46", true);
end_Hash.put("tAdvancedHash_row46", System.currentTimeMillis());




/**
 * [tAdvancedHash_row46 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_54 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_54";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_54")==null){
    if(resourceMap.get("reader_tJDBCInput_54")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_54")).close();
		} catch (java.io.IOException e_tJDBCInput_54) {
			String errorMessage_tJDBCInput_54 = "failed to release the resource in tJDBCInput_54 :" + e_tJDBCInput_54.getMessage();
			System.err.println(errorMessage_tJDBCInput_54);
		}
	}
}
 



/**
 * [tJDBCInput_54 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row46 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";

	

 



/**
 * [tAdvancedHash_row46 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_54_SUBPROCESS_STATE", 1);
	}
	


public static class row53Struct implements routines.system.IPersistableComparableLookupRow<row53Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String vm_interface_join_id;

				public String getVm_interface_join_id () {
					return this.vm_interface_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_interface_join_id == null) ? 0 : this.vm_interface_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row53Struct other = (row53Struct) obj;
		
						if (this.vm_interface_join_id == null) {
							if (other.vm_interface_join_id != null)
								return false;
						
						} else if (!this.vm_interface_join_id.equals(other.vm_interface_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row53Struct other) {

		other.history_id = this.history_id;
	            other.vm_interface_join_id = this.vm_interface_join_id;
	            
	}

	public void copyKeysDataTo(row53Struct other) {

		other.vm_interface_join_id = this.vm_interface_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_interface_join_id="+vm_interface_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row53Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_interface_join_id, other.vm_interface_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_65Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_65_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row53Struct row53 = new row53Struct();




	
	/**
	 * [tAdvancedHash_row53 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row53", false);
		start_Hash.put("tAdvancedHash_row53", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row53";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row53");
					}
				
		int tos_count_tAdvancedHash_row53 = 0;
		

			   		// connection name:row53
			   		// source node:tJDBCInput_65 - inputs:(after_tJDBCInput_53) outputs:(row53,row53) | target node:tAdvancedHash_row53 - inputs:(row53) outputs:()
			   		// linked node: tMap_31 - inputs:(row45,row46,row53,row54) outputs:(insert_new_vm_device_connection)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row53 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct> tHash_Lookup_row53 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row53Struct>getLookup(matchingModeEnum_row53);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row53", tHash_Lookup_row53);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row53 begin ] stop
 */



	
	/**
	 * [tJDBCInput_65 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_65", false);
		start_Hash.put("tJDBCInput_65", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_65";

	
		int tos_count_tJDBCInput_65 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_65 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_65 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_65 = (String)(restRequest_tJDBCInput_65 != null ? restRequest_tJDBCInput_65.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_65 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_65 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_65 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_65 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_65.createRuntimeProperties();
 		                    props_tJDBCInput_65.setValue("sql",
 		                    "SELECT \n  history_id, \n  upper(cast(vm_interface_id as char(36))) as vm_interface_join_id\nFROM v4_5_latest_configura"
+"tion_vms_interfaces");
 		                    
 		                    props_tJDBCInput_65.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_65.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_65.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_65.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_65.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_65.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_65.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_65.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_65.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_65_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_interface_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_65\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_65_1_fisrt sst_tJDBCInput_65_1_fisrt = new SchemaSettingTool_tJDBCInput_65_1_fisrt();
 		                    
 		                    props_tJDBCInput_65.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_65_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_65.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms_interfaces");
 		                    
 		                    java.util.List<Object> tJDBCInput_65_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_65_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_65_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_65.trimTable).setValue("trim",tJDBCInput_65_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_65_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_65_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_65_trimTable_columnName.add("vm_interface_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_65.trimTable).setValue("columnName",tJDBCInput_65_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_65.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_65 = props_tJDBCInput_65.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_65 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_65 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_65 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_65.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_65);
        }
    }
globalMap.put("tJDBCInput_65_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_65);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_65= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_65_MAPPINGS_URL", mappings_url_tJDBCInput_65);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_65 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_65";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_65 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_65 = null;
topology_tJDBCInput_65 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_65 = def_tJDBCInput_65.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_65, topology_tJDBCInput_65);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_65 = def_tJDBCInput_65.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_65 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_65.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_65 = componentRuntime_tJDBCInput_65.initialize(container_tJDBCInput_65, props_tJDBCInput_65);

if (initVr_tJDBCInput_65.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_65.getMessage());
}

if(componentRuntime_tJDBCInput_65 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_65 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_65;
	compDriverInitialization_tJDBCInput_65.runAtDriver(container_tJDBCInput_65);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_65 = null;
if(componentRuntime_tJDBCInput_65 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_65 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_65;
	if (doesNodeBelongToRequest_tJDBCInput_65) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_65 = sourceOrSink_tJDBCInput_65.validate(container_tJDBCInput_65);
        if (vr_tJDBCInput_65.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_65.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_65 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_65 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_65;
        reader_tJDBCInput_65 = source_tJDBCInput_65.createReader(container_tJDBCInput_65);
	    reader_tJDBCInput_65 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_65, container_tJDBCInput_65);

            boolean multi_output_is_allowed_tJDBCInput_65 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_65 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_65.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_65 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_65 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_65 = props_tJDBCInput_65.getSchema(c_tJDBCInput_65, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_65 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_65, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_65 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_65 = reader_tJDBCInput_65.start();

        resourceMap.put("reader_tJDBCInput_65", reader_tJDBCInput_65);

        for (; available_tJDBCInput_65; available_tJDBCInput_65 = reader_tJDBCInput_65.advance()) {
			nb_line_tJDBCInput_65++;

			
			if (multi_output_is_allowed_tJDBCInput_65) {
				
					row53 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_65 = reader_tJDBCInput_65.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_65) {
						row53 = new row53Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_65 == null) {
            factory_tJDBCInput_65 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_65.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_65.setWrapped(factory_tJDBCInput_65.convertToAvro(data_tJDBCInput_65));
                Object columnValue_0_tJDBCInput_65 = outgoingEnforcer_tJDBCInput_65.get(0);
                        row53.history_id = (Integer) (columnValue_0_tJDBCInput_65);
                Object columnValue_1_tJDBCInput_65 = outgoingEnforcer_tJDBCInput_65.get(1);
                        row53.vm_interface_join_id = (String) (columnValue_1_tJDBCInput_65);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_65) {
				java.util.Map<String,Object> info_tJDBCInput_65 = e_tJDBCInput_65.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_65 = null;
					if(info_tJDBCInput_65.containsKey("error")){
						errorMessage_tJDBCInput_65 = info_tJDBCInput_65.get("error");
					}else if(info_tJDBCInput_65.containsKey("errorMessage")){
						errorMessage_tJDBCInput_65 = info_tJDBCInput_65.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_65 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_65 = "Row "+ nb_line_tJDBCInput_65 + ": "+errorMessage_tJDBCInput_65;
					System.err.println(errorMessage_tJDBCInput_65);
				
					// If the record is reject, the main line record should put NULL
					row53 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_65 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_65 = null;


 



/**
 * [tJDBCInput_65 begin ] stop
 */
	
	/**
	 * [tJDBCInput_65 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_65";

	


 


	tos_count_tJDBCInput_65++;

/**
 * [tJDBCInput_65 main ] stop
 */
	
	/**
	 * [tJDBCInput_65 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_65";

	


 



/**
 * [tJDBCInput_65 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row53 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row53"
						
						);
					}
					


			   
			   

					row53Struct row53_HashRow = new row53Struct();
		   	   	   
				
				row53_HashRow.history_id = row53.history_id;
				
				row53_HashRow.vm_interface_join_id = row53.vm_interface_join_id;
				
			tHash_Lookup_row53.put(row53_HashRow);
			
            




 


	tos_count_tAdvancedHash_row53++;

/**
 * [tAdvancedHash_row53 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row53 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";

	

 



/**
 * [tAdvancedHash_row53 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row53 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";

	

 



/**
 * [tAdvancedHash_row53 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_65 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_65";

	


 



/**
 * [tJDBCInput_65 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_65 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_65";

	
// end of generic


resourceMap.put("finish_tJDBCInput_65", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_65 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_65 = null;
    if (reader_tJDBCInput_65 != null) {
        reader_tJDBCInput_65.close();
        resultMap_tJDBCInput_65 = reader_tJDBCInput_65.getReturnValues();
    }
if(resultMap_tJDBCInput_65!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_65 : resultMap_tJDBCInput_65.entrySet()) {
		switch(entry_tJDBCInput_65.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_65.setComponentData("tJDBCInput_65", "ERROR_MESSAGE", entry_tJDBCInput_65.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_65.setComponentData("tJDBCInput_65", "NB_LINE", entry_tJDBCInput_65.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_65.setComponentData("tJDBCInput_65", "NB_SUCCESS", entry_tJDBCInput_65.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_65.setComponentData("tJDBCInput_65", "NB_REJECT", entry_tJDBCInput_65.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_65 = new StringBuilder();
            for (int i_tJDBCInput_65 = 0; i_tJDBCInput_65 < entry_tJDBCInput_65.getKey().length(); i_tJDBCInput_65++) {
                char ch_tJDBCInput_65 = entry_tJDBCInput_65.getKey().charAt(i_tJDBCInput_65);
                if(Character.isUpperCase(ch_tJDBCInput_65) && i_tJDBCInput_65> 0) {
                	studio_key_tJDBCInput_65.append('_');
                }
                studio_key_tJDBCInput_65.append(ch_tJDBCInput_65);
            }
			container_tJDBCInput_65.setComponentData("tJDBCInput_65", studio_key_tJDBCInput_65.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_65.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_65", true);
end_Hash.put("tJDBCInput_65", System.currentTimeMillis());




/**
 * [tJDBCInput_65 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row53 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";

	

tHash_Lookup_row53.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row53");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row53", true);
end_Hash.put("tAdvancedHash_row53", System.currentTimeMillis());




/**
 * [tAdvancedHash_row53 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_65 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_65";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_65")==null){
    if(resourceMap.get("reader_tJDBCInput_65")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_65")).close();
		} catch (java.io.IOException e_tJDBCInput_65) {
			String errorMessage_tJDBCInput_65 = "failed to release the resource in tJDBCInput_65 :" + e_tJDBCInput_65.getMessage();
			System.err.println(errorMessage_tJDBCInput_65);
		}
	}
}
 



/**
 * [tJDBCInput_65 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row53 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";

	

 



/**
 * [tAdvancedHash_row53 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_65_SUBPROCESS_STATE", 1);
	}
	


public static class row54Struct implements routines.system.IPersistableComparableLookupRow<row54Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String vm_disk_join_id;

				public String getVm_disk_join_id () {
					return this.vm_disk_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_disk_join_id == null) ? 0 : this.vm_disk_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row54Struct other = (row54Struct) obj;
		
						if (this.vm_disk_join_id == null) {
							if (other.vm_disk_join_id != null)
								return false;
						
						} else if (!this.vm_disk_join_id.equals(other.vm_disk_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row54Struct other) {

		other.history_id = this.history_id;
	            other.vm_disk_join_id = this.vm_disk_join_id;
	            
	}

	public void copyKeysDataTo(row54Struct other) {

		other.vm_disk_join_id = this.vm_disk_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_disk_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.vm_disk_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_disk_join_id="+vm_disk_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_disk_join_id, other.vm_disk_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_66Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_66_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row54Struct row54 = new row54Struct();




	
	/**
	 * [tAdvancedHash_row54 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row54", false);
		start_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row54";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tAdvancedHash_row54 = 0;
		

			   		// connection name:row54
			   		// source node:tJDBCInput_66 - inputs:(after_tJDBCInput_53) outputs:(row54,row54) | target node:tAdvancedHash_row54 - inputs:(row54) outputs:()
			   		// linked node: tMap_31 - inputs:(row45,row46,row53,row54) outputs:(insert_new_vm_device_connection)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row54 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row54Struct>getLookup(matchingModeEnum_row54);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row54", tHash_Lookup_row54);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row54 begin ] stop
 */



	
	/**
	 * [tJDBCInput_66 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_66", false);
		start_Hash.put("tJDBCInput_66", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_66";

	
		int tos_count_tJDBCInput_66 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_66 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_66 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_66 = (String)(restRequest_tJDBCInput_66 != null ? restRequest_tJDBCInput_66.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_66 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_66 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_66 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_66 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_66.createRuntimeProperties();
 		                    props_tJDBCInput_66.setValue("sql",
 		                    "SELECT	history_id, \n		upper(cast(vm_disk_id as char(36))) as vm_disk_join_id\nFROM v4_5_latest_configuration_vms_disks"
+"");
 		                    
 		                    props_tJDBCInput_66.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_66.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_66.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_66.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_66.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_66.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_66.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_66.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_66.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_66_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_disks\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_disk_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_join_id\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_66\",\"di.table.label\":\"v4_5_latest_configuration_vms_disks\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_66_1_fisrt sst_tJDBCInput_66_1_fisrt = new SchemaSettingTool_tJDBCInput_66_1_fisrt();
 		                    
 		                    props_tJDBCInput_66.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_66_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_66.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms_disks");
 		                    
 		                    java.util.List<Object> tJDBCInput_66_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_66_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_66_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_66.trimTable).setValue("trim",tJDBCInput_66_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_66_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_66_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_66_trimTable_columnName.add("vm_disk_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_66.trimTable).setValue("columnName",tJDBCInput_66_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_66.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_66 = props_tJDBCInput_66.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_66 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_66 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_66 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_66.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_66);
        }
    }
globalMap.put("tJDBCInput_66_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_66);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_66= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_66_MAPPINGS_URL", mappings_url_tJDBCInput_66);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_66 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_66";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_66 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_66 = null;
topology_tJDBCInput_66 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_66 = def_tJDBCInput_66.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_66, topology_tJDBCInput_66);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_66 = def_tJDBCInput_66.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_66 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_66.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_66 = componentRuntime_tJDBCInput_66.initialize(container_tJDBCInput_66, props_tJDBCInput_66);

if (initVr_tJDBCInput_66.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_66.getMessage());
}

if(componentRuntime_tJDBCInput_66 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_66 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_66;
	compDriverInitialization_tJDBCInput_66.runAtDriver(container_tJDBCInput_66);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_66 = null;
if(componentRuntime_tJDBCInput_66 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_66 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_66;
	if (doesNodeBelongToRequest_tJDBCInput_66) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_66 = sourceOrSink_tJDBCInput_66.validate(container_tJDBCInput_66);
        if (vr_tJDBCInput_66.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_66.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_66 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_66 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_66;
        reader_tJDBCInput_66 = source_tJDBCInput_66.createReader(container_tJDBCInput_66);
	    reader_tJDBCInput_66 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_66, container_tJDBCInput_66);

            boolean multi_output_is_allowed_tJDBCInput_66 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_66 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_66.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_66 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_66 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_66 = props_tJDBCInput_66.getSchema(c_tJDBCInput_66, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_66 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_66, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_66 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_66 = reader_tJDBCInput_66.start();

        resourceMap.put("reader_tJDBCInput_66", reader_tJDBCInput_66);

        for (; available_tJDBCInput_66; available_tJDBCInput_66 = reader_tJDBCInput_66.advance()) {
			nb_line_tJDBCInput_66++;

			
			if (multi_output_is_allowed_tJDBCInput_66) {
				
					row54 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_66 = reader_tJDBCInput_66.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_66) {
						row54 = new row54Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_66 == null) {
            factory_tJDBCInput_66 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_66.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_66.setWrapped(factory_tJDBCInput_66.convertToAvro(data_tJDBCInput_66));
                Object columnValue_0_tJDBCInput_66 = outgoingEnforcer_tJDBCInput_66.get(0);
                        row54.history_id = (Integer) (columnValue_0_tJDBCInput_66);
                Object columnValue_1_tJDBCInput_66 = outgoingEnforcer_tJDBCInput_66.get(1);
                        row54.vm_disk_join_id = (String) (columnValue_1_tJDBCInput_66);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_66) {
				java.util.Map<String,Object> info_tJDBCInput_66 = e_tJDBCInput_66.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_66 = null;
					if(info_tJDBCInput_66.containsKey("error")){
						errorMessage_tJDBCInput_66 = info_tJDBCInput_66.get("error");
					}else if(info_tJDBCInput_66.containsKey("errorMessage")){
						errorMessage_tJDBCInput_66 = info_tJDBCInput_66.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_66 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_66 = "Row "+ nb_line_tJDBCInput_66 + ": "+errorMessage_tJDBCInput_66;
					System.err.println(errorMessage_tJDBCInput_66);
				
					// If the record is reject, the main line record should put NULL
					row54 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_66 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_66 = null;


 



/**
 * [tJDBCInput_66 begin ] stop
 */
	
	/**
	 * [tJDBCInput_66 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_66";

	


 


	tos_count_tJDBCInput_66++;

/**
 * [tJDBCInput_66 main ] stop
 */
	
	/**
	 * [tJDBCInput_66 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_66";

	


 



/**
 * [tJDBCInput_66 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					


			   
			   

					row54Struct row54_HashRow = new row54Struct();
		   	   	   
				
				row54_HashRow.history_id = row54.history_id;
				
				row54_HashRow.vm_disk_join_id = row54.vm_disk_join_id;
				
			tHash_Lookup_row54.put(row54_HashRow);
			
            




 


	tos_count_tAdvancedHash_row54++;

/**
 * [tAdvancedHash_row54 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";

	

 



/**
 * [tAdvancedHash_row54 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";

	

 



/**
 * [tAdvancedHash_row54 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_66 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_66";

	


 



/**
 * [tJDBCInput_66 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_66 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_66";

	
// end of generic


resourceMap.put("finish_tJDBCInput_66", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_66 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_66 = null;
    if (reader_tJDBCInput_66 != null) {
        reader_tJDBCInput_66.close();
        resultMap_tJDBCInput_66 = reader_tJDBCInput_66.getReturnValues();
    }
if(resultMap_tJDBCInput_66!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_66 : resultMap_tJDBCInput_66.entrySet()) {
		switch(entry_tJDBCInput_66.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_66.setComponentData("tJDBCInput_66", "ERROR_MESSAGE", entry_tJDBCInput_66.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_66.setComponentData("tJDBCInput_66", "NB_LINE", entry_tJDBCInput_66.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_66.setComponentData("tJDBCInput_66", "NB_SUCCESS", entry_tJDBCInput_66.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_66.setComponentData("tJDBCInput_66", "NB_REJECT", entry_tJDBCInput_66.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_66 = new StringBuilder();
            for (int i_tJDBCInput_66 = 0; i_tJDBCInput_66 < entry_tJDBCInput_66.getKey().length(); i_tJDBCInput_66++) {
                char ch_tJDBCInput_66 = entry_tJDBCInput_66.getKey().charAt(i_tJDBCInput_66);
                if(Character.isUpperCase(ch_tJDBCInput_66) && i_tJDBCInput_66> 0) {
                	studio_key_tJDBCInput_66.append('_');
                }
                studio_key_tJDBCInput_66.append(ch_tJDBCInput_66);
            }
			container_tJDBCInput_66.setComponentData("tJDBCInput_66", studio_key_tJDBCInput_66.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_66.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_66", true);
end_Hash.put("tJDBCInput_66", System.currentTimeMillis());




/**
 * [tJDBCInput_66 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";

	

tHash_Lookup_row54.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row54", true);
end_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());




/**
 * [tAdvancedHash_row54 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_66 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_66";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_66")==null){
    if(resourceMap.get("reader_tJDBCInput_66")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_66")).close();
		} catch (java.io.IOException e_tJDBCInput_66) {
			String errorMessage_tJDBCInput_66 = "failed to release the resource in tJDBCInput_66 :" + e_tJDBCInput_66.getMessage();
			System.err.println(errorMessage_tJDBCInput_66);
		}
	}
}
 



/**
 * [tJDBCInput_66 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";

	

 



/**
 * [tAdvancedHash_row54 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_66_SUBPROCESS_STATE", 1);
	}
	


public static class row58Struct implements routines.system.IPersistableComparableLookupRow<row58Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String user_join_id;

				public String getUser_join_id () {
					return this.user_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.user_join_id == null) ? 0 : this.user_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row58Struct other = (row58Struct) obj;
		
						if (this.user_join_id == null) {
							if (other.user_join_id != null)
								return false;
						
						} else if (!this.user_join_id.equals(other.user_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row58Struct other) {

		other.user_join_id = this.user_join_id;
	            
	}

	public void copyKeysDataTo(row58Struct other) {

		other.user_join_id = this.user_join_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.user_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.user_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.user_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.user_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("user_join_id="+user_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row58Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.user_join_id, other.user_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row58Struct row58 = new row58Struct();




	
	/**
	 * [tAdvancedHash_row58 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row58", false);
		start_Hash.put("tAdvancedHash_row58", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row58";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row58");
					}
				
		int tos_count_tAdvancedHash_row58 = 0;
		

			   		// connection name:row58
			   		// source node:tJDBCInput_12 - inputs:(after_tJDBCInput_11) outputs:(row58,row58) | target node:tAdvancedHash_row58 - inputs:(row58) outputs:()
			   		// linked node: tMap_10 - inputs:(row57,row58) outputs:(delete_users)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row58 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct> tHash_Lookup_row58 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row58Struct>getLookup(matchingModeEnum_row58);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row58", tHash_Lookup_row58);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row58 begin ] stop
 */



	
	/**
	 * [tJDBCInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_12", false);
		start_Hash.put("tJDBCInput_12", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_12";

	
		int tos_count_tJDBCInput_12 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_12 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_12 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_12 = (String)(restRequest_tJDBCInput_12 != null ? restRequest_tJDBCInput_12.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_12 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_12 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_12 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_12 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_12.createRuntimeProperties();
 		                    props_tJDBCInput_12.setValue("sql",
 		                    "SELECT upper(cast(user_id as char(36))) as user_join_id\nFROM  users");
 		                    
 		                    props_tJDBCInput_12.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_12.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_12.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_12_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"images\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"user_join_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARBINARY\",\"talend.field.dbColumnName\":\"user_join_id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_12\",\"di.table.label\":\"images\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_12_1_fisrt sst_tJDBCInput_12_1_fisrt = new SchemaSettingTool_tJDBCInput_12_1_fisrt();
 		                    
 		                    props_tJDBCInput_12.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_12_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_12.tableSelection.setValue("tablename",
 		                    "users");
 		                    
 		                    java.util.List<Object> tJDBCInput_12_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_12.trimTable).setValue("trim",tJDBCInput_12_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_12_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_12_trimTable_columnName.add("user_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_12.trimTable).setValue("columnName",tJDBCInput_12_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_12.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_12 = props_tJDBCInput_12.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_12 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_12 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_12 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_12.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_12);
        }
    }
globalMap.put("tJDBCInput_12_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_12);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_12= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_12_MAPPINGS_URL", mappings_url_tJDBCInput_12);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_12 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_12";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_12 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_12 = null;
topology_tJDBCInput_12 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_12 = def_tJDBCInput_12.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_12, topology_tJDBCInput_12);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_12 = def_tJDBCInput_12.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_12 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_12.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_12 = componentRuntime_tJDBCInput_12.initialize(container_tJDBCInput_12, props_tJDBCInput_12);

if (initVr_tJDBCInput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_12.getMessage());
}

if(componentRuntime_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_12 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_12;
	compDriverInitialization_tJDBCInput_12.runAtDriver(container_tJDBCInput_12);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_12 = null;
if(componentRuntime_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_12 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_12;
	if (doesNodeBelongToRequest_tJDBCInput_12) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_12 = sourceOrSink_tJDBCInput_12.validate(container_tJDBCInput_12);
        if (vr_tJDBCInput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_12.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_12 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_12;
        reader_tJDBCInput_12 = source_tJDBCInput_12.createReader(container_tJDBCInput_12);
	    reader_tJDBCInput_12 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_12, container_tJDBCInput_12);

            boolean multi_output_is_allowed_tJDBCInput_12 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_12 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_12.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_12 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_12 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_12 = props_tJDBCInput_12.getSchema(c_tJDBCInput_12, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_12 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_12, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_12 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_12 = reader_tJDBCInput_12.start();

        resourceMap.put("reader_tJDBCInput_12", reader_tJDBCInput_12);

        for (; available_tJDBCInput_12; available_tJDBCInput_12 = reader_tJDBCInput_12.advance()) {
			nb_line_tJDBCInput_12++;

			
			if (multi_output_is_allowed_tJDBCInput_12) {
				
					row58 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_12 = reader_tJDBCInput_12.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_12) {
						row58 = new row58Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_12 == null) {
            factory_tJDBCInput_12 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_12.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_12.setWrapped(factory_tJDBCInput_12.convertToAvro(data_tJDBCInput_12));
                Object columnValue_0_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(0);
                        row58.user_join_id = (String) (columnValue_0_tJDBCInput_12);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_12) {
				java.util.Map<String,Object> info_tJDBCInput_12 = e_tJDBCInput_12.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_12 = null;
					if(info_tJDBCInput_12.containsKey("error")){
						errorMessage_tJDBCInput_12 = info_tJDBCInput_12.get("error");
					}else if(info_tJDBCInput_12.containsKey("errorMessage")){
						errorMessage_tJDBCInput_12 = info_tJDBCInput_12.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_12 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_12 = "Row "+ nb_line_tJDBCInput_12 + ": "+errorMessage_tJDBCInput_12;
					System.err.println(errorMessage_tJDBCInput_12);
				
					// If the record is reject, the main line record should put NULL
					row58 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_12 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_12 = null;


 



/**
 * [tJDBCInput_12 begin ] stop
 */
	
	/**
	 * [tJDBCInput_12 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 


	tos_count_tJDBCInput_12++;

/**
 * [tJDBCInput_12 main ] stop
 */
	
	/**
	 * [tJDBCInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 



/**
 * [tJDBCInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row58 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row58"
						
						);
					}
					


			   
			   

					row58Struct row58_HashRow = new row58Struct();
		   	   	   
				
				row58_HashRow.user_join_id = row58.user_join_id;
				
			tHash_Lookup_row58.put(row58_HashRow);
			
            




 


	tos_count_tAdvancedHash_row58++;

/**
 * [tAdvancedHash_row58 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row58 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";

	

 



/**
 * [tAdvancedHash_row58 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row58 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";

	

 



/**
 * [tAdvancedHash_row58 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 



/**
 * [tJDBCInput_12 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_12 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	
// end of generic


resourceMap.put("finish_tJDBCInput_12", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_12 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_12 = null;
    if (reader_tJDBCInput_12 != null) {
        reader_tJDBCInput_12.close();
        resultMap_tJDBCInput_12 = reader_tJDBCInput_12.getReturnValues();
    }
if(resultMap_tJDBCInput_12!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_12 : resultMap_tJDBCInput_12.entrySet()) {
		switch(entry_tJDBCInput_12.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "ERROR_MESSAGE", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_LINE", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_SUCCESS", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_REJECT", entry_tJDBCInput_12.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_12 = new StringBuilder();
            for (int i_tJDBCInput_12 = 0; i_tJDBCInput_12 < entry_tJDBCInput_12.getKey().length(); i_tJDBCInput_12++) {
                char ch_tJDBCInput_12 = entry_tJDBCInput_12.getKey().charAt(i_tJDBCInput_12);
                if(Character.isUpperCase(ch_tJDBCInput_12) && i_tJDBCInput_12> 0) {
                	studio_key_tJDBCInput_12.append('_');
                }
                studio_key_tJDBCInput_12.append(ch_tJDBCInput_12);
            }
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", studio_key_tJDBCInput_12.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_12.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_12", true);
end_Hash.put("tJDBCInput_12", System.currentTimeMillis());




/**
 * [tJDBCInput_12 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row58 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";

	

tHash_Lookup_row58.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row58");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row58", true);
end_Hash.put("tAdvancedHash_row58", System.currentTimeMillis());




/**
 * [tAdvancedHash_row58 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_12 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_12")==null){
    if(resourceMap.get("reader_tJDBCInput_12")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_12")).close();
		} catch (java.io.IOException e_tJDBCInput_12) {
			String errorMessage_tJDBCInput_12 = "failed to release the resource in tJDBCInput_12 :" + e_tJDBCInput_12.getMessage();
			System.err.println(errorMessage_tJDBCInput_12);
		}
	}
}
 



/**
 * [tJDBCInput_12 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row58 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";

	

 



/**
 * [tAdvancedHash_row58 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row_talendLogs_LOGSStruct implements routines.system.IPersistableRow<row_talendLogs_LOGSStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_ConfigurationSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_ConfigurationSync) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row_talendLogs_LOGSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void talendLogs_LOGSProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row_talendLogs_LOGSStruct row_talendLogs_LOGS = new row_talendLogs_LOGSStruct();




	
	/**
	 * [talendLogs_CONSOLE begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_CONSOLE", false);
		start_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Main");
					}
				
		int tos_count_talendLogs_CONSOLE = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_talendLogs_CONSOLE = "|";
		java.io.PrintStream consoleOut_talendLogs_CONSOLE = null;	

 		StringBuilder strBuffer_talendLogs_CONSOLE = null;
		int nb_line_talendLogs_CONSOLE = 0;
///////////////////////    			



 



/**
 * [talendLogs_CONSOLE begin ] stop
 */



	
	/**
	 * [talendLogs_LOGS begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_LOGS", false);
		start_Hash.put("talendLogs_LOGS", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
		int tos_count_talendLogs_LOGS = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : talendLogs_LOGS.getMessages()) {
		row_talendLogs_LOGS.type = lcm.getType();
		row_talendLogs_LOGS.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row_talendLogs_LOGS.priority = lcm.getPriority();
		row_talendLogs_LOGS.message = lcm.getMessage();
		row_talendLogs_LOGS.code = lcm.getCode();
		
		row_talendLogs_LOGS.moment = java.util.Calendar.getInstance().getTime();
	
    	row_talendLogs_LOGS.pid = pid;
		row_talendLogs_LOGS.root_pid = rootPid;
		row_talendLogs_LOGS.father_pid = fatherPid;
	
    	row_talendLogs_LOGS.project = projectName;
    	row_talendLogs_LOGS.job = jobName;
    	row_talendLogs_LOGS.context = contextStr;
    		
 



/**
 * [talendLogs_LOGS begin ] stop
 */
	
	/**
	 * [talendLogs_LOGS main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 


	tos_count_talendLogs_LOGS++;

/**
 * [talendLogs_LOGS main ] stop
 */
	
	/**
	 * [talendLogs_LOGS process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_begin ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Main"
						
						);
					}
					
///////////////////////		
						



				strBuffer_talendLogs_CONSOLE = new StringBuilder();




   				
	    		if(row_talendLogs_LOGS.moment != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
								FormatterUtils.format_Date(row_talendLogs_LOGS.moment, "yyyy-MM-dd HH:mm:ss")				
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.root_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.root_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.father_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.father_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.project != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.project)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.job != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.job)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.context != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.context)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.priority != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.priority)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.type != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.type)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.origin != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.origin)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.message != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.message)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.code != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.code)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_talendLogs_CONSOLE = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_talendLogs_CONSOLE = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_talendLogs_CONSOLE);
                    }
                    consoleOut_talendLogs_CONSOLE.println(strBuffer_talendLogs_CONSOLE.toString());
                    consoleOut_talendLogs_CONSOLE.flush();
                    nb_line_talendLogs_CONSOLE++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_talendLogs_CONSOLE++;

/**
 * [talendLogs_CONSOLE main ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_begin ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_end ] stop
 */



	
	/**
	 * [talendLogs_LOGS process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_end ] stop
 */
	
	/**
	 * [talendLogs_LOGS end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
	}
} catch (Exception e_talendLogs_LOGS) {
globalMap.put("talendLogs_LOGS_ERROR_MESSAGE",e_talendLogs_LOGS.getMessage());
	logIgnoredError(String.format("talendLogs_LOGS - tLogCatcher failed to process log message(s) due to internal error: %s", e_talendLogs_LOGS), e_talendLogs_LOGS);
}

 

ok_Hash.put("talendLogs_LOGS", true);
end_Hash.put("talendLogs_LOGS", System.currentTimeMillis());




/**
 * [talendLogs_LOGS end ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	


//////
//////
globalMap.put("talendLogs_CONSOLE_NB_LINE",nb_line_talendLogs_CONSOLE);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Main");
			  	}
			  	
 

ok_Hash.put("talendLogs_CONSOLE", true);
end_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());




/**
 * [talendLogs_CONSOLE end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [talendLogs_LOGS finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS finally ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
    	public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
        }

    	public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
        }
    };
    
    private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";
    
    {
    	globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
    }

    public static void main(String[] args){
        final ConfigurationSync ConfigurationSyncClass = new ConfigurationSync();

        int exitCode = ConfigurationSyncClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        if (inOSGi) {
            java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

            if (jobProperties != null && jobProperties.get("context") != null) {
                contextStr = (String)jobProperties.get("context");
            }
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = ConfigurationSync.class.getClassLoader().getResourceAsStream("ovirt_engine_dwh/configurationsync_4_5/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = ConfigurationSync.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("ovirtEngineDbDriverClass", "id_String");
                        if(context.getStringValue("ovirtEngineDbDriverClass") == null) {
                            context.ovirtEngineDbDriverClass = null;
                        } else {
                            context.ovirtEngineDbDriverClass=(String) context.getProperty("ovirtEngineDbDriverClass");
                        }
                        context.setContextType("ovirtEngineDbPassword", "id_Password");
                        if(context.getStringValue("ovirtEngineDbPassword") == null) {
                            context.ovirtEngineDbPassword = null;
                        } else {
                            String pwd_ovirtEngineDbPassword_value = context.getProperty("ovirtEngineDbPassword");
                            context.ovirtEngineDbPassword = null;
                            if(pwd_ovirtEngineDbPassword_value!=null) {
                                if(context_param.containsKey("ovirtEngineDbPassword")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.ovirtEngineDbPassword = pwd_ovirtEngineDbPassword_value;
                                } else if (!pwd_ovirtEngineDbPassword_value.isEmpty()) {
                                    try {
                                        context.ovirtEngineDbPassword = routines.system.PasswordEncryptUtil.decryptPassword(pwd_ovirtEngineDbPassword_value);
                                        context.put("ovirtEngineDbPassword",context.ovirtEngineDbPassword);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("ovirtEngineDbUser", "id_String");
                        if(context.getStringValue("ovirtEngineDbUser") == null) {
                            context.ovirtEngineDbUser = null;
                        } else {
                            context.ovirtEngineDbUser=(String) context.getProperty("ovirtEngineDbUser");
                        }
                        context.setContextType("ovirtEngineDbJdbcConnection", "id_String");
                        if(context.getStringValue("ovirtEngineDbJdbcConnection") == null) {
                            context.ovirtEngineDbJdbcConnection = null;
                        } else {
                            context.ovirtEngineDbJdbcConnection=(String) context.getProperty("ovirtEngineDbJdbcConnection");
                        }
                        context.setContextType("ovirtEngineHistoryDbJdbcConnection", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbJdbcConnection") == null) {
                            context.ovirtEngineHistoryDbJdbcConnection = null;
                        } else {
                            context.ovirtEngineHistoryDbJdbcConnection=(String) context.getProperty("ovirtEngineHistoryDbJdbcConnection");
                        }
                        context.setContextType("ovirtEngineHistoryDbDriverClass", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbDriverClass") == null) {
                            context.ovirtEngineHistoryDbDriverClass = null;
                        } else {
                            context.ovirtEngineHistoryDbDriverClass=(String) context.getProperty("ovirtEngineHistoryDbDriverClass");
                        }
                        context.setContextType("ovirtEngineHistoryDbPassword", "id_Password");
                        if(context.getStringValue("ovirtEngineHistoryDbPassword") == null) {
                            context.ovirtEngineHistoryDbPassword = null;
                        } else {
                            String pwd_ovirtEngineHistoryDbPassword_value = context.getProperty("ovirtEngineHistoryDbPassword");
                            context.ovirtEngineHistoryDbPassword = null;
                            if(pwd_ovirtEngineHistoryDbPassword_value!=null) {
                                if(context_param.containsKey("ovirtEngineHistoryDbPassword")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.ovirtEngineHistoryDbPassword = pwd_ovirtEngineHistoryDbPassword_value;
                                } else if (!pwd_ovirtEngineHistoryDbPassword_value.isEmpty()) {
                                    try {
                                        context.ovirtEngineHistoryDbPassword = routines.system.PasswordEncryptUtil.decryptPassword(pwd_ovirtEngineHistoryDbPassword_value);
                                        context.put("ovirtEngineHistoryDbPassword",context.ovirtEngineHistoryDbPassword);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("ovirtEngineHistoryDbUser", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbUser") == null) {
                            context.ovirtEngineHistoryDbUser = null;
                        } else {
                            context.ovirtEngineHistoryDbUser=(String) context.getProperty("ovirtEngineHistoryDbUser");
                        }
                        context.setContextType("runTime", "id_Date");
                        if(context.getStringValue("runTime") == null) {
                            context.runTime = null;
                        } else {
                            String context_runTime_value = context.getProperty("runTime");
                            try{
                                if (context_runTime_value == null){
                                    context_runTime_value = "";
                                }
                                int context_runTime_pos = context_runTime_value.indexOf(";");
                                String context_runTime_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_runTime_pos > -1){
                                    context_runTime_pattern = context_runTime_value.substring(0, context_runTime_pos);
                                    context_runTime_value = context_runTime_value.substring(context_runTime_pos + 1);
                                }

                                context.runTime=(java.util.Date)(new java.text.SimpleDateFormat(context_runTime_pattern).parse(context_runTime_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_runTime_longValue = Long.valueOf(context_runTime_value);
                                    context.runTime = new java.util.Date(context_runTime_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "runTime", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.runTime=null;
                                }
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("ovirtEngineDbDriverClass")) {
                context.ovirtEngineDbDriverClass = (String) parentContextMap.get("ovirtEngineDbDriverClass");
            }if (parentContextMap.containsKey("ovirtEngineDbPassword")) {
                context.ovirtEngineDbPassword = (java.lang.String) parentContextMap.get("ovirtEngineDbPassword");
            }if (parentContextMap.containsKey("ovirtEngineDbUser")) {
                context.ovirtEngineDbUser = (String) parentContextMap.get("ovirtEngineDbUser");
            }if (parentContextMap.containsKey("ovirtEngineDbJdbcConnection")) {
                context.ovirtEngineDbJdbcConnection = (String) parentContextMap.get("ovirtEngineDbJdbcConnection");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbJdbcConnection")) {
                context.ovirtEngineHistoryDbJdbcConnection = (String) parentContextMap.get("ovirtEngineHistoryDbJdbcConnection");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbDriverClass")) {
                context.ovirtEngineHistoryDbDriverClass = (String) parentContextMap.get("ovirtEngineHistoryDbDriverClass");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbPassword")) {
                context.ovirtEngineHistoryDbPassword = (java.lang.String) parentContextMap.get("ovirtEngineHistoryDbPassword");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbUser")) {
                context.ovirtEngineHistoryDbUser = (String) parentContextMap.get("ovirtEngineHistoryDbUser");
            }if (parentContextMap.containsKey("runTime")) {
                context.runTime = (java.util.Date) parentContextMap.get("runTime");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("ovirtEngineDbPassword");
			parametersToEncrypt.add("ovirtEngineHistoryDbPassword");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_9Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_9) {
globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", -1);

e_tJDBCInput_9.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_9) {
globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_9;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : ConfigurationSync");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tJDBCConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tJDBCConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tJDBCConnection_1", globalMap.get("conn_tJDBCConnection_1"));
            connections.put("conn_tJDBCConnection_2", globalMap.get("conn_tJDBCConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     4118158 characters generated by Talend Open Studio for Data Integration 
 *     on the January 6, 2022 at 1:14:33 PM IST
 ************************************************************************************************/