// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package ovirt_engine_dwh.historydelete_4_5;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.RoutineHistoryETL;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: HistoryDelete Purpose: <br>
 * Description:  <br>
 * @author ydary@redhat.com
 * @version 8.0.1.20211109_1610
 * @status 
 */
public class HistoryDelete implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(timesDeleteRun != null){
				
					this.setProperty("timesDeleteRun", timesDeleteRun.toString());
				
			}
			
			if(deleteIncrement != null){
				
					this.setProperty("deleteIncrement", deleteIncrement.toString());
				
			}
			
			if(deleteMultiplier != null){
				
					this.setProperty("deleteMultiplier", deleteMultiplier.toString());
				
			}
			
			if(hoursToKeepDaily != null){
				
					this.setProperty("hoursToKeepDaily", hoursToKeepDaily.toString());
				
			}
			
			if(hoursToKeepHourly != null){
				
					this.setProperty("hoursToKeepHourly", hoursToKeepHourly.toString());
				
			}
			
			if(hoursToKeepSamples != null){
				
					this.setProperty("hoursToKeepSamples", hoursToKeepSamples.toString());
				
			}
			
			if(limitRows != null){
				
					this.setProperty("limitRows", limitRows.toString());
				
			}
			
			if(ovirtEngineHistoryDbDriverClass != null){
				
					this.setProperty("ovirtEngineHistoryDbDriverClass", ovirtEngineHistoryDbDriverClass.toString());
				
			}
			
			if(ovirtEngineHistoryDbJdbcConnection != null){
				
					this.setProperty("ovirtEngineHistoryDbJdbcConnection", ovirtEngineHistoryDbJdbcConnection.toString());
				
			}
			
			if(ovirtEngineHistoryDbPassword != null){
				
					this.setProperty("ovirtEngineHistoryDbPassword", ovirtEngineHistoryDbPassword.toString());
				
			}
			
			if(ovirtEngineHistoryDbUser != null){
				
					this.setProperty("ovirtEngineHistoryDbUser", ovirtEngineHistoryDbUser.toString());
				
			}
			
			if(runTime != null){
				
					String pattern_runTime = "yyyy-MM-dd HH:mm:ss";
					String value_runTime = "yyyy-MM-dd HH:mm:ss.SSSSSS;2011-07-03 12:46:47.000000";
					String[] parts_runTime = value_runTime.split(";");
					if(parts_runTime.length > 1){
						pattern_runTime = parts_runTime[0];
						this.setProperty("runTime", pattern_runTime + ";" + FormatterUtils.format_Date(runTime, pattern_runTime));
					}else{
						this.setProperty("runTime", FormatterUtils.format_Date(runTime, pattern_runTime));
					}
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public Integer timesDeleteRun;
public Integer getTimesDeleteRun(){
	return this.timesDeleteRun;
}
public Integer deleteIncrement;
public Integer getDeleteIncrement(){
	return this.deleteIncrement;
}
public Integer deleteMultiplier;
public Integer getDeleteMultiplier(){
	return this.deleteMultiplier;
}
public Integer hoursToKeepDaily;
public Integer getHoursToKeepDaily(){
	return this.hoursToKeepDaily;
}
public Integer hoursToKeepHourly;
public Integer getHoursToKeepHourly(){
	return this.hoursToKeepHourly;
}
public Integer hoursToKeepSamples;
public Integer getHoursToKeepSamples(){
	return this.hoursToKeepSamples;
}
public String limitRows;
public String getLimitRows(){
	return this.limitRows;
}
public String ovirtEngineHistoryDbDriverClass;
public String getOvirtEngineHistoryDbDriverClass(){
	return this.ovirtEngineHistoryDbDriverClass;
}
public String ovirtEngineHistoryDbJdbcConnection;
public String getOvirtEngineHistoryDbJdbcConnection(){
	return this.ovirtEngineHistoryDbJdbcConnection;
}
public java.lang.String ovirtEngineHistoryDbPassword;
public java.lang.String getOvirtEngineHistoryDbPassword(){
	return this.ovirtEngineHistoryDbPassword;
}
public String ovirtEngineHistoryDbUser;
public String getOvirtEngineHistoryDbUser(){
	return this.ovirtEngineHistoryDbUser;
}
public java.util.Date runTime;
public java.util.Date getRunTime(){
	return this.runTime;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "4.5";
	private final String jobName = "HistoryDelete";
	private final String projectName = "OVIRT_ENGINE_DWH";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils talendLogs_LOGS = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				HistoryDelete.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(HistoryDelete.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				talendLogs_LOGS.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				talendLogs_LOGSProcess(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tJDBCInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void talendLogs_LOGS_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							talendLogs_CONSOLE_error(exception, errorComponent, globalMap);
						
						}
					
			public void talendLogs_CONSOLE_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					talendLogs_LOGS_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_16_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_17_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_19_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_20_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_21_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_22_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_23_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_24_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_25_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_26_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void talendLogs_LOGS_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	






public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row5Struct other = (row5Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row5Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row5Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();




	
	/**
	 * [tJDBCOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_2", false);
		start_Hash.put("tJDBCOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tJDBCOutput_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_2 = (String)(restRequest_tJDBCOutput_2 != null ? restRequest_tJDBCOutput_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_2 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_2 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_2 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_2.createRuntimeProperties();
 		                    props_tJDBCOutput_2.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_2.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.tableSelection.setValue("tablename",
 		                    "host_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_1_fisrt sst_tJDBCOutput_2_1_fisrt = new SchemaSettingTool_tJDBCOutput_2_1_fisrt();
 		                    
 		                    props_tJDBCOutput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_2_fisrt sst_tJDBCOutput_2_2_fisrt = new SchemaSettingTool_tJDBCOutput_2_2_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_3_fisrt sst_tJDBCOutput_2_3_fisrt = new SchemaSettingTool_tJDBCOutput_2_3_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_2 = props_tJDBCOutput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_2);
        }
    }
globalMap.put("tJDBCOutput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_2_MAPPINGS_URL", mappings_url_tJDBCOutput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_2 = null;
topology_tJDBCOutput_2 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_2 = def_tJDBCOutput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_2, topology_tJDBCOutput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_2 = def_tJDBCOutput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_2 = componentRuntime_tJDBCOutput_2.initialize(container_tJDBCOutput_2, props_tJDBCOutput_2);

if (initVr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_2.getMessage());
}

if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_2;
	compDriverInitialization_tJDBCOutput_2.runAtDriver(container_tJDBCOutput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_2 = null;
if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_2;
	if (doesNodeBelongToRequest_tJDBCOutput_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_2 = sourceOrSink_tJDBCOutput_2.validate(container_tJDBCOutput_2);
        if (vr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_2.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_2 = null;
    if (sourceOrSink_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_2 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_2;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_2 = sink_tJDBCOutput_2.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writeOperation_tJDBCOutput_2.initialize(container_tJDBCOutput_2);
        }
        writer_tJDBCOutput_2 = writeOperation_tJDBCOutput_2.createWriter(container_tJDBCOutput_2);
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writer_tJDBCOutput_2.open("tJDBCOutput_2");
        }

        resourceMap.put("writer_tJDBCOutput_2", writer_tJDBCOutput_2);
    } // end of "sourceOrSink_tJDBCOutput_2 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_2 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_2.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_2 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_2 = props_tJDBCOutput_2.getSchema(c_tJDBCOutput_2, false);
    incomingEnforcer_tJDBCOutput_2 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_2);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_2 = null;


 



/**
 * [tJDBCOutput_2 begin ] stop
 */



	
	/**
	 * [tJDBCInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_2", false);
		start_Hash.put("tJDBCInput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_2";

	
		int tos_count_tJDBCInput_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_2 = (String)(restRequest_tJDBCInput_2 != null ? restRequest_tJDBCInput_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_2 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_2 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_2 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_2.createRuntimeProperties();
 		                    props_tJDBCInput_2.setValue("sql",
 		                    "SELECT history_id\nFROM host_samples_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepSamples * -1,"HH"))+"'"
+ "limit " + (( context.timesDeleteRun - (context.timesDeleteRun % context.deleteIncrement ) ) / context.deleteIncrement + 1)
* context.deleteMultiplier);
 		                    
 		                    props_tJDBCInput_2.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_2.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_2\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_2_1_fisrt sst_tJDBCInput_2_1_fisrt = new SchemaSettingTool_tJDBCInput_2_1_fisrt();
 		                    
 		                    props_tJDBCInput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_2.tableSelection.setValue("tablename",
 		                    "host_samples_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_2_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_2_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_2.trimTable).setValue("trim",tJDBCInput_2_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_2_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_2_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_2.trimTable).setValue("columnName",tJDBCInput_2_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_2 = props_tJDBCInput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_2);
        }
    }
globalMap.put("tJDBCInput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_2_MAPPINGS_URL", mappings_url_tJDBCInput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_2 = null;
topology_tJDBCInput_2 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_2 = def_tJDBCInput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_2, topology_tJDBCInput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_2 = def_tJDBCInput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_2 = componentRuntime_tJDBCInput_2.initialize(container_tJDBCInput_2, props_tJDBCInput_2);

if (initVr_tJDBCInput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_2.getMessage());
}

if(componentRuntime_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_2;
	compDriverInitialization_tJDBCInput_2.runAtDriver(container_tJDBCInput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_2 = null;
if(componentRuntime_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_2;
	if (doesNodeBelongToRequest_tJDBCInput_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_2 = sourceOrSink_tJDBCInput_2.validate(container_tJDBCInput_2);
        if (vr_tJDBCInput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_2.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_2 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_2 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_2;
        reader_tJDBCInput_2 = source_tJDBCInput_2.createReader(container_tJDBCInput_2);
	    reader_tJDBCInput_2 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_2, container_tJDBCInput_2);

            boolean multi_output_is_allowed_tJDBCInput_2 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_2 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_2.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_2 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_2 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_2 = props_tJDBCInput_2.getSchema(c_tJDBCInput_2, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_2 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_2, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_2 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_2 = reader_tJDBCInput_2.start();

        resourceMap.put("reader_tJDBCInput_2", reader_tJDBCInput_2);

        for (; available_tJDBCInput_2; available_tJDBCInput_2 = reader_tJDBCInput_2.advance()) {
			nb_line_tJDBCInput_2++;

			
			if (multi_output_is_allowed_tJDBCInput_2) {
				
					row5 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_2 = reader_tJDBCInput_2.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_2) {
						row5 = new row5Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_2 == null) {
            factory_tJDBCInput_2 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_2.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_2.setWrapped(factory_tJDBCInput_2.convertToAvro(data_tJDBCInput_2));
                Object columnValue_0_tJDBCInput_2 = outgoingEnforcer_tJDBCInput_2.get(0);
                    if (columnValue_0_tJDBCInput_2 == null) {
                        row5.history_id = 0;
                    } else {
                            row5.history_id = (long) (columnValue_0_tJDBCInput_2);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_2) {
				java.util.Map<String,Object> info_tJDBCInput_2 = e_tJDBCInput_2.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_2 = null;
					if(info_tJDBCInput_2.containsKey("error")){
						errorMessage_tJDBCInput_2 = info_tJDBCInput_2.get("error");
					}else if(info_tJDBCInput_2.containsKey("errorMessage")){
						errorMessage_tJDBCInput_2 = info_tJDBCInput_2.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_2 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_2 = "Row "+ nb_line_tJDBCInput_2 + ": "+errorMessage_tJDBCInput_2;
					System.err.println(errorMessage_tJDBCInput_2);
				
					// If the record is reject, the main line record should put NULL
					row5 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_2 = null;


 



/**
 * [tJDBCInput_2 begin ] stop
 */
	
	/**
	 * [tJDBCInput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 


	tos_count_tJDBCInput_2++;

/**
 * [tJDBCInput_2 main ] stop
 */
	
	/**
	 * [tJDBCInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 



/**
 * [tJDBCInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_2 != null) {
            incomingEnforcer_tJDBCOutput_2.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_2.put("history_id", row5.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_2 = null;
        if (incomingEnforcer_tJDBCOutput_2 != null) {
            data_tJDBCOutput_2 = incomingEnforcer_tJDBCOutput_2.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_2 != null && data_tJDBCOutput_2 != null) {
        	writer_tJDBCOutput_2.write(data_tJDBCOutput_2);
        }
        
        nb_line_tJDBCOutput_2++;

 


	tos_count_tJDBCOutput_2++;

/**
 * [tJDBCOutput_2 main ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	


 



/**
 * [tJDBCInput_2 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	
// end of generic


resourceMap.put("finish_tJDBCInput_2", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_2 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_2 = null;
    if (reader_tJDBCInput_2 != null) {
        reader_tJDBCInput_2.close();
        resultMap_tJDBCInput_2 = reader_tJDBCInput_2.getReturnValues();
    }
if(resultMap_tJDBCInput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_2 : resultMap_tJDBCInput_2.entrySet()) {
		switch(entry_tJDBCInput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "ERROR_MESSAGE", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_LINE", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_SUCCESS", entry_tJDBCInput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", "NB_REJECT", entry_tJDBCInput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_2 = new StringBuilder();
            for (int i_tJDBCInput_2 = 0; i_tJDBCInput_2 < entry_tJDBCInput_2.getKey().length(); i_tJDBCInput_2++) {
                char ch_tJDBCInput_2 = entry_tJDBCInput_2.getKey().charAt(i_tJDBCInput_2);
                if(Character.isUpperCase(ch_tJDBCInput_2) && i_tJDBCInput_2> 0) {
                	studio_key_tJDBCInput_2.append('_');
                }
                studio_key_tJDBCInput_2.append(ch_tJDBCInput_2);
            }
			container_tJDBCInput_2.setComponentData("tJDBCInput_2", studio_key_tJDBCInput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_2.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_2", true);
end_Hash.put("tJDBCInput_2", System.currentTimeMillis());




/**
 * [tJDBCInput_2 end ] stop
 */

	
	/**
	 * [tJDBCOutput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_2", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_2 = null;
    if (writer_tJDBCOutput_2 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_2 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_2.close();
        resultMap_tJDBCOutput_2 = writer_tJDBCOutput_2.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_2), container_tJDBCOutput_2);
    }
if(resultMap_tJDBCOutput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_2 : resultMap_tJDBCOutput_2.entrySet()) {
		switch(entry_tJDBCOutput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "ERROR_MESSAGE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_LINE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_SUCCESS", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_REJECT", entry_tJDBCOutput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_2 = new StringBuilder();
            for (int i_tJDBCOutput_2 = 0; i_tJDBCOutput_2 < entry_tJDBCOutput_2.getKey().length(); i_tJDBCOutput_2++) {
                char ch_tJDBCOutput_2 = entry_tJDBCOutput_2.getKey().charAt(i_tJDBCOutput_2);
                if(Character.isUpperCase(ch_tJDBCOutput_2) && i_tJDBCOutput_2> 0) {
                	studio_key_tJDBCOutput_2.append('_');
                }
                studio_key_tJDBCOutput_2.append(ch_tJDBCOutput_2);
            }
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", studio_key_tJDBCOutput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_2.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_2", true);
end_Hash.put("tJDBCOutput_2", System.currentTimeMillis());




/**
 * [tJDBCOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_2")==null){
    if(resourceMap.get("reader_tJDBCInput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_2")).close();
		} catch (java.io.IOException e_tJDBCInput_2) {
			String errorMessage_tJDBCInput_2 = "failed to release the resource in tJDBCInput_2 :" + e_tJDBCInput_2.getMessage();
			System.err.println(errorMessage_tJDBCInput_2);
		}
	}
}
 



/**
 * [tJDBCInput_2 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_2")==null){
    if(resourceMap.get("writer_tJDBCOutput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_2")).close();
		} catch (java.io.IOException e_tJDBCOutput_2) {
			String errorMessage_tJDBCOutput_2 = "failed to release the resource in tJDBCOutput_2 :" + e_tJDBCOutput_2.getMessage();
			System.err.println(errorMessage_tJDBCOutput_2);
		}
	}
}
 



/**
 * [tJDBCOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row4Struct other = (row4Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row4Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row4Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tJDBCOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_3", false);
		start_Hash.put("tJDBCOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tJDBCOutput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_3 = (String)(restRequest_tJDBCOutput_3 != null ? restRequest_tJDBCOutput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_3 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_3 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_3 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_3.createRuntimeProperties();
 		                    props_tJDBCOutput_3.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_3.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.tableSelection.setValue("tablename",
 		                    "host_interface_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_1_fisrt sst_tJDBCOutput_3_1_fisrt = new SchemaSettingTool_tJDBCOutput_3_1_fisrt();
 		                    
 		                    props_tJDBCOutput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_2_fisrt sst_tJDBCOutput_3_2_fisrt = new SchemaSettingTool_tJDBCOutput_3_2_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_3_fisrt sst_tJDBCOutput_3_3_fisrt = new SchemaSettingTool_tJDBCOutput_3_3_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_3 = props_tJDBCOutput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_3);
        }
    }
globalMap.put("tJDBCOutput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_3_MAPPINGS_URL", mappings_url_tJDBCOutput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_3 = null;
topology_tJDBCOutput_3 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_3 = def_tJDBCOutput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_3, topology_tJDBCOutput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_3 = def_tJDBCOutput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_3 = componentRuntime_tJDBCOutput_3.initialize(container_tJDBCOutput_3, props_tJDBCOutput_3);

if (initVr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_3.getMessage());
}

if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_3;
	compDriverInitialization_tJDBCOutput_3.runAtDriver(container_tJDBCOutput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_3 = null;
if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_3;
	if (doesNodeBelongToRequest_tJDBCOutput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_3 = sourceOrSink_tJDBCOutput_3.validate(container_tJDBCOutput_3);
        if (vr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_3.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_3 = null;
    if (sourceOrSink_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_3 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_3;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_3 = sink_tJDBCOutput_3.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writeOperation_tJDBCOutput_3.initialize(container_tJDBCOutput_3);
        }
        writer_tJDBCOutput_3 = writeOperation_tJDBCOutput_3.createWriter(container_tJDBCOutput_3);
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writer_tJDBCOutput_3.open("tJDBCOutput_3");
        }

        resourceMap.put("writer_tJDBCOutput_3", writer_tJDBCOutput_3);
    } // end of "sourceOrSink_tJDBCOutput_3 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_3 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_3.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_3 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_3 = props_tJDBCOutput_3.getSchema(c_tJDBCOutput_3, false);
    incomingEnforcer_tJDBCOutput_3 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_3);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_3 = null;


 



/**
 * [tJDBCOutput_3 begin ] stop
 */



	
	/**
	 * [tJDBCInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_3", false);
		start_Hash.put("tJDBCInput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_3";

	
		int tos_count_tJDBCInput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_3 = (String)(restRequest_tJDBCInput_3 != null ? restRequest_tJDBCInput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_3 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_3 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_3 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_3.createRuntimeProperties();
 		                    props_tJDBCInput_3.setValue("sql",
 		                    "SELECT history_id\nFROM host_interface_samples_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepSamples * -1,"HH"))+"'"
+ "limit " + (( context.timesDeleteRun - (context.timesDeleteRun % context.deleteIncrement ) ) / context.deleteIncrement + 1)
* context.deleteMultiplier);
 		                    
 		                    props_tJDBCInput_3.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_3.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_3\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_3_1_fisrt sst_tJDBCInput_3_1_fisrt = new SchemaSettingTool_tJDBCInput_3_1_fisrt();
 		                    
 		                    props_tJDBCInput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_3.tableSelection.setValue("tablename",
 		                    "host_interface_samples_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("trim",tJDBCInput_3_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_3_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("columnName",tJDBCInput_3_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_3 = props_tJDBCInput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_3);
        }
    }
globalMap.put("tJDBCInput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_3_MAPPINGS_URL", mappings_url_tJDBCInput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_3 = null;
topology_tJDBCInput_3 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_3 = def_tJDBCInput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_3, topology_tJDBCInput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_3 = def_tJDBCInput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_3 = componentRuntime_tJDBCInput_3.initialize(container_tJDBCInput_3, props_tJDBCInput_3);

if (initVr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_3.getMessage());
}

if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_3;
	compDriverInitialization_tJDBCInput_3.runAtDriver(container_tJDBCInput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_3 = null;
if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_3;
	if (doesNodeBelongToRequest_tJDBCInput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_3 = sourceOrSink_tJDBCInput_3.validate(container_tJDBCInput_3);
        if (vr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_3.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_3 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_3;
        reader_tJDBCInput_3 = source_tJDBCInput_3.createReader(container_tJDBCInput_3);
	    reader_tJDBCInput_3 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_3, container_tJDBCInput_3);

            boolean multi_output_is_allowed_tJDBCInput_3 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_3 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_3.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_3 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_3 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_3 = props_tJDBCInput_3.getSchema(c_tJDBCInput_3, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_3 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_3, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_3 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_3 = reader_tJDBCInput_3.start();

        resourceMap.put("reader_tJDBCInput_3", reader_tJDBCInput_3);

        for (; available_tJDBCInput_3; available_tJDBCInput_3 = reader_tJDBCInput_3.advance()) {
			nb_line_tJDBCInput_3++;

			
			if (multi_output_is_allowed_tJDBCInput_3) {
				
					row4 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_3 = reader_tJDBCInput_3.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_3) {
						row4 = new row4Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_3 == null) {
            factory_tJDBCInput_3 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_3.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_3.setWrapped(factory_tJDBCInput_3.convertToAvro(data_tJDBCInput_3));
                Object columnValue_0_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(0);
                    if (columnValue_0_tJDBCInput_3 == null) {
                        row4.history_id = 0;
                    } else {
                            row4.history_id = (long) (columnValue_0_tJDBCInput_3);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_3) {
				java.util.Map<String,Object> info_tJDBCInput_3 = e_tJDBCInput_3.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_3 = null;
					if(info_tJDBCInput_3.containsKey("error")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("error");
					}else if(info_tJDBCInput_3.containsKey("errorMessage")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_3 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_3 = "Row "+ nb_line_tJDBCInput_3 + ": "+errorMessage_tJDBCInput_3;
					System.err.println(errorMessage_tJDBCInput_3);
				
					// If the record is reject, the main line record should put NULL
					row4 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_3 = null;


 



/**
 * [tJDBCInput_3 begin ] stop
 */
	
	/**
	 * [tJDBCInput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 


	tos_count_tJDBCInput_3++;

/**
 * [tJDBCInput_3 main ] stop
 */
	
	/**
	 * [tJDBCInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_3 != null) {
            incomingEnforcer_tJDBCOutput_3.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("history_id", row4.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_3 = null;
        if (incomingEnforcer_tJDBCOutput_3 != null) {
            data_tJDBCOutput_3 = incomingEnforcer_tJDBCOutput_3.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_3 != null && data_tJDBCOutput_3 != null) {
        	writer_tJDBCOutput_3.write(data_tJDBCOutput_3);
        }
        
        nb_line_tJDBCOutput_3++;

 


	tos_count_tJDBCOutput_3++;

/**
 * [tJDBCOutput_3 main ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// end of generic


resourceMap.put("finish_tJDBCInput_3", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_3 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_3 = null;
    if (reader_tJDBCInput_3 != null) {
        reader_tJDBCInput_3.close();
        resultMap_tJDBCInput_3 = reader_tJDBCInput_3.getReturnValues();
    }
if(resultMap_tJDBCInput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_3 : resultMap_tJDBCInput_3.entrySet()) {
		switch(entry_tJDBCInput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "ERROR_MESSAGE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_LINE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_SUCCESS", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_REJECT", entry_tJDBCInput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_3 = new StringBuilder();
            for (int i_tJDBCInput_3 = 0; i_tJDBCInput_3 < entry_tJDBCInput_3.getKey().length(); i_tJDBCInput_3++) {
                char ch_tJDBCInput_3 = entry_tJDBCInput_3.getKey().charAt(i_tJDBCInput_3);
                if(Character.isUpperCase(ch_tJDBCInput_3) && i_tJDBCInput_3> 0) {
                	studio_key_tJDBCInput_3.append('_');
                }
                studio_key_tJDBCInput_3.append(ch_tJDBCInput_3);
            }
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", studio_key_tJDBCInput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_3.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_3", true);
end_Hash.put("tJDBCInput_3", System.currentTimeMillis());




/**
 * [tJDBCInput_3 end ] stop
 */

	
	/**
	 * [tJDBCOutput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_3", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_3 = null;
    if (writer_tJDBCOutput_3 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_3 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_3.close();
        resultMap_tJDBCOutput_3 = writer_tJDBCOutput_3.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_3), container_tJDBCOutput_3);
    }
if(resultMap_tJDBCOutput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_3 : resultMap_tJDBCOutput_3.entrySet()) {
		switch(entry_tJDBCOutput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "ERROR_MESSAGE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_LINE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_SUCCESS", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_REJECT", entry_tJDBCOutput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_3 = new StringBuilder();
            for (int i_tJDBCOutput_3 = 0; i_tJDBCOutput_3 < entry_tJDBCOutput_3.getKey().length(); i_tJDBCOutput_3++) {
                char ch_tJDBCOutput_3 = entry_tJDBCOutput_3.getKey().charAt(i_tJDBCOutput_3);
                if(Character.isUpperCase(ch_tJDBCOutput_3) && i_tJDBCOutput_3> 0) {
                	studio_key_tJDBCOutput_3.append('_');
                }
                studio_key_tJDBCOutput_3.append(ch_tJDBCOutput_3);
            }
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", studio_key_tJDBCOutput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_3.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_3", true);
end_Hash.put("tJDBCOutput_3", System.currentTimeMillis());




/**
 * [tJDBCOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_3")==null){
    if(resourceMap.get("reader_tJDBCInput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_3")).close();
		} catch (java.io.IOException e_tJDBCInput_3) {
			String errorMessage_tJDBCInput_3 = "failed to release the resource in tJDBCInput_3 :" + e_tJDBCInput_3.getMessage();
			System.err.println(errorMessage_tJDBCInput_3);
		}
	}
}
 



/**
 * [tJDBCInput_3 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_3")==null){
    if(resourceMap.get("writer_tJDBCOutput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_3")).close();
		} catch (java.io.IOException e_tJDBCOutput_3) {
			String errorMessage_tJDBCOutput_3 = "failed to release the resource in tJDBCOutput_3 :" + e_tJDBCOutput_3.getMessage();
			System.err.println(errorMessage_tJDBCOutput_3);
		}
	}
}
 



/**
 * [tJDBCOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row3Struct other = (row3Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row3Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row3Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tJDBCOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_4", false);
		start_Hash.put("tJDBCOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tJDBCOutput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_4 = (String)(restRequest_tJDBCOutput_4 != null ? restRequest_tJDBCOutput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_4 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_4 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_4 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_4.createRuntimeProperties();
 		                    props_tJDBCOutput_4.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_4.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.tableSelection.setValue("tablename",
 		                    "vm_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_1_fisrt sst_tJDBCOutput_4_1_fisrt = new SchemaSettingTool_tJDBCOutput_4_1_fisrt();
 		                    
 		                    props_tJDBCOutput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_2_fisrt sst_tJDBCOutput_4_2_fisrt = new SchemaSettingTool_tJDBCOutput_4_2_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_3_fisrt sst_tJDBCOutput_4_3_fisrt = new SchemaSettingTool_tJDBCOutput_4_3_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_4 = props_tJDBCOutput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_4);
        }
    }
globalMap.put("tJDBCOutput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_4_MAPPINGS_URL", mappings_url_tJDBCOutput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_4 = null;
topology_tJDBCOutput_4 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_4 = def_tJDBCOutput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_4, topology_tJDBCOutput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_4 = def_tJDBCOutput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_4 = componentRuntime_tJDBCOutput_4.initialize(container_tJDBCOutput_4, props_tJDBCOutput_4);

if (initVr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_4.getMessage());
}

if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_4;
	compDriverInitialization_tJDBCOutput_4.runAtDriver(container_tJDBCOutput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_4 = null;
if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_4;
	if (doesNodeBelongToRequest_tJDBCOutput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_4 = sourceOrSink_tJDBCOutput_4.validate(container_tJDBCOutput_4);
        if (vr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_4.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_4 = null;
    if (sourceOrSink_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_4 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_4;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_4 = sink_tJDBCOutput_4.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writeOperation_tJDBCOutput_4.initialize(container_tJDBCOutput_4);
        }
        writer_tJDBCOutput_4 = writeOperation_tJDBCOutput_4.createWriter(container_tJDBCOutput_4);
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writer_tJDBCOutput_4.open("tJDBCOutput_4");
        }

        resourceMap.put("writer_tJDBCOutput_4", writer_tJDBCOutput_4);
    } // end of "sourceOrSink_tJDBCOutput_4 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_4 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_4.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_4 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_4 = props_tJDBCOutput_4.getSchema(c_tJDBCOutput_4, false);
    incomingEnforcer_tJDBCOutput_4 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_4);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_4 = null;


 



/**
 * [tJDBCOutput_4 begin ] stop
 */



	
	/**
	 * [tJDBCInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_4", false);
		start_Hash.put("tJDBCInput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_4";

	
		int tos_count_tJDBCInput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_4 = (String)(restRequest_tJDBCInput_4 != null ? restRequest_tJDBCInput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_4 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_4 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_4 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_4.createRuntimeProperties();
 		                    props_tJDBCInput_4.setValue("sql",
 		                    "SELECT history_id\nFROM vm_samples_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepSamples * -1,"HH"))+"'"
+ "limit " + (( context.timesDeleteRun - (context.timesDeleteRun % context.deleteIncrement ) ) / context.deleteIncrement + 1)
* context.deleteMultiplier);
 		                    
 		                    props_tJDBCInput_4.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_4.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_4\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_4_1_fisrt sst_tJDBCInput_4_1_fisrt = new SchemaSettingTool_tJDBCInput_4_1_fisrt();
 		                    
 		                    props_tJDBCInput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_4.tableSelection.setValue("tablename",
 		                    "vm_samples_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("trim",tJDBCInput_4_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_4_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("columnName",tJDBCInput_4_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_4 = props_tJDBCInput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_4);
        }
    }
globalMap.put("tJDBCInput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_4_MAPPINGS_URL", mappings_url_tJDBCInput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_4 = null;
topology_tJDBCInput_4 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_4 = def_tJDBCInput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_4, topology_tJDBCInput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_4 = def_tJDBCInput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_4 = componentRuntime_tJDBCInput_4.initialize(container_tJDBCInput_4, props_tJDBCInput_4);

if (initVr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_4.getMessage());
}

if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_4;
	compDriverInitialization_tJDBCInput_4.runAtDriver(container_tJDBCInput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_4 = null;
if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_4;
	if (doesNodeBelongToRequest_tJDBCInput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_4 = sourceOrSink_tJDBCInput_4.validate(container_tJDBCInput_4);
        if (vr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_4.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_4 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_4;
        reader_tJDBCInput_4 = source_tJDBCInput_4.createReader(container_tJDBCInput_4);
	    reader_tJDBCInput_4 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_4, container_tJDBCInput_4);

            boolean multi_output_is_allowed_tJDBCInput_4 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_4 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_4.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_4 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_4 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_4 = props_tJDBCInput_4.getSchema(c_tJDBCInput_4, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_4 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_4, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_4 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_4 = reader_tJDBCInput_4.start();

        resourceMap.put("reader_tJDBCInput_4", reader_tJDBCInput_4);

        for (; available_tJDBCInput_4; available_tJDBCInput_4 = reader_tJDBCInput_4.advance()) {
			nb_line_tJDBCInput_4++;

			
			if (multi_output_is_allowed_tJDBCInput_4) {
				
					row3 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_4 = reader_tJDBCInput_4.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_4) {
						row3 = new row3Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_4 == null) {
            factory_tJDBCInput_4 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_4.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_4.setWrapped(factory_tJDBCInput_4.convertToAvro(data_tJDBCInput_4));
                Object columnValue_0_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(0);
                    if (columnValue_0_tJDBCInput_4 == null) {
                        row3.history_id = 0;
                    } else {
                            row3.history_id = (long) (columnValue_0_tJDBCInput_4);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_4) {
				java.util.Map<String,Object> info_tJDBCInput_4 = e_tJDBCInput_4.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_4 = null;
					if(info_tJDBCInput_4.containsKey("error")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("error");
					}else if(info_tJDBCInput_4.containsKey("errorMessage")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_4 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_4 = "Row "+ nb_line_tJDBCInput_4 + ": "+errorMessage_tJDBCInput_4;
					System.err.println(errorMessage_tJDBCInput_4);
				
					// If the record is reject, the main line record should put NULL
					row3 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_4 = null;


 



/**
 * [tJDBCInput_4 begin ] stop
 */
	
	/**
	 * [tJDBCInput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 


	tos_count_tJDBCInput_4++;

/**
 * [tJDBCInput_4 main ] stop
 */
	
	/**
	 * [tJDBCInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_4 != null) {
            incomingEnforcer_tJDBCOutput_4.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("history_id", row3.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_4 = null;
        if (incomingEnforcer_tJDBCOutput_4 != null) {
            data_tJDBCOutput_4 = incomingEnforcer_tJDBCOutput_4.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_4 != null && data_tJDBCOutput_4 != null) {
        	writer_tJDBCOutput_4.write(data_tJDBCOutput_4);
        }
        
        nb_line_tJDBCOutput_4++;

 


	tos_count_tJDBCOutput_4++;

/**
 * [tJDBCOutput_4 main ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// end of generic


resourceMap.put("finish_tJDBCInput_4", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_4 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_4 = null;
    if (reader_tJDBCInput_4 != null) {
        reader_tJDBCInput_4.close();
        resultMap_tJDBCInput_4 = reader_tJDBCInput_4.getReturnValues();
    }
if(resultMap_tJDBCInput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_4 : resultMap_tJDBCInput_4.entrySet()) {
		switch(entry_tJDBCInput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "ERROR_MESSAGE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_LINE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_SUCCESS", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_REJECT", entry_tJDBCInput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_4 = new StringBuilder();
            for (int i_tJDBCInput_4 = 0; i_tJDBCInput_4 < entry_tJDBCInput_4.getKey().length(); i_tJDBCInput_4++) {
                char ch_tJDBCInput_4 = entry_tJDBCInput_4.getKey().charAt(i_tJDBCInput_4);
                if(Character.isUpperCase(ch_tJDBCInput_4) && i_tJDBCInput_4> 0) {
                	studio_key_tJDBCInput_4.append('_');
                }
                studio_key_tJDBCInput_4.append(ch_tJDBCInput_4);
            }
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", studio_key_tJDBCInput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_4.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_4", true);
end_Hash.put("tJDBCInput_4", System.currentTimeMillis());




/**
 * [tJDBCInput_4 end ] stop
 */

	
	/**
	 * [tJDBCOutput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_4", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_4 = null;
    if (writer_tJDBCOutput_4 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_4 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_4.close();
        resultMap_tJDBCOutput_4 = writer_tJDBCOutput_4.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_4), container_tJDBCOutput_4);
    }
if(resultMap_tJDBCOutput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_4 : resultMap_tJDBCOutput_4.entrySet()) {
		switch(entry_tJDBCOutput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "ERROR_MESSAGE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_LINE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_SUCCESS", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_REJECT", entry_tJDBCOutput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_4 = new StringBuilder();
            for (int i_tJDBCOutput_4 = 0; i_tJDBCOutput_4 < entry_tJDBCOutput_4.getKey().length(); i_tJDBCOutput_4++) {
                char ch_tJDBCOutput_4 = entry_tJDBCOutput_4.getKey().charAt(i_tJDBCOutput_4);
                if(Character.isUpperCase(ch_tJDBCOutput_4) && i_tJDBCOutput_4> 0) {
                	studio_key_tJDBCOutput_4.append('_');
                }
                studio_key_tJDBCOutput_4.append(ch_tJDBCOutput_4);
            }
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", studio_key_tJDBCOutput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_4.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_4", true);
end_Hash.put("tJDBCOutput_4", System.currentTimeMillis());




/**
 * [tJDBCOutput_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_4")==null){
    if(resourceMap.get("reader_tJDBCInput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_4")).close();
		} catch (java.io.IOException e_tJDBCInput_4) {
			String errorMessage_tJDBCInput_4 = "failed to release the resource in tJDBCInput_4 :" + e_tJDBCInput_4.getMessage();
			System.err.println(errorMessage_tJDBCInput_4);
		}
	}
}
 



/**
 * [tJDBCInput_4 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_4")==null){
    if(resourceMap.get("writer_tJDBCOutput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_4")).close();
		} catch (java.io.IOException e_tJDBCOutput_4) {
			String errorMessage_tJDBCOutput_4 = "failed to release the resource in tJDBCOutput_4 :" + e_tJDBCOutput_4.getMessage();
			System.err.println(errorMessage_tJDBCOutput_4);
		}
	}
}
 



/**
 * [tJDBCOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row2Struct other = (row2Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row2Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row2Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();




	
	/**
	 * [tJDBCOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_5", false);
		start_Hash.put("tJDBCOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJDBCOutput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_5 = (String)(restRequest_tJDBCOutput_5 != null ? restRequest_tJDBCOutput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_5 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_5 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_5 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_5.createRuntimeProperties();
 		                    props_tJDBCOutput_5.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_5.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.tableSelection.setValue("tablename",
 		                    "vm_interface_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_1_fisrt sst_tJDBCOutput_5_1_fisrt = new SchemaSettingTool_tJDBCOutput_5_1_fisrt();
 		                    
 		                    props_tJDBCOutput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_2_fisrt sst_tJDBCOutput_5_2_fisrt = new SchemaSettingTool_tJDBCOutput_5_2_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_3_fisrt sst_tJDBCOutput_5_3_fisrt = new SchemaSettingTool_tJDBCOutput_5_3_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_5 = props_tJDBCOutput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_5);
        }
    }
globalMap.put("tJDBCOutput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_5_MAPPINGS_URL", mappings_url_tJDBCOutput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_5 = null;
topology_tJDBCOutput_5 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_5 = def_tJDBCOutput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_5, topology_tJDBCOutput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_5 = def_tJDBCOutput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_5 = componentRuntime_tJDBCOutput_5.initialize(container_tJDBCOutput_5, props_tJDBCOutput_5);

if (initVr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_5.getMessage());
}

if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_5;
	compDriverInitialization_tJDBCOutput_5.runAtDriver(container_tJDBCOutput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_5 = null;
if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_5;
	if (doesNodeBelongToRequest_tJDBCOutput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_5 = sourceOrSink_tJDBCOutput_5.validate(container_tJDBCOutput_5);
        if (vr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_5.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_5 = null;
    if (sourceOrSink_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_5 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_5;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_5 = sink_tJDBCOutput_5.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writeOperation_tJDBCOutput_5.initialize(container_tJDBCOutput_5);
        }
        writer_tJDBCOutput_5 = writeOperation_tJDBCOutput_5.createWriter(container_tJDBCOutput_5);
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writer_tJDBCOutput_5.open("tJDBCOutput_5");
        }

        resourceMap.put("writer_tJDBCOutput_5", writer_tJDBCOutput_5);
    } // end of "sourceOrSink_tJDBCOutput_5 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_5 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_5.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_5 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_5 = props_tJDBCOutput_5.getSchema(c_tJDBCOutput_5, false);
    incomingEnforcer_tJDBCOutput_5 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_5);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_5 = null;


 



/**
 * [tJDBCOutput_5 begin ] stop
 */



	
	/**
	 * [tJDBCInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_5", false);
		start_Hash.put("tJDBCInput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_5";

	
		int tos_count_tJDBCInput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_5 = (String)(restRequest_tJDBCInput_5 != null ? restRequest_tJDBCInput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_5 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_5 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_5 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_5.createRuntimeProperties();
 		                    props_tJDBCInput_5.setValue("sql",
 		                    "SELECT history_id\nFROM vm_interface_samples_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepSamples * -1,"HH"))+"'"
+ "limit " + (( context.timesDeleteRun - (context.timesDeleteRun % context.deleteIncrement ) ) / context.deleteIncrement + 1)
* context.deleteMultiplier);
 		                    
 		                    props_tJDBCInput_5.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_5.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_5\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_5_1_fisrt sst_tJDBCInput_5_1_fisrt = new SchemaSettingTool_tJDBCInput_5_1_fisrt();
 		                    
 		                    props_tJDBCInput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_5.tableSelection.setValue("tablename",
 		                    "vm_interface_samples_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("trim",tJDBCInput_5_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_5_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("columnName",tJDBCInput_5_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_5 = props_tJDBCInput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_5);
        }
    }
globalMap.put("tJDBCInput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_5_MAPPINGS_URL", mappings_url_tJDBCInput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_5 = null;
topology_tJDBCInput_5 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_5 = def_tJDBCInput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_5, topology_tJDBCInput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_5 = def_tJDBCInput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_5 = componentRuntime_tJDBCInput_5.initialize(container_tJDBCInput_5, props_tJDBCInput_5);

if (initVr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_5.getMessage());
}

if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_5;
	compDriverInitialization_tJDBCInput_5.runAtDriver(container_tJDBCInput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_5 = null;
if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_5;
	if (doesNodeBelongToRequest_tJDBCInput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_5 = sourceOrSink_tJDBCInput_5.validate(container_tJDBCInput_5);
        if (vr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_5.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_5 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_5;
        reader_tJDBCInput_5 = source_tJDBCInput_5.createReader(container_tJDBCInput_5);
	    reader_tJDBCInput_5 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_5, container_tJDBCInput_5);

            boolean multi_output_is_allowed_tJDBCInput_5 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_5 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_5.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_5 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_5 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_5 = props_tJDBCInput_5.getSchema(c_tJDBCInput_5, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_5 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_5, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_5 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_5 = reader_tJDBCInput_5.start();

        resourceMap.put("reader_tJDBCInput_5", reader_tJDBCInput_5);

        for (; available_tJDBCInput_5; available_tJDBCInput_5 = reader_tJDBCInput_5.advance()) {
			nb_line_tJDBCInput_5++;

			
			if (multi_output_is_allowed_tJDBCInput_5) {
				
					row2 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_5 = reader_tJDBCInput_5.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_5) {
						row2 = new row2Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_5 == null) {
            factory_tJDBCInput_5 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_5.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_5.setWrapped(factory_tJDBCInput_5.convertToAvro(data_tJDBCInput_5));
                Object columnValue_0_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(0);
                    if (columnValue_0_tJDBCInput_5 == null) {
                        row2.history_id = 0;
                    } else {
                            row2.history_id = (long) (columnValue_0_tJDBCInput_5);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_5) {
				java.util.Map<String,Object> info_tJDBCInput_5 = e_tJDBCInput_5.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_5 = null;
					if(info_tJDBCInput_5.containsKey("error")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("error");
					}else if(info_tJDBCInput_5.containsKey("errorMessage")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_5 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_5 = "Row "+ nb_line_tJDBCInput_5 + ": "+errorMessage_tJDBCInput_5;
					System.err.println(errorMessage_tJDBCInput_5);
				
					// If the record is reject, the main line record should put NULL
					row2 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_5 = null;


 



/**
 * [tJDBCInput_5 begin ] stop
 */
	
	/**
	 * [tJDBCInput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 


	tos_count_tJDBCInput_5++;

/**
 * [tJDBCInput_5 main ] stop
 */
	
	/**
	 * [tJDBCInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_5 != null) {
            incomingEnforcer_tJDBCOutput_5.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("history_id", row2.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_5 = null;
        if (incomingEnforcer_tJDBCOutput_5 != null) {
            data_tJDBCOutput_5 = incomingEnforcer_tJDBCOutput_5.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_5 != null && data_tJDBCOutput_5 != null) {
        	writer_tJDBCOutput_5.write(data_tJDBCOutput_5);
        }
        
        nb_line_tJDBCOutput_5++;

 


	tos_count_tJDBCOutput_5++;

/**
 * [tJDBCOutput_5 main ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// end of generic


resourceMap.put("finish_tJDBCInput_5", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_5 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_5 = null;
    if (reader_tJDBCInput_5 != null) {
        reader_tJDBCInput_5.close();
        resultMap_tJDBCInput_5 = reader_tJDBCInput_5.getReturnValues();
    }
if(resultMap_tJDBCInput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_5 : resultMap_tJDBCInput_5.entrySet()) {
		switch(entry_tJDBCInput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "ERROR_MESSAGE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_LINE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_SUCCESS", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_REJECT", entry_tJDBCInput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_5 = new StringBuilder();
            for (int i_tJDBCInput_5 = 0; i_tJDBCInput_5 < entry_tJDBCInput_5.getKey().length(); i_tJDBCInput_5++) {
                char ch_tJDBCInput_5 = entry_tJDBCInput_5.getKey().charAt(i_tJDBCInput_5);
                if(Character.isUpperCase(ch_tJDBCInput_5) && i_tJDBCInput_5> 0) {
                	studio_key_tJDBCInput_5.append('_');
                }
                studio_key_tJDBCInput_5.append(ch_tJDBCInput_5);
            }
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", studio_key_tJDBCInput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_5.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_5", true);
end_Hash.put("tJDBCInput_5", System.currentTimeMillis());




/**
 * [tJDBCInput_5 end ] stop
 */

	
	/**
	 * [tJDBCOutput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_5", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_5 = null;
    if (writer_tJDBCOutput_5 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_5 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_5.close();
        resultMap_tJDBCOutput_5 = writer_tJDBCOutput_5.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_5), container_tJDBCOutput_5);
    }
if(resultMap_tJDBCOutput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_5 : resultMap_tJDBCOutput_5.entrySet()) {
		switch(entry_tJDBCOutput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "ERROR_MESSAGE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_LINE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_SUCCESS", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_REJECT", entry_tJDBCOutput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_5 = new StringBuilder();
            for (int i_tJDBCOutput_5 = 0; i_tJDBCOutput_5 < entry_tJDBCOutput_5.getKey().length(); i_tJDBCOutput_5++) {
                char ch_tJDBCOutput_5 = entry_tJDBCOutput_5.getKey().charAt(i_tJDBCOutput_5);
                if(Character.isUpperCase(ch_tJDBCOutput_5) && i_tJDBCOutput_5> 0) {
                	studio_key_tJDBCOutput_5.append('_');
                }
                studio_key_tJDBCOutput_5.append(ch_tJDBCOutput_5);
            }
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", studio_key_tJDBCOutput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_5.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_5", true);
end_Hash.put("tJDBCOutput_5", System.currentTimeMillis());




/**
 * [tJDBCOutput_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_5")==null){
    if(resourceMap.get("reader_tJDBCInput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_5")).close();
		} catch (java.io.IOException e_tJDBCInput_5) {
			String errorMessage_tJDBCInput_5 = "failed to release the resource in tJDBCInput_5 :" + e_tJDBCInput_5.getMessage();
			System.err.println(errorMessage_tJDBCInput_5);
		}
	}
}
 



/**
 * [tJDBCInput_5 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_5")==null){
    if(resourceMap.get("writer_tJDBCOutput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_5")).close();
		} catch (java.io.IOException e_tJDBCOutput_5) {
			String errorMessage_tJDBCOutput_5 = "failed to release the resource in tJDBCOutput_5 :" + e_tJDBCOutput_5.getMessage();
			System.err.println(errorMessage_tJDBCOutput_5);
		}
	}
}
 



/**
 * [tJDBCOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tJDBCOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_7", false);
		start_Hash.put("tJDBCOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_7";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tJDBCOutput_7 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_7 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_7 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_7 = (String)(restRequest_tJDBCOutput_7 != null ? restRequest_tJDBCOutput_7.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_7 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_7 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_7 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_7 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_7.createRuntimeProperties();
 		                    props_tJDBCOutput_7.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_7.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_7.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_7.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_7.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.tableSelection.setValue("tablename",
 		                    "host_hourly_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_1_fisrt sst_tJDBCOutput_7_1_fisrt = new SchemaSettingTool_tJDBCOutput_7_1_fisrt();
 		                    
 		                    props_tJDBCOutput_7.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_2_fisrt sst_tJDBCOutput_7_2_fisrt = new SchemaSettingTool_tJDBCOutput_7_2_fisrt();
 		                    
 		                    props_tJDBCOutput_7.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_3_fisrt sst_tJDBCOutput_7_3_fisrt = new SchemaSettingTool_tJDBCOutput_7_3_fisrt();
 		                    
 		                    props_tJDBCOutput_7.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_7.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_7.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_7.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_7 = props_tJDBCOutput_7.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_7 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_7 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_7 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_7.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_7);
        }
    }
globalMap.put("tJDBCOutput_7_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_7);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_7= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_7_MAPPINGS_URL", mappings_url_tJDBCOutput_7);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_7 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_7";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_7 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_7 = null;
topology_tJDBCOutput_7 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_7 = def_tJDBCOutput_7.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_7, topology_tJDBCOutput_7);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_7 = def_tJDBCOutput_7.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_7 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_7.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_7 = componentRuntime_tJDBCOutput_7.initialize(container_tJDBCOutput_7, props_tJDBCOutput_7);

if (initVr_tJDBCOutput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_7.getMessage());
}

if(componentRuntime_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_7 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_7;
	compDriverInitialization_tJDBCOutput_7.runAtDriver(container_tJDBCOutput_7);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_7 = null;
if(componentRuntime_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_7 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_7;
	if (doesNodeBelongToRequest_tJDBCOutput_7) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_7 = sourceOrSink_tJDBCOutput_7.validate(container_tJDBCOutput_7);
        if (vr_tJDBCOutput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_7.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_7 = null;
    if (sourceOrSink_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_7 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_7;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_7 = sink_tJDBCOutput_7.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_7) {
            writeOperation_tJDBCOutput_7.initialize(container_tJDBCOutput_7);
        }
        writer_tJDBCOutput_7 = writeOperation_tJDBCOutput_7.createWriter(container_tJDBCOutput_7);
        if (doesNodeBelongToRequest_tJDBCOutput_7) {
            writer_tJDBCOutput_7.open("tJDBCOutput_7");
        }

        resourceMap.put("writer_tJDBCOutput_7", writer_tJDBCOutput_7);
    } // end of "sourceOrSink_tJDBCOutput_7 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_7 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_7.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_7 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_7 = props_tJDBCOutput_7.getSchema(c_tJDBCOutput_7, false);
    incomingEnforcer_tJDBCOutput_7 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_7);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_7 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_7 = null;


 



/**
 * [tJDBCOutput_7 begin ] stop
 */



	
	/**
	 * [tJDBCInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_7", false);
		start_Hash.put("tJDBCInput_7", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_7";

	
		int tos_count_tJDBCInput_7 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_7 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_7 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_7 = (String)(restRequest_tJDBCInput_7 != null ? restRequest_tJDBCInput_7.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_7 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_7 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_7 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_7 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_7.createRuntimeProperties();
 		                    props_tJDBCInput_7.setValue("sql",
 		                    "SELECT history_id\nFROM host_hourly_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_7.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_7.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_7.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_7.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_7.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_7.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_7_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_7\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_7_1_fisrt sst_tJDBCInput_7_1_fisrt = new SchemaSettingTool_tJDBCInput_7_1_fisrt();
 		                    
 		                    props_tJDBCInput_7.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_7_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_7.tableSelection.setValue("tablename",
 		                    "host_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_7_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_7_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_7.trimTable).setValue("trim",tJDBCInput_7_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_7_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_7_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_7.trimTable).setValue("columnName",tJDBCInput_7_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_7.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_7 = props_tJDBCInput_7.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_7 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_7 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_7 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_7.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_7);
        }
    }
globalMap.put("tJDBCInput_7_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_7);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_7= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_7_MAPPINGS_URL", mappings_url_tJDBCInput_7);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_7 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_7";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_7 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_7 = null;
topology_tJDBCInput_7 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_7 = def_tJDBCInput_7.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_7, topology_tJDBCInput_7);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_7 = def_tJDBCInput_7.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_7 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_7.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_7 = componentRuntime_tJDBCInput_7.initialize(container_tJDBCInput_7, props_tJDBCInput_7);

if (initVr_tJDBCInput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_7.getMessage());
}

if(componentRuntime_tJDBCInput_7 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_7 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_7;
	compDriverInitialization_tJDBCInput_7.runAtDriver(container_tJDBCInput_7);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_7 = null;
if(componentRuntime_tJDBCInput_7 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_7 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_7;
	if (doesNodeBelongToRequest_tJDBCInput_7) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_7 = sourceOrSink_tJDBCInput_7.validate(container_tJDBCInput_7);
        if (vr_tJDBCInput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_7.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_7 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_7 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_7;
        reader_tJDBCInput_7 = source_tJDBCInput_7.createReader(container_tJDBCInput_7);
	    reader_tJDBCInput_7 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_7, container_tJDBCInput_7);

            boolean multi_output_is_allowed_tJDBCInput_7 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_7 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_7.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_7 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_7 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_7 = props_tJDBCInput_7.getSchema(c_tJDBCInput_7, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_7 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_7, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_7 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_7 = reader_tJDBCInput_7.start();

        resourceMap.put("reader_tJDBCInput_7", reader_tJDBCInput_7);

        for (; available_tJDBCInput_7; available_tJDBCInput_7 = reader_tJDBCInput_7.advance()) {
			nb_line_tJDBCInput_7++;

			
			if (multi_output_is_allowed_tJDBCInput_7) {
				
					row8 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_7 = reader_tJDBCInput_7.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_7) {
						row8 = new row8Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_7 == null) {
            factory_tJDBCInput_7 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_7.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_7.setWrapped(factory_tJDBCInput_7.convertToAvro(data_tJDBCInput_7));
                Object columnValue_0_tJDBCInput_7 = outgoingEnforcer_tJDBCInput_7.get(0);
                    if (columnValue_0_tJDBCInput_7 == null) {
                        row8.history_id = 0;
                    } else {
                            row8.history_id = (long) (columnValue_0_tJDBCInput_7);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_7) {
				java.util.Map<String,Object> info_tJDBCInput_7 = e_tJDBCInput_7.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_7 = null;
					if(info_tJDBCInput_7.containsKey("error")){
						errorMessage_tJDBCInput_7 = info_tJDBCInput_7.get("error");
					}else if(info_tJDBCInput_7.containsKey("errorMessage")){
						errorMessage_tJDBCInput_7 = info_tJDBCInput_7.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_7 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_7 = "Row "+ nb_line_tJDBCInput_7 + ": "+errorMessage_tJDBCInput_7;
					System.err.println(errorMessage_tJDBCInput_7);
				
					// If the record is reject, the main line record should put NULL
					row8 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_7 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_7 = null;


 



/**
 * [tJDBCInput_7 begin ] stop
 */
	
	/**
	 * [tJDBCInput_7 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	


 


	tos_count_tJDBCInput_7++;

/**
 * [tJDBCInput_7 main ] stop
 */
	
	/**
	 * [tJDBCInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	


 



/**
 * [tJDBCInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_7 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_7 != null) {
            incomingEnforcer_tJDBCOutput_7.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_7.put("history_id", row8.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_7 = null;
        if (incomingEnforcer_tJDBCOutput_7 != null) {
            data_tJDBCOutput_7 = incomingEnforcer_tJDBCOutput_7.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_7 != null && data_tJDBCOutput_7 != null) {
        	writer_tJDBCOutput_7.write(data_tJDBCOutput_7);
        }
        
        nb_line_tJDBCOutput_7++;

 


	tos_count_tJDBCOutput_7++;

/**
 * [tJDBCOutput_7 main ] stop
 */
	
	/**
	 * [tJDBCOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	


 



/**
 * [tJDBCOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	


 



/**
 * [tJDBCOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	


 



/**
 * [tJDBCInput_7 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_7 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	
// end of generic


resourceMap.put("finish_tJDBCInput_7", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_7 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_7 = null;
    if (reader_tJDBCInput_7 != null) {
        reader_tJDBCInput_7.close();
        resultMap_tJDBCInput_7 = reader_tJDBCInput_7.getReturnValues();
    }
if(resultMap_tJDBCInput_7!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_7 : resultMap_tJDBCInput_7.entrySet()) {
		switch(entry_tJDBCInput_7.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "ERROR_MESSAGE", entry_tJDBCInput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "NB_LINE", entry_tJDBCInput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "NB_SUCCESS", entry_tJDBCInput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", "NB_REJECT", entry_tJDBCInput_7.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_7 = new StringBuilder();
            for (int i_tJDBCInput_7 = 0; i_tJDBCInput_7 < entry_tJDBCInput_7.getKey().length(); i_tJDBCInput_7++) {
                char ch_tJDBCInput_7 = entry_tJDBCInput_7.getKey().charAt(i_tJDBCInput_7);
                if(Character.isUpperCase(ch_tJDBCInput_7) && i_tJDBCInput_7> 0) {
                	studio_key_tJDBCInput_7.append('_');
                }
                studio_key_tJDBCInput_7.append(ch_tJDBCInput_7);
            }
			container_tJDBCInput_7.setComponentData("tJDBCInput_7", studio_key_tJDBCInput_7.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_7.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_7", true);
end_Hash.put("tJDBCInput_7", System.currentTimeMillis());




/**
 * [tJDBCInput_7 end ] stop
 */

	
	/**
	 * [tJDBCOutput_7 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_7", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_7 = null;
    if (writer_tJDBCOutput_7 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_7 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_7.close();
        resultMap_tJDBCOutput_7 = writer_tJDBCOutput_7.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_7), container_tJDBCOutput_7);
    }
if(resultMap_tJDBCOutput_7!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_7 : resultMap_tJDBCOutput_7.entrySet()) {
		switch(entry_tJDBCOutput_7.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "ERROR_MESSAGE", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_LINE", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_SUCCESS", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_REJECT", entry_tJDBCOutput_7.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_7 = new StringBuilder();
            for (int i_tJDBCOutput_7 = 0; i_tJDBCOutput_7 < entry_tJDBCOutput_7.getKey().length(); i_tJDBCOutput_7++) {
                char ch_tJDBCOutput_7 = entry_tJDBCOutput_7.getKey().charAt(i_tJDBCOutput_7);
                if(Character.isUpperCase(ch_tJDBCOutput_7) && i_tJDBCOutput_7> 0) {
                	studio_key_tJDBCOutput_7.append('_');
                }
                studio_key_tJDBCOutput_7.append(ch_tJDBCOutput_7);
            }
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", studio_key_tJDBCOutput_7.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_7.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_7", true);
end_Hash.put("tJDBCOutput_7", System.currentTimeMillis());




/**
 * [tJDBCOutput_7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_7 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_7";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_7")==null){
    if(resourceMap.get("reader_tJDBCInput_7")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_7")).close();
		} catch (java.io.IOException e_tJDBCInput_7) {
			String errorMessage_tJDBCInput_7 = "failed to release the resource in tJDBCInput_7 :" + e_tJDBCInput_7.getMessage();
			System.err.println(errorMessage_tJDBCInput_7);
		}
	}
}
 



/**
 * [tJDBCInput_7 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_7")==null){
    if(resourceMap.get("writer_tJDBCOutput_7")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_7")).close();
		} catch (java.io.IOException e_tJDBCOutput_7) {
			String errorMessage_tJDBCOutput_7 = "failed to release the resource in tJDBCOutput_7 :" + e_tJDBCOutput_7.getMessage();
			System.err.println(errorMessage_tJDBCOutput_7);
		}
	}
}
 



/**
 * [tJDBCOutput_7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tJDBCOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_8", false);
		start_Hash.put("tJDBCOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_8";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tJDBCOutput_8 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_8 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_8 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_8 = (String)(restRequest_tJDBCOutput_8 != null ? restRequest_tJDBCOutput_8.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_8 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_8 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_8 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_8 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_8.createRuntimeProperties();
 		                    props_tJDBCOutput_8.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_8.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_8.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_8.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_8.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.tableSelection.setValue("tablename",
 		                    "host_interface_hourly_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_1_fisrt sst_tJDBCOutput_8_1_fisrt = new SchemaSettingTool_tJDBCOutput_8_1_fisrt();
 		                    
 		                    props_tJDBCOutput_8.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_2_fisrt sst_tJDBCOutput_8_2_fisrt = new SchemaSettingTool_tJDBCOutput_8_2_fisrt();
 		                    
 		                    props_tJDBCOutput_8.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_3_fisrt sst_tJDBCOutput_8_3_fisrt = new SchemaSettingTool_tJDBCOutput_8_3_fisrt();
 		                    
 		                    props_tJDBCOutput_8.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_8.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_8.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_8.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_8 = props_tJDBCOutput_8.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_8 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_8 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_8 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_8.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_8);
        }
    }
globalMap.put("tJDBCOutput_8_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_8);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_8= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_8_MAPPINGS_URL", mappings_url_tJDBCOutput_8);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_8 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_8";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_8 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_8 = null;
topology_tJDBCOutput_8 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_8 = def_tJDBCOutput_8.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_8, topology_tJDBCOutput_8);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_8 = def_tJDBCOutput_8.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_8 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_8.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_8 = componentRuntime_tJDBCOutput_8.initialize(container_tJDBCOutput_8, props_tJDBCOutput_8);

if (initVr_tJDBCOutput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_8.getMessage());
}

if(componentRuntime_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_8 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_8;
	compDriverInitialization_tJDBCOutput_8.runAtDriver(container_tJDBCOutput_8);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_8 = null;
if(componentRuntime_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_8 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_8;
	if (doesNodeBelongToRequest_tJDBCOutput_8) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_8 = sourceOrSink_tJDBCOutput_8.validate(container_tJDBCOutput_8);
        if (vr_tJDBCOutput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_8.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_8 = null;
    if (sourceOrSink_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_8 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_8;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_8 = sink_tJDBCOutput_8.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_8) {
            writeOperation_tJDBCOutput_8.initialize(container_tJDBCOutput_8);
        }
        writer_tJDBCOutput_8 = writeOperation_tJDBCOutput_8.createWriter(container_tJDBCOutput_8);
        if (doesNodeBelongToRequest_tJDBCOutput_8) {
            writer_tJDBCOutput_8.open("tJDBCOutput_8");
        }

        resourceMap.put("writer_tJDBCOutput_8", writer_tJDBCOutput_8);
    } // end of "sourceOrSink_tJDBCOutput_8 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_8 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_8.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_8 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_8 = props_tJDBCOutput_8.getSchema(c_tJDBCOutput_8, false);
    incomingEnforcer_tJDBCOutput_8 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_8);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_8 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_8 = null;


 



/**
 * [tJDBCOutput_8 begin ] stop
 */



	
	/**
	 * [tJDBCInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_8", false);
		start_Hash.put("tJDBCInput_8", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_8";

	
		int tos_count_tJDBCInput_8 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_8 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_8 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_8 = (String)(restRequest_tJDBCInput_8 != null ? restRequest_tJDBCInput_8.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_8 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_8 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_8 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_8 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_8.createRuntimeProperties();
 		                    props_tJDBCInput_8.setValue("sql",
 		                    "SELECT history_id\nFROM host_interface_hourly_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_8.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_8.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_8.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_8_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_8\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_8_1_fisrt sst_tJDBCInput_8_1_fisrt = new SchemaSettingTool_tJDBCInput_8_1_fisrt();
 		                    
 		                    props_tJDBCInput_8.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_8_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_8.tableSelection.setValue("tablename",
 		                    "host_interface_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_8_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_8.trimTable).setValue("trim",tJDBCInput_8_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_8_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_8_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_8.trimTable).setValue("columnName",tJDBCInput_8_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_8.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_8 = props_tJDBCInput_8.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_8 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_8 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_8 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_8.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_8);
        }
    }
globalMap.put("tJDBCInput_8_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_8);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_8= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_8_MAPPINGS_URL", mappings_url_tJDBCInput_8);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_8 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_8";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_8 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_8 = null;
topology_tJDBCInput_8 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_8 = def_tJDBCInput_8.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_8, topology_tJDBCInput_8);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_8 = def_tJDBCInput_8.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_8 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_8.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_8 = componentRuntime_tJDBCInput_8.initialize(container_tJDBCInput_8, props_tJDBCInput_8);

if (initVr_tJDBCInput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_8.getMessage());
}

if(componentRuntime_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_8 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_8;
	compDriverInitialization_tJDBCInput_8.runAtDriver(container_tJDBCInput_8);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_8 = null;
if(componentRuntime_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_8 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_8;
	if (doesNodeBelongToRequest_tJDBCInput_8) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_8 = sourceOrSink_tJDBCInput_8.validate(container_tJDBCInput_8);
        if (vr_tJDBCInput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_8.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_8 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_8;
        reader_tJDBCInput_8 = source_tJDBCInput_8.createReader(container_tJDBCInput_8);
	    reader_tJDBCInput_8 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_8, container_tJDBCInput_8);

            boolean multi_output_is_allowed_tJDBCInput_8 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_8 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_8.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_8 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_8 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_8 = props_tJDBCInput_8.getSchema(c_tJDBCInput_8, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_8 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_8, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_8 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_8 = reader_tJDBCInput_8.start();

        resourceMap.put("reader_tJDBCInput_8", reader_tJDBCInput_8);

        for (; available_tJDBCInput_8; available_tJDBCInput_8 = reader_tJDBCInput_8.advance()) {
			nb_line_tJDBCInput_8++;

			
			if (multi_output_is_allowed_tJDBCInput_8) {
				
					row9 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_8 = reader_tJDBCInput_8.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_8) {
						row9 = new row9Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_8 == null) {
            factory_tJDBCInput_8 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_8.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_8.setWrapped(factory_tJDBCInput_8.convertToAvro(data_tJDBCInput_8));
                Object columnValue_0_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(0);
                    if (columnValue_0_tJDBCInput_8 == null) {
                        row9.history_id = 0;
                    } else {
                            row9.history_id = (long) (columnValue_0_tJDBCInput_8);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_8) {
				java.util.Map<String,Object> info_tJDBCInput_8 = e_tJDBCInput_8.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_8 = null;
					if(info_tJDBCInput_8.containsKey("error")){
						errorMessage_tJDBCInput_8 = info_tJDBCInput_8.get("error");
					}else if(info_tJDBCInput_8.containsKey("errorMessage")){
						errorMessage_tJDBCInput_8 = info_tJDBCInput_8.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_8 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_8 = "Row "+ nb_line_tJDBCInput_8 + ": "+errorMessage_tJDBCInput_8;
					System.err.println(errorMessage_tJDBCInput_8);
				
					// If the record is reject, the main line record should put NULL
					row9 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_8 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_8 = null;


 



/**
 * [tJDBCInput_8 begin ] stop
 */
	
	/**
	 * [tJDBCInput_8 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 


	tos_count_tJDBCInput_8++;

/**
 * [tJDBCInput_8 main ] stop
 */
	
	/**
	 * [tJDBCInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 



/**
 * [tJDBCInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_8 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_8 != null) {
            incomingEnforcer_tJDBCOutput_8.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_8.put("history_id", row9.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_8 = null;
        if (incomingEnforcer_tJDBCOutput_8 != null) {
            data_tJDBCOutput_8 = incomingEnforcer_tJDBCOutput_8.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_8 != null && data_tJDBCOutput_8 != null) {
        	writer_tJDBCOutput_8.write(data_tJDBCOutput_8);
        }
        
        nb_line_tJDBCOutput_8++;

 


	tos_count_tJDBCOutput_8++;

/**
 * [tJDBCOutput_8 main ] stop
 */
	
	/**
	 * [tJDBCOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	


 



/**
 * [tJDBCOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	


 



/**
 * [tJDBCOutput_8 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 



/**
 * [tJDBCInput_8 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_8 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	
// end of generic


resourceMap.put("finish_tJDBCInput_8", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_8 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_8 = null;
    if (reader_tJDBCInput_8 != null) {
        reader_tJDBCInput_8.close();
        resultMap_tJDBCInput_8 = reader_tJDBCInput_8.getReturnValues();
    }
if(resultMap_tJDBCInput_8!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_8 : resultMap_tJDBCInput_8.entrySet()) {
		switch(entry_tJDBCInput_8.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "ERROR_MESSAGE", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_LINE", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_SUCCESS", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_REJECT", entry_tJDBCInput_8.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_8 = new StringBuilder();
            for (int i_tJDBCInput_8 = 0; i_tJDBCInput_8 < entry_tJDBCInput_8.getKey().length(); i_tJDBCInput_8++) {
                char ch_tJDBCInput_8 = entry_tJDBCInput_8.getKey().charAt(i_tJDBCInput_8);
                if(Character.isUpperCase(ch_tJDBCInput_8) && i_tJDBCInput_8> 0) {
                	studio_key_tJDBCInput_8.append('_');
                }
                studio_key_tJDBCInput_8.append(ch_tJDBCInput_8);
            }
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", studio_key_tJDBCInput_8.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_8.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_8", true);
end_Hash.put("tJDBCInput_8", System.currentTimeMillis());




/**
 * [tJDBCInput_8 end ] stop
 */

	
	/**
	 * [tJDBCOutput_8 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_8", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_8 = null;
    if (writer_tJDBCOutput_8 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_8 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_8.close();
        resultMap_tJDBCOutput_8 = writer_tJDBCOutput_8.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_8), container_tJDBCOutput_8);
    }
if(resultMap_tJDBCOutput_8!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_8 : resultMap_tJDBCOutput_8.entrySet()) {
		switch(entry_tJDBCOutput_8.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "ERROR_MESSAGE", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_LINE", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_SUCCESS", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_REJECT", entry_tJDBCOutput_8.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_8 = new StringBuilder();
            for (int i_tJDBCOutput_8 = 0; i_tJDBCOutput_8 < entry_tJDBCOutput_8.getKey().length(); i_tJDBCOutput_8++) {
                char ch_tJDBCOutput_8 = entry_tJDBCOutput_8.getKey().charAt(i_tJDBCOutput_8);
                if(Character.isUpperCase(ch_tJDBCOutput_8) && i_tJDBCOutput_8> 0) {
                	studio_key_tJDBCOutput_8.append('_');
                }
                studio_key_tJDBCOutput_8.append(ch_tJDBCOutput_8);
            }
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", studio_key_tJDBCOutput_8.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_8.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_8", true);
end_Hash.put("tJDBCOutput_8", System.currentTimeMillis());




/**
 * [tJDBCOutput_8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_8 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_8")==null){
    if(resourceMap.get("reader_tJDBCInput_8")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_8")).close();
		} catch (java.io.IOException e_tJDBCInput_8) {
			String errorMessage_tJDBCInput_8 = "failed to release the resource in tJDBCInput_8 :" + e_tJDBCInput_8.getMessage();
			System.err.println(errorMessage_tJDBCInput_8);
		}
	}
}
 



/**
 * [tJDBCInput_8 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_8")==null){
    if(resourceMap.get("writer_tJDBCOutput_8")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_8")).close();
		} catch (java.io.IOException e_tJDBCOutput_8) {
			String errorMessage_tJDBCOutput_8 = "failed to release the resource in tJDBCOutput_8 :" + e_tJDBCOutput_8.getMessage();
			System.err.println(errorMessage_tJDBCOutput_8);
		}
	}
}
 



/**
 * [tJDBCOutput_8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tJDBCOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_9", false);
		start_Hash.put("tJDBCOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_9";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tJDBCOutput_9 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_9 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_9 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_9 = (String)(restRequest_tJDBCOutput_9 != null ? restRequest_tJDBCOutput_9.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_9 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_9 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_9 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_9 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_9.createRuntimeProperties();
 		                    props_tJDBCOutput_9.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_9.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_9.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_9.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_9.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_9.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_9.tableSelection.setValue("tablename",
 		                    "vm_hourly_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_1_fisrt sst_tJDBCOutput_9_1_fisrt = new SchemaSettingTool_tJDBCOutput_9_1_fisrt();
 		                    
 		                    props_tJDBCOutput_9.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_2_fisrt sst_tJDBCOutput_9_2_fisrt = new SchemaSettingTool_tJDBCOutput_9_2_fisrt();
 		                    
 		                    props_tJDBCOutput_9.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_9_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_9\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_9_3_fisrt sst_tJDBCOutput_9_3_fisrt = new SchemaSettingTool_tJDBCOutput_9_3_fisrt();
 		                    
 		                    props_tJDBCOutput_9.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_9_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_9.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_9.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_9.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_9 = props_tJDBCOutput_9.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_9 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_9 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_9 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_9.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_9);
        }
    }
globalMap.put("tJDBCOutput_9_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_9);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_9= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_9_MAPPINGS_URL", mappings_url_tJDBCOutput_9);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_9 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_9";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_9 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_9 = null;
topology_tJDBCOutput_9 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_9 = def_tJDBCOutput_9.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_9, topology_tJDBCOutput_9);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_9 = def_tJDBCOutput_9.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_9 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_9.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_9 = componentRuntime_tJDBCOutput_9.initialize(container_tJDBCOutput_9, props_tJDBCOutput_9);

if (initVr_tJDBCOutput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_9.getMessage());
}

if(componentRuntime_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_9 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_9;
	compDriverInitialization_tJDBCOutput_9.runAtDriver(container_tJDBCOutput_9);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_9 = null;
if(componentRuntime_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_9 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_9;
	if (doesNodeBelongToRequest_tJDBCOutput_9) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_9 = sourceOrSink_tJDBCOutput_9.validate(container_tJDBCOutput_9);
        if (vr_tJDBCOutput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_9.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_9 = null;
    if (sourceOrSink_tJDBCOutput_9 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_9 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_9;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_9 = sink_tJDBCOutput_9.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_9) {
            writeOperation_tJDBCOutput_9.initialize(container_tJDBCOutput_9);
        }
        writer_tJDBCOutput_9 = writeOperation_tJDBCOutput_9.createWriter(container_tJDBCOutput_9);
        if (doesNodeBelongToRequest_tJDBCOutput_9) {
            writer_tJDBCOutput_9.open("tJDBCOutput_9");
        }

        resourceMap.put("writer_tJDBCOutput_9", writer_tJDBCOutput_9);
    } // end of "sourceOrSink_tJDBCOutput_9 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_9 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_9.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_9 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_9 = props_tJDBCOutput_9.getSchema(c_tJDBCOutput_9, false);
    incomingEnforcer_tJDBCOutput_9 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_9);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_9 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_9 = null;


 



/**
 * [tJDBCOutput_9 begin ] stop
 */



	
	/**
	 * [tJDBCInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_9", false);
		start_Hash.put("tJDBCInput_9", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_9";

	
		int tos_count_tJDBCInput_9 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_9 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_9 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_9 = (String)(restRequest_tJDBCInput_9 != null ? restRequest_tJDBCInput_9.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_9 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_9 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_9 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_9 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_9.createRuntimeProperties();
 		                    props_tJDBCInput_9.setValue("sql",
 		                    "SELECT history_id\nFROM vm_hourly_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_9.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_9.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_9.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_9_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_9\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_9_1_fisrt sst_tJDBCInput_9_1_fisrt = new SchemaSettingTool_tJDBCInput_9_1_fisrt();
 		                    
 		                    props_tJDBCInput_9.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_9_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_9.tableSelection.setValue("tablename",
 		                    "vm_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("trim",tJDBCInput_9_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_9_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("columnName",tJDBCInput_9_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_9.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_9 = props_tJDBCInput_9.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_9 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_9 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_9 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_9.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_9);
        }
    }
globalMap.put("tJDBCInput_9_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_9);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_9= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_9_MAPPINGS_URL", mappings_url_tJDBCInput_9);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_9 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_9";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_9 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_9 = null;
topology_tJDBCInput_9 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_9 = def_tJDBCInput_9.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_9, topology_tJDBCInput_9);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_9 = def_tJDBCInput_9.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_9 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_9.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_9 = componentRuntime_tJDBCInput_9.initialize(container_tJDBCInput_9, props_tJDBCInput_9);

if (initVr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_9.getMessage());
}

if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_9 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_9;
	compDriverInitialization_tJDBCInput_9.runAtDriver(container_tJDBCInput_9);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_9 = null;
if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_9 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_9;
	if (doesNodeBelongToRequest_tJDBCInput_9) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_9 = sourceOrSink_tJDBCInput_9.validate(container_tJDBCInput_9);
        if (vr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_9.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_9 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_9;
        reader_tJDBCInput_9 = source_tJDBCInput_9.createReader(container_tJDBCInput_9);
	    reader_tJDBCInput_9 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_9, container_tJDBCInput_9);

            boolean multi_output_is_allowed_tJDBCInput_9 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_9 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_9.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_9 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_9 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_9 = props_tJDBCInput_9.getSchema(c_tJDBCInput_9, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_9 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_9, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_9 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_9 = reader_tJDBCInput_9.start();

        resourceMap.put("reader_tJDBCInput_9", reader_tJDBCInput_9);

        for (; available_tJDBCInput_9; available_tJDBCInput_9 = reader_tJDBCInput_9.advance()) {
			nb_line_tJDBCInput_9++;

			
			if (multi_output_is_allowed_tJDBCInput_9) {
				
					row10 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_9 = reader_tJDBCInput_9.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_9) {
						row10 = new row10Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_9 == null) {
            factory_tJDBCInput_9 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_9.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_9.setWrapped(factory_tJDBCInput_9.convertToAvro(data_tJDBCInput_9));
                Object columnValue_0_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(0);
                    if (columnValue_0_tJDBCInput_9 == null) {
                        row10.history_id = 0;
                    } else {
                            row10.history_id = (long) (columnValue_0_tJDBCInput_9);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_9) {
				java.util.Map<String,Object> info_tJDBCInput_9 = e_tJDBCInput_9.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_9 = null;
					if(info_tJDBCInput_9.containsKey("error")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("error");
					}else if(info_tJDBCInput_9.containsKey("errorMessage")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_9 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_9 = "Row "+ nb_line_tJDBCInput_9 + ": "+errorMessage_tJDBCInput_9;
					System.err.println(errorMessage_tJDBCInput_9);
				
					// If the record is reject, the main line record should put NULL
					row10 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_9 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_9 = null;


 



/**
 * [tJDBCInput_9 begin ] stop
 */
	
	/**
	 * [tJDBCInput_9 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 


	tos_count_tJDBCInput_9++;

/**
 * [tJDBCInput_9 main ] stop
 */
	
	/**
	 * [tJDBCInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_9 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_9 != null) {
            incomingEnforcer_tJDBCOutput_9.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_9 != null && incomingEnforcer_tJDBCOutput_9.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_9.put("history_id", row10.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_9 = null;
        if (incomingEnforcer_tJDBCOutput_9 != null) {
            data_tJDBCOutput_9 = incomingEnforcer_tJDBCOutput_9.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_9 != null && data_tJDBCOutput_9 != null) {
        	writer_tJDBCOutput_9.write(data_tJDBCOutput_9);
        }
        
        nb_line_tJDBCOutput_9++;

 


	tos_count_tJDBCOutput_9++;

/**
 * [tJDBCOutput_9 main ] stop
 */
	
	/**
	 * [tJDBCOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	


 



/**
 * [tJDBCOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	


 



/**
 * [tJDBCOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_9 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// end of generic


resourceMap.put("finish_tJDBCInput_9", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_9 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_9 = null;
    if (reader_tJDBCInput_9 != null) {
        reader_tJDBCInput_9.close();
        resultMap_tJDBCInput_9 = reader_tJDBCInput_9.getReturnValues();
    }
if(resultMap_tJDBCInput_9!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_9 : resultMap_tJDBCInput_9.entrySet()) {
		switch(entry_tJDBCInput_9.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "ERROR_MESSAGE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_LINE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_SUCCESS", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_REJECT", entry_tJDBCInput_9.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_9 = new StringBuilder();
            for (int i_tJDBCInput_9 = 0; i_tJDBCInput_9 < entry_tJDBCInput_9.getKey().length(); i_tJDBCInput_9++) {
                char ch_tJDBCInput_9 = entry_tJDBCInput_9.getKey().charAt(i_tJDBCInput_9);
                if(Character.isUpperCase(ch_tJDBCInput_9) && i_tJDBCInput_9> 0) {
                	studio_key_tJDBCInput_9.append('_');
                }
                studio_key_tJDBCInput_9.append(ch_tJDBCInput_9);
            }
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", studio_key_tJDBCInput_9.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_9.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_9", true);
end_Hash.put("tJDBCInput_9", System.currentTimeMillis());




/**
 * [tJDBCInput_9 end ] stop
 */

	
	/**
	 * [tJDBCOutput_9 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_9", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_9 = null;
    if (writer_tJDBCOutput_9 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_9 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_9.close();
        resultMap_tJDBCOutput_9 = writer_tJDBCOutput_9.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_9), container_tJDBCOutput_9);
    }
if(resultMap_tJDBCOutput_9!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_9 : resultMap_tJDBCOutput_9.entrySet()) {
		switch(entry_tJDBCOutput_9.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "ERROR_MESSAGE", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_LINE", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_SUCCESS", entry_tJDBCOutput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", "NB_REJECT", entry_tJDBCOutput_9.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_9 = new StringBuilder();
            for (int i_tJDBCOutput_9 = 0; i_tJDBCOutput_9 < entry_tJDBCOutput_9.getKey().length(); i_tJDBCOutput_9++) {
                char ch_tJDBCOutput_9 = entry_tJDBCOutput_9.getKey().charAt(i_tJDBCOutput_9);
                if(Character.isUpperCase(ch_tJDBCOutput_9) && i_tJDBCOutput_9> 0) {
                	studio_key_tJDBCOutput_9.append('_');
                }
                studio_key_tJDBCOutput_9.append(ch_tJDBCOutput_9);
            }
			container_tJDBCOutput_9.setComponentData("tJDBCOutput_9", studio_key_tJDBCOutput_9.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_9.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_9", true);
end_Hash.put("tJDBCOutput_9", System.currentTimeMillis());




/**
 * [tJDBCOutput_9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_9 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_9")==null){
    if(resourceMap.get("reader_tJDBCInput_9")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_9")).close();
		} catch (java.io.IOException e_tJDBCInput_9) {
			String errorMessage_tJDBCInput_9 = "failed to release the resource in tJDBCInput_9 :" + e_tJDBCInput_9.getMessage();
			System.err.println(errorMessage_tJDBCInput_9);
		}
	}
}
 



/**
 * [tJDBCInput_9 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_9";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_9")==null){
    if(resourceMap.get("writer_tJDBCOutput_9")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_9")).close();
		} catch (java.io.IOException e_tJDBCOutput_9) {
			String errorMessage_tJDBCOutput_9 = "failed to release the resource in tJDBCOutput_9 :" + e_tJDBCOutput_9.getMessage();
			System.err.println(errorMessage_tJDBCOutput_9);
		}
	}
}
 



/**
 * [tJDBCOutput_9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row12Struct other = (row12Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row12Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row12Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tJDBCOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_10", false);
		start_Hash.put("tJDBCOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_10";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tJDBCOutput_10 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_10 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_10 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_10 = (String)(restRequest_tJDBCOutput_10 != null ? restRequest_tJDBCOutput_10.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_10 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_10 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_10 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_10 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_10.createRuntimeProperties();
 		                    props_tJDBCOutput_10.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_10.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_10.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_10.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_10.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_10.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_10.tableSelection.setValue("tablename",
 		                    "vm_interface_hourly_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_1_fisrt sst_tJDBCOutput_10_1_fisrt = new SchemaSettingTool_tJDBCOutput_10_1_fisrt();
 		                    
 		                    props_tJDBCOutput_10.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_2_fisrt sst_tJDBCOutput_10_2_fisrt = new SchemaSettingTool_tJDBCOutput_10_2_fisrt();
 		                    
 		                    props_tJDBCOutput_10.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_10_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_10\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_10_3_fisrt sst_tJDBCOutput_10_3_fisrt = new SchemaSettingTool_tJDBCOutput_10_3_fisrt();
 		                    
 		                    props_tJDBCOutput_10.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_10_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_10.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_10.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_10.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_10 = props_tJDBCOutput_10.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_10 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_10 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_10 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_10.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_10);
        }
    }
globalMap.put("tJDBCOutput_10_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_10);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_10= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_10_MAPPINGS_URL", mappings_url_tJDBCOutput_10);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_10 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_10";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_10 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_10 = null;
topology_tJDBCOutput_10 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_10 = def_tJDBCOutput_10.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_10, topology_tJDBCOutput_10);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_10 = def_tJDBCOutput_10.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_10 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_10.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_10 = componentRuntime_tJDBCOutput_10.initialize(container_tJDBCOutput_10, props_tJDBCOutput_10);

if (initVr_tJDBCOutput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_10.getMessage());
}

if(componentRuntime_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_10 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_10;
	compDriverInitialization_tJDBCOutput_10.runAtDriver(container_tJDBCOutput_10);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_10 = null;
if(componentRuntime_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_10 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_10;
	if (doesNodeBelongToRequest_tJDBCOutput_10) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_10 = sourceOrSink_tJDBCOutput_10.validate(container_tJDBCOutput_10);
        if (vr_tJDBCOutput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_10.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_10 = null;
    if (sourceOrSink_tJDBCOutput_10 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_10 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_10;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_10 = sink_tJDBCOutput_10.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_10) {
            writeOperation_tJDBCOutput_10.initialize(container_tJDBCOutput_10);
        }
        writer_tJDBCOutput_10 = writeOperation_tJDBCOutput_10.createWriter(container_tJDBCOutput_10);
        if (doesNodeBelongToRequest_tJDBCOutput_10) {
            writer_tJDBCOutput_10.open("tJDBCOutput_10");
        }

        resourceMap.put("writer_tJDBCOutput_10", writer_tJDBCOutput_10);
    } // end of "sourceOrSink_tJDBCOutput_10 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_10 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_10.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_10 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_10 = props_tJDBCOutput_10.getSchema(c_tJDBCOutput_10, false);
    incomingEnforcer_tJDBCOutput_10 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_10);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_10 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_10 = null;


 



/**
 * [tJDBCOutput_10 begin ] stop
 */



	
	/**
	 * [tJDBCInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_10", false);
		start_Hash.put("tJDBCInput_10", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_10";

	
		int tos_count_tJDBCInput_10 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_10 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_10 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_10 = (String)(restRequest_tJDBCInput_10 != null ? restRequest_tJDBCInput_10.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_10 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_10 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_10 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_10 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_10.createRuntimeProperties();
 		                    props_tJDBCInput_10.setValue("sql",
 		                    "SELECT history_id\nFROM vm_interface_hourly_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_10.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_10.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_10.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_10_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_10\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_10_1_fisrt sst_tJDBCInput_10_1_fisrt = new SchemaSettingTool_tJDBCInput_10_1_fisrt();
 		                    
 		                    props_tJDBCInput_10.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_10_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_10.tableSelection.setValue("tablename",
 		                    "vm_interface_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("trim",tJDBCInput_10_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_10_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("columnName",tJDBCInput_10_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_10.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_10 = props_tJDBCInput_10.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_10 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_10 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_10 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_10.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_10);
        }
    }
globalMap.put("tJDBCInput_10_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_10);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_10= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_10_MAPPINGS_URL", mappings_url_tJDBCInput_10);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_10 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_10";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_10 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_10 = null;
topology_tJDBCInput_10 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_10 = def_tJDBCInput_10.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_10, topology_tJDBCInput_10);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_10 = def_tJDBCInput_10.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_10 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_10.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_10 = componentRuntime_tJDBCInput_10.initialize(container_tJDBCInput_10, props_tJDBCInput_10);

if (initVr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_10.getMessage());
}

if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_10 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_10;
	compDriverInitialization_tJDBCInput_10.runAtDriver(container_tJDBCInput_10);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_10 = null;
if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_10 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_10;
	if (doesNodeBelongToRequest_tJDBCInput_10) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_10 = sourceOrSink_tJDBCInput_10.validate(container_tJDBCInput_10);
        if (vr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_10.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_10 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_10;
        reader_tJDBCInput_10 = source_tJDBCInput_10.createReader(container_tJDBCInput_10);
	    reader_tJDBCInput_10 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_10, container_tJDBCInput_10);

            boolean multi_output_is_allowed_tJDBCInput_10 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_10 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_10.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_10 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_10 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_10 = props_tJDBCInput_10.getSchema(c_tJDBCInput_10, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_10 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_10, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_10 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_10 = reader_tJDBCInput_10.start();

        resourceMap.put("reader_tJDBCInput_10", reader_tJDBCInput_10);

        for (; available_tJDBCInput_10; available_tJDBCInput_10 = reader_tJDBCInput_10.advance()) {
			nb_line_tJDBCInput_10++;

			
			if (multi_output_is_allowed_tJDBCInput_10) {
				
					row12 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_10 = reader_tJDBCInput_10.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_10) {
						row12 = new row12Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_10 == null) {
            factory_tJDBCInput_10 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_10.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_10.setWrapped(factory_tJDBCInput_10.convertToAvro(data_tJDBCInput_10));
                Object columnValue_0_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(0);
                    if (columnValue_0_tJDBCInput_10 == null) {
                        row12.history_id = 0;
                    } else {
                            row12.history_id = (long) (columnValue_0_tJDBCInput_10);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_10) {
				java.util.Map<String,Object> info_tJDBCInput_10 = e_tJDBCInput_10.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_10 = null;
					if(info_tJDBCInput_10.containsKey("error")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("error");
					}else if(info_tJDBCInput_10.containsKey("errorMessage")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_10 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_10 = "Row "+ nb_line_tJDBCInput_10 + ": "+errorMessage_tJDBCInput_10;
					System.err.println(errorMessage_tJDBCInput_10);
				
					// If the record is reject, the main line record should put NULL
					row12 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_10 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_10 = null;


 



/**
 * [tJDBCInput_10 begin ] stop
 */
	
	/**
	 * [tJDBCInput_10 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 


	tos_count_tJDBCInput_10++;

/**
 * [tJDBCInput_10 main ] stop
 */
	
	/**
	 * [tJDBCInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_10 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_10 != null) {
            incomingEnforcer_tJDBCOutput_10.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_10 != null && incomingEnforcer_tJDBCOutput_10.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_10.put("history_id", row12.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_10 = null;
        if (incomingEnforcer_tJDBCOutput_10 != null) {
            data_tJDBCOutput_10 = incomingEnforcer_tJDBCOutput_10.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_10 != null && data_tJDBCOutput_10 != null) {
        	writer_tJDBCOutput_10.write(data_tJDBCOutput_10);
        }
        
        nb_line_tJDBCOutput_10++;

 


	tos_count_tJDBCOutput_10++;

/**
 * [tJDBCOutput_10 main ] stop
 */
	
	/**
	 * [tJDBCOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	


 



/**
 * [tJDBCOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	


 



/**
 * [tJDBCOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_10 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// end of generic


resourceMap.put("finish_tJDBCInput_10", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_10 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_10 = null;
    if (reader_tJDBCInput_10 != null) {
        reader_tJDBCInput_10.close();
        resultMap_tJDBCInput_10 = reader_tJDBCInput_10.getReturnValues();
    }
if(resultMap_tJDBCInput_10!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_10 : resultMap_tJDBCInput_10.entrySet()) {
		switch(entry_tJDBCInput_10.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "ERROR_MESSAGE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_LINE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_SUCCESS", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_REJECT", entry_tJDBCInput_10.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_10 = new StringBuilder();
            for (int i_tJDBCInput_10 = 0; i_tJDBCInput_10 < entry_tJDBCInput_10.getKey().length(); i_tJDBCInput_10++) {
                char ch_tJDBCInput_10 = entry_tJDBCInput_10.getKey().charAt(i_tJDBCInput_10);
                if(Character.isUpperCase(ch_tJDBCInput_10) && i_tJDBCInput_10> 0) {
                	studio_key_tJDBCInput_10.append('_');
                }
                studio_key_tJDBCInput_10.append(ch_tJDBCInput_10);
            }
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", studio_key_tJDBCInput_10.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_10.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_10", true);
end_Hash.put("tJDBCInput_10", System.currentTimeMillis());




/**
 * [tJDBCInput_10 end ] stop
 */

	
	/**
	 * [tJDBCOutput_10 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_10", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_10 = null;
    if (writer_tJDBCOutput_10 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_10 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_10.close();
        resultMap_tJDBCOutput_10 = writer_tJDBCOutput_10.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_10), container_tJDBCOutput_10);
    }
if(resultMap_tJDBCOutput_10!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_10 : resultMap_tJDBCOutput_10.entrySet()) {
		switch(entry_tJDBCOutput_10.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "ERROR_MESSAGE", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_LINE", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_SUCCESS", entry_tJDBCOutput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", "NB_REJECT", entry_tJDBCOutput_10.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_10 = new StringBuilder();
            for (int i_tJDBCOutput_10 = 0; i_tJDBCOutput_10 < entry_tJDBCOutput_10.getKey().length(); i_tJDBCOutput_10++) {
                char ch_tJDBCOutput_10 = entry_tJDBCOutput_10.getKey().charAt(i_tJDBCOutput_10);
                if(Character.isUpperCase(ch_tJDBCOutput_10) && i_tJDBCOutput_10> 0) {
                	studio_key_tJDBCOutput_10.append('_');
                }
                studio_key_tJDBCOutput_10.append(ch_tJDBCOutput_10);
            }
			container_tJDBCOutput_10.setComponentData("tJDBCOutput_10", studio_key_tJDBCOutput_10.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_10.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_10", true);
end_Hash.put("tJDBCOutput_10", System.currentTimeMillis());




/**
 * [tJDBCOutput_10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_10 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_10")==null){
    if(resourceMap.get("reader_tJDBCInput_10")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_10")).close();
		} catch (java.io.IOException e_tJDBCInput_10) {
			String errorMessage_tJDBCInput_10 = "failed to release the resource in tJDBCInput_10 :" + e_tJDBCInput_10.getMessage();
			System.err.println(errorMessage_tJDBCInput_10);
		}
	}
}
 



/**
 * [tJDBCInput_10 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_10";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_10")==null){
    if(resourceMap.get("writer_tJDBCOutput_10")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_10")).close();
		} catch (java.io.IOException e_tJDBCOutput_10) {
			String errorMessage_tJDBCOutput_10 = "failed to release the resource in tJDBCOutput_10 :" + e_tJDBCOutput_10.getMessage();
			System.err.println(errorMessage_tJDBCOutput_10);
		}
	}
}
 



/**
 * [tJDBCOutput_10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tJDBCOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_11", false);
		start_Hash.put("tJDBCOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_11";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tJDBCOutput_11 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_11 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_11 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_11 = (String)(restRequest_tJDBCOutput_11 != null ? restRequest_tJDBCOutput_11.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_11 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_11 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_11 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_11 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_11.createRuntimeProperties();
 		                    props_tJDBCOutput_11.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_11.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_11.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_11.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_11.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_11.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_11.tableSelection.setValue("tablename",
 		                    "storage_domain_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_1_fisrt sst_tJDBCOutput_11_1_fisrt = new SchemaSettingTool_tJDBCOutput_11_1_fisrt();
 		                    
 		                    props_tJDBCOutput_11.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_2_fisrt sst_tJDBCOutput_11_2_fisrt = new SchemaSettingTool_tJDBCOutput_11_2_fisrt();
 		                    
 		                    props_tJDBCOutput_11.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_11_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_11\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_11_3_fisrt sst_tJDBCOutput_11_3_fisrt = new SchemaSettingTool_tJDBCOutput_11_3_fisrt();
 		                    
 		                    props_tJDBCOutput_11.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_11_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_11.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_11.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_11.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_11 = props_tJDBCOutput_11.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_11.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_11);
        }
    }
globalMap.put("tJDBCOutput_11_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_11);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_11= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_11_MAPPINGS_URL", mappings_url_tJDBCOutput_11);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_11 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_11";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_11 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_11 = null;
topology_tJDBCOutput_11 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_11 = def_tJDBCOutput_11.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_11, topology_tJDBCOutput_11);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_11 = def_tJDBCOutput_11.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_11 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_11.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_11 = componentRuntime_tJDBCOutput_11.initialize(container_tJDBCOutput_11, props_tJDBCOutput_11);

if (initVr_tJDBCOutput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_11.getMessage());
}

if(componentRuntime_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_11 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_11;
	compDriverInitialization_tJDBCOutput_11.runAtDriver(container_tJDBCOutput_11);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_11 = null;
if(componentRuntime_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_11 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_11;
	if (doesNodeBelongToRequest_tJDBCOutput_11) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_11 = sourceOrSink_tJDBCOutput_11.validate(container_tJDBCOutput_11);
        if (vr_tJDBCOutput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_11.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_11 = null;
    if (sourceOrSink_tJDBCOutput_11 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_11 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_11;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_11 = sink_tJDBCOutput_11.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_11) {
            writeOperation_tJDBCOutput_11.initialize(container_tJDBCOutput_11);
        }
        writer_tJDBCOutput_11 = writeOperation_tJDBCOutput_11.createWriter(container_tJDBCOutput_11);
        if (doesNodeBelongToRequest_tJDBCOutput_11) {
            writer_tJDBCOutput_11.open("tJDBCOutput_11");
        }

        resourceMap.put("writer_tJDBCOutput_11", writer_tJDBCOutput_11);
    } // end of "sourceOrSink_tJDBCOutput_11 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_11 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_11.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_11 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_11 = props_tJDBCOutput_11.getSchema(c_tJDBCOutput_11, false);
    incomingEnforcer_tJDBCOutput_11 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_11);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_11 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_11 = null;


 



/**
 * [tJDBCOutput_11 begin ] stop
 */



	
	/**
	 * [tJDBCInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_11", false);
		start_Hash.put("tJDBCInput_11", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_11";

	
		int tos_count_tJDBCInput_11 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_11 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_11 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_11 = (String)(restRequest_tJDBCInput_11 != null ? restRequest_tJDBCInput_11.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_11 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_11 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_11 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_11 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_11.createRuntimeProperties();
 		                    props_tJDBCInput_11.setValue("sql",
 		                    "SELECT history_id\nFROM storage_domain_samples_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepSamples * -1,"HH"))+"'"
+ "limit " + (( context.timesDeleteRun - (context.timesDeleteRun % context.deleteIncrement ) ) / context.deleteIncrement + 1)
* context.deleteMultiplier);
 		                    
 		                    props_tJDBCInput_11.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_11.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_11.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_11.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_11_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_11\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_11_1_fisrt sst_tJDBCInput_11_1_fisrt = new SchemaSettingTool_tJDBCInput_11_1_fisrt();
 		                    
 		                    props_tJDBCInput_11.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_11_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_11.tableSelection.setValue("tablename",
 		                    "storage_domain_samples_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_11_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_11_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_11.trimTable).setValue("trim",tJDBCInput_11_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_11_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_11_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_11.trimTable).setValue("columnName",tJDBCInput_11_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_11.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_11 = props_tJDBCInput_11.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_11.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_11);
        }
    }
globalMap.put("tJDBCInput_11_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_11);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_11= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_11_MAPPINGS_URL", mappings_url_tJDBCInput_11);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_11 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_11";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_11 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_11 = null;
topology_tJDBCInput_11 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_11 = def_tJDBCInput_11.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_11, topology_tJDBCInput_11);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_11 = def_tJDBCInput_11.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_11 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_11.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_11 = componentRuntime_tJDBCInput_11.initialize(container_tJDBCInput_11, props_tJDBCInput_11);

if (initVr_tJDBCInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_11.getMessage());
}

if(componentRuntime_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_11 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_11;
	compDriverInitialization_tJDBCInput_11.runAtDriver(container_tJDBCInput_11);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_11 = null;
if(componentRuntime_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_11 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_11;
	if (doesNodeBelongToRequest_tJDBCInput_11) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_11 = sourceOrSink_tJDBCInput_11.validate(container_tJDBCInput_11);
        if (vr_tJDBCInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_11.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_11 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_11 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_11;
        reader_tJDBCInput_11 = source_tJDBCInput_11.createReader(container_tJDBCInput_11);
	    reader_tJDBCInput_11 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_11, container_tJDBCInput_11);

            boolean multi_output_is_allowed_tJDBCInput_11 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_11 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_11.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_11 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_11 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_11 = props_tJDBCInput_11.getSchema(c_tJDBCInput_11, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_11 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_11, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_11 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_11 = reader_tJDBCInput_11.start();

        resourceMap.put("reader_tJDBCInput_11", reader_tJDBCInput_11);

        for (; available_tJDBCInput_11; available_tJDBCInput_11 = reader_tJDBCInput_11.advance()) {
			nb_line_tJDBCInput_11++;

			
			if (multi_output_is_allowed_tJDBCInput_11) {
				
					row11 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_11 = reader_tJDBCInput_11.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_11) {
						row11 = new row11Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_11 == null) {
            factory_tJDBCInput_11 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_11.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_11.setWrapped(factory_tJDBCInput_11.convertToAvro(data_tJDBCInput_11));
                Object columnValue_0_tJDBCInput_11 = outgoingEnforcer_tJDBCInput_11.get(0);
                    if (columnValue_0_tJDBCInput_11 == null) {
                        row11.history_id = 0;
                    } else {
                            row11.history_id = (long) (columnValue_0_tJDBCInput_11);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_11) {
				java.util.Map<String,Object> info_tJDBCInput_11 = e_tJDBCInput_11.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_11 = null;
					if(info_tJDBCInput_11.containsKey("error")){
						errorMessage_tJDBCInput_11 = info_tJDBCInput_11.get("error");
					}else if(info_tJDBCInput_11.containsKey("errorMessage")){
						errorMessage_tJDBCInput_11 = info_tJDBCInput_11.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_11 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_11 = "Row "+ nb_line_tJDBCInput_11 + ": "+errorMessage_tJDBCInput_11;
					System.err.println(errorMessage_tJDBCInput_11);
				
					// If the record is reject, the main line record should put NULL
					row11 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_11 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_11 = null;


 



/**
 * [tJDBCInput_11 begin ] stop
 */
	
	/**
	 * [tJDBCInput_11 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 


	tos_count_tJDBCInput_11++;

/**
 * [tJDBCInput_11 main ] stop
 */
	
	/**
	 * [tJDBCInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 



/**
 * [tJDBCInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_11 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_11 != null) {
            incomingEnforcer_tJDBCOutput_11.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_11 != null && incomingEnforcer_tJDBCOutput_11.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_11.put("history_id", row11.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_11 = null;
        if (incomingEnforcer_tJDBCOutput_11 != null) {
            data_tJDBCOutput_11 = incomingEnforcer_tJDBCOutput_11.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_11 != null && data_tJDBCOutput_11 != null) {
        	writer_tJDBCOutput_11.write(data_tJDBCOutput_11);
        }
        
        nb_line_tJDBCOutput_11++;

 


	tos_count_tJDBCOutput_11++;

/**
 * [tJDBCOutput_11 main ] stop
 */
	
	/**
	 * [tJDBCOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	


 



/**
 * [tJDBCOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	


 



/**
 * [tJDBCOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	


 



/**
 * [tJDBCInput_11 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_11 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	
// end of generic


resourceMap.put("finish_tJDBCInput_11", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_11 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_11 = null;
    if (reader_tJDBCInput_11 != null) {
        reader_tJDBCInput_11.close();
        resultMap_tJDBCInput_11 = reader_tJDBCInput_11.getReturnValues();
    }
if(resultMap_tJDBCInput_11!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_11 : resultMap_tJDBCInput_11.entrySet()) {
		switch(entry_tJDBCInput_11.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "ERROR_MESSAGE", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_LINE", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_SUCCESS", entry_tJDBCInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", "NB_REJECT", entry_tJDBCInput_11.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_11 = new StringBuilder();
            for (int i_tJDBCInput_11 = 0; i_tJDBCInput_11 < entry_tJDBCInput_11.getKey().length(); i_tJDBCInput_11++) {
                char ch_tJDBCInput_11 = entry_tJDBCInput_11.getKey().charAt(i_tJDBCInput_11);
                if(Character.isUpperCase(ch_tJDBCInput_11) && i_tJDBCInput_11> 0) {
                	studio_key_tJDBCInput_11.append('_');
                }
                studio_key_tJDBCInput_11.append(ch_tJDBCInput_11);
            }
			container_tJDBCInput_11.setComponentData("tJDBCInput_11", studio_key_tJDBCInput_11.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_11.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_11", true);
end_Hash.put("tJDBCInput_11", System.currentTimeMillis());




/**
 * [tJDBCInput_11 end ] stop
 */

	
	/**
	 * [tJDBCOutput_11 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_11", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_11 = null;
    if (writer_tJDBCOutput_11 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_11 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_11.close();
        resultMap_tJDBCOutput_11 = writer_tJDBCOutput_11.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_11), container_tJDBCOutput_11);
    }
if(resultMap_tJDBCOutput_11!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_11 : resultMap_tJDBCOutput_11.entrySet()) {
		switch(entry_tJDBCOutput_11.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "ERROR_MESSAGE", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_LINE", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_SUCCESS", entry_tJDBCOutput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", "NB_REJECT", entry_tJDBCOutput_11.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_11 = new StringBuilder();
            for (int i_tJDBCOutput_11 = 0; i_tJDBCOutput_11 < entry_tJDBCOutput_11.getKey().length(); i_tJDBCOutput_11++) {
                char ch_tJDBCOutput_11 = entry_tJDBCOutput_11.getKey().charAt(i_tJDBCOutput_11);
                if(Character.isUpperCase(ch_tJDBCOutput_11) && i_tJDBCOutput_11> 0) {
                	studio_key_tJDBCOutput_11.append('_');
                }
                studio_key_tJDBCOutput_11.append(ch_tJDBCOutput_11);
            }
			container_tJDBCOutput_11.setComponentData("tJDBCOutput_11", studio_key_tJDBCOutput_11.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_11.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_11", true);
end_Hash.put("tJDBCOutput_11", System.currentTimeMillis());




/**
 * [tJDBCOutput_11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_11 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_11";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_11")==null){
    if(resourceMap.get("reader_tJDBCInput_11")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_11")).close();
		} catch (java.io.IOException e_tJDBCInput_11) {
			String errorMessage_tJDBCInput_11 = "failed to release the resource in tJDBCInput_11 :" + e_tJDBCInput_11.getMessage();
			System.err.println(errorMessage_tJDBCInput_11);
		}
	}
}
 



/**
 * [tJDBCInput_11 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_11";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_11")==null){
    if(resourceMap.get("writer_tJDBCOutput_11")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_11")).close();
		} catch (java.io.IOException e_tJDBCOutput_11) {
			String errorMessage_tJDBCOutput_11 = "failed to release the resource in tJDBCOutput_11 :" + e_tJDBCOutput_11.getMessage();
			System.err.println(errorMessage_tJDBCOutput_11);
		}
	}
}
 



/**
 * [tJDBCOutput_11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tJDBCOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_12", false);
		start_Hash.put("tJDBCOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_12";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tJDBCOutput_12 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_12 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_12 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_12 = (String)(restRequest_tJDBCOutput_12 != null ? restRequest_tJDBCOutput_12.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_12 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_12 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_12 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_12 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_12.createRuntimeProperties();
 		                    props_tJDBCOutput_12.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_12.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_12.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_12.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_12.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_12.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_12.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_12.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_12.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_12.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_12.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_12.tableSelection.setValue("tablename",
 		                    "storage_domain_hourly_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_12_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_12\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_12_1_fisrt sst_tJDBCOutput_12_1_fisrt = new SchemaSettingTool_tJDBCOutput_12_1_fisrt();
 		                    
 		                    props_tJDBCOutput_12.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_12_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_12_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_12\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_12_2_fisrt sst_tJDBCOutput_12_2_fisrt = new SchemaSettingTool_tJDBCOutput_12_2_fisrt();
 		                    
 		                    props_tJDBCOutput_12.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_12_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_12_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_12\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_12_3_fisrt sst_tJDBCOutput_12_3_fisrt = new SchemaSettingTool_tJDBCOutput_12_3_fisrt();
 		                    
 		                    props_tJDBCOutput_12.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_12_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_12.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_12.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_12.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_12 = props_tJDBCOutput_12.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_12 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_12 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_12 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_12.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_12);
        }
    }
globalMap.put("tJDBCOutput_12_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_12);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_12= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_12_MAPPINGS_URL", mappings_url_tJDBCOutput_12);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_12 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_12";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_12 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_12 = null;
topology_tJDBCOutput_12 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_12 = def_tJDBCOutput_12.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_12, topology_tJDBCOutput_12);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_12 = def_tJDBCOutput_12.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_12 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_12.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_12 = componentRuntime_tJDBCOutput_12.initialize(container_tJDBCOutput_12, props_tJDBCOutput_12);

if (initVr_tJDBCOutput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_12.getMessage());
}

if(componentRuntime_tJDBCOutput_12 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_12 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_12;
	compDriverInitialization_tJDBCOutput_12.runAtDriver(container_tJDBCOutput_12);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_12 = null;
if(componentRuntime_tJDBCOutput_12 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_12 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_12;
	if (doesNodeBelongToRequest_tJDBCOutput_12) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_12 = sourceOrSink_tJDBCOutput_12.validate(container_tJDBCOutput_12);
        if (vr_tJDBCOutput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_12.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_12 = null;
    if (sourceOrSink_tJDBCOutput_12 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_12 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_12;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_12 = sink_tJDBCOutput_12.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_12) {
            writeOperation_tJDBCOutput_12.initialize(container_tJDBCOutput_12);
        }
        writer_tJDBCOutput_12 = writeOperation_tJDBCOutput_12.createWriter(container_tJDBCOutput_12);
        if (doesNodeBelongToRequest_tJDBCOutput_12) {
            writer_tJDBCOutput_12.open("tJDBCOutput_12");
        }

        resourceMap.put("writer_tJDBCOutput_12", writer_tJDBCOutput_12);
    } // end of "sourceOrSink_tJDBCOutput_12 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_12 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_12.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_12 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_12 = props_tJDBCOutput_12.getSchema(c_tJDBCOutput_12, false);
    incomingEnforcer_tJDBCOutput_12 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_12);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_12 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_12 = null;


 



/**
 * [tJDBCOutput_12 begin ] stop
 */



	
	/**
	 * [tJDBCInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_12", false);
		start_Hash.put("tJDBCInput_12", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_12";

	
		int tos_count_tJDBCInput_12 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_12 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_12 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_12 = (String)(restRequest_tJDBCInput_12 != null ? restRequest_tJDBCInput_12.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_12 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_12 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_12 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_12 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_12.createRuntimeProperties();
 		                    props_tJDBCInput_12.setValue("sql",
 		                    "SELECT history_id\nFROM storage_domain_hourly_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_12.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_12.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_12.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_12_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_12\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_12_1_fisrt sst_tJDBCInput_12_1_fisrt = new SchemaSettingTool_tJDBCInput_12_1_fisrt();
 		                    
 		                    props_tJDBCInput_12.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_12_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_12.tableSelection.setValue("tablename",
 		                    "storage_domain_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_12_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_12.trimTable).setValue("trim",tJDBCInput_12_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_12_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_12_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_12.trimTable).setValue("columnName",tJDBCInput_12_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_12.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_12 = props_tJDBCInput_12.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_12 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_12 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_12 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_12.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_12);
        }
    }
globalMap.put("tJDBCInput_12_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_12);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_12= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_12_MAPPINGS_URL", mappings_url_tJDBCInput_12);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_12 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_12";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_12 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_12 = null;
topology_tJDBCInput_12 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_12 = def_tJDBCInput_12.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_12, topology_tJDBCInput_12);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_12 = def_tJDBCInput_12.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_12 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_12.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_12 = componentRuntime_tJDBCInput_12.initialize(container_tJDBCInput_12, props_tJDBCInput_12);

if (initVr_tJDBCInput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_12.getMessage());
}

if(componentRuntime_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_12 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_12;
	compDriverInitialization_tJDBCInput_12.runAtDriver(container_tJDBCInput_12);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_12 = null;
if(componentRuntime_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_12 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_12;
	if (doesNodeBelongToRequest_tJDBCInput_12) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_12 = sourceOrSink_tJDBCInput_12.validate(container_tJDBCInput_12);
        if (vr_tJDBCInput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_12.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_12 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_12;
        reader_tJDBCInput_12 = source_tJDBCInput_12.createReader(container_tJDBCInput_12);
	    reader_tJDBCInput_12 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_12, container_tJDBCInput_12);

            boolean multi_output_is_allowed_tJDBCInput_12 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_12 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_12.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_12 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_12 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_12 = props_tJDBCInput_12.getSchema(c_tJDBCInput_12, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_12 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_12, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_12 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_12 = reader_tJDBCInput_12.start();

        resourceMap.put("reader_tJDBCInput_12", reader_tJDBCInput_12);

        for (; available_tJDBCInput_12; available_tJDBCInput_12 = reader_tJDBCInput_12.advance()) {
			nb_line_tJDBCInput_12++;

			
			if (multi_output_is_allowed_tJDBCInput_12) {
				
					row7 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_12 = reader_tJDBCInput_12.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_12) {
						row7 = new row7Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_12 == null) {
            factory_tJDBCInput_12 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_12.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_12.setWrapped(factory_tJDBCInput_12.convertToAvro(data_tJDBCInput_12));
                Object columnValue_0_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(0);
                    if (columnValue_0_tJDBCInput_12 == null) {
                        row7.history_id = 0;
                    } else {
                            row7.history_id = (long) (columnValue_0_tJDBCInput_12);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_12) {
				java.util.Map<String,Object> info_tJDBCInput_12 = e_tJDBCInput_12.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_12 = null;
					if(info_tJDBCInput_12.containsKey("error")){
						errorMessage_tJDBCInput_12 = info_tJDBCInput_12.get("error");
					}else if(info_tJDBCInput_12.containsKey("errorMessage")){
						errorMessage_tJDBCInput_12 = info_tJDBCInput_12.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_12 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_12 = "Row "+ nb_line_tJDBCInput_12 + ": "+errorMessage_tJDBCInput_12;
					System.err.println(errorMessage_tJDBCInput_12);
				
					// If the record is reject, the main line record should put NULL
					row7 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_12 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_12 = null;


 



/**
 * [tJDBCInput_12 begin ] stop
 */
	
	/**
	 * [tJDBCInput_12 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 


	tos_count_tJDBCInput_12++;

/**
 * [tJDBCInput_12 main ] stop
 */
	
	/**
	 * [tJDBCInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 



/**
 * [tJDBCInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_12 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_12";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_12 != null) {
            incomingEnforcer_tJDBCOutput_12.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_12 != null && incomingEnforcer_tJDBCOutput_12.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_12.put("history_id", row7.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_12 = null;
        if (incomingEnforcer_tJDBCOutput_12 != null) {
            data_tJDBCOutput_12 = incomingEnforcer_tJDBCOutput_12.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_12 != null && data_tJDBCOutput_12 != null) {
        	writer_tJDBCOutput_12.write(data_tJDBCOutput_12);
        }
        
        nb_line_tJDBCOutput_12++;

 


	tos_count_tJDBCOutput_12++;

/**
 * [tJDBCOutput_12 main ] stop
 */
	
	/**
	 * [tJDBCOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_12";

	


 



/**
 * [tJDBCOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_12";

	


 



/**
 * [tJDBCOutput_12 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 



/**
 * [tJDBCInput_12 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_12 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	
// end of generic


resourceMap.put("finish_tJDBCInput_12", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_12 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_12 = null;
    if (reader_tJDBCInput_12 != null) {
        reader_tJDBCInput_12.close();
        resultMap_tJDBCInput_12 = reader_tJDBCInput_12.getReturnValues();
    }
if(resultMap_tJDBCInput_12!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_12 : resultMap_tJDBCInput_12.entrySet()) {
		switch(entry_tJDBCInput_12.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "ERROR_MESSAGE", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_LINE", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_SUCCESS", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_REJECT", entry_tJDBCInput_12.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_12 = new StringBuilder();
            for (int i_tJDBCInput_12 = 0; i_tJDBCInput_12 < entry_tJDBCInput_12.getKey().length(); i_tJDBCInput_12++) {
                char ch_tJDBCInput_12 = entry_tJDBCInput_12.getKey().charAt(i_tJDBCInput_12);
                if(Character.isUpperCase(ch_tJDBCInput_12) && i_tJDBCInput_12> 0) {
                	studio_key_tJDBCInput_12.append('_');
                }
                studio_key_tJDBCInput_12.append(ch_tJDBCInput_12);
            }
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", studio_key_tJDBCInput_12.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_12.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_12", true);
end_Hash.put("tJDBCInput_12", System.currentTimeMillis());




/**
 * [tJDBCInput_12 end ] stop
 */

	
	/**
	 * [tJDBCOutput_12 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_12";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_12", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_12 = null;
    if (writer_tJDBCOutput_12 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_12 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_12.close();
        resultMap_tJDBCOutput_12 = writer_tJDBCOutput_12.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_12), container_tJDBCOutput_12);
    }
if(resultMap_tJDBCOutput_12!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_12 : resultMap_tJDBCOutput_12.entrySet()) {
		switch(entry_tJDBCOutput_12.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_12.setComponentData("tJDBCOutput_12", "ERROR_MESSAGE", entry_tJDBCOutput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_12.setComponentData("tJDBCOutput_12", "NB_LINE", entry_tJDBCOutput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_12.setComponentData("tJDBCOutput_12", "NB_SUCCESS", entry_tJDBCOutput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_12.setComponentData("tJDBCOutput_12", "NB_REJECT", entry_tJDBCOutput_12.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_12 = new StringBuilder();
            for (int i_tJDBCOutput_12 = 0; i_tJDBCOutput_12 < entry_tJDBCOutput_12.getKey().length(); i_tJDBCOutput_12++) {
                char ch_tJDBCOutput_12 = entry_tJDBCOutput_12.getKey().charAt(i_tJDBCOutput_12);
                if(Character.isUpperCase(ch_tJDBCOutput_12) && i_tJDBCOutput_12> 0) {
                	studio_key_tJDBCOutput_12.append('_');
                }
                studio_key_tJDBCOutput_12.append(ch_tJDBCOutput_12);
            }
			container_tJDBCOutput_12.setComponentData("tJDBCOutput_12", studio_key_tJDBCOutput_12.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_12.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_12", true);
end_Hash.put("tJDBCOutput_12", System.currentTimeMillis());




/**
 * [tJDBCOutput_12 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_12 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_12")==null){
    if(resourceMap.get("reader_tJDBCInput_12")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_12")).close();
		} catch (java.io.IOException e_tJDBCInput_12) {
			String errorMessage_tJDBCInput_12 = "failed to release the resource in tJDBCInput_12 :" + e_tJDBCInput_12.getMessage();
			System.err.println(errorMessage_tJDBCInput_12);
		}
	}
}
 



/**
 * [tJDBCInput_12 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_12";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_12")==null){
    if(resourceMap.get("writer_tJDBCOutput_12")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_12")).close();
		} catch (java.io.IOException e_tJDBCOutput_12) {
			String errorMessage_tJDBCOutput_12 = "failed to release the resource in tJDBCOutput_12 :" + e_tJDBCOutput_12.getMessage();
			System.err.println(errorMessage_tJDBCOutput_12);
		}
	}
}
 



/**
 * [tJDBCOutput_12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tJDBCOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_13", false);
		start_Hash.put("tJDBCOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_13";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJDBCOutput_13 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_13 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_13 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_13 = (String)(restRequest_tJDBCOutput_13 != null ? restRequest_tJDBCOutput_13.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_13 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_13 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_13 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_13 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_13.createRuntimeProperties();
 		                    props_tJDBCOutput_13.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_13.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_13.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_13.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_13.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_13.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_13.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_13.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_13.tableSelection.setValue("tablename",
 		                    "vm_disk_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_13_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_13\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_13_1_fisrt sst_tJDBCOutput_13_1_fisrt = new SchemaSettingTool_tJDBCOutput_13_1_fisrt();
 		                    
 		                    props_tJDBCOutput_13.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_13_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_13_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_13\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_13_2_fisrt sst_tJDBCOutput_13_2_fisrt = new SchemaSettingTool_tJDBCOutput_13_2_fisrt();
 		                    
 		                    props_tJDBCOutput_13.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_13_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_13_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_13\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_13_3_fisrt sst_tJDBCOutput_13_3_fisrt = new SchemaSettingTool_tJDBCOutput_13_3_fisrt();
 		                    
 		                    props_tJDBCOutput_13.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_13_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_13.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_13.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_13.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_13 = props_tJDBCOutput_13.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_13 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_13 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_13 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_13.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_13);
        }
    }
globalMap.put("tJDBCOutput_13_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_13);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_13= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_13_MAPPINGS_URL", mappings_url_tJDBCOutput_13);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_13 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_13";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_13 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_13 = null;
topology_tJDBCOutput_13 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_13 = def_tJDBCOutput_13.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_13, topology_tJDBCOutput_13);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_13 = def_tJDBCOutput_13.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_13 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_13.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_13 = componentRuntime_tJDBCOutput_13.initialize(container_tJDBCOutput_13, props_tJDBCOutput_13);

if (initVr_tJDBCOutput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_13.getMessage());
}

if(componentRuntime_tJDBCOutput_13 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_13 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_13;
	compDriverInitialization_tJDBCOutput_13.runAtDriver(container_tJDBCOutput_13);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_13 = null;
if(componentRuntime_tJDBCOutput_13 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_13 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_13;
	if (doesNodeBelongToRequest_tJDBCOutput_13) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_13 = sourceOrSink_tJDBCOutput_13.validate(container_tJDBCOutput_13);
        if (vr_tJDBCOutput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_13.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_13 = null;
    if (sourceOrSink_tJDBCOutput_13 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_13 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_13;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_13 = sink_tJDBCOutput_13.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_13) {
            writeOperation_tJDBCOutput_13.initialize(container_tJDBCOutput_13);
        }
        writer_tJDBCOutput_13 = writeOperation_tJDBCOutput_13.createWriter(container_tJDBCOutput_13);
        if (doesNodeBelongToRequest_tJDBCOutput_13) {
            writer_tJDBCOutput_13.open("tJDBCOutput_13");
        }

        resourceMap.put("writer_tJDBCOutput_13", writer_tJDBCOutput_13);
    } // end of "sourceOrSink_tJDBCOutput_13 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_13 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_13.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_13 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_13 = props_tJDBCOutput_13.getSchema(c_tJDBCOutput_13, false);
    incomingEnforcer_tJDBCOutput_13 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_13);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_13 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_13 = null;


 



/**
 * [tJDBCOutput_13 begin ] stop
 */



	
	/**
	 * [tJDBCInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_13", false);
		start_Hash.put("tJDBCInput_13", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_13";

	
		int tos_count_tJDBCInput_13 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_13 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_13 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_13 = (String)(restRequest_tJDBCInput_13 != null ? restRequest_tJDBCInput_13.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_13 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_13 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_13 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_13 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_13.createRuntimeProperties();
 		                    props_tJDBCInput_13.setValue("sql",
 		                    "SELECT history_id\nFROM vm_disk_samples_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepSamples * -1,"HH"))+"'"
+ "limit " + (( context.timesDeleteRun - (context.timesDeleteRun % context.deleteIncrement ) ) / context.deleteIncrement + 1)
* context.deleteMultiplier);
 		                    
 		                    props_tJDBCInput_13.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_13.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_13.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_13_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_13\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_13_1_fisrt sst_tJDBCInput_13_1_fisrt = new SchemaSettingTool_tJDBCInput_13_1_fisrt();
 		                    
 		                    props_tJDBCInput_13.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_13_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_13.tableSelection.setValue("tablename",
 		                    "vm_disk_samples_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_13_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_13.trimTable).setValue("trim",tJDBCInput_13_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_13_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_13_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_13.trimTable).setValue("columnName",tJDBCInput_13_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_13.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_13 = props_tJDBCInput_13.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_13 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_13 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_13 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_13.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_13);
        }
    }
globalMap.put("tJDBCInput_13_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_13);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_13= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_13_MAPPINGS_URL", mappings_url_tJDBCInput_13);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_13 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_13";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_13 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_13 = null;
topology_tJDBCInput_13 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_13 = def_tJDBCInput_13.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_13, topology_tJDBCInput_13);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_13 = def_tJDBCInput_13.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_13 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_13.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_13 = componentRuntime_tJDBCInput_13.initialize(container_tJDBCInput_13, props_tJDBCInput_13);

if (initVr_tJDBCInput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_13.getMessage());
}

if(componentRuntime_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_13 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_13;
	compDriverInitialization_tJDBCInput_13.runAtDriver(container_tJDBCInput_13);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_13 = null;
if(componentRuntime_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_13 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_13;
	if (doesNodeBelongToRequest_tJDBCInput_13) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_13 = sourceOrSink_tJDBCInput_13.validate(container_tJDBCInput_13);
        if (vr_tJDBCInput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_13.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_13 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_13;
        reader_tJDBCInput_13 = source_tJDBCInput_13.createReader(container_tJDBCInput_13);
	    reader_tJDBCInput_13 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_13, container_tJDBCInput_13);

            boolean multi_output_is_allowed_tJDBCInput_13 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_13 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_13.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_13 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_13 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_13 = props_tJDBCInput_13.getSchema(c_tJDBCInput_13, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_13 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_13, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_13 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_13 = reader_tJDBCInput_13.start();

        resourceMap.put("reader_tJDBCInput_13", reader_tJDBCInput_13);

        for (; available_tJDBCInput_13; available_tJDBCInput_13 = reader_tJDBCInput_13.advance()) {
			nb_line_tJDBCInput_13++;

			
			if (multi_output_is_allowed_tJDBCInput_13) {
				
					row1 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_13 = reader_tJDBCInput_13.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_13) {
						row1 = new row1Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_13 == null) {
            factory_tJDBCInput_13 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_13.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_13.setWrapped(factory_tJDBCInput_13.convertToAvro(data_tJDBCInput_13));
                Object columnValue_0_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(0);
                    if (columnValue_0_tJDBCInput_13 == null) {
                        row1.history_id = 0;
                    } else {
                            row1.history_id = (long) (columnValue_0_tJDBCInput_13);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_13) {
				java.util.Map<String,Object> info_tJDBCInput_13 = e_tJDBCInput_13.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_13 = null;
					if(info_tJDBCInput_13.containsKey("error")){
						errorMessage_tJDBCInput_13 = info_tJDBCInput_13.get("error");
					}else if(info_tJDBCInput_13.containsKey("errorMessage")){
						errorMessage_tJDBCInput_13 = info_tJDBCInput_13.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_13 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_13 = "Row "+ nb_line_tJDBCInput_13 + ": "+errorMessage_tJDBCInput_13;
					System.err.println(errorMessage_tJDBCInput_13);
				
					// If the record is reject, the main line record should put NULL
					row1 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_13 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_13 = null;


 



/**
 * [tJDBCInput_13 begin ] stop
 */
	
	/**
	 * [tJDBCInput_13 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 


	tos_count_tJDBCInput_13++;

/**
 * [tJDBCInput_13 main ] stop
 */
	
	/**
	 * [tJDBCInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 



/**
 * [tJDBCInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_13 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_13 != null) {
            incomingEnforcer_tJDBCOutput_13.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_13 != null && incomingEnforcer_tJDBCOutput_13.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_13.put("history_id", row1.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_13 = null;
        if (incomingEnforcer_tJDBCOutput_13 != null) {
            data_tJDBCOutput_13 = incomingEnforcer_tJDBCOutput_13.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_13 != null && data_tJDBCOutput_13 != null) {
        	writer_tJDBCOutput_13.write(data_tJDBCOutput_13);
        }
        
        nb_line_tJDBCOutput_13++;

 


	tos_count_tJDBCOutput_13++;

/**
 * [tJDBCOutput_13 main ] stop
 */
	
	/**
	 * [tJDBCOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	


 



/**
 * [tJDBCOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	


 



/**
 * [tJDBCOutput_13 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 



/**
 * [tJDBCInput_13 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_13 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	
// end of generic


resourceMap.put("finish_tJDBCInput_13", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_13 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_13 = null;
    if (reader_tJDBCInput_13 != null) {
        reader_tJDBCInput_13.close();
        resultMap_tJDBCInput_13 = reader_tJDBCInput_13.getReturnValues();
    }
if(resultMap_tJDBCInput_13!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_13 : resultMap_tJDBCInput_13.entrySet()) {
		switch(entry_tJDBCInput_13.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "ERROR_MESSAGE", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_LINE", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_SUCCESS", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_REJECT", entry_tJDBCInput_13.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_13 = new StringBuilder();
            for (int i_tJDBCInput_13 = 0; i_tJDBCInput_13 < entry_tJDBCInput_13.getKey().length(); i_tJDBCInput_13++) {
                char ch_tJDBCInput_13 = entry_tJDBCInput_13.getKey().charAt(i_tJDBCInput_13);
                if(Character.isUpperCase(ch_tJDBCInput_13) && i_tJDBCInput_13> 0) {
                	studio_key_tJDBCInput_13.append('_');
                }
                studio_key_tJDBCInput_13.append(ch_tJDBCInput_13);
            }
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", studio_key_tJDBCInput_13.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_13.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_13", true);
end_Hash.put("tJDBCInput_13", System.currentTimeMillis());




/**
 * [tJDBCInput_13 end ] stop
 */

	
	/**
	 * [tJDBCOutput_13 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_13", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_13 = null;
    if (writer_tJDBCOutput_13 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_13 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_13.close();
        resultMap_tJDBCOutput_13 = writer_tJDBCOutput_13.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_13), container_tJDBCOutput_13);
    }
if(resultMap_tJDBCOutput_13!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_13 : resultMap_tJDBCOutput_13.entrySet()) {
		switch(entry_tJDBCOutput_13.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "ERROR_MESSAGE", entry_tJDBCOutput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "NB_LINE", entry_tJDBCOutput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "NB_SUCCESS", entry_tJDBCOutput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", "NB_REJECT", entry_tJDBCOutput_13.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_13 = new StringBuilder();
            for (int i_tJDBCOutput_13 = 0; i_tJDBCOutput_13 < entry_tJDBCOutput_13.getKey().length(); i_tJDBCOutput_13++) {
                char ch_tJDBCOutput_13 = entry_tJDBCOutput_13.getKey().charAt(i_tJDBCOutput_13);
                if(Character.isUpperCase(ch_tJDBCOutput_13) && i_tJDBCOutput_13> 0) {
                	studio_key_tJDBCOutput_13.append('_');
                }
                studio_key_tJDBCOutput_13.append(ch_tJDBCOutput_13);
            }
			container_tJDBCOutput_13.setComponentData("tJDBCOutput_13", studio_key_tJDBCOutput_13.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_13.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_13", true);
end_Hash.put("tJDBCOutput_13", System.currentTimeMillis());




/**
 * [tJDBCOutput_13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_13 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_13")==null){
    if(resourceMap.get("reader_tJDBCInput_13")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_13")).close();
		} catch (java.io.IOException e_tJDBCInput_13) {
			String errorMessage_tJDBCInput_13 = "failed to release the resource in tJDBCInput_13 :" + e_tJDBCInput_13.getMessage();
			System.err.println(errorMessage_tJDBCInput_13);
		}
	}
}
 



/**
 * [tJDBCInput_13 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_13";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_13")==null){
    if(resourceMap.get("writer_tJDBCOutput_13")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_13")).close();
		} catch (java.io.IOException e_tJDBCOutput_13) {
			String errorMessage_tJDBCOutput_13 = "failed to release the resource in tJDBCOutput_13 :" + e_tJDBCOutput_13.getMessage();
			System.err.println(errorMessage_tJDBCOutput_13);
		}
	}
}
 



/**
 * [tJDBCOutput_13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row14Struct other = (row14Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row14Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row14Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tJDBCOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_14", false);
		start_Hash.put("tJDBCOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_14";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tJDBCOutput_14 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_14 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_14 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_14 = (String)(restRequest_tJDBCOutput_14 != null ? restRequest_tJDBCOutput_14.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_14 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_14 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_14 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_14 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_14.createRuntimeProperties();
 		                    props_tJDBCOutput_14.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_14.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_14.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_14.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_14.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_14.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_14.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_14.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_14.tableSelection.setValue("tablename",
 		                    "vm_disk_hourly_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_14_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_14\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_14_1_fisrt sst_tJDBCOutput_14_1_fisrt = new SchemaSettingTool_tJDBCOutput_14_1_fisrt();
 		                    
 		                    props_tJDBCOutput_14.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_14_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_14_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_14\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_14_2_fisrt sst_tJDBCOutput_14_2_fisrt = new SchemaSettingTool_tJDBCOutput_14_2_fisrt();
 		                    
 		                    props_tJDBCOutput_14.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_14_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_14_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_14\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_14_3_fisrt sst_tJDBCOutput_14_3_fisrt = new SchemaSettingTool_tJDBCOutput_14_3_fisrt();
 		                    
 		                    props_tJDBCOutput_14.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_14_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_14.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_14.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_14.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_14 = props_tJDBCOutput_14.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_14 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_14 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_14 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_14.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_14);
        }
    }
globalMap.put("tJDBCOutput_14_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_14);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_14= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_14_MAPPINGS_URL", mappings_url_tJDBCOutput_14);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_14 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_14";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_14 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_14 = null;
topology_tJDBCOutput_14 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_14 = def_tJDBCOutput_14.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_14, topology_tJDBCOutput_14);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_14 = def_tJDBCOutput_14.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_14 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_14.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_14 = componentRuntime_tJDBCOutput_14.initialize(container_tJDBCOutput_14, props_tJDBCOutput_14);

if (initVr_tJDBCOutput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_14.getMessage());
}

if(componentRuntime_tJDBCOutput_14 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_14 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_14;
	compDriverInitialization_tJDBCOutput_14.runAtDriver(container_tJDBCOutput_14);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_14 = null;
if(componentRuntime_tJDBCOutput_14 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_14 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_14;
	if (doesNodeBelongToRequest_tJDBCOutput_14) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_14 = sourceOrSink_tJDBCOutput_14.validate(container_tJDBCOutput_14);
        if (vr_tJDBCOutput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_14.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_14 = null;
    if (sourceOrSink_tJDBCOutput_14 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_14 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_14;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_14 = sink_tJDBCOutput_14.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_14) {
            writeOperation_tJDBCOutput_14.initialize(container_tJDBCOutput_14);
        }
        writer_tJDBCOutput_14 = writeOperation_tJDBCOutput_14.createWriter(container_tJDBCOutput_14);
        if (doesNodeBelongToRequest_tJDBCOutput_14) {
            writer_tJDBCOutput_14.open("tJDBCOutput_14");
        }

        resourceMap.put("writer_tJDBCOutput_14", writer_tJDBCOutput_14);
    } // end of "sourceOrSink_tJDBCOutput_14 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_14 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_14.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_14 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_14 = props_tJDBCOutput_14.getSchema(c_tJDBCOutput_14, false);
    incomingEnforcer_tJDBCOutput_14 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_14);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_14 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_14 = null;


 



/**
 * [tJDBCOutput_14 begin ] stop
 */



	
	/**
	 * [tJDBCInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_14", false);
		start_Hash.put("tJDBCInput_14", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_14";

	
		int tos_count_tJDBCInput_14 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_14 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_14 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_14 = (String)(restRequest_tJDBCInput_14 != null ? restRequest_tJDBCInput_14.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_14 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_14 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_14 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_14 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_14.createRuntimeProperties();
 		                    props_tJDBCInput_14.setValue("sql",
 		                    "SELECT history_id\nFROM vm_disk_hourly_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_14.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_14.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_14.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_14_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_14\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_14_1_fisrt sst_tJDBCInput_14_1_fisrt = new SchemaSettingTool_tJDBCInput_14_1_fisrt();
 		                    
 		                    props_tJDBCInput_14.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_14_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_14.tableSelection.setValue("tablename",
 		                    "vm_disk_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_14_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_14_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_14.trimTable).setValue("trim",tJDBCInput_14_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_14_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_14_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_14.trimTable).setValue("columnName",tJDBCInput_14_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_14.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_14 = props_tJDBCInput_14.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_14 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_14 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_14 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_14.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_14);
        }
    }
globalMap.put("tJDBCInput_14_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_14);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_14= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_14_MAPPINGS_URL", mappings_url_tJDBCInput_14);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_14 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_14";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_14 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_14 = null;
topology_tJDBCInput_14 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_14 = def_tJDBCInput_14.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_14, topology_tJDBCInput_14);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_14 = def_tJDBCInput_14.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_14 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_14.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_14 = componentRuntime_tJDBCInput_14.initialize(container_tJDBCInput_14, props_tJDBCInput_14);

if (initVr_tJDBCInput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_14.getMessage());
}

if(componentRuntime_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_14 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_14;
	compDriverInitialization_tJDBCInput_14.runAtDriver(container_tJDBCInput_14);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_14 = null;
if(componentRuntime_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_14 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_14;
	if (doesNodeBelongToRequest_tJDBCInput_14) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_14 = sourceOrSink_tJDBCInput_14.validate(container_tJDBCInput_14);
        if (vr_tJDBCInput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_14.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_14 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_14;
        reader_tJDBCInput_14 = source_tJDBCInput_14.createReader(container_tJDBCInput_14);
	    reader_tJDBCInput_14 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_14, container_tJDBCInput_14);

            boolean multi_output_is_allowed_tJDBCInput_14 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_14 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_14.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_14 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_14 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_14 = props_tJDBCInput_14.getSchema(c_tJDBCInput_14, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_14 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_14, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_14 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_14 = reader_tJDBCInput_14.start();

        resourceMap.put("reader_tJDBCInput_14", reader_tJDBCInput_14);

        for (; available_tJDBCInput_14; available_tJDBCInput_14 = reader_tJDBCInput_14.advance()) {
			nb_line_tJDBCInput_14++;

			
			if (multi_output_is_allowed_tJDBCInput_14) {
				
					row14 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_14 = reader_tJDBCInput_14.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_14) {
						row14 = new row14Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_14 == null) {
            factory_tJDBCInput_14 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_14.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_14.setWrapped(factory_tJDBCInput_14.convertToAvro(data_tJDBCInput_14));
                Object columnValue_0_tJDBCInput_14 = outgoingEnforcer_tJDBCInput_14.get(0);
                    if (columnValue_0_tJDBCInput_14 == null) {
                        row14.history_id = 0;
                    } else {
                            row14.history_id = (long) (columnValue_0_tJDBCInput_14);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_14) {
				java.util.Map<String,Object> info_tJDBCInput_14 = e_tJDBCInput_14.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_14 = null;
					if(info_tJDBCInput_14.containsKey("error")){
						errorMessage_tJDBCInput_14 = info_tJDBCInput_14.get("error");
					}else if(info_tJDBCInput_14.containsKey("errorMessage")){
						errorMessage_tJDBCInput_14 = info_tJDBCInput_14.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_14 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_14 = "Row "+ nb_line_tJDBCInput_14 + ": "+errorMessage_tJDBCInput_14;
					System.err.println(errorMessage_tJDBCInput_14);
				
					// If the record is reject, the main line record should put NULL
					row14 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_14 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_14 = null;


 



/**
 * [tJDBCInput_14 begin ] stop
 */
	
	/**
	 * [tJDBCInput_14 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 


	tos_count_tJDBCInput_14++;

/**
 * [tJDBCInput_14 main ] stop
 */
	
	/**
	 * [tJDBCInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 



/**
 * [tJDBCInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_14 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_14 != null) {
            incomingEnforcer_tJDBCOutput_14.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_14 != null && incomingEnforcer_tJDBCOutput_14.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_14.put("history_id", row14.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_14 = null;
        if (incomingEnforcer_tJDBCOutput_14 != null) {
            data_tJDBCOutput_14 = incomingEnforcer_tJDBCOutput_14.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_14 != null && data_tJDBCOutput_14 != null) {
        	writer_tJDBCOutput_14.write(data_tJDBCOutput_14);
        }
        
        nb_line_tJDBCOutput_14++;

 


	tos_count_tJDBCOutput_14++;

/**
 * [tJDBCOutput_14 main ] stop
 */
	
	/**
	 * [tJDBCOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	


 



/**
 * [tJDBCOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	


 



/**
 * [tJDBCOutput_14 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 



/**
 * [tJDBCInput_14 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_14 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	
// end of generic


resourceMap.put("finish_tJDBCInput_14", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_14 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_14 = null;
    if (reader_tJDBCInput_14 != null) {
        reader_tJDBCInput_14.close();
        resultMap_tJDBCInput_14 = reader_tJDBCInput_14.getReturnValues();
    }
if(resultMap_tJDBCInput_14!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_14 : resultMap_tJDBCInput_14.entrySet()) {
		switch(entry_tJDBCInput_14.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "ERROR_MESSAGE", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_LINE", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_SUCCESS", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_REJECT", entry_tJDBCInput_14.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_14 = new StringBuilder();
            for (int i_tJDBCInput_14 = 0; i_tJDBCInput_14 < entry_tJDBCInput_14.getKey().length(); i_tJDBCInput_14++) {
                char ch_tJDBCInput_14 = entry_tJDBCInput_14.getKey().charAt(i_tJDBCInput_14);
                if(Character.isUpperCase(ch_tJDBCInput_14) && i_tJDBCInput_14> 0) {
                	studio_key_tJDBCInput_14.append('_');
                }
                studio_key_tJDBCInput_14.append(ch_tJDBCInput_14);
            }
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", studio_key_tJDBCInput_14.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_14.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_14", true);
end_Hash.put("tJDBCInput_14", System.currentTimeMillis());




/**
 * [tJDBCInput_14 end ] stop
 */

	
	/**
	 * [tJDBCOutput_14 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_14", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_14 = null;
    if (writer_tJDBCOutput_14 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_14 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_14.close();
        resultMap_tJDBCOutput_14 = writer_tJDBCOutput_14.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_14), container_tJDBCOutput_14);
    }
if(resultMap_tJDBCOutput_14!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_14 : resultMap_tJDBCOutput_14.entrySet()) {
		switch(entry_tJDBCOutput_14.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "ERROR_MESSAGE", entry_tJDBCOutput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "NB_LINE", entry_tJDBCOutput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "NB_SUCCESS", entry_tJDBCOutput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", "NB_REJECT", entry_tJDBCOutput_14.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_14 = new StringBuilder();
            for (int i_tJDBCOutput_14 = 0; i_tJDBCOutput_14 < entry_tJDBCOutput_14.getKey().length(); i_tJDBCOutput_14++) {
                char ch_tJDBCOutput_14 = entry_tJDBCOutput_14.getKey().charAt(i_tJDBCOutput_14);
                if(Character.isUpperCase(ch_tJDBCOutput_14) && i_tJDBCOutput_14> 0) {
                	studio_key_tJDBCOutput_14.append('_');
                }
                studio_key_tJDBCOutput_14.append(ch_tJDBCOutput_14);
            }
			container_tJDBCOutput_14.setComponentData("tJDBCOutput_14", studio_key_tJDBCOutput_14.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_14.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_14", true);
end_Hash.put("tJDBCOutput_14", System.currentTimeMillis());




/**
 * [tJDBCOutput_14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_14 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_14")==null){
    if(resourceMap.get("reader_tJDBCInput_14")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_14")).close();
		} catch (java.io.IOException e_tJDBCInput_14) {
			String errorMessage_tJDBCInput_14 = "failed to release the resource in tJDBCInput_14 :" + e_tJDBCInput_14.getMessage();
			System.err.println(errorMessage_tJDBCInput_14);
		}
	}
}
 



/**
 * [tJDBCInput_14 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_14";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_14")==null){
    if(resourceMap.get("writer_tJDBCOutput_14")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_14")).close();
		} catch (java.io.IOException e_tJDBCOutput_14) {
			String errorMessage_tJDBCOutput_14 = "failed to release the resource in tJDBCOutput_14 :" + e_tJDBCOutput_14.getMessage();
			System.err.println(errorMessage_tJDBCOutput_14);
		}
	}
}
 



/**
 * [tJDBCOutput_14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tJDBCOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_16", false);
		start_Hash.put("tJDBCOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_16";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tJDBCOutput_16 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_16 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_16 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_16 = (String)(restRequest_tJDBCOutput_16 != null ? restRequest_tJDBCOutput_16.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_16 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_16 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_16 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_16 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_16.createRuntimeProperties();
 		                    props_tJDBCOutput_16.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_16.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_16.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_16.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_16.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_16.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_16.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_16.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_16.tableSelection.setValue("tablename",
 		                    "storage_domain_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_16_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_16\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_16_1_fisrt sst_tJDBCOutput_16_1_fisrt = new SchemaSettingTool_tJDBCOutput_16_1_fisrt();
 		                    
 		                    props_tJDBCOutput_16.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_16_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_16_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_16\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_16_2_fisrt sst_tJDBCOutput_16_2_fisrt = new SchemaSettingTool_tJDBCOutput_16_2_fisrt();
 		                    
 		                    props_tJDBCOutput_16.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_16_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_16_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_16\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_16_3_fisrt sst_tJDBCOutput_16_3_fisrt = new SchemaSettingTool_tJDBCOutput_16_3_fisrt();
 		                    
 		                    props_tJDBCOutput_16.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_16_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_16.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_16.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_16.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_16 = props_tJDBCOutput_16.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_16 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_16 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_16 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_16.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_16);
        }
    }
globalMap.put("tJDBCOutput_16_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_16);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_16= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_16_MAPPINGS_URL", mappings_url_tJDBCOutput_16);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_16 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_16";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_16 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_16 = null;
topology_tJDBCOutput_16 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_16 = def_tJDBCOutput_16.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_16, topology_tJDBCOutput_16);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_16 = def_tJDBCOutput_16.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_16 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_16.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_16 = componentRuntime_tJDBCOutput_16.initialize(container_tJDBCOutput_16, props_tJDBCOutput_16);

if (initVr_tJDBCOutput_16.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_16.getMessage());
}

if(componentRuntime_tJDBCOutput_16 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_16 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_16;
	compDriverInitialization_tJDBCOutput_16.runAtDriver(container_tJDBCOutput_16);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_16 = null;
if(componentRuntime_tJDBCOutput_16 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_16 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_16;
	if (doesNodeBelongToRequest_tJDBCOutput_16) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_16 = sourceOrSink_tJDBCOutput_16.validate(container_tJDBCOutput_16);
        if (vr_tJDBCOutput_16.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_16.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_16 = null;
    if (sourceOrSink_tJDBCOutput_16 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_16 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_16;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_16 = sink_tJDBCOutput_16.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_16) {
            writeOperation_tJDBCOutput_16.initialize(container_tJDBCOutput_16);
        }
        writer_tJDBCOutput_16 = writeOperation_tJDBCOutput_16.createWriter(container_tJDBCOutput_16);
        if (doesNodeBelongToRequest_tJDBCOutput_16) {
            writer_tJDBCOutput_16.open("tJDBCOutput_16");
        }

        resourceMap.put("writer_tJDBCOutput_16", writer_tJDBCOutput_16);
    } // end of "sourceOrSink_tJDBCOutput_16 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_16 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_16.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_16 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_16 = props_tJDBCOutput_16.getSchema(c_tJDBCOutput_16, false);
    incomingEnforcer_tJDBCOutput_16 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_16);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_16 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_16 = null;


 



/**
 * [tJDBCOutput_16 begin ] stop
 */



	
	/**
	 * [tJDBCInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_16", false);
		start_Hash.put("tJDBCInput_16", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_16";

	
		int tos_count_tJDBCInput_16 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_16 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_16 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_16 = (String)(restRequest_tJDBCInput_16 != null ? restRequest_tJDBCInput_16.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_16 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_16 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_16 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_16 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_16.createRuntimeProperties();
 		                    props_tJDBCInput_16.setValue("sql",
 		                    "SELECT history_id\nFROM storage_domain_daily_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_16.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_16.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_16.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_16.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_16.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_16.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_16.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_16.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_16.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_16_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('storage_domain_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_16\",\"di.table.label\":\"storage_domain_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_16_1_fisrt sst_tJDBCInput_16_1_fisrt = new SchemaSettingTool_tJDBCInput_16_1_fisrt();
 		                    
 		                    props_tJDBCInput_16.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_16_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_16.tableSelection.setValue("tablename",
 		                    "storage_domain_daily_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_16_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_16_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_16.trimTable).setValue("trim",tJDBCInput_16_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_16_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_16_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_16.trimTable).setValue("columnName",tJDBCInput_16_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_16.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_16 = props_tJDBCInput_16.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_16 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_16 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_16 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_16.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_16);
        }
    }
globalMap.put("tJDBCInput_16_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_16);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_16= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_16_MAPPINGS_URL", mappings_url_tJDBCInput_16);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_16 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_16";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_16 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_16 = null;
topology_tJDBCInput_16 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_16 = def_tJDBCInput_16.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_16, topology_tJDBCInput_16);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_16 = def_tJDBCInput_16.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_16 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_16.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_16 = componentRuntime_tJDBCInput_16.initialize(container_tJDBCInput_16, props_tJDBCInput_16);

if (initVr_tJDBCInput_16.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_16.getMessage());
}

if(componentRuntime_tJDBCInput_16 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_16 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_16;
	compDriverInitialization_tJDBCInput_16.runAtDriver(container_tJDBCInput_16);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_16 = null;
if(componentRuntime_tJDBCInput_16 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_16 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_16;
	if (doesNodeBelongToRequest_tJDBCInput_16) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_16 = sourceOrSink_tJDBCInput_16.validate(container_tJDBCInput_16);
        if (vr_tJDBCInput_16.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_16.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_16 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_16 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_16;
        reader_tJDBCInput_16 = source_tJDBCInput_16.createReader(container_tJDBCInput_16);
	    reader_tJDBCInput_16 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_16, container_tJDBCInput_16);

            boolean multi_output_is_allowed_tJDBCInput_16 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_16 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_16.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_16 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_16 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_16 = props_tJDBCInput_16.getSchema(c_tJDBCInput_16, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_16 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_16, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_16 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_16 = reader_tJDBCInput_16.start();

        resourceMap.put("reader_tJDBCInput_16", reader_tJDBCInput_16);

        for (; available_tJDBCInput_16; available_tJDBCInput_16 = reader_tJDBCInput_16.advance()) {
			nb_line_tJDBCInput_16++;

			
			if (multi_output_is_allowed_tJDBCInput_16) {
				
					row16 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_16 = reader_tJDBCInput_16.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_16) {
						row16 = new row16Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_16 == null) {
            factory_tJDBCInput_16 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_16.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_16.setWrapped(factory_tJDBCInput_16.convertToAvro(data_tJDBCInput_16));
                Object columnValue_0_tJDBCInput_16 = outgoingEnforcer_tJDBCInput_16.get(0);
                    if (columnValue_0_tJDBCInput_16 == null) {
                        row16.history_id = 0;
                    } else {
                            row16.history_id = (long) (columnValue_0_tJDBCInput_16);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_16) {
				java.util.Map<String,Object> info_tJDBCInput_16 = e_tJDBCInput_16.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_16 = null;
					if(info_tJDBCInput_16.containsKey("error")){
						errorMessage_tJDBCInput_16 = info_tJDBCInput_16.get("error");
					}else if(info_tJDBCInput_16.containsKey("errorMessage")){
						errorMessage_tJDBCInput_16 = info_tJDBCInput_16.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_16 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_16 = "Row "+ nb_line_tJDBCInput_16 + ": "+errorMessage_tJDBCInput_16;
					System.err.println(errorMessage_tJDBCInput_16);
				
					// If the record is reject, the main line record should put NULL
					row16 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_16 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_16 = null;


 



/**
 * [tJDBCInput_16 begin ] stop
 */
	
	/**
	 * [tJDBCInput_16 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_16";

	


 


	tos_count_tJDBCInput_16++;

/**
 * [tJDBCInput_16 main ] stop
 */
	
	/**
	 * [tJDBCInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_16";

	


 



/**
 * [tJDBCInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_16 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_16 != null) {
            incomingEnforcer_tJDBCOutput_16.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_16 != null && incomingEnforcer_tJDBCOutput_16.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_16.put("history_id", row16.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_16 = null;
        if (incomingEnforcer_tJDBCOutput_16 != null) {
            data_tJDBCOutput_16 = incomingEnforcer_tJDBCOutput_16.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_16 != null && data_tJDBCOutput_16 != null) {
        	writer_tJDBCOutput_16.write(data_tJDBCOutput_16);
        }
        
        nb_line_tJDBCOutput_16++;

 


	tos_count_tJDBCOutput_16++;

/**
 * [tJDBCOutput_16 main ] stop
 */
	
	/**
	 * [tJDBCOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	


 



/**
 * [tJDBCOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	


 



/**
 * [tJDBCOutput_16 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_16";

	


 



/**
 * [tJDBCInput_16 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_16 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_16";

	
// end of generic


resourceMap.put("finish_tJDBCInput_16", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_16 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_16 = null;
    if (reader_tJDBCInput_16 != null) {
        reader_tJDBCInput_16.close();
        resultMap_tJDBCInput_16 = reader_tJDBCInput_16.getReturnValues();
    }
if(resultMap_tJDBCInput_16!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_16 : resultMap_tJDBCInput_16.entrySet()) {
		switch(entry_tJDBCInput_16.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_16.setComponentData("tJDBCInput_16", "ERROR_MESSAGE", entry_tJDBCInput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_16.setComponentData("tJDBCInput_16", "NB_LINE", entry_tJDBCInput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_16.setComponentData("tJDBCInput_16", "NB_SUCCESS", entry_tJDBCInput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_16.setComponentData("tJDBCInput_16", "NB_REJECT", entry_tJDBCInput_16.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_16 = new StringBuilder();
            for (int i_tJDBCInput_16 = 0; i_tJDBCInput_16 < entry_tJDBCInput_16.getKey().length(); i_tJDBCInput_16++) {
                char ch_tJDBCInput_16 = entry_tJDBCInput_16.getKey().charAt(i_tJDBCInput_16);
                if(Character.isUpperCase(ch_tJDBCInput_16) && i_tJDBCInput_16> 0) {
                	studio_key_tJDBCInput_16.append('_');
                }
                studio_key_tJDBCInput_16.append(ch_tJDBCInput_16);
            }
			container_tJDBCInput_16.setComponentData("tJDBCInput_16", studio_key_tJDBCInput_16.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_16.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_16", true);
end_Hash.put("tJDBCInput_16", System.currentTimeMillis());




/**
 * [tJDBCInput_16 end ] stop
 */

	
	/**
	 * [tJDBCOutput_16 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_16", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_16 = null;
    if (writer_tJDBCOutput_16 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_16 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_16.close();
        resultMap_tJDBCOutput_16 = writer_tJDBCOutput_16.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_16), container_tJDBCOutput_16);
    }
if(resultMap_tJDBCOutput_16!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_16 : resultMap_tJDBCOutput_16.entrySet()) {
		switch(entry_tJDBCOutput_16.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "ERROR_MESSAGE", entry_tJDBCOutput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "NB_LINE", entry_tJDBCOutput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "NB_SUCCESS", entry_tJDBCOutput_16.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", "NB_REJECT", entry_tJDBCOutput_16.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_16 = new StringBuilder();
            for (int i_tJDBCOutput_16 = 0; i_tJDBCOutput_16 < entry_tJDBCOutput_16.getKey().length(); i_tJDBCOutput_16++) {
                char ch_tJDBCOutput_16 = entry_tJDBCOutput_16.getKey().charAt(i_tJDBCOutput_16);
                if(Character.isUpperCase(ch_tJDBCOutput_16) && i_tJDBCOutput_16> 0) {
                	studio_key_tJDBCOutput_16.append('_');
                }
                studio_key_tJDBCOutput_16.append(ch_tJDBCOutput_16);
            }
			container_tJDBCOutput_16.setComponentData("tJDBCOutput_16", studio_key_tJDBCOutput_16.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_16.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_16", true);
end_Hash.put("tJDBCOutput_16", System.currentTimeMillis());




/**
 * [tJDBCOutput_16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_16 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_16";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_16")==null){
    if(resourceMap.get("reader_tJDBCInput_16")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_16")).close();
		} catch (java.io.IOException e_tJDBCInput_16) {
			String errorMessage_tJDBCInput_16 = "failed to release the resource in tJDBCInput_16 :" + e_tJDBCInput_16.getMessage();
			System.err.println(errorMessage_tJDBCInput_16);
		}
	}
}
 



/**
 * [tJDBCInput_16 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_16";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_16")==null){
    if(resourceMap.get("writer_tJDBCOutput_16")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_16")).close();
		} catch (java.io.IOException e_tJDBCOutput_16) {
			String errorMessage_tJDBCOutput_16 = "failed to release the resource in tJDBCOutput_16 :" + e_tJDBCOutput_16.getMessage();
			System.err.println(errorMessage_tJDBCOutput_16);
		}
	}
}
 



/**
 * [tJDBCOutput_16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row17Struct other = (row17Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row17Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row17Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tJDBCOutput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_17", false);
		start_Hash.put("tJDBCOutput_17", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_17";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tJDBCOutput_17 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_17 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_17 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_17 = (String)(restRequest_tJDBCOutput_17 != null ? restRequest_tJDBCOutput_17.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_17 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_17 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_17 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_17 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_17.createRuntimeProperties();
 		                    props_tJDBCOutput_17.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_17.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_17.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_17.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_17.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_17.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_17.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_17.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_17.tableSelection.setValue("tablename",
 		                    "host_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_17_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_17\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_17_1_fisrt sst_tJDBCOutput_17_1_fisrt = new SchemaSettingTool_tJDBCOutput_17_1_fisrt();
 		                    
 		                    props_tJDBCOutput_17.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_17_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_17_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_17\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_17_2_fisrt sst_tJDBCOutput_17_2_fisrt = new SchemaSettingTool_tJDBCOutput_17_2_fisrt();
 		                    
 		                    props_tJDBCOutput_17.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_17_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_17_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_17\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_17_3_fisrt sst_tJDBCOutput_17_3_fisrt = new SchemaSettingTool_tJDBCOutput_17_3_fisrt();
 		                    
 		                    props_tJDBCOutput_17.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_17_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_17.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_17.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_17.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_17 = props_tJDBCOutput_17.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_17 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_17 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_17 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_17.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_17);
        }
    }
globalMap.put("tJDBCOutput_17_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_17);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_17= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_17_MAPPINGS_URL", mappings_url_tJDBCOutput_17);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_17 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_17";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_17 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_17 = null;
topology_tJDBCOutput_17 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_17 = def_tJDBCOutput_17.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_17, topology_tJDBCOutput_17);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_17 = def_tJDBCOutput_17.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_17 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_17.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_17 = componentRuntime_tJDBCOutput_17.initialize(container_tJDBCOutput_17, props_tJDBCOutput_17);

if (initVr_tJDBCOutput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_17.getMessage());
}

if(componentRuntime_tJDBCOutput_17 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_17 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_17;
	compDriverInitialization_tJDBCOutput_17.runAtDriver(container_tJDBCOutput_17);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_17 = null;
if(componentRuntime_tJDBCOutput_17 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_17 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_17;
	if (doesNodeBelongToRequest_tJDBCOutput_17) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_17 = sourceOrSink_tJDBCOutput_17.validate(container_tJDBCOutput_17);
        if (vr_tJDBCOutput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_17.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_17 = null;
    if (sourceOrSink_tJDBCOutput_17 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_17 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_17;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_17 = sink_tJDBCOutput_17.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_17) {
            writeOperation_tJDBCOutput_17.initialize(container_tJDBCOutput_17);
        }
        writer_tJDBCOutput_17 = writeOperation_tJDBCOutput_17.createWriter(container_tJDBCOutput_17);
        if (doesNodeBelongToRequest_tJDBCOutput_17) {
            writer_tJDBCOutput_17.open("tJDBCOutput_17");
        }

        resourceMap.put("writer_tJDBCOutput_17", writer_tJDBCOutput_17);
    } // end of "sourceOrSink_tJDBCOutput_17 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_17 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_17.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_17 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_17 = props_tJDBCOutput_17.getSchema(c_tJDBCOutput_17, false);
    incomingEnforcer_tJDBCOutput_17 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_17);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_17 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_17 = null;


 



/**
 * [tJDBCOutput_17 begin ] stop
 */



	
	/**
	 * [tJDBCInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_17", false);
		start_Hash.put("tJDBCInput_17", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_17";

	
		int tos_count_tJDBCInput_17 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_17 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_17 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_17 = (String)(restRequest_tJDBCInput_17 != null ? restRequest_tJDBCInput_17.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_17 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_17 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_17 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_17 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_17.createRuntimeProperties();
 		                    props_tJDBCInput_17.setValue("sql",
 		                    "SELECT history_id\nFROM host_daily_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_17.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_17.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_17.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_17.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_17.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_17.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_17_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_17\",\"di.table.label\":\"host_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_17_1_fisrt sst_tJDBCInput_17_1_fisrt = new SchemaSettingTool_tJDBCInput_17_1_fisrt();
 		                    
 		                    props_tJDBCInput_17.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_17_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_17.tableSelection.setValue("tablename",
 		                    "host_daily_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_17_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_17_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_17.trimTable).setValue("trim",tJDBCInput_17_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_17_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_17_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_17.trimTable).setValue("columnName",tJDBCInput_17_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_17.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_17 = props_tJDBCInput_17.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_17 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_17 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_17 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_17.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_17);
        }
    }
globalMap.put("tJDBCInput_17_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_17);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_17= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_17_MAPPINGS_URL", mappings_url_tJDBCInput_17);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_17 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_17";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_17 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_17 = null;
topology_tJDBCInput_17 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_17 = def_tJDBCInput_17.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_17, topology_tJDBCInput_17);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_17 = def_tJDBCInput_17.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_17 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_17.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_17 = componentRuntime_tJDBCInput_17.initialize(container_tJDBCInput_17, props_tJDBCInput_17);

if (initVr_tJDBCInput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_17.getMessage());
}

if(componentRuntime_tJDBCInput_17 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_17 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_17;
	compDriverInitialization_tJDBCInput_17.runAtDriver(container_tJDBCInput_17);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_17 = null;
if(componentRuntime_tJDBCInput_17 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_17 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_17;
	if (doesNodeBelongToRequest_tJDBCInput_17) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_17 = sourceOrSink_tJDBCInput_17.validate(container_tJDBCInput_17);
        if (vr_tJDBCInput_17.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_17.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_17 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_17 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_17;
        reader_tJDBCInput_17 = source_tJDBCInput_17.createReader(container_tJDBCInput_17);
	    reader_tJDBCInput_17 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_17, container_tJDBCInput_17);

            boolean multi_output_is_allowed_tJDBCInput_17 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_17 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_17.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_17 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_17 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_17 = props_tJDBCInput_17.getSchema(c_tJDBCInput_17, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_17 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_17, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_17 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_17 = reader_tJDBCInput_17.start();

        resourceMap.put("reader_tJDBCInput_17", reader_tJDBCInput_17);

        for (; available_tJDBCInput_17; available_tJDBCInput_17 = reader_tJDBCInput_17.advance()) {
			nb_line_tJDBCInput_17++;

			
			if (multi_output_is_allowed_tJDBCInput_17) {
				
					row17 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_17 = reader_tJDBCInput_17.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_17) {
						row17 = new row17Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_17 == null) {
            factory_tJDBCInput_17 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_17.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_17.setWrapped(factory_tJDBCInput_17.convertToAvro(data_tJDBCInput_17));
                Object columnValue_0_tJDBCInput_17 = outgoingEnforcer_tJDBCInput_17.get(0);
                    if (columnValue_0_tJDBCInput_17 == null) {
                        row17.history_id = 0;
                    } else {
                            row17.history_id = (long) (columnValue_0_tJDBCInput_17);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_17) {
				java.util.Map<String,Object> info_tJDBCInput_17 = e_tJDBCInput_17.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_17 = null;
					if(info_tJDBCInput_17.containsKey("error")){
						errorMessage_tJDBCInput_17 = info_tJDBCInput_17.get("error");
					}else if(info_tJDBCInput_17.containsKey("errorMessage")){
						errorMessage_tJDBCInput_17 = info_tJDBCInput_17.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_17 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_17 = "Row "+ nb_line_tJDBCInput_17 + ": "+errorMessage_tJDBCInput_17;
					System.err.println(errorMessage_tJDBCInput_17);
				
					// If the record is reject, the main line record should put NULL
					row17 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_17 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_17 = null;


 



/**
 * [tJDBCInput_17 begin ] stop
 */
	
	/**
	 * [tJDBCInput_17 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	


 


	tos_count_tJDBCInput_17++;

/**
 * [tJDBCInput_17 main ] stop
 */
	
	/**
	 * [tJDBCInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	


 



/**
 * [tJDBCInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_17 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_17 != null) {
            incomingEnforcer_tJDBCOutput_17.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_17 != null && incomingEnforcer_tJDBCOutput_17.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_17.put("history_id", row17.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_17 = null;
        if (incomingEnforcer_tJDBCOutput_17 != null) {
            data_tJDBCOutput_17 = incomingEnforcer_tJDBCOutput_17.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_17 != null && data_tJDBCOutput_17 != null) {
        	writer_tJDBCOutput_17.write(data_tJDBCOutput_17);
        }
        
        nb_line_tJDBCOutput_17++;

 


	tos_count_tJDBCOutput_17++;

/**
 * [tJDBCOutput_17 main ] stop
 */
	
	/**
	 * [tJDBCOutput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	


 



/**
 * [tJDBCOutput_17 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	


 



/**
 * [tJDBCOutput_17 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	


 



/**
 * [tJDBCInput_17 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_17 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	
// end of generic


resourceMap.put("finish_tJDBCInput_17", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_17 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_17 = null;
    if (reader_tJDBCInput_17 != null) {
        reader_tJDBCInput_17.close();
        resultMap_tJDBCInput_17 = reader_tJDBCInput_17.getReturnValues();
    }
if(resultMap_tJDBCInput_17!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_17 : resultMap_tJDBCInput_17.entrySet()) {
		switch(entry_tJDBCInput_17.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "ERROR_MESSAGE", entry_tJDBCInput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "NB_LINE", entry_tJDBCInput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "NB_SUCCESS", entry_tJDBCInput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", "NB_REJECT", entry_tJDBCInput_17.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_17 = new StringBuilder();
            for (int i_tJDBCInput_17 = 0; i_tJDBCInput_17 < entry_tJDBCInput_17.getKey().length(); i_tJDBCInput_17++) {
                char ch_tJDBCInput_17 = entry_tJDBCInput_17.getKey().charAt(i_tJDBCInput_17);
                if(Character.isUpperCase(ch_tJDBCInput_17) && i_tJDBCInput_17> 0) {
                	studio_key_tJDBCInput_17.append('_');
                }
                studio_key_tJDBCInput_17.append(ch_tJDBCInput_17);
            }
			container_tJDBCInput_17.setComponentData("tJDBCInput_17", studio_key_tJDBCInput_17.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_17.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_17", true);
end_Hash.put("tJDBCInput_17", System.currentTimeMillis());




/**
 * [tJDBCInput_17 end ] stop
 */

	
	/**
	 * [tJDBCOutput_17 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_17", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_17 = null;
    if (writer_tJDBCOutput_17 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_17 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_17.close();
        resultMap_tJDBCOutput_17 = writer_tJDBCOutput_17.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_17), container_tJDBCOutput_17);
    }
if(resultMap_tJDBCOutput_17!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_17 : resultMap_tJDBCOutput_17.entrySet()) {
		switch(entry_tJDBCOutput_17.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "ERROR_MESSAGE", entry_tJDBCOutput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "NB_LINE", entry_tJDBCOutput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "NB_SUCCESS", entry_tJDBCOutput_17.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", "NB_REJECT", entry_tJDBCOutput_17.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_17 = new StringBuilder();
            for (int i_tJDBCOutput_17 = 0; i_tJDBCOutput_17 < entry_tJDBCOutput_17.getKey().length(); i_tJDBCOutput_17++) {
                char ch_tJDBCOutput_17 = entry_tJDBCOutput_17.getKey().charAt(i_tJDBCOutput_17);
                if(Character.isUpperCase(ch_tJDBCOutput_17) && i_tJDBCOutput_17> 0) {
                	studio_key_tJDBCOutput_17.append('_');
                }
                studio_key_tJDBCOutput_17.append(ch_tJDBCOutput_17);
            }
			container_tJDBCOutput_17.setComponentData("tJDBCOutput_17", studio_key_tJDBCOutput_17.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_17.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_17", true);
end_Hash.put("tJDBCOutput_17", System.currentTimeMillis());




/**
 * [tJDBCOutput_17 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_17 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_17";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_17")==null){
    if(resourceMap.get("reader_tJDBCInput_17")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_17")).close();
		} catch (java.io.IOException e_tJDBCInput_17) {
			String errorMessage_tJDBCInput_17 = "failed to release the resource in tJDBCInput_17 :" + e_tJDBCInput_17.getMessage();
			System.err.println(errorMessage_tJDBCInput_17);
		}
	}
}
 



/**
 * [tJDBCInput_17 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_17 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_17";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_17")==null){
    if(resourceMap.get("writer_tJDBCOutput_17")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_17")).close();
		} catch (java.io.IOException e_tJDBCOutput_17) {
			String errorMessage_tJDBCOutput_17 = "failed to release the resource in tJDBCOutput_17 :" + e_tJDBCOutput_17.getMessage();
			System.err.println(errorMessage_tJDBCOutput_17);
		}
	}
}
 



/**
 * [tJDBCOutput_17 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tJDBCOutput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_18", false);
		start_Hash.put("tJDBCOutput_18", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_18";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tJDBCOutput_18 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_18 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_18 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_18 = (String)(restRequest_tJDBCOutput_18 != null ? restRequest_tJDBCOutput_18.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_18 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_18 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_18 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_18 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_18.createRuntimeProperties();
 		                    props_tJDBCOutput_18.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_18.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_18.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_18.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_18.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_18.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_18.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_18.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_18.tableSelection.setValue("tablename",
 		                    "host_interface_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_18_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_18\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_18_1_fisrt sst_tJDBCOutput_18_1_fisrt = new SchemaSettingTool_tJDBCOutput_18_1_fisrt();
 		                    
 		                    props_tJDBCOutput_18.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_18_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_18_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_18\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_18_2_fisrt sst_tJDBCOutput_18_2_fisrt = new SchemaSettingTool_tJDBCOutput_18_2_fisrt();
 		                    
 		                    props_tJDBCOutput_18.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_18_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_18_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_18\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_18_3_fisrt sst_tJDBCOutput_18_3_fisrt = new SchemaSettingTool_tJDBCOutput_18_3_fisrt();
 		                    
 		                    props_tJDBCOutput_18.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_18_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_18.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_18.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_18.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_18 = props_tJDBCOutput_18.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_18 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_18 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_18 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_18.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_18);
        }
    }
globalMap.put("tJDBCOutput_18_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_18);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_18= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_18_MAPPINGS_URL", mappings_url_tJDBCOutput_18);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_18 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_18";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_18 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_18 = null;
topology_tJDBCOutput_18 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_18 = def_tJDBCOutput_18.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_18, topology_tJDBCOutput_18);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_18 = def_tJDBCOutput_18.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_18 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_18.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_18 = componentRuntime_tJDBCOutput_18.initialize(container_tJDBCOutput_18, props_tJDBCOutput_18);

if (initVr_tJDBCOutput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_18.getMessage());
}

if(componentRuntime_tJDBCOutput_18 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_18 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_18;
	compDriverInitialization_tJDBCOutput_18.runAtDriver(container_tJDBCOutput_18);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_18 = null;
if(componentRuntime_tJDBCOutput_18 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_18 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_18;
	if (doesNodeBelongToRequest_tJDBCOutput_18) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_18 = sourceOrSink_tJDBCOutput_18.validate(container_tJDBCOutput_18);
        if (vr_tJDBCOutput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_18.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_18 = null;
    if (sourceOrSink_tJDBCOutput_18 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_18 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_18;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_18 = sink_tJDBCOutput_18.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_18) {
            writeOperation_tJDBCOutput_18.initialize(container_tJDBCOutput_18);
        }
        writer_tJDBCOutput_18 = writeOperation_tJDBCOutput_18.createWriter(container_tJDBCOutput_18);
        if (doesNodeBelongToRequest_tJDBCOutput_18) {
            writer_tJDBCOutput_18.open("tJDBCOutput_18");
        }

        resourceMap.put("writer_tJDBCOutput_18", writer_tJDBCOutput_18);
    } // end of "sourceOrSink_tJDBCOutput_18 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_18 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_18.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_18 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_18 = props_tJDBCOutput_18.getSchema(c_tJDBCOutput_18, false);
    incomingEnforcer_tJDBCOutput_18 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_18);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_18 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_18 = null;


 



/**
 * [tJDBCOutput_18 begin ] stop
 */



	
	/**
	 * [tJDBCInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_18", false);
		start_Hash.put("tJDBCInput_18", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_18";

	
		int tos_count_tJDBCInput_18 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_18 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_18 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_18 = (String)(restRequest_tJDBCInput_18 != null ? restRequest_tJDBCInput_18.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_18 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_18 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_18 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_18 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_18.createRuntimeProperties();
 		                    props_tJDBCInput_18.setValue("sql",
 		                    "SELECT history_id\nFROM host_interface_daily_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_18.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_18.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_18.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_18_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('host_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_18\",\"di.table.label\":\"host_interface_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_18_1_fisrt sst_tJDBCInput_18_1_fisrt = new SchemaSettingTool_tJDBCInput_18_1_fisrt();
 		                    
 		                    props_tJDBCInput_18.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_18_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_18.tableSelection.setValue("tablename",
 		                    "host_interface_daily_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_18_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_18.trimTable).setValue("trim",tJDBCInput_18_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_18_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_18_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_18.trimTable).setValue("columnName",tJDBCInput_18_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_18.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_18 = props_tJDBCInput_18.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_18 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_18 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_18 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_18.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_18);
        }
    }
globalMap.put("tJDBCInput_18_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_18);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_18= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_18_MAPPINGS_URL", mappings_url_tJDBCInput_18);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_18 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_18";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_18 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_18 = null;
topology_tJDBCInput_18 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_18 = def_tJDBCInput_18.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_18, topology_tJDBCInput_18);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_18 = def_tJDBCInput_18.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_18 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_18.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_18 = componentRuntime_tJDBCInput_18.initialize(container_tJDBCInput_18, props_tJDBCInput_18);

if (initVr_tJDBCInput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_18.getMessage());
}

if(componentRuntime_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_18 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_18;
	compDriverInitialization_tJDBCInput_18.runAtDriver(container_tJDBCInput_18);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_18 = null;
if(componentRuntime_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_18 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_18;
	if (doesNodeBelongToRequest_tJDBCInput_18) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_18 = sourceOrSink_tJDBCInput_18.validate(container_tJDBCInput_18);
        if (vr_tJDBCInput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_18.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_18 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_18;
        reader_tJDBCInput_18 = source_tJDBCInput_18.createReader(container_tJDBCInput_18);
	    reader_tJDBCInput_18 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_18, container_tJDBCInput_18);

            boolean multi_output_is_allowed_tJDBCInput_18 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_18 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_18.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_18 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_18 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_18 = props_tJDBCInput_18.getSchema(c_tJDBCInput_18, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_18 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_18, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_18 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_18 = reader_tJDBCInput_18.start();

        resourceMap.put("reader_tJDBCInput_18", reader_tJDBCInput_18);

        for (; available_tJDBCInput_18; available_tJDBCInput_18 = reader_tJDBCInput_18.advance()) {
			nb_line_tJDBCInput_18++;

			
			if (multi_output_is_allowed_tJDBCInput_18) {
				
					row18 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_18 = reader_tJDBCInput_18.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_18) {
						row18 = new row18Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_18 == null) {
            factory_tJDBCInput_18 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_18.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_18.setWrapped(factory_tJDBCInput_18.convertToAvro(data_tJDBCInput_18));
                Object columnValue_0_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(0);
                    if (columnValue_0_tJDBCInput_18 == null) {
                        row18.history_id = 0;
                    } else {
                            row18.history_id = (long) (columnValue_0_tJDBCInput_18);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_18) {
				java.util.Map<String,Object> info_tJDBCInput_18 = e_tJDBCInput_18.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_18 = null;
					if(info_tJDBCInput_18.containsKey("error")){
						errorMessage_tJDBCInput_18 = info_tJDBCInput_18.get("error");
					}else if(info_tJDBCInput_18.containsKey("errorMessage")){
						errorMessage_tJDBCInput_18 = info_tJDBCInput_18.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_18 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_18 = "Row "+ nb_line_tJDBCInput_18 + ": "+errorMessage_tJDBCInput_18;
					System.err.println(errorMessage_tJDBCInput_18);
				
					// If the record is reject, the main line record should put NULL
					row18 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_18 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_18 = null;


 



/**
 * [tJDBCInput_18 begin ] stop
 */
	
	/**
	 * [tJDBCInput_18 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 


	tos_count_tJDBCInput_18++;

/**
 * [tJDBCInput_18 main ] stop
 */
	
	/**
	 * [tJDBCInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 



/**
 * [tJDBCInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_18 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_18 != null) {
            incomingEnforcer_tJDBCOutput_18.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_18 != null && incomingEnforcer_tJDBCOutput_18.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_18.put("history_id", row18.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_18 = null;
        if (incomingEnforcer_tJDBCOutput_18 != null) {
            data_tJDBCOutput_18 = incomingEnforcer_tJDBCOutput_18.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_18 != null && data_tJDBCOutput_18 != null) {
        	writer_tJDBCOutput_18.write(data_tJDBCOutput_18);
        }
        
        nb_line_tJDBCOutput_18++;

 


	tos_count_tJDBCOutput_18++;

/**
 * [tJDBCOutput_18 main ] stop
 */
	
	/**
	 * [tJDBCOutput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	


 



/**
 * [tJDBCOutput_18 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	


 



/**
 * [tJDBCOutput_18 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 



/**
 * [tJDBCInput_18 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_18 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	
// end of generic


resourceMap.put("finish_tJDBCInput_18", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_18 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_18 = null;
    if (reader_tJDBCInput_18 != null) {
        reader_tJDBCInput_18.close();
        resultMap_tJDBCInput_18 = reader_tJDBCInput_18.getReturnValues();
    }
if(resultMap_tJDBCInput_18!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_18 : resultMap_tJDBCInput_18.entrySet()) {
		switch(entry_tJDBCInput_18.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "ERROR_MESSAGE", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_LINE", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_SUCCESS", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_REJECT", entry_tJDBCInput_18.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_18 = new StringBuilder();
            for (int i_tJDBCInput_18 = 0; i_tJDBCInput_18 < entry_tJDBCInput_18.getKey().length(); i_tJDBCInput_18++) {
                char ch_tJDBCInput_18 = entry_tJDBCInput_18.getKey().charAt(i_tJDBCInput_18);
                if(Character.isUpperCase(ch_tJDBCInput_18) && i_tJDBCInput_18> 0) {
                	studio_key_tJDBCInput_18.append('_');
                }
                studio_key_tJDBCInput_18.append(ch_tJDBCInput_18);
            }
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", studio_key_tJDBCInput_18.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_18.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_18", true);
end_Hash.put("tJDBCInput_18", System.currentTimeMillis());




/**
 * [tJDBCInput_18 end ] stop
 */

	
	/**
	 * [tJDBCOutput_18 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_18", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_18 = null;
    if (writer_tJDBCOutput_18 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_18 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_18.close();
        resultMap_tJDBCOutput_18 = writer_tJDBCOutput_18.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_18), container_tJDBCOutput_18);
    }
if(resultMap_tJDBCOutput_18!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_18 : resultMap_tJDBCOutput_18.entrySet()) {
		switch(entry_tJDBCOutput_18.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "ERROR_MESSAGE", entry_tJDBCOutput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "NB_LINE", entry_tJDBCOutput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "NB_SUCCESS", entry_tJDBCOutput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", "NB_REJECT", entry_tJDBCOutput_18.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_18 = new StringBuilder();
            for (int i_tJDBCOutput_18 = 0; i_tJDBCOutput_18 < entry_tJDBCOutput_18.getKey().length(); i_tJDBCOutput_18++) {
                char ch_tJDBCOutput_18 = entry_tJDBCOutput_18.getKey().charAt(i_tJDBCOutput_18);
                if(Character.isUpperCase(ch_tJDBCOutput_18) && i_tJDBCOutput_18> 0) {
                	studio_key_tJDBCOutput_18.append('_');
                }
                studio_key_tJDBCOutput_18.append(ch_tJDBCOutput_18);
            }
			container_tJDBCOutput_18.setComponentData("tJDBCOutput_18", studio_key_tJDBCOutput_18.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_18.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_18", true);
end_Hash.put("tJDBCOutput_18", System.currentTimeMillis());




/**
 * [tJDBCOutput_18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_18 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_18")==null){
    if(resourceMap.get("reader_tJDBCInput_18")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_18")).close();
		} catch (java.io.IOException e_tJDBCInput_18) {
			String errorMessage_tJDBCInput_18 = "failed to release the resource in tJDBCInput_18 :" + e_tJDBCInput_18.getMessage();
			System.err.println(errorMessage_tJDBCInput_18);
		}
	}
}
 



/**
 * [tJDBCInput_18 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_18 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_18";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_18")==null){
    if(resourceMap.get("writer_tJDBCOutput_18")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_18")).close();
		} catch (java.io.IOException e_tJDBCOutput_18) {
			String errorMessage_tJDBCOutput_18 = "failed to release the resource in tJDBCOutput_18 :" + e_tJDBCOutput_18.getMessage();
			System.err.println(errorMessage_tJDBCOutput_18);
		}
	}
}
 



/**
 * [tJDBCOutput_18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row19Struct other = (row19Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row19Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row19Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();




	
	/**
	 * [tJDBCOutput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_19", false);
		start_Hash.put("tJDBCOutput_19", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_19";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tJDBCOutput_19 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_19 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_19 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_19 = (String)(restRequest_tJDBCOutput_19 != null ? restRequest_tJDBCOutput_19.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_19 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_19 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_19 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_19 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_19.createRuntimeProperties();
 		                    props_tJDBCOutput_19.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_19.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_19.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_19.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_19.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_19.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_19.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_19.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_19.tableSelection.setValue("tablename",
 		                    "vm_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_19_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_19\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_19_1_fisrt sst_tJDBCOutput_19_1_fisrt = new SchemaSettingTool_tJDBCOutput_19_1_fisrt();
 		                    
 		                    props_tJDBCOutput_19.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_19_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_19_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_19\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_19_2_fisrt sst_tJDBCOutput_19_2_fisrt = new SchemaSettingTool_tJDBCOutput_19_2_fisrt();
 		                    
 		                    props_tJDBCOutput_19.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_19_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_19_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_19\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_19_3_fisrt sst_tJDBCOutput_19_3_fisrt = new SchemaSettingTool_tJDBCOutput_19_3_fisrt();
 		                    
 		                    props_tJDBCOutput_19.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_19_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_19.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_19.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_19.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_19 = props_tJDBCOutput_19.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_19 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_19 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_19 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_19.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_19);
        }
    }
globalMap.put("tJDBCOutput_19_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_19);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_19= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_19_MAPPINGS_URL", mappings_url_tJDBCOutput_19);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_19 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_19";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_19 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_19 = null;
topology_tJDBCOutput_19 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_19 = def_tJDBCOutput_19.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_19, topology_tJDBCOutput_19);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_19 = def_tJDBCOutput_19.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_19 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_19.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_19 = componentRuntime_tJDBCOutput_19.initialize(container_tJDBCOutput_19, props_tJDBCOutput_19);

if (initVr_tJDBCOutput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_19.getMessage());
}

if(componentRuntime_tJDBCOutput_19 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_19 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_19;
	compDriverInitialization_tJDBCOutput_19.runAtDriver(container_tJDBCOutput_19);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_19 = null;
if(componentRuntime_tJDBCOutput_19 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_19 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_19;
	if (doesNodeBelongToRequest_tJDBCOutput_19) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_19 = sourceOrSink_tJDBCOutput_19.validate(container_tJDBCOutput_19);
        if (vr_tJDBCOutput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_19.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_19 = null;
    if (sourceOrSink_tJDBCOutput_19 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_19 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_19;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_19 = sink_tJDBCOutput_19.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_19) {
            writeOperation_tJDBCOutput_19.initialize(container_tJDBCOutput_19);
        }
        writer_tJDBCOutput_19 = writeOperation_tJDBCOutput_19.createWriter(container_tJDBCOutput_19);
        if (doesNodeBelongToRequest_tJDBCOutput_19) {
            writer_tJDBCOutput_19.open("tJDBCOutput_19");
        }

        resourceMap.put("writer_tJDBCOutput_19", writer_tJDBCOutput_19);
    } // end of "sourceOrSink_tJDBCOutput_19 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_19 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_19.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_19 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_19 = props_tJDBCOutput_19.getSchema(c_tJDBCOutput_19, false);
    incomingEnforcer_tJDBCOutput_19 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_19);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_19 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_19 = null;


 



/**
 * [tJDBCOutput_19 begin ] stop
 */



	
	/**
	 * [tJDBCInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_19", false);
		start_Hash.put("tJDBCInput_19", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_19";

	
		int tos_count_tJDBCInput_19 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_19 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_19 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_19 = (String)(restRequest_tJDBCInput_19 != null ? restRequest_tJDBCInput_19.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_19 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_19 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_19 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_19 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_19.createRuntimeProperties();
 		                    props_tJDBCInput_19.setValue("sql",
 		                    "SELECT history_id\nFROM vm_daily_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_19.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_19.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_19.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_19.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_19.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_19.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_19_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_19\",\"di.table.label\":\"vm_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_19_1_fisrt sst_tJDBCInput_19_1_fisrt = new SchemaSettingTool_tJDBCInput_19_1_fisrt();
 		                    
 		                    props_tJDBCInput_19.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_19_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_19.tableSelection.setValue("tablename",
 		                    "vm_daily_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_19_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_19_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_19.trimTable).setValue("trim",tJDBCInput_19_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_19_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_19_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_19.trimTable).setValue("columnName",tJDBCInput_19_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_19.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_19 = props_tJDBCInput_19.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_19 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_19 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_19 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_19.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_19);
        }
    }
globalMap.put("tJDBCInput_19_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_19);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_19= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_19_MAPPINGS_URL", mappings_url_tJDBCInput_19);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_19 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_19";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_19 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_19 = null;
topology_tJDBCInput_19 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_19 = def_tJDBCInput_19.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_19, topology_tJDBCInput_19);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_19 = def_tJDBCInput_19.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_19 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_19.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_19 = componentRuntime_tJDBCInput_19.initialize(container_tJDBCInput_19, props_tJDBCInput_19);

if (initVr_tJDBCInput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_19.getMessage());
}

if(componentRuntime_tJDBCInput_19 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_19 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_19;
	compDriverInitialization_tJDBCInput_19.runAtDriver(container_tJDBCInput_19);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_19 = null;
if(componentRuntime_tJDBCInput_19 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_19 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_19;
	if (doesNodeBelongToRequest_tJDBCInput_19) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_19 = sourceOrSink_tJDBCInput_19.validate(container_tJDBCInput_19);
        if (vr_tJDBCInput_19.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_19.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_19 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_19 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_19;
        reader_tJDBCInput_19 = source_tJDBCInput_19.createReader(container_tJDBCInput_19);
	    reader_tJDBCInput_19 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_19, container_tJDBCInput_19);

            boolean multi_output_is_allowed_tJDBCInput_19 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_19 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_19.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_19 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_19 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_19 = props_tJDBCInput_19.getSchema(c_tJDBCInput_19, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_19 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_19, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_19 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_19 = reader_tJDBCInput_19.start();

        resourceMap.put("reader_tJDBCInput_19", reader_tJDBCInput_19);

        for (; available_tJDBCInput_19; available_tJDBCInput_19 = reader_tJDBCInput_19.advance()) {
			nb_line_tJDBCInput_19++;

			
			if (multi_output_is_allowed_tJDBCInput_19) {
				
					row19 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_19 = reader_tJDBCInput_19.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_19) {
						row19 = new row19Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_19 == null) {
            factory_tJDBCInput_19 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_19.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_19.setWrapped(factory_tJDBCInput_19.convertToAvro(data_tJDBCInput_19));
                Object columnValue_0_tJDBCInput_19 = outgoingEnforcer_tJDBCInput_19.get(0);
                    if (columnValue_0_tJDBCInput_19 == null) {
                        row19.history_id = 0;
                    } else {
                            row19.history_id = (long) (columnValue_0_tJDBCInput_19);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_19) {
				java.util.Map<String,Object> info_tJDBCInput_19 = e_tJDBCInput_19.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_19 = null;
					if(info_tJDBCInput_19.containsKey("error")){
						errorMessage_tJDBCInput_19 = info_tJDBCInput_19.get("error");
					}else if(info_tJDBCInput_19.containsKey("errorMessage")){
						errorMessage_tJDBCInput_19 = info_tJDBCInput_19.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_19 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_19 = "Row "+ nb_line_tJDBCInput_19 + ": "+errorMessage_tJDBCInput_19;
					System.err.println(errorMessage_tJDBCInput_19);
				
					// If the record is reject, the main line record should put NULL
					row19 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_19 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_19 = null;


 



/**
 * [tJDBCInput_19 begin ] stop
 */
	
	/**
	 * [tJDBCInput_19 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	


 


	tos_count_tJDBCInput_19++;

/**
 * [tJDBCInput_19 main ] stop
 */
	
	/**
	 * [tJDBCInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	


 



/**
 * [tJDBCInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_19 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_19 != null) {
            incomingEnforcer_tJDBCOutput_19.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_19 != null && incomingEnforcer_tJDBCOutput_19.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_19.put("history_id", row19.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_19 = null;
        if (incomingEnforcer_tJDBCOutput_19 != null) {
            data_tJDBCOutput_19 = incomingEnforcer_tJDBCOutput_19.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_19 != null && data_tJDBCOutput_19 != null) {
        	writer_tJDBCOutput_19.write(data_tJDBCOutput_19);
        }
        
        nb_line_tJDBCOutput_19++;

 


	tos_count_tJDBCOutput_19++;

/**
 * [tJDBCOutput_19 main ] stop
 */
	
	/**
	 * [tJDBCOutput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	


 



/**
 * [tJDBCOutput_19 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	


 



/**
 * [tJDBCOutput_19 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	


 



/**
 * [tJDBCInput_19 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_19 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	
// end of generic


resourceMap.put("finish_tJDBCInput_19", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_19 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_19 = null;
    if (reader_tJDBCInput_19 != null) {
        reader_tJDBCInput_19.close();
        resultMap_tJDBCInput_19 = reader_tJDBCInput_19.getReturnValues();
    }
if(resultMap_tJDBCInput_19!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_19 : resultMap_tJDBCInput_19.entrySet()) {
		switch(entry_tJDBCInput_19.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "ERROR_MESSAGE", entry_tJDBCInput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "NB_LINE", entry_tJDBCInput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "NB_SUCCESS", entry_tJDBCInput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", "NB_REJECT", entry_tJDBCInput_19.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_19 = new StringBuilder();
            for (int i_tJDBCInput_19 = 0; i_tJDBCInput_19 < entry_tJDBCInput_19.getKey().length(); i_tJDBCInput_19++) {
                char ch_tJDBCInput_19 = entry_tJDBCInput_19.getKey().charAt(i_tJDBCInput_19);
                if(Character.isUpperCase(ch_tJDBCInput_19) && i_tJDBCInput_19> 0) {
                	studio_key_tJDBCInput_19.append('_');
                }
                studio_key_tJDBCInput_19.append(ch_tJDBCInput_19);
            }
			container_tJDBCInput_19.setComponentData("tJDBCInput_19", studio_key_tJDBCInput_19.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_19.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_19", true);
end_Hash.put("tJDBCInput_19", System.currentTimeMillis());




/**
 * [tJDBCInput_19 end ] stop
 */

	
	/**
	 * [tJDBCOutput_19 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_19", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_19 = null;
    if (writer_tJDBCOutput_19 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_19 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_19.close();
        resultMap_tJDBCOutput_19 = writer_tJDBCOutput_19.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_19), container_tJDBCOutput_19);
    }
if(resultMap_tJDBCOutput_19!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_19 : resultMap_tJDBCOutput_19.entrySet()) {
		switch(entry_tJDBCOutput_19.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "ERROR_MESSAGE", entry_tJDBCOutput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "NB_LINE", entry_tJDBCOutput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "NB_SUCCESS", entry_tJDBCOutput_19.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", "NB_REJECT", entry_tJDBCOutput_19.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_19 = new StringBuilder();
            for (int i_tJDBCOutput_19 = 0; i_tJDBCOutput_19 < entry_tJDBCOutput_19.getKey().length(); i_tJDBCOutput_19++) {
                char ch_tJDBCOutput_19 = entry_tJDBCOutput_19.getKey().charAt(i_tJDBCOutput_19);
                if(Character.isUpperCase(ch_tJDBCOutput_19) && i_tJDBCOutput_19> 0) {
                	studio_key_tJDBCOutput_19.append('_');
                }
                studio_key_tJDBCOutput_19.append(ch_tJDBCOutput_19);
            }
			container_tJDBCOutput_19.setComponentData("tJDBCOutput_19", studio_key_tJDBCOutput_19.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_19.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_19", true);
end_Hash.put("tJDBCOutput_19", System.currentTimeMillis());




/**
 * [tJDBCOutput_19 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_19 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_19";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_19")==null){
    if(resourceMap.get("reader_tJDBCInput_19")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_19")).close();
		} catch (java.io.IOException e_tJDBCInput_19) {
			String errorMessage_tJDBCInput_19 = "failed to release the resource in tJDBCInput_19 :" + e_tJDBCInput_19.getMessage();
			System.err.println(errorMessage_tJDBCInput_19);
		}
	}
}
 



/**
 * [tJDBCInput_19 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_19 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_19";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_19")==null){
    if(resourceMap.get("writer_tJDBCOutput_19")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_19")).close();
		} catch (java.io.IOException e_tJDBCOutput_19) {
			String errorMessage_tJDBCOutput_19 = "failed to release the resource in tJDBCOutput_19 :" + e_tJDBCOutput_19.getMessage();
			System.err.println(errorMessage_tJDBCOutput_19);
		}
	}
}
 



/**
 * [tJDBCOutput_19 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row20Struct other = (row20Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row20Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row20Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();




	
	/**
	 * [tJDBCOutput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_20", false);
		start_Hash.put("tJDBCOutput_20", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_20";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tJDBCOutput_20 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_20 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_20 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_20 = (String)(restRequest_tJDBCOutput_20 != null ? restRequest_tJDBCOutput_20.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_20 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_20 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_20 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_20 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_20.createRuntimeProperties();
 		                    props_tJDBCOutput_20.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_20.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_20.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_20.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_20.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_20.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_20.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_20.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_20.tableSelection.setValue("tablename",
 		                    "vm_interface_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_20_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_20\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_20_1_fisrt sst_tJDBCOutput_20_1_fisrt = new SchemaSettingTool_tJDBCOutput_20_1_fisrt();
 		                    
 		                    props_tJDBCOutput_20.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_20_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_20_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_20\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_20_2_fisrt sst_tJDBCOutput_20_2_fisrt = new SchemaSettingTool_tJDBCOutput_20_2_fisrt();
 		                    
 		                    props_tJDBCOutput_20.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_20_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_20_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_20\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_20_3_fisrt sst_tJDBCOutput_20_3_fisrt = new SchemaSettingTool_tJDBCOutput_20_3_fisrt();
 		                    
 		                    props_tJDBCOutput_20.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_20_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_20.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_20.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_20.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_20 = props_tJDBCOutput_20.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_20 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_20 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_20 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_20.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_20);
        }
    }
globalMap.put("tJDBCOutput_20_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_20);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_20= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_20_MAPPINGS_URL", mappings_url_tJDBCOutput_20);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_20 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_20";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_20 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_20 = null;
topology_tJDBCOutput_20 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_20 = def_tJDBCOutput_20.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_20, topology_tJDBCOutput_20);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_20 = def_tJDBCOutput_20.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_20 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_20.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_20 = componentRuntime_tJDBCOutput_20.initialize(container_tJDBCOutput_20, props_tJDBCOutput_20);

if (initVr_tJDBCOutput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_20.getMessage());
}

if(componentRuntime_tJDBCOutput_20 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_20 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_20;
	compDriverInitialization_tJDBCOutput_20.runAtDriver(container_tJDBCOutput_20);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_20 = null;
if(componentRuntime_tJDBCOutput_20 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_20 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_20;
	if (doesNodeBelongToRequest_tJDBCOutput_20) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_20 = sourceOrSink_tJDBCOutput_20.validate(container_tJDBCOutput_20);
        if (vr_tJDBCOutput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_20.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_20 = null;
    if (sourceOrSink_tJDBCOutput_20 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_20 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_20;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_20 = sink_tJDBCOutput_20.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_20) {
            writeOperation_tJDBCOutput_20.initialize(container_tJDBCOutput_20);
        }
        writer_tJDBCOutput_20 = writeOperation_tJDBCOutput_20.createWriter(container_tJDBCOutput_20);
        if (doesNodeBelongToRequest_tJDBCOutput_20) {
            writer_tJDBCOutput_20.open("tJDBCOutput_20");
        }

        resourceMap.put("writer_tJDBCOutput_20", writer_tJDBCOutput_20);
    } // end of "sourceOrSink_tJDBCOutput_20 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_20 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_20.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_20 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_20 = props_tJDBCOutput_20.getSchema(c_tJDBCOutput_20, false);
    incomingEnforcer_tJDBCOutput_20 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_20);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_20 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_20 = null;


 



/**
 * [tJDBCOutput_20 begin ] stop
 */



	
	/**
	 * [tJDBCInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_20", false);
		start_Hash.put("tJDBCInput_20", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_20";

	
		int tos_count_tJDBCInput_20 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_20 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_20 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_20 = (String)(restRequest_tJDBCInput_20 != null ? restRequest_tJDBCInput_20.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_20 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_20 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_20 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_20 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_20.createRuntimeProperties();
 		                    props_tJDBCInput_20.setValue("sql",
 		                    "SELECT history_id\nFROM vm_interface_daily_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_20.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_20.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_20.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_20_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_interface_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_20\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_20_1_fisrt sst_tJDBCInput_20_1_fisrt = new SchemaSettingTool_tJDBCInput_20_1_fisrt();
 		                    
 		                    props_tJDBCInput_20.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_20_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_20.tableSelection.setValue("tablename",
 		                    "vm_interface_daily_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_20_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_20.trimTable).setValue("trim",tJDBCInput_20_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_20_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_20_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_20.trimTable).setValue("columnName",tJDBCInput_20_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_20.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_20 = props_tJDBCInput_20.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_20 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_20 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_20 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_20.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_20);
        }
    }
globalMap.put("tJDBCInput_20_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_20);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_20= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_20_MAPPINGS_URL", mappings_url_tJDBCInput_20);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_20 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_20";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_20 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_20 = null;
topology_tJDBCInput_20 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_20 = def_tJDBCInput_20.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_20, topology_tJDBCInput_20);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_20 = def_tJDBCInput_20.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_20 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_20.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_20 = componentRuntime_tJDBCInput_20.initialize(container_tJDBCInput_20, props_tJDBCInput_20);

if (initVr_tJDBCInput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_20.getMessage());
}

if(componentRuntime_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_20 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_20;
	compDriverInitialization_tJDBCInput_20.runAtDriver(container_tJDBCInput_20);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_20 = null;
if(componentRuntime_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_20 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_20;
	if (doesNodeBelongToRequest_tJDBCInput_20) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_20 = sourceOrSink_tJDBCInput_20.validate(container_tJDBCInput_20);
        if (vr_tJDBCInput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_20.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_20 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_20;
        reader_tJDBCInput_20 = source_tJDBCInput_20.createReader(container_tJDBCInput_20);
	    reader_tJDBCInput_20 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_20, container_tJDBCInput_20);

            boolean multi_output_is_allowed_tJDBCInput_20 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_20 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_20.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_20 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_20 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_20 = props_tJDBCInput_20.getSchema(c_tJDBCInput_20, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_20 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_20, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_20 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_20 = reader_tJDBCInput_20.start();

        resourceMap.put("reader_tJDBCInput_20", reader_tJDBCInput_20);

        for (; available_tJDBCInput_20; available_tJDBCInput_20 = reader_tJDBCInput_20.advance()) {
			nb_line_tJDBCInput_20++;

			
			if (multi_output_is_allowed_tJDBCInput_20) {
				
					row20 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_20 = reader_tJDBCInput_20.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_20) {
						row20 = new row20Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_20 == null) {
            factory_tJDBCInput_20 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_20.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_20.setWrapped(factory_tJDBCInput_20.convertToAvro(data_tJDBCInput_20));
                Object columnValue_0_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(0);
                    if (columnValue_0_tJDBCInput_20 == null) {
                        row20.history_id = 0;
                    } else {
                            row20.history_id = (long) (columnValue_0_tJDBCInput_20);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_20) {
				java.util.Map<String,Object> info_tJDBCInput_20 = e_tJDBCInput_20.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_20 = null;
					if(info_tJDBCInput_20.containsKey("error")){
						errorMessage_tJDBCInput_20 = info_tJDBCInput_20.get("error");
					}else if(info_tJDBCInput_20.containsKey("errorMessage")){
						errorMessage_tJDBCInput_20 = info_tJDBCInput_20.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_20 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_20 = "Row "+ nb_line_tJDBCInput_20 + ": "+errorMessage_tJDBCInput_20;
					System.err.println(errorMessage_tJDBCInput_20);
				
					// If the record is reject, the main line record should put NULL
					row20 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_20 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_20 = null;


 



/**
 * [tJDBCInput_20 begin ] stop
 */
	
	/**
	 * [tJDBCInput_20 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 


	tos_count_tJDBCInput_20++;

/**
 * [tJDBCInput_20 main ] stop
 */
	
	/**
	 * [tJDBCInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 



/**
 * [tJDBCInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_20 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_20 != null) {
            incomingEnforcer_tJDBCOutput_20.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_20 != null && incomingEnforcer_tJDBCOutput_20.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_20.put("history_id", row20.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_20 = null;
        if (incomingEnforcer_tJDBCOutput_20 != null) {
            data_tJDBCOutput_20 = incomingEnforcer_tJDBCOutput_20.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_20 != null && data_tJDBCOutput_20 != null) {
        	writer_tJDBCOutput_20.write(data_tJDBCOutput_20);
        }
        
        nb_line_tJDBCOutput_20++;

 


	tos_count_tJDBCOutput_20++;

/**
 * [tJDBCOutput_20 main ] stop
 */
	
	/**
	 * [tJDBCOutput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	


 



/**
 * [tJDBCOutput_20 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	


 



/**
 * [tJDBCOutput_20 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 



/**
 * [tJDBCInput_20 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_20 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	
// end of generic


resourceMap.put("finish_tJDBCInput_20", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_20 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_20 = null;
    if (reader_tJDBCInput_20 != null) {
        reader_tJDBCInput_20.close();
        resultMap_tJDBCInput_20 = reader_tJDBCInput_20.getReturnValues();
    }
if(resultMap_tJDBCInput_20!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_20 : resultMap_tJDBCInput_20.entrySet()) {
		switch(entry_tJDBCInput_20.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "ERROR_MESSAGE", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_LINE", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_SUCCESS", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_REJECT", entry_tJDBCInput_20.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_20 = new StringBuilder();
            for (int i_tJDBCInput_20 = 0; i_tJDBCInput_20 < entry_tJDBCInput_20.getKey().length(); i_tJDBCInput_20++) {
                char ch_tJDBCInput_20 = entry_tJDBCInput_20.getKey().charAt(i_tJDBCInput_20);
                if(Character.isUpperCase(ch_tJDBCInput_20) && i_tJDBCInput_20> 0) {
                	studio_key_tJDBCInput_20.append('_');
                }
                studio_key_tJDBCInput_20.append(ch_tJDBCInput_20);
            }
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", studio_key_tJDBCInput_20.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_20.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_20", true);
end_Hash.put("tJDBCInput_20", System.currentTimeMillis());




/**
 * [tJDBCInput_20 end ] stop
 */

	
	/**
	 * [tJDBCOutput_20 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_20", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_20 = null;
    if (writer_tJDBCOutput_20 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_20 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_20.close();
        resultMap_tJDBCOutput_20 = writer_tJDBCOutput_20.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_20), container_tJDBCOutput_20);
    }
if(resultMap_tJDBCOutput_20!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_20 : resultMap_tJDBCOutput_20.entrySet()) {
		switch(entry_tJDBCOutput_20.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "ERROR_MESSAGE", entry_tJDBCOutput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "NB_LINE", entry_tJDBCOutput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "NB_SUCCESS", entry_tJDBCOutput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", "NB_REJECT", entry_tJDBCOutput_20.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_20 = new StringBuilder();
            for (int i_tJDBCOutput_20 = 0; i_tJDBCOutput_20 < entry_tJDBCOutput_20.getKey().length(); i_tJDBCOutput_20++) {
                char ch_tJDBCOutput_20 = entry_tJDBCOutput_20.getKey().charAt(i_tJDBCOutput_20);
                if(Character.isUpperCase(ch_tJDBCOutput_20) && i_tJDBCOutput_20> 0) {
                	studio_key_tJDBCOutput_20.append('_');
                }
                studio_key_tJDBCOutput_20.append(ch_tJDBCOutput_20);
            }
			container_tJDBCOutput_20.setComponentData("tJDBCOutput_20", studio_key_tJDBCOutput_20.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_20.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_20", true);
end_Hash.put("tJDBCOutput_20", System.currentTimeMillis());




/**
 * [tJDBCOutput_20 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_20 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_20")==null){
    if(resourceMap.get("reader_tJDBCInput_20")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_20")).close();
		} catch (java.io.IOException e_tJDBCInput_20) {
			String errorMessage_tJDBCInput_20 = "failed to release the resource in tJDBCInput_20 :" + e_tJDBCInput_20.getMessage();
			System.err.println(errorMessage_tJDBCInput_20);
		}
	}
}
 



/**
 * [tJDBCInput_20 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_20 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_20";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_20")==null){
    if(resourceMap.get("writer_tJDBCOutput_20")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_20")).close();
		} catch (java.io.IOException e_tJDBCOutput_20) {
			String errorMessage_tJDBCOutput_20 = "failed to release the resource in tJDBCOutput_20 :" + e_tJDBCOutput_20.getMessage();
			System.err.println(errorMessage_tJDBCOutput_20);
		}
	}
}
 



/**
 * [tJDBCOutput_20 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row21Struct other = (row21Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row21Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row21Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tJDBCOutput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_21", false);
		start_Hash.put("tJDBCOutput_21", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_21";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tJDBCOutput_21 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_21 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_21 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_21 = (String)(restRequest_tJDBCOutput_21 != null ? restRequest_tJDBCOutput_21.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_21 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_21 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_21 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_21 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_21.createRuntimeProperties();
 		                    props_tJDBCOutput_21.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_21.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_21.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_21.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_21.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_21.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_21.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_21.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_21.tableSelection.setValue("tablename",
 		                    "vm_disk_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_21_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_21\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_21_1_fisrt sst_tJDBCOutput_21_1_fisrt = new SchemaSettingTool_tJDBCOutput_21_1_fisrt();
 		                    
 		                    props_tJDBCOutput_21.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_21_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_21_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_21\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_21_2_fisrt sst_tJDBCOutput_21_2_fisrt = new SchemaSettingTool_tJDBCOutput_21_2_fisrt();
 		                    
 		                    props_tJDBCOutput_21.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_21_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_21_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_21\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_21_3_fisrt sst_tJDBCOutput_21_3_fisrt = new SchemaSettingTool_tJDBCOutput_21_3_fisrt();
 		                    
 		                    props_tJDBCOutput_21.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_21_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_21.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_21.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_21.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_21 = props_tJDBCOutput_21.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_21 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_21 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_21 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_21.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_21);
        }
    }
globalMap.put("tJDBCOutput_21_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_21);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_21= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_21_MAPPINGS_URL", mappings_url_tJDBCOutput_21);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_21 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_21";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_21 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_21 = null;
topology_tJDBCOutput_21 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_21 = def_tJDBCOutput_21.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_21, topology_tJDBCOutput_21);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_21 = def_tJDBCOutput_21.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_21 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_21.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_21 = componentRuntime_tJDBCOutput_21.initialize(container_tJDBCOutput_21, props_tJDBCOutput_21);

if (initVr_tJDBCOutput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_21.getMessage());
}

if(componentRuntime_tJDBCOutput_21 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_21 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_21;
	compDriverInitialization_tJDBCOutput_21.runAtDriver(container_tJDBCOutput_21);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_21 = null;
if(componentRuntime_tJDBCOutput_21 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_21 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_21;
	if (doesNodeBelongToRequest_tJDBCOutput_21) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_21 = sourceOrSink_tJDBCOutput_21.validate(container_tJDBCOutput_21);
        if (vr_tJDBCOutput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_21.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_21 = null;
    if (sourceOrSink_tJDBCOutput_21 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_21 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_21;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_21 = sink_tJDBCOutput_21.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_21) {
            writeOperation_tJDBCOutput_21.initialize(container_tJDBCOutput_21);
        }
        writer_tJDBCOutput_21 = writeOperation_tJDBCOutput_21.createWriter(container_tJDBCOutput_21);
        if (doesNodeBelongToRequest_tJDBCOutput_21) {
            writer_tJDBCOutput_21.open("tJDBCOutput_21");
        }

        resourceMap.put("writer_tJDBCOutput_21", writer_tJDBCOutput_21);
    } // end of "sourceOrSink_tJDBCOutput_21 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_21 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_21.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_21 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_21 = props_tJDBCOutput_21.getSchema(c_tJDBCOutput_21, false);
    incomingEnforcer_tJDBCOutput_21 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_21);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_21 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_21 = null;


 



/**
 * [tJDBCOutput_21 begin ] stop
 */



	
	/**
	 * [tJDBCInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_21", false);
		start_Hash.put("tJDBCInput_21", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_21";

	
		int tos_count_tJDBCInput_21 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_21 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_21 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_21 = (String)(restRequest_tJDBCInput_21 != null ? restRequest_tJDBCInput_21.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_21 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_21 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_21 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_21 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_21.createRuntimeProperties();
 		                    props_tJDBCInput_21.setValue("sql",
 		                    "SELECT history_id\nFROM vm_disk_daily_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_21.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_21.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_21.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_21_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_21\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_21_1_fisrt sst_tJDBCInput_21_1_fisrt = new SchemaSettingTool_tJDBCInput_21_1_fisrt();
 		                    
 		                    props_tJDBCInput_21.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_21_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_21.tableSelection.setValue("tablename",
 		                    "vm_disk_daily_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_21_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_21_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_21.trimTable).setValue("trim",tJDBCInput_21_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_21_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_21_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_21.trimTable).setValue("columnName",tJDBCInput_21_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_21.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_21 = props_tJDBCInput_21.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_21 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_21 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_21 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_21.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_21);
        }
    }
globalMap.put("tJDBCInput_21_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_21);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_21= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_21_MAPPINGS_URL", mappings_url_tJDBCInput_21);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_21 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_21";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_21 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_21 = null;
topology_tJDBCInput_21 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_21 = def_tJDBCInput_21.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_21, topology_tJDBCInput_21);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_21 = def_tJDBCInput_21.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_21 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_21.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_21 = componentRuntime_tJDBCInput_21.initialize(container_tJDBCInput_21, props_tJDBCInput_21);

if (initVr_tJDBCInput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_21.getMessage());
}

if(componentRuntime_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_21 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_21;
	compDriverInitialization_tJDBCInput_21.runAtDriver(container_tJDBCInput_21);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_21 = null;
if(componentRuntime_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_21 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_21;
	if (doesNodeBelongToRequest_tJDBCInput_21) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_21 = sourceOrSink_tJDBCInput_21.validate(container_tJDBCInput_21);
        if (vr_tJDBCInput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_21.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_21 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_21;
        reader_tJDBCInput_21 = source_tJDBCInput_21.createReader(container_tJDBCInput_21);
	    reader_tJDBCInput_21 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_21, container_tJDBCInput_21);

            boolean multi_output_is_allowed_tJDBCInput_21 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_21 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_21.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_21 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_21 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_21 = props_tJDBCInput_21.getSchema(c_tJDBCInput_21, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_21 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_21, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_21 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_21 = reader_tJDBCInput_21.start();

        resourceMap.put("reader_tJDBCInput_21", reader_tJDBCInput_21);

        for (; available_tJDBCInput_21; available_tJDBCInput_21 = reader_tJDBCInput_21.advance()) {
			nb_line_tJDBCInput_21++;

			
			if (multi_output_is_allowed_tJDBCInput_21) {
				
					row21 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_21 = reader_tJDBCInput_21.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_21) {
						row21 = new row21Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_21 == null) {
            factory_tJDBCInput_21 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_21.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_21.setWrapped(factory_tJDBCInput_21.convertToAvro(data_tJDBCInput_21));
                Object columnValue_0_tJDBCInput_21 = outgoingEnforcer_tJDBCInput_21.get(0);
                    if (columnValue_0_tJDBCInput_21 == null) {
                        row21.history_id = 0;
                    } else {
                            row21.history_id = (long) (columnValue_0_tJDBCInput_21);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_21) {
				java.util.Map<String,Object> info_tJDBCInput_21 = e_tJDBCInput_21.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_21 = null;
					if(info_tJDBCInput_21.containsKey("error")){
						errorMessage_tJDBCInput_21 = info_tJDBCInput_21.get("error");
					}else if(info_tJDBCInput_21.containsKey("errorMessage")){
						errorMessage_tJDBCInput_21 = info_tJDBCInput_21.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_21 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_21 = "Row "+ nb_line_tJDBCInput_21 + ": "+errorMessage_tJDBCInput_21;
					System.err.println(errorMessage_tJDBCInput_21);
				
					// If the record is reject, the main line record should put NULL
					row21 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_21 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_21 = null;


 



/**
 * [tJDBCInput_21 begin ] stop
 */
	
	/**
	 * [tJDBCInput_21 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 


	tos_count_tJDBCInput_21++;

/**
 * [tJDBCInput_21 main ] stop
 */
	
	/**
	 * [tJDBCInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 



/**
 * [tJDBCInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_21 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_21 != null) {
            incomingEnforcer_tJDBCOutput_21.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_21 != null && incomingEnforcer_tJDBCOutput_21.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_21.put("history_id", row21.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_21 = null;
        if (incomingEnforcer_tJDBCOutput_21 != null) {
            data_tJDBCOutput_21 = incomingEnforcer_tJDBCOutput_21.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_21 != null && data_tJDBCOutput_21 != null) {
        	writer_tJDBCOutput_21.write(data_tJDBCOutput_21);
        }
        
        nb_line_tJDBCOutput_21++;

 


	tos_count_tJDBCOutput_21++;

/**
 * [tJDBCOutput_21 main ] stop
 */
	
	/**
	 * [tJDBCOutput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	


 



/**
 * [tJDBCOutput_21 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	


 



/**
 * [tJDBCOutput_21 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 



/**
 * [tJDBCInput_21 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_21 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	
// end of generic


resourceMap.put("finish_tJDBCInput_21", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_21 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_21 = null;
    if (reader_tJDBCInput_21 != null) {
        reader_tJDBCInput_21.close();
        resultMap_tJDBCInput_21 = reader_tJDBCInput_21.getReturnValues();
    }
if(resultMap_tJDBCInput_21!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_21 : resultMap_tJDBCInput_21.entrySet()) {
		switch(entry_tJDBCInput_21.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "ERROR_MESSAGE", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_LINE", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_SUCCESS", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_REJECT", entry_tJDBCInput_21.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_21 = new StringBuilder();
            for (int i_tJDBCInput_21 = 0; i_tJDBCInput_21 < entry_tJDBCInput_21.getKey().length(); i_tJDBCInput_21++) {
                char ch_tJDBCInput_21 = entry_tJDBCInput_21.getKey().charAt(i_tJDBCInput_21);
                if(Character.isUpperCase(ch_tJDBCInput_21) && i_tJDBCInput_21> 0) {
                	studio_key_tJDBCInput_21.append('_');
                }
                studio_key_tJDBCInput_21.append(ch_tJDBCInput_21);
            }
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", studio_key_tJDBCInput_21.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_21.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_21", true);
end_Hash.put("tJDBCInput_21", System.currentTimeMillis());




/**
 * [tJDBCInput_21 end ] stop
 */

	
	/**
	 * [tJDBCOutput_21 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_21", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_21 = null;
    if (writer_tJDBCOutput_21 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_21 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_21.close();
        resultMap_tJDBCOutput_21 = writer_tJDBCOutput_21.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_21), container_tJDBCOutput_21);
    }
if(resultMap_tJDBCOutput_21!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_21 : resultMap_tJDBCOutput_21.entrySet()) {
		switch(entry_tJDBCOutput_21.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "ERROR_MESSAGE", entry_tJDBCOutput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "NB_LINE", entry_tJDBCOutput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "NB_SUCCESS", entry_tJDBCOutput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", "NB_REJECT", entry_tJDBCOutput_21.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_21 = new StringBuilder();
            for (int i_tJDBCOutput_21 = 0; i_tJDBCOutput_21 < entry_tJDBCOutput_21.getKey().length(); i_tJDBCOutput_21++) {
                char ch_tJDBCOutput_21 = entry_tJDBCOutput_21.getKey().charAt(i_tJDBCOutput_21);
                if(Character.isUpperCase(ch_tJDBCOutput_21) && i_tJDBCOutput_21> 0) {
                	studio_key_tJDBCOutput_21.append('_');
                }
                studio_key_tJDBCOutput_21.append(ch_tJDBCOutput_21);
            }
			container_tJDBCOutput_21.setComponentData("tJDBCOutput_21", studio_key_tJDBCOutput_21.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_21.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_21", true);
end_Hash.put("tJDBCOutput_21", System.currentTimeMillis());




/**
 * [tJDBCOutput_21 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_21 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_21")==null){
    if(resourceMap.get("reader_tJDBCInput_21")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_21")).close();
		} catch (java.io.IOException e_tJDBCInput_21) {
			String errorMessage_tJDBCInput_21 = "failed to release the resource in tJDBCInput_21 :" + e_tJDBCInput_21.getMessage();
			System.err.println(errorMessage_tJDBCInput_21);
		}
	}
}
 



/**
 * [tJDBCInput_21 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_21 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_21";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_21")==null){
    if(resourceMap.get("writer_tJDBCOutput_21")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_21")).close();
		} catch (java.io.IOException e_tJDBCOutput_21) {
			String errorMessage_tJDBCOutput_21 = "failed to release the resource in tJDBCOutput_21 :" + e_tJDBCOutput_21.getMessage();
			System.err.println(errorMessage_tJDBCOutput_21);
		}
	}
}
 



/**
 * [tJDBCOutput_21 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", 1);
	}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";

	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJDBCConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	

public void tJDBCConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJDBCConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCConnection_1", false);
		start_Hash.put("tJDBCConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCConnection_1";

	
		int tos_count_tJDBCConnection_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCConnection_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCConnection_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCConnection_1 = (String)(restRequest_tJDBCConnection_1 != null ? restRequest_tJDBCConnection_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCConnection_1 =
        new org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCConnection_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCConnection_1 = null;


org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties props_tJDBCConnection_1 =
        (org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties) def_tJDBCConnection_1.createRuntimeProperties();
 		                    props_tJDBCConnection_1.setValue("shareConnection",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("sharedConnectionName",
 		                    "delete_ovirt_engine_history");
 		                    
 		                    props_tJDBCConnection_1.setValue("useAutoCommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("autocommit",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("jdbcUrl",
 		                    context.ovirtEngineHistoryDbJdbcConnection);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("driverClass",
 		                    context.ovirtEngineHistoryDbDriverClass);
 		                    
 		                    java.util.List<Object> tJDBCConnection_1_connection_driverTable_drivers = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCConnection_1_connection_driverTable_drivers.add("mvn:postgresql/postgresql/8.4-703.jdbc4/jar");
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCConnection_1.connection.driverTable).setValue("drivers",tJDBCConnection_1_connection_driverTable_drivers);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("userId",
 		                    context.ovirtEngineHistoryDbUser);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("password",
 		                    context.ovirtEngineHistoryDbPassword);
 		                    
globalMap.put("tJDBCConnection_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCConnection_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCConnection_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCConnection_1_MAPPINGS_URL", mappings_url_tJDBCConnection_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCConnection_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCConnection_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCConnection_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCConnection_1 = null;
topology_tJDBCConnection_1 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCConnection_1 = def_tJDBCConnection_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCConnection_1, topology_tJDBCConnection_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCConnection_1 = def_tJDBCConnection_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCConnection_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCConnection_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCConnection_1 = componentRuntime_tJDBCConnection_1.initialize(container_tJDBCConnection_1, props_tJDBCConnection_1);

if (initVr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCConnection_1.getMessage());
}

if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCConnection_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCConnection_1;
	compDriverInitialization_tJDBCConnection_1.runAtDriver(container_tJDBCConnection_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCConnection_1 = null;
if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCConnection_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCConnection_1;
	if (doesNodeBelongToRequest_tJDBCConnection_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCConnection_1 = sourceOrSink_tJDBCConnection_1.validate(container_tJDBCConnection_1);
        if (vr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCConnection_1.getMessage());
        }
	}
}

 



/**
 * [tJDBCConnection_1 begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 


	tos_count_tJDBCConnection_1++;

/**
 * [tJDBCConnection_1 main ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCConnection_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// end of generic

 

ok_Hash.put("tJDBCConnection_1", true);
end_Hash.put("tJDBCConnection_1", System.currentTimeMillis());




/**
 * [tJDBCConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// finally of generic

 



/**
 * [tJDBCConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row22Struct other = (row22Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row22Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row22Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tJDBCOutput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_22", false);
		start_Hash.put("tJDBCOutput_22", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_22";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tJDBCOutput_22 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_22 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_22 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_22 = (String)(restRequest_tJDBCOutput_22 != null ? restRequest_tJDBCOutput_22.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_22 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_22 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_22 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_22 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_22.createRuntimeProperties();
 		                    props_tJDBCOutput_22.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_22.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_22.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_22.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_22.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_22.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_22.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_22.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_22.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_22.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_22.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_22.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_22_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_22\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_22_1_fisrt sst_tJDBCOutput_22_1_fisrt = new SchemaSettingTool_tJDBCOutput_22_1_fisrt();
 		                    
 		                    props_tJDBCOutput_22.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_22_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_22_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_22\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_22_2_fisrt sst_tJDBCOutput_22_2_fisrt = new SchemaSettingTool_tJDBCOutput_22_2_fisrt();
 		                    
 		                    props_tJDBCOutput_22.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_22_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_22_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_22\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_22_3_fisrt sst_tJDBCOutput_22_3_fisrt = new SchemaSettingTool_tJDBCOutput_22_3_fisrt();
 		                    
 		                    props_tJDBCOutput_22.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_22_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_22.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_22.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_22.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_22 = props_tJDBCOutput_22.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_22 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_22 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_22 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_22.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_22);
        }
    }
globalMap.put("tJDBCOutput_22_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_22);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_22= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_22_MAPPINGS_URL", mappings_url_tJDBCOutput_22);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_22 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_22";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_22 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_22 = null;
topology_tJDBCOutput_22 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_22 = def_tJDBCOutput_22.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_22, topology_tJDBCOutput_22);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_22 = def_tJDBCOutput_22.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_22 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_22.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_22 = componentRuntime_tJDBCOutput_22.initialize(container_tJDBCOutput_22, props_tJDBCOutput_22);

if (initVr_tJDBCOutput_22.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_22.getMessage());
}

if(componentRuntime_tJDBCOutput_22 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_22 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_22;
	compDriverInitialization_tJDBCOutput_22.runAtDriver(container_tJDBCOutput_22);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_22 = null;
if(componentRuntime_tJDBCOutput_22 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_22 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_22;
	if (doesNodeBelongToRequest_tJDBCOutput_22) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_22 = sourceOrSink_tJDBCOutput_22.validate(container_tJDBCOutput_22);
        if (vr_tJDBCOutput_22.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_22.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_22 = null;
    if (sourceOrSink_tJDBCOutput_22 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_22 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_22;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_22 = sink_tJDBCOutput_22.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_22) {
            writeOperation_tJDBCOutput_22.initialize(container_tJDBCOutput_22);
        }
        writer_tJDBCOutput_22 = writeOperation_tJDBCOutput_22.createWriter(container_tJDBCOutput_22);
        if (doesNodeBelongToRequest_tJDBCOutput_22) {
            writer_tJDBCOutput_22.open("tJDBCOutput_22");
        }

        resourceMap.put("writer_tJDBCOutput_22", writer_tJDBCOutput_22);
    } // end of "sourceOrSink_tJDBCOutput_22 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_22 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_22.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_22 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_22 = props_tJDBCOutput_22.getSchema(c_tJDBCOutput_22, false);
    incomingEnforcer_tJDBCOutput_22 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_22);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_22 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_22 = null;


 



/**
 * [tJDBCOutput_22 begin ] stop
 */



	
	/**
	 * [tJDBCInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_22", false);
		start_Hash.put("tJDBCInput_22", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_22";

	
		int tos_count_tJDBCInput_22 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_22 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_22 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_22 = (String)(restRequest_tJDBCInput_22 != null ? restRequest_tJDBCInput_22.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_22 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_22 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_22 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_22 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_22.createRuntimeProperties();
 		                    props_tJDBCInput_22.setValue("sql",
 		                    "SELECT history_id\nFROM vm_disks_usage_samples_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepSamples * -1,"HH"))+"'"
+ "limit " + (( context.timesDeleteRun - (context.timesDeleteRun % context.deleteIncrement ) ) / context.deleteIncrement + 1)
* context.deleteMultiplier);
 		                    
 		                    props_tJDBCInput_22.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_22.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_22.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_22.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_22.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_22.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_22_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq1'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_22\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_22_1_fisrt sst_tJDBCInput_22_1_fisrt = new SchemaSettingTool_tJDBCInput_22_1_fisrt();
 		                    
 		                    props_tJDBCInput_22.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_22_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_22.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_samples_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_22_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_22_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_22.trimTable).setValue("trim",tJDBCInput_22_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_22_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_22_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_22.trimTable).setValue("columnName",tJDBCInput_22_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_22.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_22 = props_tJDBCInput_22.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_22 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_22 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_22 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_22.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_22);
        }
    }
globalMap.put("tJDBCInput_22_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_22);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_22= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_22_MAPPINGS_URL", mappings_url_tJDBCInput_22);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_22 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_22";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_22 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_22 = null;
topology_tJDBCInput_22 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_22 = def_tJDBCInput_22.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_22, topology_tJDBCInput_22);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_22 = def_tJDBCInput_22.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_22 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_22.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_22 = componentRuntime_tJDBCInput_22.initialize(container_tJDBCInput_22, props_tJDBCInput_22);

if (initVr_tJDBCInput_22.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_22.getMessage());
}

if(componentRuntime_tJDBCInput_22 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_22 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_22;
	compDriverInitialization_tJDBCInput_22.runAtDriver(container_tJDBCInput_22);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_22 = null;
if(componentRuntime_tJDBCInput_22 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_22 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_22;
	if (doesNodeBelongToRequest_tJDBCInput_22) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_22 = sourceOrSink_tJDBCInput_22.validate(container_tJDBCInput_22);
        if (vr_tJDBCInput_22.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_22.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_22 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_22 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_22;
        reader_tJDBCInput_22 = source_tJDBCInput_22.createReader(container_tJDBCInput_22);
	    reader_tJDBCInput_22 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_22, container_tJDBCInput_22);

            boolean multi_output_is_allowed_tJDBCInput_22 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_22 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_22.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_22 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_22 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_22 = props_tJDBCInput_22.getSchema(c_tJDBCInput_22, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_22 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_22, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_22 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_22 = reader_tJDBCInput_22.start();

        resourceMap.put("reader_tJDBCInput_22", reader_tJDBCInput_22);

        for (; available_tJDBCInput_22; available_tJDBCInput_22 = reader_tJDBCInput_22.advance()) {
			nb_line_tJDBCInput_22++;

			
			if (multi_output_is_allowed_tJDBCInput_22) {
				
					row22 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_22 = reader_tJDBCInput_22.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_22) {
						row22 = new row22Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_22 == null) {
            factory_tJDBCInput_22 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_22.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_22.setWrapped(factory_tJDBCInput_22.convertToAvro(data_tJDBCInput_22));
                Object columnValue_0_tJDBCInput_22 = outgoingEnforcer_tJDBCInput_22.get(0);
                    if (columnValue_0_tJDBCInput_22 == null) {
                        row22.history_id = 0;
                    } else {
                            row22.history_id = (long) (columnValue_0_tJDBCInput_22);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_22) {
				java.util.Map<String,Object> info_tJDBCInput_22 = e_tJDBCInput_22.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_22 = null;
					if(info_tJDBCInput_22.containsKey("error")){
						errorMessage_tJDBCInput_22 = info_tJDBCInput_22.get("error");
					}else if(info_tJDBCInput_22.containsKey("errorMessage")){
						errorMessage_tJDBCInput_22 = info_tJDBCInput_22.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_22 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_22 = "Row "+ nb_line_tJDBCInput_22 + ": "+errorMessage_tJDBCInput_22;
					System.err.println(errorMessage_tJDBCInput_22);
				
					// If the record is reject, the main line record should put NULL
					row22 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_22 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_22 = null;


 



/**
 * [tJDBCInput_22 begin ] stop
 */
	
	/**
	 * [tJDBCInput_22 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	


 


	tos_count_tJDBCInput_22++;

/**
 * [tJDBCInput_22 main ] stop
 */
	
	/**
	 * [tJDBCInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	


 



/**
 * [tJDBCInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_22 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_22";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_22 != null) {
            incomingEnforcer_tJDBCOutput_22.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_22 != null && incomingEnforcer_tJDBCOutput_22.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_22.put("history_id", row22.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_22 = null;
        if (incomingEnforcer_tJDBCOutput_22 != null) {
            data_tJDBCOutput_22 = incomingEnforcer_tJDBCOutput_22.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_22 != null && data_tJDBCOutput_22 != null) {
        	writer_tJDBCOutput_22.write(data_tJDBCOutput_22);
        }
        
        nb_line_tJDBCOutput_22++;

 


	tos_count_tJDBCOutput_22++;

/**
 * [tJDBCOutput_22 main ] stop
 */
	
	/**
	 * [tJDBCOutput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_22";

	


 



/**
 * [tJDBCOutput_22 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_22";

	


 



/**
 * [tJDBCOutput_22 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	


 



/**
 * [tJDBCInput_22 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_22 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	
// end of generic


resourceMap.put("finish_tJDBCInput_22", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_22 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_22 = null;
    if (reader_tJDBCInput_22 != null) {
        reader_tJDBCInput_22.close();
        resultMap_tJDBCInput_22 = reader_tJDBCInput_22.getReturnValues();
    }
if(resultMap_tJDBCInput_22!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_22 : resultMap_tJDBCInput_22.entrySet()) {
		switch(entry_tJDBCInput_22.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "ERROR_MESSAGE", entry_tJDBCInput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "NB_LINE", entry_tJDBCInput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "NB_SUCCESS", entry_tJDBCInput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", "NB_REJECT", entry_tJDBCInput_22.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_22 = new StringBuilder();
            for (int i_tJDBCInput_22 = 0; i_tJDBCInput_22 < entry_tJDBCInput_22.getKey().length(); i_tJDBCInput_22++) {
                char ch_tJDBCInput_22 = entry_tJDBCInput_22.getKey().charAt(i_tJDBCInput_22);
                if(Character.isUpperCase(ch_tJDBCInput_22) && i_tJDBCInput_22> 0) {
                	studio_key_tJDBCInput_22.append('_');
                }
                studio_key_tJDBCInput_22.append(ch_tJDBCInput_22);
            }
			container_tJDBCInput_22.setComponentData("tJDBCInput_22", studio_key_tJDBCInput_22.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_22.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_22", true);
end_Hash.put("tJDBCInput_22", System.currentTimeMillis());




/**
 * [tJDBCInput_22 end ] stop
 */

	
	/**
	 * [tJDBCOutput_22 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_22";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_22", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_22 = null;
    if (writer_tJDBCOutput_22 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_22 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_22.close();
        resultMap_tJDBCOutput_22 = writer_tJDBCOutput_22.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_22), container_tJDBCOutput_22);
    }
if(resultMap_tJDBCOutput_22!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_22 : resultMap_tJDBCOutput_22.entrySet()) {
		switch(entry_tJDBCOutput_22.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_22.setComponentData("tJDBCOutput_22", "ERROR_MESSAGE", entry_tJDBCOutput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_22.setComponentData("tJDBCOutput_22", "NB_LINE", entry_tJDBCOutput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_22.setComponentData("tJDBCOutput_22", "NB_SUCCESS", entry_tJDBCOutput_22.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_22.setComponentData("tJDBCOutput_22", "NB_REJECT", entry_tJDBCOutput_22.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_22 = new StringBuilder();
            for (int i_tJDBCOutput_22 = 0; i_tJDBCOutput_22 < entry_tJDBCOutput_22.getKey().length(); i_tJDBCOutput_22++) {
                char ch_tJDBCOutput_22 = entry_tJDBCOutput_22.getKey().charAt(i_tJDBCOutput_22);
                if(Character.isUpperCase(ch_tJDBCOutput_22) && i_tJDBCOutput_22> 0) {
                	studio_key_tJDBCOutput_22.append('_');
                }
                studio_key_tJDBCOutput_22.append(ch_tJDBCOutput_22);
            }
			container_tJDBCOutput_22.setComponentData("tJDBCOutput_22", studio_key_tJDBCOutput_22.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_22.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_22", true);
end_Hash.put("tJDBCOutput_22", System.currentTimeMillis());




/**
 * [tJDBCOutput_22 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_22 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_22";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_22")==null){
    if(resourceMap.get("reader_tJDBCInput_22")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_22")).close();
		} catch (java.io.IOException e_tJDBCInput_22) {
			String errorMessage_tJDBCInput_22 = "failed to release the resource in tJDBCInput_22 :" + e_tJDBCInput_22.getMessage();
			System.err.println(errorMessage_tJDBCInput_22);
		}
	}
}
 



/**
 * [tJDBCInput_22 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_22 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_22";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_22")==null){
    if(resourceMap.get("writer_tJDBCOutput_22")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_22")).close();
		} catch (java.io.IOException e_tJDBCOutput_22) {
			String errorMessage_tJDBCOutput_22 = "failed to release the resource in tJDBCOutput_22 :" + e_tJDBCOutput_22.getMessage();
			System.err.println(errorMessage_tJDBCOutput_22);
		}
	}
}
 



/**
 * [tJDBCOutput_22 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row23Struct other = (row23Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row23Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row23Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tJDBCOutput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_23", false);
		start_Hash.put("tJDBCOutput_23", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_23";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tJDBCOutput_23 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_23 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_23 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_23 = (String)(restRequest_tJDBCOutput_23 != null ? restRequest_tJDBCOutput_23.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_23 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_23 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_23 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_23 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_23.createRuntimeProperties();
 		                    props_tJDBCOutput_23.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_23.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_23.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_23.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_23.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_23.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_23.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_23.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_23.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_hourly_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_23_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_23\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_23_1_fisrt sst_tJDBCOutput_23_1_fisrt = new SchemaSettingTool_tJDBCOutput_23_1_fisrt();
 		                    
 		                    props_tJDBCOutput_23.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_23_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_23_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_23\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_23_2_fisrt sst_tJDBCOutput_23_2_fisrt = new SchemaSettingTool_tJDBCOutput_23_2_fisrt();
 		                    
 		                    props_tJDBCOutput_23.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_23_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_23_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_23\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_23_3_fisrt sst_tJDBCOutput_23_3_fisrt = new SchemaSettingTool_tJDBCOutput_23_3_fisrt();
 		                    
 		                    props_tJDBCOutput_23.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_23_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_23.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_23.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_23.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_23 = props_tJDBCOutput_23.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_23 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_23 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_23 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_23.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_23);
        }
    }
globalMap.put("tJDBCOutput_23_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_23);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_23= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_23_MAPPINGS_URL", mappings_url_tJDBCOutput_23);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_23 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_23";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_23 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_23 = null;
topology_tJDBCOutput_23 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_23 = def_tJDBCOutput_23.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_23, topology_tJDBCOutput_23);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_23 = def_tJDBCOutput_23.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_23 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_23.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_23 = componentRuntime_tJDBCOutput_23.initialize(container_tJDBCOutput_23, props_tJDBCOutput_23);

if (initVr_tJDBCOutput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_23.getMessage());
}

if(componentRuntime_tJDBCOutput_23 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_23 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_23;
	compDriverInitialization_tJDBCOutput_23.runAtDriver(container_tJDBCOutput_23);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_23 = null;
if(componentRuntime_tJDBCOutput_23 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_23 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_23;
	if (doesNodeBelongToRequest_tJDBCOutput_23) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_23 = sourceOrSink_tJDBCOutput_23.validate(container_tJDBCOutput_23);
        if (vr_tJDBCOutput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_23.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_23 = null;
    if (sourceOrSink_tJDBCOutput_23 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_23 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_23;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_23 = sink_tJDBCOutput_23.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_23) {
            writeOperation_tJDBCOutput_23.initialize(container_tJDBCOutput_23);
        }
        writer_tJDBCOutput_23 = writeOperation_tJDBCOutput_23.createWriter(container_tJDBCOutput_23);
        if (doesNodeBelongToRequest_tJDBCOutput_23) {
            writer_tJDBCOutput_23.open("tJDBCOutput_23");
        }

        resourceMap.put("writer_tJDBCOutput_23", writer_tJDBCOutput_23);
    } // end of "sourceOrSink_tJDBCOutput_23 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_23 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_23.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_23 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_23 = props_tJDBCOutput_23.getSchema(c_tJDBCOutput_23, false);
    incomingEnforcer_tJDBCOutput_23 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_23);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_23 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_23 = null;


 



/**
 * [tJDBCOutput_23 begin ] stop
 */



	
	/**
	 * [tJDBCInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_23", false);
		start_Hash.put("tJDBCInput_23", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_23";

	
		int tos_count_tJDBCInput_23 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_23 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_23 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_23 = (String)(restRequest_tJDBCInput_23 != null ? restRequest_tJDBCInput_23.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_23 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_23 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_23 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_23 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_23.createRuntimeProperties();
 		                    props_tJDBCInput_23.setValue("sql",
 		                    "SELECT history_id\nFROM vm_disks_usage_hourly_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_23.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_23.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_23.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_23.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_23.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_23.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_23_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_23\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_23_1_fisrt sst_tJDBCInput_23_1_fisrt = new SchemaSettingTool_tJDBCInput_23_1_fisrt();
 		                    
 		                    props_tJDBCInput_23.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_23_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_23.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_hourly_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_23_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_23_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_23.trimTable).setValue("trim",tJDBCInput_23_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_23_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_23_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_23.trimTable).setValue("columnName",tJDBCInput_23_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_23.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_23 = props_tJDBCInput_23.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_23 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_23 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_23 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_23.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_23);
        }
    }
globalMap.put("tJDBCInput_23_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_23);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_23= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_23_MAPPINGS_URL", mappings_url_tJDBCInput_23);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_23 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_23";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_23 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_23 = null;
topology_tJDBCInput_23 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_23 = def_tJDBCInput_23.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_23, topology_tJDBCInput_23);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_23 = def_tJDBCInput_23.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_23 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_23.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_23 = componentRuntime_tJDBCInput_23.initialize(container_tJDBCInput_23, props_tJDBCInput_23);

if (initVr_tJDBCInput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_23.getMessage());
}

if(componentRuntime_tJDBCInput_23 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_23 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_23;
	compDriverInitialization_tJDBCInput_23.runAtDriver(container_tJDBCInput_23);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_23 = null;
if(componentRuntime_tJDBCInput_23 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_23 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_23;
	if (doesNodeBelongToRequest_tJDBCInput_23) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_23 = sourceOrSink_tJDBCInput_23.validate(container_tJDBCInput_23);
        if (vr_tJDBCInput_23.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_23.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_23 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_23 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_23;
        reader_tJDBCInput_23 = source_tJDBCInput_23.createReader(container_tJDBCInput_23);
	    reader_tJDBCInput_23 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_23, container_tJDBCInput_23);

            boolean multi_output_is_allowed_tJDBCInput_23 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_23 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_23.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_23 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_23 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_23 = props_tJDBCInput_23.getSchema(c_tJDBCInput_23, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_23 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_23, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_23 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_23 = reader_tJDBCInput_23.start();

        resourceMap.put("reader_tJDBCInput_23", reader_tJDBCInput_23);

        for (; available_tJDBCInput_23; available_tJDBCInput_23 = reader_tJDBCInput_23.advance()) {
			nb_line_tJDBCInput_23++;

			
			if (multi_output_is_allowed_tJDBCInput_23) {
				
					row23 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_23 = reader_tJDBCInput_23.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_23) {
						row23 = new row23Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_23 == null) {
            factory_tJDBCInput_23 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_23.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_23.setWrapped(factory_tJDBCInput_23.convertToAvro(data_tJDBCInput_23));
                Object columnValue_0_tJDBCInput_23 = outgoingEnforcer_tJDBCInput_23.get(0);
                    if (columnValue_0_tJDBCInput_23 == null) {
                        row23.history_id = 0;
                    } else {
                            row23.history_id = (long) (columnValue_0_tJDBCInput_23);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_23) {
				java.util.Map<String,Object> info_tJDBCInput_23 = e_tJDBCInput_23.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_23 = null;
					if(info_tJDBCInput_23.containsKey("error")){
						errorMessage_tJDBCInput_23 = info_tJDBCInput_23.get("error");
					}else if(info_tJDBCInput_23.containsKey("errorMessage")){
						errorMessage_tJDBCInput_23 = info_tJDBCInput_23.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_23 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_23 = "Row "+ nb_line_tJDBCInput_23 + ": "+errorMessage_tJDBCInput_23;
					System.err.println(errorMessage_tJDBCInput_23);
				
					// If the record is reject, the main line record should put NULL
					row23 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_23 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_23 = null;


 



/**
 * [tJDBCInput_23 begin ] stop
 */
	
	/**
	 * [tJDBCInput_23 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	


 


	tos_count_tJDBCInput_23++;

/**
 * [tJDBCInput_23 main ] stop
 */
	
	/**
	 * [tJDBCInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	


 



/**
 * [tJDBCInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_23 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_23 != null) {
            incomingEnforcer_tJDBCOutput_23.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_23 != null && incomingEnforcer_tJDBCOutput_23.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_23.put("history_id", row23.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_23 = null;
        if (incomingEnforcer_tJDBCOutput_23 != null) {
            data_tJDBCOutput_23 = incomingEnforcer_tJDBCOutput_23.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_23 != null && data_tJDBCOutput_23 != null) {
        	writer_tJDBCOutput_23.write(data_tJDBCOutput_23);
        }
        
        nb_line_tJDBCOutput_23++;

 


	tos_count_tJDBCOutput_23++;

/**
 * [tJDBCOutput_23 main ] stop
 */
	
	/**
	 * [tJDBCOutput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	


 



/**
 * [tJDBCOutput_23 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	


 



/**
 * [tJDBCOutput_23 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	


 



/**
 * [tJDBCInput_23 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_23 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	
// end of generic


resourceMap.put("finish_tJDBCInput_23", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_23 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_23 = null;
    if (reader_tJDBCInput_23 != null) {
        reader_tJDBCInput_23.close();
        resultMap_tJDBCInput_23 = reader_tJDBCInput_23.getReturnValues();
    }
if(resultMap_tJDBCInput_23!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_23 : resultMap_tJDBCInput_23.entrySet()) {
		switch(entry_tJDBCInput_23.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "ERROR_MESSAGE", entry_tJDBCInput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "NB_LINE", entry_tJDBCInput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "NB_SUCCESS", entry_tJDBCInput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", "NB_REJECT", entry_tJDBCInput_23.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_23 = new StringBuilder();
            for (int i_tJDBCInput_23 = 0; i_tJDBCInput_23 < entry_tJDBCInput_23.getKey().length(); i_tJDBCInput_23++) {
                char ch_tJDBCInput_23 = entry_tJDBCInput_23.getKey().charAt(i_tJDBCInput_23);
                if(Character.isUpperCase(ch_tJDBCInput_23) && i_tJDBCInput_23> 0) {
                	studio_key_tJDBCInput_23.append('_');
                }
                studio_key_tJDBCInput_23.append(ch_tJDBCInput_23);
            }
			container_tJDBCInput_23.setComponentData("tJDBCInput_23", studio_key_tJDBCInput_23.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_23.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_23", true);
end_Hash.put("tJDBCInput_23", System.currentTimeMillis());




/**
 * [tJDBCInput_23 end ] stop
 */

	
	/**
	 * [tJDBCOutput_23 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_23", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_23 = null;
    if (writer_tJDBCOutput_23 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_23 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_23.close();
        resultMap_tJDBCOutput_23 = writer_tJDBCOutput_23.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_23), container_tJDBCOutput_23);
    }
if(resultMap_tJDBCOutput_23!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_23 : resultMap_tJDBCOutput_23.entrySet()) {
		switch(entry_tJDBCOutput_23.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "ERROR_MESSAGE", entry_tJDBCOutput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "NB_LINE", entry_tJDBCOutput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "NB_SUCCESS", entry_tJDBCOutput_23.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", "NB_REJECT", entry_tJDBCOutput_23.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_23 = new StringBuilder();
            for (int i_tJDBCOutput_23 = 0; i_tJDBCOutput_23 < entry_tJDBCOutput_23.getKey().length(); i_tJDBCOutput_23++) {
                char ch_tJDBCOutput_23 = entry_tJDBCOutput_23.getKey().charAt(i_tJDBCOutput_23);
                if(Character.isUpperCase(ch_tJDBCOutput_23) && i_tJDBCOutput_23> 0) {
                	studio_key_tJDBCOutput_23.append('_');
                }
                studio_key_tJDBCOutput_23.append(ch_tJDBCOutput_23);
            }
			container_tJDBCOutput_23.setComponentData("tJDBCOutput_23", studio_key_tJDBCOutput_23.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_23.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_23", true);
end_Hash.put("tJDBCOutput_23", System.currentTimeMillis());




/**
 * [tJDBCOutput_23 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_23 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_23";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_23")==null){
    if(resourceMap.get("reader_tJDBCInput_23")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_23")).close();
		} catch (java.io.IOException e_tJDBCInput_23) {
			String errorMessage_tJDBCInput_23 = "failed to release the resource in tJDBCInput_23 :" + e_tJDBCInput_23.getMessage();
			System.err.println(errorMessage_tJDBCInput_23);
		}
	}
}
 



/**
 * [tJDBCInput_23 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_23 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_23";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_23")==null){
    if(resourceMap.get("writer_tJDBCOutput_23")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_23")).close();
		} catch (java.io.IOException e_tJDBCOutput_23) {
			String errorMessage_tJDBCOutput_23 = "failed to release the resource in tJDBCOutput_23 :" + e_tJDBCOutput_23.getMessage();
			System.err.println(errorMessage_tJDBCOutput_23);
		}
	}
}
 



/**
 * [tJDBCOutput_23 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_23_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row24Struct other = (row24Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row24Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row24Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tJDBCOutput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_24", false);
		start_Hash.put("tJDBCOutput_24", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_24";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tJDBCOutput_24 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_24 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_24 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_24 = (String)(restRequest_tJDBCOutput_24 != null ? restRequest_tJDBCOutput_24.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_24 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_24 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_24 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_24 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_24.createRuntimeProperties();
 		                    props_tJDBCOutput_24.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_24.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_24.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_24.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_24.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_24.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_24.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_24.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_24.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_daily_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_24_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_24\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_24_1_fisrt sst_tJDBCOutput_24_1_fisrt = new SchemaSettingTool_tJDBCOutput_24_1_fisrt();
 		                    
 		                    props_tJDBCOutput_24.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_24_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_24_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_24\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_24_2_fisrt sst_tJDBCOutput_24_2_fisrt = new SchemaSettingTool_tJDBCOutput_24_2_fisrt();
 		                    
 		                    props_tJDBCOutput_24.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_24_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_24_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_24\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_24_3_fisrt sst_tJDBCOutput_24_3_fisrt = new SchemaSettingTool_tJDBCOutput_24_3_fisrt();
 		                    
 		                    props_tJDBCOutput_24.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_24_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_24.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_24.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_24.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_24 = props_tJDBCOutput_24.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_24 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_24 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_24 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_24.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_24);
        }
    }
globalMap.put("tJDBCOutput_24_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_24);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_24= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_24_MAPPINGS_URL", mappings_url_tJDBCOutput_24);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_24 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_24";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_24 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_24 = null;
topology_tJDBCOutput_24 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_24 = def_tJDBCOutput_24.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_24, topology_tJDBCOutput_24);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_24 = def_tJDBCOutput_24.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_24 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_24.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_24 = componentRuntime_tJDBCOutput_24.initialize(container_tJDBCOutput_24, props_tJDBCOutput_24);

if (initVr_tJDBCOutput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_24.getMessage());
}

if(componentRuntime_tJDBCOutput_24 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_24 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_24;
	compDriverInitialization_tJDBCOutput_24.runAtDriver(container_tJDBCOutput_24);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_24 = null;
if(componentRuntime_tJDBCOutput_24 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_24 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_24;
	if (doesNodeBelongToRequest_tJDBCOutput_24) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_24 = sourceOrSink_tJDBCOutput_24.validate(container_tJDBCOutput_24);
        if (vr_tJDBCOutput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_24.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_24 = null;
    if (sourceOrSink_tJDBCOutput_24 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_24 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_24;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_24 = sink_tJDBCOutput_24.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_24) {
            writeOperation_tJDBCOutput_24.initialize(container_tJDBCOutput_24);
        }
        writer_tJDBCOutput_24 = writeOperation_tJDBCOutput_24.createWriter(container_tJDBCOutput_24);
        if (doesNodeBelongToRequest_tJDBCOutput_24) {
            writer_tJDBCOutput_24.open("tJDBCOutput_24");
        }

        resourceMap.put("writer_tJDBCOutput_24", writer_tJDBCOutput_24);
    } // end of "sourceOrSink_tJDBCOutput_24 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_24 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_24.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_24 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_24 = props_tJDBCOutput_24.getSchema(c_tJDBCOutput_24, false);
    incomingEnforcer_tJDBCOutput_24 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_24);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_24 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_24 = null;


 



/**
 * [tJDBCOutput_24 begin ] stop
 */



	
	/**
	 * [tJDBCInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_24", false);
		start_Hash.put("tJDBCInput_24", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_24";

	
		int tos_count_tJDBCInput_24 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_24 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_24 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_24 = (String)(restRequest_tJDBCInput_24 != null ? restRequest_tJDBCInput_24.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_24 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_24 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_24 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_24 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_24.createRuntimeProperties();
 		                    props_tJDBCInput_24.setValue("sql",
 		                    "SELECT history_id\nFROM vm_disks_usage_daily_history\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_24.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_24.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_24.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_24.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_24.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_24.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_24_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_24\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_24_1_fisrt sst_tJDBCInput_24_1_fisrt = new SchemaSettingTool_tJDBCInput_24_1_fisrt();
 		                    
 		                    props_tJDBCInput_24.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_24_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_24.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_daily_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_24_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_24_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_24.trimTable).setValue("trim",tJDBCInput_24_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_24_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_24_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_24.trimTable).setValue("columnName",tJDBCInput_24_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_24.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_24 = props_tJDBCInput_24.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_24 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_24 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_24 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_24.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_24);
        }
    }
globalMap.put("tJDBCInput_24_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_24);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_24= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_24_MAPPINGS_URL", mappings_url_tJDBCInput_24);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_24 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_24";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_24 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_24 = null;
topology_tJDBCInput_24 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_24 = def_tJDBCInput_24.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_24, topology_tJDBCInput_24);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_24 = def_tJDBCInput_24.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_24 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_24.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_24 = componentRuntime_tJDBCInput_24.initialize(container_tJDBCInput_24, props_tJDBCInput_24);

if (initVr_tJDBCInput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_24.getMessage());
}

if(componentRuntime_tJDBCInput_24 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_24 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_24;
	compDriverInitialization_tJDBCInput_24.runAtDriver(container_tJDBCInput_24);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_24 = null;
if(componentRuntime_tJDBCInput_24 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_24 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_24;
	if (doesNodeBelongToRequest_tJDBCInput_24) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_24 = sourceOrSink_tJDBCInput_24.validate(container_tJDBCInput_24);
        if (vr_tJDBCInput_24.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_24.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_24 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_24 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_24;
        reader_tJDBCInput_24 = source_tJDBCInput_24.createReader(container_tJDBCInput_24);
	    reader_tJDBCInput_24 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_24, container_tJDBCInput_24);

            boolean multi_output_is_allowed_tJDBCInput_24 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_24 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_24.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_24 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_24 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_24 = props_tJDBCInput_24.getSchema(c_tJDBCInput_24, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_24 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_24, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_24 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_24 = reader_tJDBCInput_24.start();

        resourceMap.put("reader_tJDBCInput_24", reader_tJDBCInput_24);

        for (; available_tJDBCInput_24; available_tJDBCInput_24 = reader_tJDBCInput_24.advance()) {
			nb_line_tJDBCInput_24++;

			
			if (multi_output_is_allowed_tJDBCInput_24) {
				
					row24 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_24 = reader_tJDBCInput_24.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_24) {
						row24 = new row24Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_24 == null) {
            factory_tJDBCInput_24 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_24.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_24.setWrapped(factory_tJDBCInput_24.convertToAvro(data_tJDBCInput_24));
                Object columnValue_0_tJDBCInput_24 = outgoingEnforcer_tJDBCInput_24.get(0);
                    if (columnValue_0_tJDBCInput_24 == null) {
                        row24.history_id = 0;
                    } else {
                            row24.history_id = (long) (columnValue_0_tJDBCInput_24);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_24) {
				java.util.Map<String,Object> info_tJDBCInput_24 = e_tJDBCInput_24.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_24 = null;
					if(info_tJDBCInput_24.containsKey("error")){
						errorMessage_tJDBCInput_24 = info_tJDBCInput_24.get("error");
					}else if(info_tJDBCInput_24.containsKey("errorMessage")){
						errorMessage_tJDBCInput_24 = info_tJDBCInput_24.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_24 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_24 = "Row "+ nb_line_tJDBCInput_24 + ": "+errorMessage_tJDBCInput_24;
					System.err.println(errorMessage_tJDBCInput_24);
				
					// If the record is reject, the main line record should put NULL
					row24 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_24 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_24 = null;


 



/**
 * [tJDBCInput_24 begin ] stop
 */
	
	/**
	 * [tJDBCInput_24 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	


 


	tos_count_tJDBCInput_24++;

/**
 * [tJDBCInput_24 main ] stop
 */
	
	/**
	 * [tJDBCInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	


 



/**
 * [tJDBCInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_24 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_24 != null) {
            incomingEnforcer_tJDBCOutput_24.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_24 != null && incomingEnforcer_tJDBCOutput_24.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_24.put("history_id", row24.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_24 = null;
        if (incomingEnforcer_tJDBCOutput_24 != null) {
            data_tJDBCOutput_24 = incomingEnforcer_tJDBCOutput_24.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_24 != null && data_tJDBCOutput_24 != null) {
        	writer_tJDBCOutput_24.write(data_tJDBCOutput_24);
        }
        
        nb_line_tJDBCOutput_24++;

 


	tos_count_tJDBCOutput_24++;

/**
 * [tJDBCOutput_24 main ] stop
 */
	
	/**
	 * [tJDBCOutput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	


 



/**
 * [tJDBCOutput_24 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	


 



/**
 * [tJDBCOutput_24 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	


 



/**
 * [tJDBCInput_24 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_24 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	
// end of generic


resourceMap.put("finish_tJDBCInput_24", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_24 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_24 = null;
    if (reader_tJDBCInput_24 != null) {
        reader_tJDBCInput_24.close();
        resultMap_tJDBCInput_24 = reader_tJDBCInput_24.getReturnValues();
    }
if(resultMap_tJDBCInput_24!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_24 : resultMap_tJDBCInput_24.entrySet()) {
		switch(entry_tJDBCInput_24.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "ERROR_MESSAGE", entry_tJDBCInput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "NB_LINE", entry_tJDBCInput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "NB_SUCCESS", entry_tJDBCInput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", "NB_REJECT", entry_tJDBCInput_24.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_24 = new StringBuilder();
            for (int i_tJDBCInput_24 = 0; i_tJDBCInput_24 < entry_tJDBCInput_24.getKey().length(); i_tJDBCInput_24++) {
                char ch_tJDBCInput_24 = entry_tJDBCInput_24.getKey().charAt(i_tJDBCInput_24);
                if(Character.isUpperCase(ch_tJDBCInput_24) && i_tJDBCInput_24> 0) {
                	studio_key_tJDBCInput_24.append('_');
                }
                studio_key_tJDBCInput_24.append(ch_tJDBCInput_24);
            }
			container_tJDBCInput_24.setComponentData("tJDBCInput_24", studio_key_tJDBCInput_24.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_24.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_24", true);
end_Hash.put("tJDBCInput_24", System.currentTimeMillis());




/**
 * [tJDBCInput_24 end ] stop
 */

	
	/**
	 * [tJDBCOutput_24 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_24", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_24 = null;
    if (writer_tJDBCOutput_24 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_24 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_24.close();
        resultMap_tJDBCOutput_24 = writer_tJDBCOutput_24.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_24), container_tJDBCOutput_24);
    }
if(resultMap_tJDBCOutput_24!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_24 : resultMap_tJDBCOutput_24.entrySet()) {
		switch(entry_tJDBCOutput_24.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "ERROR_MESSAGE", entry_tJDBCOutput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "NB_LINE", entry_tJDBCOutput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "NB_SUCCESS", entry_tJDBCOutput_24.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", "NB_REJECT", entry_tJDBCOutput_24.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_24 = new StringBuilder();
            for (int i_tJDBCOutput_24 = 0; i_tJDBCOutput_24 < entry_tJDBCOutput_24.getKey().length(); i_tJDBCOutput_24++) {
                char ch_tJDBCOutput_24 = entry_tJDBCOutput_24.getKey().charAt(i_tJDBCOutput_24);
                if(Character.isUpperCase(ch_tJDBCOutput_24) && i_tJDBCOutput_24> 0) {
                	studio_key_tJDBCOutput_24.append('_');
                }
                studio_key_tJDBCOutput_24.append(ch_tJDBCOutput_24);
            }
			container_tJDBCOutput_24.setComponentData("tJDBCOutput_24", studio_key_tJDBCOutput_24.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_24.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_24", true);
end_Hash.put("tJDBCOutput_24", System.currentTimeMillis());




/**
 * [tJDBCOutput_24 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_24 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_24";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_24")==null){
    if(resourceMap.get("reader_tJDBCInput_24")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_24")).close();
		} catch (java.io.IOException e_tJDBCInput_24) {
			String errorMessage_tJDBCInput_24 = "failed to release the resource in tJDBCInput_24 :" + e_tJDBCInput_24.getMessage();
			System.err.println(errorMessage_tJDBCInput_24);
		}
	}
}
 



/**
 * [tJDBCInput_24 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_24 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_24";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_24")==null){
    if(resourceMap.get("writer_tJDBCOutput_24")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_24")).close();
		} catch (java.io.IOException e_tJDBCOutput_24) {
			String errorMessage_tJDBCOutput_24 = "failed to release the resource in tJDBCOutput_24 :" + e_tJDBCOutput_24.getMessage();
			System.err.println(errorMessage_tJDBCOutput_24);
		}
	}
}
 



/**
 * [tJDBCOutput_24 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_24_SUBPROCESS_STATE", 1);
	}
	


public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row25Struct other = (row25Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row25Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row25Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_25Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_25_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();




	
	/**
	 * [tJDBCOutput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_25", false);
		start_Hash.put("tJDBCOutput_25", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_25";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tJDBCOutput_25 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_25 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_25 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_25 = (String)(restRequest_tJDBCOutput_25 != null ? restRequest_tJDBCOutput_25.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_25 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_25 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_25 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_25 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_25.createRuntimeProperties();
 		                    props_tJDBCOutput_25.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_25.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_25.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_25.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_25.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_25.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_25.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_25.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_25.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_25.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_25.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_25.tableSelection.setValue("tablename",
 		                    "statistics_vms_users_usage_hourly");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_25_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_25\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_25_1_fisrt sst_tJDBCOutput_25_1_fisrt = new SchemaSettingTool_tJDBCOutput_25_1_fisrt();
 		                    
 		                    props_tJDBCOutput_25.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_25_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_25_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_25\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_25_2_fisrt sst_tJDBCOutput_25_2_fisrt = new SchemaSettingTool_tJDBCOutput_25_2_fisrt();
 		                    
 		                    props_tJDBCOutput_25.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_25_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_25_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_25\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_25_3_fisrt sst_tJDBCOutput_25_3_fisrt = new SchemaSettingTool_tJDBCOutput_25_3_fisrt();
 		                    
 		                    props_tJDBCOutput_25.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_25_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_25.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_25.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_25.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_25 = props_tJDBCOutput_25.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_25 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_25 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_25 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_25.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_25);
        }
    }
globalMap.put("tJDBCOutput_25_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_25);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_25= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_25_MAPPINGS_URL", mappings_url_tJDBCOutput_25);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_25 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_25";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_25 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_25 = null;
topology_tJDBCOutput_25 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_25 = def_tJDBCOutput_25.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_25, topology_tJDBCOutput_25);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_25 = def_tJDBCOutput_25.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_25 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_25.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_25 = componentRuntime_tJDBCOutput_25.initialize(container_tJDBCOutput_25, props_tJDBCOutput_25);

if (initVr_tJDBCOutput_25.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_25.getMessage());
}

if(componentRuntime_tJDBCOutput_25 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_25 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_25;
	compDriverInitialization_tJDBCOutput_25.runAtDriver(container_tJDBCOutput_25);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_25 = null;
if(componentRuntime_tJDBCOutput_25 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_25 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_25;
	if (doesNodeBelongToRequest_tJDBCOutput_25) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_25 = sourceOrSink_tJDBCOutput_25.validate(container_tJDBCOutput_25);
        if (vr_tJDBCOutput_25.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_25.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_25 = null;
    if (sourceOrSink_tJDBCOutput_25 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_25 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_25;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_25 = sink_tJDBCOutput_25.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_25) {
            writeOperation_tJDBCOutput_25.initialize(container_tJDBCOutput_25);
        }
        writer_tJDBCOutput_25 = writeOperation_tJDBCOutput_25.createWriter(container_tJDBCOutput_25);
        if (doesNodeBelongToRequest_tJDBCOutput_25) {
            writer_tJDBCOutput_25.open("tJDBCOutput_25");
        }

        resourceMap.put("writer_tJDBCOutput_25", writer_tJDBCOutput_25);
    } // end of "sourceOrSink_tJDBCOutput_25 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_25 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_25.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_25 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_25 = props_tJDBCOutput_25.getSchema(c_tJDBCOutput_25, false);
    incomingEnforcer_tJDBCOutput_25 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_25);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_25 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_25 = null;


 



/**
 * [tJDBCOutput_25 begin ] stop
 */



	
	/**
	 * [tJDBCInput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_25", false);
		start_Hash.put("tJDBCInput_25", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_25";

	
		int tos_count_tJDBCInput_25 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_25 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_25 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_25 = (String)(restRequest_tJDBCInput_25 != null ? restRequest_tJDBCInput_25.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_25 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_25 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_25 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_25 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_25.createRuntimeProperties();
 		                    props_tJDBCInput_25.setValue("sql",
 		                    "SELECT history_id\nFROM statistics_vms_users_usage_hourly\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepHourly * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_25.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_25.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_25.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_25.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_25.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_25.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_25_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_25\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_25_1_fisrt sst_tJDBCInput_25_1_fisrt = new SchemaSettingTool_tJDBCInput_25_1_fisrt();
 		                    
 		                    props_tJDBCInput_25.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_25_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_25.tableSelection.setValue("tablename",
 		                    "statistics_vms_users_usage_hourly");
 		                    
 		                    java.util.List<Object> tJDBCInput_25_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_25_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_25.trimTable).setValue("trim",tJDBCInput_25_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_25_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_25_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_25.trimTable).setValue("columnName",tJDBCInput_25_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_25.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_25 = props_tJDBCInput_25.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_25 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_25 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_25 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_25.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_25);
        }
    }
globalMap.put("tJDBCInput_25_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_25);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_25= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_25_MAPPINGS_URL", mappings_url_tJDBCInput_25);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_25 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_25";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_25 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_25 = null;
topology_tJDBCInput_25 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_25 = def_tJDBCInput_25.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_25, topology_tJDBCInput_25);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_25 = def_tJDBCInput_25.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_25 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_25.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_25 = componentRuntime_tJDBCInput_25.initialize(container_tJDBCInput_25, props_tJDBCInput_25);

if (initVr_tJDBCInput_25.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_25.getMessage());
}

if(componentRuntime_tJDBCInput_25 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_25 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_25;
	compDriverInitialization_tJDBCInput_25.runAtDriver(container_tJDBCInput_25);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_25 = null;
if(componentRuntime_tJDBCInput_25 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_25 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_25;
	if (doesNodeBelongToRequest_tJDBCInput_25) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_25 = sourceOrSink_tJDBCInput_25.validate(container_tJDBCInput_25);
        if (vr_tJDBCInput_25.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_25.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_25 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_25 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_25;
        reader_tJDBCInput_25 = source_tJDBCInput_25.createReader(container_tJDBCInput_25);
	    reader_tJDBCInput_25 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_25, container_tJDBCInput_25);

            boolean multi_output_is_allowed_tJDBCInput_25 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_25 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_25.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_25 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_25 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_25 = props_tJDBCInput_25.getSchema(c_tJDBCInput_25, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_25 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_25, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_25 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_25 = reader_tJDBCInput_25.start();

        resourceMap.put("reader_tJDBCInput_25", reader_tJDBCInput_25);

        for (; available_tJDBCInput_25; available_tJDBCInput_25 = reader_tJDBCInput_25.advance()) {
			nb_line_tJDBCInput_25++;

			
			if (multi_output_is_allowed_tJDBCInput_25) {
				
					row25 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_25 = reader_tJDBCInput_25.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_25) {
						row25 = new row25Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_25 == null) {
            factory_tJDBCInput_25 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_25.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_25.setWrapped(factory_tJDBCInput_25.convertToAvro(data_tJDBCInput_25));
                Object columnValue_0_tJDBCInput_25 = outgoingEnforcer_tJDBCInput_25.get(0);
                    if (columnValue_0_tJDBCInput_25 == null) {
                        row25.history_id = 0;
                    } else {
                            row25.history_id = (long) (columnValue_0_tJDBCInput_25);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_25) {
				java.util.Map<String,Object> info_tJDBCInput_25 = e_tJDBCInput_25.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_25 = null;
					if(info_tJDBCInput_25.containsKey("error")){
						errorMessage_tJDBCInput_25 = info_tJDBCInput_25.get("error");
					}else if(info_tJDBCInput_25.containsKey("errorMessage")){
						errorMessage_tJDBCInput_25 = info_tJDBCInput_25.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_25 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_25 = "Row "+ nb_line_tJDBCInput_25 + ": "+errorMessage_tJDBCInput_25;
					System.err.println(errorMessage_tJDBCInput_25);
				
					// If the record is reject, the main line record should put NULL
					row25 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_25 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_25 = null;


 



/**
 * [tJDBCInput_25 begin ] stop
 */
	
	/**
	 * [tJDBCInput_25 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	


 


	tos_count_tJDBCInput_25++;

/**
 * [tJDBCInput_25 main ] stop
 */
	
	/**
	 * [tJDBCInput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	


 



/**
 * [tJDBCInput_25 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_25 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_25";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_25 != null) {
            incomingEnforcer_tJDBCOutput_25.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_25 != null && incomingEnforcer_tJDBCOutput_25.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_25.put("history_id", row25.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_25 = null;
        if (incomingEnforcer_tJDBCOutput_25 != null) {
            data_tJDBCOutput_25 = incomingEnforcer_tJDBCOutput_25.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_25 != null && data_tJDBCOutput_25 != null) {
        	writer_tJDBCOutput_25.write(data_tJDBCOutput_25);
        }
        
        nb_line_tJDBCOutput_25++;

 


	tos_count_tJDBCOutput_25++;

/**
 * [tJDBCOutput_25 main ] stop
 */
	
	/**
	 * [tJDBCOutput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_25";

	


 



/**
 * [tJDBCOutput_25 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_25";

	


 



/**
 * [tJDBCOutput_25 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	


 



/**
 * [tJDBCInput_25 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_25 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	
// end of generic


resourceMap.put("finish_tJDBCInput_25", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_25 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_25 = null;
    if (reader_tJDBCInput_25 != null) {
        reader_tJDBCInput_25.close();
        resultMap_tJDBCInput_25 = reader_tJDBCInput_25.getReturnValues();
    }
if(resultMap_tJDBCInput_25!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_25 : resultMap_tJDBCInput_25.entrySet()) {
		switch(entry_tJDBCInput_25.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "ERROR_MESSAGE", entry_tJDBCInput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "NB_LINE", entry_tJDBCInput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "NB_SUCCESS", entry_tJDBCInput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", "NB_REJECT", entry_tJDBCInput_25.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_25 = new StringBuilder();
            for (int i_tJDBCInput_25 = 0; i_tJDBCInput_25 < entry_tJDBCInput_25.getKey().length(); i_tJDBCInput_25++) {
                char ch_tJDBCInput_25 = entry_tJDBCInput_25.getKey().charAt(i_tJDBCInput_25);
                if(Character.isUpperCase(ch_tJDBCInput_25) && i_tJDBCInput_25> 0) {
                	studio_key_tJDBCInput_25.append('_');
                }
                studio_key_tJDBCInput_25.append(ch_tJDBCInput_25);
            }
			container_tJDBCInput_25.setComponentData("tJDBCInput_25", studio_key_tJDBCInput_25.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_25.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_25", true);
end_Hash.put("tJDBCInput_25", System.currentTimeMillis());




/**
 * [tJDBCInput_25 end ] stop
 */

	
	/**
	 * [tJDBCOutput_25 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_25";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_25", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_25 = null;
    if (writer_tJDBCOutput_25 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_25 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_25.close();
        resultMap_tJDBCOutput_25 = writer_tJDBCOutput_25.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_25), container_tJDBCOutput_25);
    }
if(resultMap_tJDBCOutput_25!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_25 : resultMap_tJDBCOutput_25.entrySet()) {
		switch(entry_tJDBCOutput_25.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_25.setComponentData("tJDBCOutput_25", "ERROR_MESSAGE", entry_tJDBCOutput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_25.setComponentData("tJDBCOutput_25", "NB_LINE", entry_tJDBCOutput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_25.setComponentData("tJDBCOutput_25", "NB_SUCCESS", entry_tJDBCOutput_25.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_25.setComponentData("tJDBCOutput_25", "NB_REJECT", entry_tJDBCOutput_25.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_25 = new StringBuilder();
            for (int i_tJDBCOutput_25 = 0; i_tJDBCOutput_25 < entry_tJDBCOutput_25.getKey().length(); i_tJDBCOutput_25++) {
                char ch_tJDBCOutput_25 = entry_tJDBCOutput_25.getKey().charAt(i_tJDBCOutput_25);
                if(Character.isUpperCase(ch_tJDBCOutput_25) && i_tJDBCOutput_25> 0) {
                	studio_key_tJDBCOutput_25.append('_');
                }
                studio_key_tJDBCOutput_25.append(ch_tJDBCOutput_25);
            }
			container_tJDBCOutput_25.setComponentData("tJDBCOutput_25", studio_key_tJDBCOutput_25.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_25.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_25", true);
end_Hash.put("tJDBCOutput_25", System.currentTimeMillis());




/**
 * [tJDBCOutput_25 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_25 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_25";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_25")==null){
    if(resourceMap.get("reader_tJDBCInput_25")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_25")).close();
		} catch (java.io.IOException e_tJDBCInput_25) {
			String errorMessage_tJDBCInput_25 = "failed to release the resource in tJDBCInput_25 :" + e_tJDBCInput_25.getMessage();
			System.err.println(errorMessage_tJDBCInput_25);
		}
	}
}
 



/**
 * [tJDBCInput_25 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_25 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_25";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_25")==null){
    if(resourceMap.get("writer_tJDBCOutput_25")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_25")).close();
		} catch (java.io.IOException e_tJDBCOutput_25) {
			String errorMessage_tJDBCOutput_25 = "failed to release the resource in tJDBCOutput_25 :" + e_tJDBCOutput_25.getMessage();
			System.err.println(errorMessage_tJDBCOutput_25);
		}
	}
}
 



/**
 * [tJDBCOutput_25 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_25_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long history_id;

				public long getHistory_id () {
					return this.history_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.history_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row26Struct other = (row26Struct) obj;
		
						if (this.history_id != other.history_id)
							return false;
					

		return true;
    }

	public void copyDataTo(row26Struct other) {

		other.history_id = this.history_id;
	            
	}

	public void copyKeysDataTo(row26Struct other) {

		other.history_id = this.history_id;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
			        this.history_id = dis.readLong();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.history_id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.history_id, other.history_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_26Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_26_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();




	
	/**
	 * [tJDBCOutput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_26", false);
		start_Hash.put("tJDBCOutput_26", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_26";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tJDBCOutput_26 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_26 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_26 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_26 = (String)(restRequest_tJDBCOutput_26 != null ? restRequest_tJDBCOutput_26.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_26 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_26 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_26 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_26 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_26.createRuntimeProperties();
 		                    props_tJDBCOutput_26.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.DELETE);
 		                    
 		                    props_tJDBCOutput_26.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_26.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_26.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_26.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_26.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_26.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_26.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_26.tableSelection.setValue("tablename",
 		                    "statistics_vms_users_usage_daily");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_26_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_26\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_26_1_fisrt sst_tJDBCOutput_26_1_fisrt = new SchemaSettingTool_tJDBCOutput_26_1_fisrt();
 		                    
 		                    props_tJDBCOutput_26.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_26_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_26_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_26\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_26_2_fisrt sst_tJDBCOutput_26_2_fisrt = new SchemaSettingTool_tJDBCOutput_26_2_fisrt();
 		                    
 		                    props_tJDBCOutput_26.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_26_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_26_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_26\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_26_3_fisrt sst_tJDBCOutput_26_3_fisrt = new SchemaSettingTool_tJDBCOutput_26_3_fisrt();
 		                    
 		                    props_tJDBCOutput_26.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_26_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_26.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_26.additionalColumns.setValue("referenceColumns",
 		                    "history_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_26.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_26 = props_tJDBCOutput_26.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_26 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_26 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_26 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_26.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_26);
        }
    }
globalMap.put("tJDBCOutput_26_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_26);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_26= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_26_MAPPINGS_URL", mappings_url_tJDBCOutput_26);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_26 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_26";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_26 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_26 = null;
topology_tJDBCOutput_26 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_26 = def_tJDBCOutput_26.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_26, topology_tJDBCOutput_26);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_26 = def_tJDBCOutput_26.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_26 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_26.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_26 = componentRuntime_tJDBCOutput_26.initialize(container_tJDBCOutput_26, props_tJDBCOutput_26);

if (initVr_tJDBCOutput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_26.getMessage());
}

if(componentRuntime_tJDBCOutput_26 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_26 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_26;
	compDriverInitialization_tJDBCOutput_26.runAtDriver(container_tJDBCOutput_26);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_26 = null;
if(componentRuntime_tJDBCOutput_26 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_26 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_26;
	if (doesNodeBelongToRequest_tJDBCOutput_26) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_26 = sourceOrSink_tJDBCOutput_26.validate(container_tJDBCOutput_26);
        if (vr_tJDBCOutput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_26.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_26 = null;
    if (sourceOrSink_tJDBCOutput_26 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_26 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_26;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_26 = sink_tJDBCOutput_26.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_26) {
            writeOperation_tJDBCOutput_26.initialize(container_tJDBCOutput_26);
        }
        writer_tJDBCOutput_26 = writeOperation_tJDBCOutput_26.createWriter(container_tJDBCOutput_26);
        if (doesNodeBelongToRequest_tJDBCOutput_26) {
            writer_tJDBCOutput_26.open("tJDBCOutput_26");
        }

        resourceMap.put("writer_tJDBCOutput_26", writer_tJDBCOutput_26);
    } // end of "sourceOrSink_tJDBCOutput_26 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_26 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_26.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_26 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_26 = props_tJDBCOutput_26.getSchema(c_tJDBCOutput_26, false);
    incomingEnforcer_tJDBCOutput_26 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_26);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_26 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_26 = null;


 



/**
 * [tJDBCOutput_26 begin ] stop
 */



	
	/**
	 * [tJDBCInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_26", false);
		start_Hash.put("tJDBCInput_26", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_26";

	
		int tos_count_tJDBCInput_26 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_26 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_26 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_26 = (String)(restRequest_tJDBCInput_26 != null ? restRequest_tJDBCInput_26.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_26 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_26 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_26 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_26 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_26.createRuntimeProperties();
 		                    props_tJDBCInput_26.setValue("sql",
 		                    "SELECT history_id\nFROM statistics_vms_users_usage_daily\nWHERE history_datetime < '"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSSZ").format(TalendDate.addDate(context.runTime, context.hoursToKeepDaily * -1,"HH"))+"'" + context.limitRows);
 		                    
 		                    props_tJDBCInput_26.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_26.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_26.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_26.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_26.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_26.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_26_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_hourly_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":\"long\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"nextval('vm_disk_history_seq2'::regclass)\\\"\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"history_id\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_26\",\"di.table.label\":\"vm_disk_hourly_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_26_1_fisrt sst_tJDBCInput_26_1_fisrt = new SchemaSettingTool_tJDBCInput_26_1_fisrt();
 		                    
 		                    props_tJDBCInput_26.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_26_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_26.tableSelection.setValue("tablename",
 		                    "statistics_vms_users_usage_daily");
 		                    
 		                    java.util.List<Object> tJDBCInput_26_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_26_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_26.trimTable).setValue("trim",tJDBCInput_26_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_26_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_26_trimTable_columnName.add("history_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_26.trimTable).setValue("columnName",tJDBCInput_26_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_26.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_26 = props_tJDBCInput_26.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_26 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_26 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_26 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_26.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_26);
        }
    }
globalMap.put("tJDBCInput_26_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_26);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_26= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_26_MAPPINGS_URL", mappings_url_tJDBCInput_26);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_26 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_26";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_26 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_26 = null;
topology_tJDBCInput_26 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_26 = def_tJDBCInput_26.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_26, topology_tJDBCInput_26);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_26 = def_tJDBCInput_26.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_26 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_26.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_26 = componentRuntime_tJDBCInput_26.initialize(container_tJDBCInput_26, props_tJDBCInput_26);

if (initVr_tJDBCInput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_26.getMessage());
}

if(componentRuntime_tJDBCInput_26 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_26 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_26;
	compDriverInitialization_tJDBCInput_26.runAtDriver(container_tJDBCInput_26);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_26 = null;
if(componentRuntime_tJDBCInput_26 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_26 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_26;
	if (doesNodeBelongToRequest_tJDBCInput_26) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_26 = sourceOrSink_tJDBCInput_26.validate(container_tJDBCInput_26);
        if (vr_tJDBCInput_26.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_26.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_26 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_26 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_26;
        reader_tJDBCInput_26 = source_tJDBCInput_26.createReader(container_tJDBCInput_26);
	    reader_tJDBCInput_26 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_26, container_tJDBCInput_26);

            boolean multi_output_is_allowed_tJDBCInput_26 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_26 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_26.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_26 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_26 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_26 = props_tJDBCInput_26.getSchema(c_tJDBCInput_26, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_26 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_26, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_26 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_26 = reader_tJDBCInput_26.start();

        resourceMap.put("reader_tJDBCInput_26", reader_tJDBCInput_26);

        for (; available_tJDBCInput_26; available_tJDBCInput_26 = reader_tJDBCInput_26.advance()) {
			nb_line_tJDBCInput_26++;

			
			if (multi_output_is_allowed_tJDBCInput_26) {
				
					row26 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_26 = reader_tJDBCInput_26.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_26) {
						row26 = new row26Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_26 == null) {
            factory_tJDBCInput_26 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_26.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_26.setWrapped(factory_tJDBCInput_26.convertToAvro(data_tJDBCInput_26));
                Object columnValue_0_tJDBCInput_26 = outgoingEnforcer_tJDBCInput_26.get(0);
                    if (columnValue_0_tJDBCInput_26 == null) {
                        row26.history_id = 0;
                    } else {
                            row26.history_id = (long) (columnValue_0_tJDBCInput_26);
                    }
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_26) {
				java.util.Map<String,Object> info_tJDBCInput_26 = e_tJDBCInput_26.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_26 = null;
					if(info_tJDBCInput_26.containsKey("error")){
						errorMessage_tJDBCInput_26 = info_tJDBCInput_26.get("error");
					}else if(info_tJDBCInput_26.containsKey("errorMessage")){
						errorMessage_tJDBCInput_26 = info_tJDBCInput_26.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_26 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_26 = "Row "+ nb_line_tJDBCInput_26 + ": "+errorMessage_tJDBCInput_26;
					System.err.println(errorMessage_tJDBCInput_26);
				
					// If the record is reject, the main line record should put NULL
					row26 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_26 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_26 = null;


 



/**
 * [tJDBCInput_26 begin ] stop
 */
	
	/**
	 * [tJDBCInput_26 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	


 


	tos_count_tJDBCInput_26++;

/**
 * [tJDBCInput_26 main ] stop
 */
	
	/**
	 * [tJDBCInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	


 



/**
 * [tJDBCInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tJDBCOutput_26 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_26 != null) {
            incomingEnforcer_tJDBCOutput_26.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_26 != null && incomingEnforcer_tJDBCOutput_26.getRuntimeSchema().getField("history_id") != null){
                    incomingEnforcer_tJDBCOutput_26.put("history_id", row26.history_id);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_26 = null;
        if (incomingEnforcer_tJDBCOutput_26 != null) {
            data_tJDBCOutput_26 = incomingEnforcer_tJDBCOutput_26.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_26 != null && data_tJDBCOutput_26 != null) {
        	writer_tJDBCOutput_26.write(data_tJDBCOutput_26);
        }
        
        nb_line_tJDBCOutput_26++;

 


	tos_count_tJDBCOutput_26++;

/**
 * [tJDBCOutput_26 main ] stop
 */
	
	/**
	 * [tJDBCOutput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	


 



/**
 * [tJDBCOutput_26 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	


 



/**
 * [tJDBCOutput_26 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	


 



/**
 * [tJDBCInput_26 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_26 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	
// end of generic


resourceMap.put("finish_tJDBCInput_26", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_26 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_26 = null;
    if (reader_tJDBCInput_26 != null) {
        reader_tJDBCInput_26.close();
        resultMap_tJDBCInput_26 = reader_tJDBCInput_26.getReturnValues();
    }
if(resultMap_tJDBCInput_26!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_26 : resultMap_tJDBCInput_26.entrySet()) {
		switch(entry_tJDBCInput_26.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "ERROR_MESSAGE", entry_tJDBCInput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "NB_LINE", entry_tJDBCInput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "NB_SUCCESS", entry_tJDBCInput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", "NB_REJECT", entry_tJDBCInput_26.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_26 = new StringBuilder();
            for (int i_tJDBCInput_26 = 0; i_tJDBCInput_26 < entry_tJDBCInput_26.getKey().length(); i_tJDBCInput_26++) {
                char ch_tJDBCInput_26 = entry_tJDBCInput_26.getKey().charAt(i_tJDBCInput_26);
                if(Character.isUpperCase(ch_tJDBCInput_26) && i_tJDBCInput_26> 0) {
                	studio_key_tJDBCInput_26.append('_');
                }
                studio_key_tJDBCInput_26.append(ch_tJDBCInput_26);
            }
			container_tJDBCInput_26.setComponentData("tJDBCInput_26", studio_key_tJDBCInput_26.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_26.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_26", true);
end_Hash.put("tJDBCInput_26", System.currentTimeMillis());




/**
 * [tJDBCInput_26 end ] stop
 */

	
	/**
	 * [tJDBCOutput_26 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_26", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_26 = null;
    if (writer_tJDBCOutput_26 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_26 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_26.close();
        resultMap_tJDBCOutput_26 = writer_tJDBCOutput_26.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_26), container_tJDBCOutput_26);
    }
if(resultMap_tJDBCOutput_26!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_26 : resultMap_tJDBCOutput_26.entrySet()) {
		switch(entry_tJDBCOutput_26.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "ERROR_MESSAGE", entry_tJDBCOutput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "NB_LINE", entry_tJDBCOutput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "NB_SUCCESS", entry_tJDBCOutput_26.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", "NB_REJECT", entry_tJDBCOutput_26.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_26 = new StringBuilder();
            for (int i_tJDBCOutput_26 = 0; i_tJDBCOutput_26 < entry_tJDBCOutput_26.getKey().length(); i_tJDBCOutput_26++) {
                char ch_tJDBCOutput_26 = entry_tJDBCOutput_26.getKey().charAt(i_tJDBCOutput_26);
                if(Character.isUpperCase(ch_tJDBCOutput_26) && i_tJDBCOutput_26> 0) {
                	studio_key_tJDBCOutput_26.append('_');
                }
                studio_key_tJDBCOutput_26.append(ch_tJDBCOutput_26);
            }
			container_tJDBCOutput_26.setComponentData("tJDBCOutput_26", studio_key_tJDBCOutput_26.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_26.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_26", true);
end_Hash.put("tJDBCOutput_26", System.currentTimeMillis());




/**
 * [tJDBCOutput_26 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_26 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_26";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_26")==null){
    if(resourceMap.get("reader_tJDBCInput_26")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_26")).close();
		} catch (java.io.IOException e_tJDBCInput_26) {
			String errorMessage_tJDBCInput_26 = "failed to release the resource in tJDBCInput_26 :" + e_tJDBCInput_26.getMessage();
			System.err.println(errorMessage_tJDBCInput_26);
		}
	}
}
 



/**
 * [tJDBCInput_26 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_26 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_26";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_26")==null){
    if(resourceMap.get("writer_tJDBCOutput_26")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_26")).close();
		} catch (java.io.IOException e_tJDBCOutput_26) {
			String errorMessage_tJDBCOutput_26 = "failed to release the resource in tJDBCOutput_26 :" + e_tJDBCOutput_26.getMessage();
			System.err.println(errorMessage_tJDBCOutput_26);
		}
	}
}
 



/**
 * [tJDBCOutput_26 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_26_SUBPROCESS_STATE", 1);
	}
	


public static class row_talendLogs_LOGSStruct implements routines.system.IPersistableRow<row_talendLogs_LOGSStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_HistoryDelete, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_HistoryDelete) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row_talendLogs_LOGSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void talendLogs_LOGSProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row_talendLogs_LOGSStruct row_talendLogs_LOGS = new row_talendLogs_LOGSStruct();




	
	/**
	 * [talendLogs_CONSOLE begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_CONSOLE", false);
		start_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Main");
					}
				
		int tos_count_talendLogs_CONSOLE = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_talendLogs_CONSOLE = "|";
		java.io.PrintStream consoleOut_talendLogs_CONSOLE = null;	

 		StringBuilder strBuffer_talendLogs_CONSOLE = null;
		int nb_line_talendLogs_CONSOLE = 0;
///////////////////////    			



 



/**
 * [talendLogs_CONSOLE begin ] stop
 */



	
	/**
	 * [talendLogs_LOGS begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_LOGS", false);
		start_Hash.put("talendLogs_LOGS", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
		int tos_count_talendLogs_LOGS = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : talendLogs_LOGS.getMessages()) {
		row_talendLogs_LOGS.type = lcm.getType();
		row_talendLogs_LOGS.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row_talendLogs_LOGS.priority = lcm.getPriority();
		row_talendLogs_LOGS.message = lcm.getMessage();
		row_talendLogs_LOGS.code = lcm.getCode();
		
		row_talendLogs_LOGS.moment = java.util.Calendar.getInstance().getTime();
	
    	row_talendLogs_LOGS.pid = pid;
		row_talendLogs_LOGS.root_pid = rootPid;
		row_talendLogs_LOGS.father_pid = fatherPid;
	
    	row_talendLogs_LOGS.project = projectName;
    	row_talendLogs_LOGS.job = jobName;
    	row_talendLogs_LOGS.context = contextStr;
    		
 



/**
 * [talendLogs_LOGS begin ] stop
 */
	
	/**
	 * [talendLogs_LOGS main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 


	tos_count_talendLogs_LOGS++;

/**
 * [talendLogs_LOGS main ] stop
 */
	
	/**
	 * [talendLogs_LOGS process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_begin ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Main"
						
						);
					}
					
///////////////////////		
						



				strBuffer_talendLogs_CONSOLE = new StringBuilder();




   				
	    		if(row_talendLogs_LOGS.moment != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
								FormatterUtils.format_Date(row_talendLogs_LOGS.moment, "yyyy-MM-dd HH:mm:ss")				
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.root_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.root_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.father_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.father_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.project != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.project)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.job != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.job)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.context != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.context)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.priority != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.priority)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.type != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.type)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.origin != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.origin)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.message != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.message)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.code != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.code)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_talendLogs_CONSOLE = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_talendLogs_CONSOLE = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_talendLogs_CONSOLE);
                    }
                    consoleOut_talendLogs_CONSOLE.println(strBuffer_talendLogs_CONSOLE.toString());
                    consoleOut_talendLogs_CONSOLE.flush();
                    nb_line_talendLogs_CONSOLE++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_talendLogs_CONSOLE++;

/**
 * [talendLogs_CONSOLE main ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_begin ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_end ] stop
 */



	
	/**
	 * [talendLogs_LOGS process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_end ] stop
 */
	
	/**
	 * [talendLogs_LOGS end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
	}
} catch (Exception e_talendLogs_LOGS) {
globalMap.put("talendLogs_LOGS_ERROR_MESSAGE",e_talendLogs_LOGS.getMessage());
	logIgnoredError(String.format("talendLogs_LOGS - tLogCatcher failed to process log message(s) due to internal error: %s", e_talendLogs_LOGS), e_talendLogs_LOGS);
}

 

ok_Hash.put("talendLogs_LOGS", true);
end_Hash.put("talendLogs_LOGS", System.currentTimeMillis());




/**
 * [talendLogs_LOGS end ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	


//////
//////
globalMap.put("talendLogs_CONSOLE_NB_LINE",nb_line_talendLogs_CONSOLE);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Main");
			  	}
			  	
 

ok_Hash.put("talendLogs_CONSOLE", true);
end_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());




/**
 * [talendLogs_CONSOLE end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [talendLogs_LOGS finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS finally ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
    	public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
        }

    	public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
        }
    };
    
    private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";
    
    {
    	globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
    }

    public static void main(String[] args){
        final HistoryDelete HistoryDeleteClass = new HistoryDelete();

        int exitCode = HistoryDeleteClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        if (inOSGi) {
            java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

            if (jobProperties != null && jobProperties.get("context") != null) {
                contextStr = (String)jobProperties.get("context");
            }
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = HistoryDelete.class.getClassLoader().getResourceAsStream("ovirt_engine_dwh/historydelete_4_5/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = HistoryDelete.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("timesDeleteRun", "id_Integer");
                        if(context.getStringValue("timesDeleteRun") == null) {
                            context.timesDeleteRun = null;
                        } else {
                            try{
                                context.timesDeleteRun=routines.system.ParserUtils.parseTo_Integer (context.getProperty("timesDeleteRun"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "timesDeleteRun", e.getMessage()));
                                context.timesDeleteRun=null;
                            }
                        }
                        context.setContextType("deleteIncrement", "id_Integer");
                        if(context.getStringValue("deleteIncrement") == null) {
                            context.deleteIncrement = null;
                        } else {
                            try{
                                context.deleteIncrement=routines.system.ParserUtils.parseTo_Integer (context.getProperty("deleteIncrement"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "deleteIncrement", e.getMessage()));
                                context.deleteIncrement=null;
                            }
                        }
                        context.setContextType("deleteMultiplier", "id_Integer");
                        if(context.getStringValue("deleteMultiplier") == null) {
                            context.deleteMultiplier = null;
                        } else {
                            try{
                                context.deleteMultiplier=routines.system.ParserUtils.parseTo_Integer (context.getProperty("deleteMultiplier"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "deleteMultiplier", e.getMessage()));
                                context.deleteMultiplier=null;
                            }
                        }
                        context.setContextType("hoursToKeepDaily", "id_Integer");
                        if(context.getStringValue("hoursToKeepDaily") == null) {
                            context.hoursToKeepDaily = null;
                        } else {
                            try{
                                context.hoursToKeepDaily=routines.system.ParserUtils.parseTo_Integer (context.getProperty("hoursToKeepDaily"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "hoursToKeepDaily", e.getMessage()));
                                context.hoursToKeepDaily=null;
                            }
                        }
                        context.setContextType("hoursToKeepHourly", "id_Integer");
                        if(context.getStringValue("hoursToKeepHourly") == null) {
                            context.hoursToKeepHourly = null;
                        } else {
                            try{
                                context.hoursToKeepHourly=routines.system.ParserUtils.parseTo_Integer (context.getProperty("hoursToKeepHourly"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "hoursToKeepHourly", e.getMessage()));
                                context.hoursToKeepHourly=null;
                            }
                        }
                        context.setContextType("hoursToKeepSamples", "id_Integer");
                        if(context.getStringValue("hoursToKeepSamples") == null) {
                            context.hoursToKeepSamples = null;
                        } else {
                            try{
                                context.hoursToKeepSamples=routines.system.ParserUtils.parseTo_Integer (context.getProperty("hoursToKeepSamples"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "hoursToKeepSamples", e.getMessage()));
                                context.hoursToKeepSamples=null;
                            }
                        }
                        context.setContextType("limitRows", "id_String");
                        if(context.getStringValue("limitRows") == null) {
                            context.limitRows = null;
                        } else {
                            context.limitRows=(String) context.getProperty("limitRows");
                        }
                        context.setContextType("ovirtEngineHistoryDbDriverClass", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbDriverClass") == null) {
                            context.ovirtEngineHistoryDbDriverClass = null;
                        } else {
                            context.ovirtEngineHistoryDbDriverClass=(String) context.getProperty("ovirtEngineHistoryDbDriverClass");
                        }
                        context.setContextType("ovirtEngineHistoryDbJdbcConnection", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbJdbcConnection") == null) {
                            context.ovirtEngineHistoryDbJdbcConnection = null;
                        } else {
                            context.ovirtEngineHistoryDbJdbcConnection=(String) context.getProperty("ovirtEngineHistoryDbJdbcConnection");
                        }
                        context.setContextType("ovirtEngineHistoryDbPassword", "id_Password");
                        if(context.getStringValue("ovirtEngineHistoryDbPassword") == null) {
                            context.ovirtEngineHistoryDbPassword = null;
                        } else {
                            String pwd_ovirtEngineHistoryDbPassword_value = context.getProperty("ovirtEngineHistoryDbPassword");
                            context.ovirtEngineHistoryDbPassword = null;
                            if(pwd_ovirtEngineHistoryDbPassword_value!=null) {
                                if(context_param.containsKey("ovirtEngineHistoryDbPassword")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.ovirtEngineHistoryDbPassword = pwd_ovirtEngineHistoryDbPassword_value;
                                } else if (!pwd_ovirtEngineHistoryDbPassword_value.isEmpty()) {
                                    try {
                                        context.ovirtEngineHistoryDbPassword = routines.system.PasswordEncryptUtil.decryptPassword(pwd_ovirtEngineHistoryDbPassword_value);
                                        context.put("ovirtEngineHistoryDbPassword",context.ovirtEngineHistoryDbPassword);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("ovirtEngineHistoryDbUser", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbUser") == null) {
                            context.ovirtEngineHistoryDbUser = null;
                        } else {
                            context.ovirtEngineHistoryDbUser=(String) context.getProperty("ovirtEngineHistoryDbUser");
                        }
                        context.setContextType("runTime", "id_Date");
                        if(context.getStringValue("runTime") == null) {
                            context.runTime = null;
                        } else {
                            String context_runTime_value = context.getProperty("runTime");
                            try{
                                if (context_runTime_value == null){
                                    context_runTime_value = "";
                                }
                                int context_runTime_pos = context_runTime_value.indexOf(";");
                                String context_runTime_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_runTime_pos > -1){
                                    context_runTime_pattern = context_runTime_value.substring(0, context_runTime_pos);
                                    context_runTime_value = context_runTime_value.substring(context_runTime_pos + 1);
                                }

                                context.runTime=(java.util.Date)(new java.text.SimpleDateFormat(context_runTime_pattern).parse(context_runTime_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_runTime_longValue = Long.valueOf(context_runTime_value);
                                    context.runTime = new java.util.Date(context_runTime_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "runTime", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.runTime=null;
                                }
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("timesDeleteRun")) {
                context.timesDeleteRun = (Integer) parentContextMap.get("timesDeleteRun");
            }if (parentContextMap.containsKey("deleteIncrement")) {
                context.deleteIncrement = (Integer) parentContextMap.get("deleteIncrement");
            }if (parentContextMap.containsKey("deleteMultiplier")) {
                context.deleteMultiplier = (Integer) parentContextMap.get("deleteMultiplier");
            }if (parentContextMap.containsKey("hoursToKeepDaily")) {
                context.hoursToKeepDaily = (Integer) parentContextMap.get("hoursToKeepDaily");
            }if (parentContextMap.containsKey("hoursToKeepHourly")) {
                context.hoursToKeepHourly = (Integer) parentContextMap.get("hoursToKeepHourly");
            }if (parentContextMap.containsKey("hoursToKeepSamples")) {
                context.hoursToKeepSamples = (Integer) parentContextMap.get("hoursToKeepSamples");
            }if (parentContextMap.containsKey("limitRows")) {
                context.limitRows = (String) parentContextMap.get("limitRows");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbDriverClass")) {
                context.ovirtEngineHistoryDbDriverClass = (String) parentContextMap.get("ovirtEngineHistoryDbDriverClass");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbJdbcConnection")) {
                context.ovirtEngineHistoryDbJdbcConnection = (String) parentContextMap.get("ovirtEngineHistoryDbJdbcConnection");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbPassword")) {
                context.ovirtEngineHistoryDbPassword = (java.lang.String) parentContextMap.get("ovirtEngineHistoryDbPassword");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbUser")) {
                context.ovirtEngineHistoryDbUser = (String) parentContextMap.get("ovirtEngineHistoryDbUser");
            }if (parentContextMap.containsKey("runTime")) {
                context.runTime = (java.util.Date) parentContextMap.get("runTime");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("ovirtEngineHistoryDbPassword");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_2) {
globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", -1);

e_tJDBCInput_2.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_2) {
globalMap.put("tJDBCInput_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_3Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_3) {
globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", -1);

e_tJDBCInput_3.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_3) {
globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_3;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_4Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_4) {
globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", -1);

e_tJDBCInput_4.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_4) {
globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_4;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_5Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_5) {
globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", -1);

e_tJDBCInput_5.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_5) {
globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_5;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_7Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_7) {
globalMap.put("tJDBCInput_7_SUBPROCESS_STATE", -1);

e_tJDBCInput_7.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_7) {
globalMap.put("tJDBCInput_7_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_7;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_8Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_8) {
globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", -1);

e_tJDBCInput_8.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_8) {
globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_8;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_9Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_9) {
globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", -1);

e_tJDBCInput_9.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_9) {
globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_9;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_10Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_10) {
globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", -1);

e_tJDBCInput_10.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_10) {
globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_10;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_11Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_11) {
globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", -1);

e_tJDBCInput_11.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_11) {
globalMap.put("tJDBCInput_11_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_11;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_12Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_12) {
globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", -1);

e_tJDBCInput_12.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_12) {
globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_12;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_13Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_13) {
globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", -1);

e_tJDBCInput_13.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_13) {
globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_13;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_14Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_14) {
globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", -1);

e_tJDBCInput_14.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_14) {
globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_14;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_16Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_16) {
globalMap.put("tJDBCInput_16_SUBPROCESS_STATE", -1);

e_tJDBCInput_16.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_16) {
globalMap.put("tJDBCInput_16_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_16;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_17Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_17) {
globalMap.put("tJDBCInput_17_SUBPROCESS_STATE", -1);

e_tJDBCInput_17.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_17) {
globalMap.put("tJDBCInput_17_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_17;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_18Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_18) {
globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", -1);

e_tJDBCInput_18.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_18) {
globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_18;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_19Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_19) {
globalMap.put("tJDBCInput_19_SUBPROCESS_STATE", -1);

e_tJDBCInput_19.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_19) {
globalMap.put("tJDBCInput_19_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_19;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_20Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_20) {
globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", -1);

e_tJDBCInput_20.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_20) {
globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_20;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_21Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_21) {
globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", -1);

e_tJDBCInput_21.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_21) {
globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_21;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_22Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_22) {
globalMap.put("tJDBCInput_22_SUBPROCESS_STATE", -1);

e_tJDBCInput_22.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_22) {
globalMap.put("tJDBCInput_22_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_22;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_23Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_23) {
globalMap.put("tJDBCInput_23_SUBPROCESS_STATE", -1);

e_tJDBCInput_23.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_23) {
globalMap.put("tJDBCInput_23_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_23;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_24Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_24) {
globalMap.put("tJDBCInput_24_SUBPROCESS_STATE", -1);

e_tJDBCInput_24.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_24) {
globalMap.put("tJDBCInput_24_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_24;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_25Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_25) {
globalMap.put("tJDBCInput_25_SUBPROCESS_STATE", -1);

e_tJDBCInput_25.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_25) {
globalMap.put("tJDBCInput_25_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_25;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_26Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_26) {
globalMap.put("tJDBCInput_26_SUBPROCESS_STATE", -1);

e_tJDBCInput_26.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_26) {
globalMap.put("tJDBCInput_26_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_26;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : HistoryDelete");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tJDBCConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tJDBCConnection_1", globalMap.get("conn_tJDBCConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1127441 characters generated by Talend Open Studio for Data Integration 
 *     on the January 6, 2022 at 1:14:41 PM IST
 ************************************************************************************************/