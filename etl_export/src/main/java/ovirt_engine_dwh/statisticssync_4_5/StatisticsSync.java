// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package ovirt_engine_dwh.statisticssync_4_5;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.RoutineHistoryETL;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: StatisticsSync Purpose: <br>
 * Description:  <br>
 * @author ydary@redhat.com
 * @version 8.0.1.20211109_1610
 * @status 
 */
public class StatisticsSync implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(ovirtEngineDbDriverClass != null){
				
					this.setProperty("ovirtEngineDbDriverClass", ovirtEngineDbDriverClass.toString());
				
			}
			
			if(ovirtEngineDbPassword != null){
				
					this.setProperty("ovirtEngineDbPassword", ovirtEngineDbPassword.toString());
				
			}
			
			if(ovirtEngineDbUser != null){
				
					this.setProperty("ovirtEngineDbUser", ovirtEngineDbUser.toString());
				
			}
			
			if(ovirtEngineDbJdbcConnection != null){
				
					this.setProperty("ovirtEngineDbJdbcConnection", ovirtEngineDbJdbcConnection.toString());
				
			}
			
			if(ovirtEngineHistoryDbJdbcConnection != null){
				
					this.setProperty("ovirtEngineHistoryDbJdbcConnection", ovirtEngineHistoryDbJdbcConnection.toString());
				
			}
			
			if(ovirtEngineHistoryDbDriverClass != null){
				
					this.setProperty("ovirtEngineHistoryDbDriverClass", ovirtEngineHistoryDbDriverClass.toString());
				
			}
			
			if(ovirtEngineHistoryDbPassword != null){
				
					this.setProperty("ovirtEngineHistoryDbPassword", ovirtEngineHistoryDbPassword.toString());
				
			}
			
			if(ovirtEngineHistoryDbUser != null){
				
					this.setProperty("ovirtEngineHistoryDbUser", ovirtEngineHistoryDbUser.toString());
				
			}
			
			if(runInterleave != null){
				
					this.setProperty("runInterleave", runInterleave.toString());
				
			}
			
			if(runTime != null){
				
					String pattern_runTime = "yyyy-MM-dd HH:mm:ss";
					String value_runTime = "yyyy-MM-dd HH:mm:ss.SSSSSS;2011-07-03 12:46:47.000000";
					String[] parts_runTime = value_runTime.split(";");
					if(parts_runTime.length > 1){
						pattern_runTime = parts_runTime[0];
						this.setProperty("runTime", pattern_runTime + ";" + FormatterUtils.format_Date(runTime, pattern_runTime));
					}else{
						this.setProperty("runTime", FormatterUtils.format_Date(runTime, pattern_runTime));
					}
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String ovirtEngineDbDriverClass;
public String getOvirtEngineDbDriverClass(){
	return this.ovirtEngineDbDriverClass;
}
public java.lang.String ovirtEngineDbPassword;
public java.lang.String getOvirtEngineDbPassword(){
	return this.ovirtEngineDbPassword;
}
public String ovirtEngineDbUser;
public String getOvirtEngineDbUser(){
	return this.ovirtEngineDbUser;
}
public String ovirtEngineDbJdbcConnection;
public String getOvirtEngineDbJdbcConnection(){
	return this.ovirtEngineDbJdbcConnection;
}
public String ovirtEngineHistoryDbJdbcConnection;
public String getOvirtEngineHistoryDbJdbcConnection(){
	return this.ovirtEngineHistoryDbJdbcConnection;
}
public String ovirtEngineHistoryDbDriverClass;
public String getOvirtEngineHistoryDbDriverClass(){
	return this.ovirtEngineHistoryDbDriverClass;
}
public java.lang.String ovirtEngineHistoryDbPassword;
public java.lang.String getOvirtEngineHistoryDbPassword(){
	return this.ovirtEngineHistoryDbPassword;
}
public String ovirtEngineHistoryDbUser;
public String getOvirtEngineHistoryDbUser(){
	return this.ovirtEngineHistoryDbUser;
}
public Integer runInterleave;
public Integer getRunInterleave(){
	return this.runInterleave;
}
public java.util.Date runTime;
public java.util.Date getRunTime(){
	return this.runTime;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "4.5";
	private final String jobName = "StatisticsSync";
	private final String projectName = "OVIRT_ENGINE_DWH";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils talendLogs_LOGS = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				StatisticsSync.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(StatisticsSync.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				talendLogs_LOGS.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				talendLogs_LOGSProcess(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tJDBCInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tContextLoad_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row48_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJDBCInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void talendLogs_LOGS_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							talendLogs_CONSOLE_error(exception, errorComponent, globalMap);
						
						}
					
			public void talendLogs_CONSOLE_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					talendLogs_LOGS_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_21_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void talendLogs_LOGS_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	






public static class storage_historyStruct implements routines.system.IPersistableRow<storage_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public Short storage_domain_status;

				public Short getStorage_domain_status () {
					return this.storage_domain_status;
				}
				
			    public int seconds_in_status;

				public int getSeconds_in_status () {
					return this.seconds_in_status;
				}
				
			    public Integer available_disk_size_gb;

				public Integer getAvailable_disk_size_gb () {
					return this.available_disk_size_gb;
				}
				
			    public Integer used_disk_size_gb;

				public Integer getUsed_disk_size_gb () {
					return this.used_disk_size_gb;
				}
				
			    public Integer storage_configuration_version;

				public Integer getStorage_configuration_version () {
					return this.storage_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_status = null;
           				} else {
           			    	this.storage_domain_status = dis.readShort();
           				}
					
			        this.seconds_in_status = dis.readInt();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.storage_domain_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_status = null;
           				} else {
           			    	this.storage_domain_status = dis.readShort();
           				}
					
			        this.seconds_in_status = dis.readInt();
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
						this.storage_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Short
				
						if(this.storage_domain_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_status);
		            	}
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// Short
				
						if(this.storage_domain_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_status);
		            	}
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.storage_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_status="+String.valueOf(storage_domain_status));
		sb.append(",seconds_in_status="+String.valueOf(seconds_in_status));
		sb.append(",available_disk_size_gb="+String.valueOf(available_disk_size_gb));
		sb.append(",used_disk_size_gb="+String.valueOf(used_disk_size_gb));
		sb.append(",storage_configuration_version="+String.valueOf(storage_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(storage_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public Short storage_domain_status;

				public Short getStorage_domain_status () {
					return this.storage_domain_status;
				}
				
			    public Integer available_disk_size_gb;

				public Integer getAvailable_disk_size_gb () {
					return this.available_disk_size_gb;
				}
				
			    public Integer used_disk_size_gb;

				public Integer getUsed_disk_size_gb () {
					return this.used_disk_size_gb;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_status = null;
           				} else {
           			    	this.storage_domain_status = dis.readShort();
           				}
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_status = null;
           				} else {
           			    	this.storage_domain_status = dis.readShort();
           				}
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Short
				
						if(this.storage_domain_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_status);
		            	}
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Short
				
						if(this.storage_domain_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_status);
		            	}
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",storage_domain_status="+String.valueOf(storage_domain_status));
		sb.append(",available_disk_size_gb="+String.valueOf(available_disk_size_gb));
		sb.append(",used_disk_size_gb="+String.valueOf(used_disk_size_gb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_4Struct implements routines.system.IPersistableRow<after_tJDBCInput_4Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object storage_domain_id;

				public Object getStorage_domain_id () {
					return this.storage_domain_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				
			    public Short storage_domain_status;

				public Short getStorage_domain_status () {
					return this.storage_domain_status;
				}
				
			    public Integer available_disk_size_gb;

				public Integer getAvailable_disk_size_gb () {
					return this.available_disk_size_gb;
				}
				
			    public Integer used_disk_size_gb;

				public Integer getUsed_disk_size_gb () {
					return this.used_disk_size_gb;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_status = null;
           				} else {
           			    	this.storage_domain_status = dis.readShort();
           				}
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.storage_domain_id = (Object) dis.readObject();
					
					this.storage_domain_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.storage_domain_status = null;
           				} else {
           			    	this.storage_domain_status = dis.readShort();
           				}
					
						this.available_disk_size_gb = readInteger(dis);
					
						this.used_disk_size_gb = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Short
				
						if(this.storage_domain_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_status);
		            	}
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.storage_domain_id);
					
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
					// Short
				
						if(this.storage_domain_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.storage_domain_status);
		            	}
					
					// Integer
				
						writeInteger(this.available_disk_size_gb,dos);
					
					// Integer
				
						writeInteger(this.used_disk_size_gb,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("storage_domain_id="+String.valueOf(storage_domain_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
		sb.append(",storage_domain_status="+String.valueOf(storage_domain_status));
		sb.append(",available_disk_size_gb="+String.valueOf(available_disk_size_gb));
		sb.append(",used_disk_size_gb="+String.valueOf(used_disk_size_gb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_3Process(globalMap);

		row44Struct row44 = new row44Struct();
storage_historyStruct storage_history = new storage_historyStruct();





	
	/**
	 * [tJDBCOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_2", false);
		start_Hash.put("tJDBCOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"storage_history");
					}
				
		int tos_count_tJDBCOutput_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_2 = (String)(restRequest_tJDBCOutput_2 != null ? restRequest_tJDBCOutput_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_2 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_2 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_2 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_2.createRuntimeProperties();
 		                    props_tJDBCOutput_2.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_2.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.tableSelection.setValue("tablename",
 		                    "storage_domain_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"storage_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"storage_domain_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_1_fisrt sst_tJDBCOutput_2_1_fisrt = new SchemaSettingTool_tJDBCOutput_2_1_fisrt();
 		                    
 		                    props_tJDBCOutput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"storage_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"storage_domain_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_2_fisrt sst_tJDBCOutput_2_2_fisrt = new SchemaSettingTool_tJDBCOutput_2_2_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"storage_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"storage_domain_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_3_fisrt sst_tJDBCOutput_2_3_fisrt = new SchemaSettingTool_tJDBCOutput_2_3_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_2 = props_tJDBCOutput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_2);
        }
    }
globalMap.put("tJDBCOutput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_2_MAPPINGS_URL", mappings_url_tJDBCOutput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_2 = null;
topology_tJDBCOutput_2 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_2 = def_tJDBCOutput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_2, topology_tJDBCOutput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_2 = def_tJDBCOutput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_2 = componentRuntime_tJDBCOutput_2.initialize(container_tJDBCOutput_2, props_tJDBCOutput_2);

if (initVr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_2.getMessage());
}

if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_2;
	compDriverInitialization_tJDBCOutput_2.runAtDriver(container_tJDBCOutput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_2 = null;
if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_2;
	if (doesNodeBelongToRequest_tJDBCOutput_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_2 = sourceOrSink_tJDBCOutput_2.validate(container_tJDBCOutput_2);
        if (vr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_2.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_2 = null;
    if (sourceOrSink_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_2 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_2;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_2 = sink_tJDBCOutput_2.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writeOperation_tJDBCOutput_2.initialize(container_tJDBCOutput_2);
        }
        writer_tJDBCOutput_2 = writeOperation_tJDBCOutput_2.createWriter(container_tJDBCOutput_2);
        if (doesNodeBelongToRequest_tJDBCOutput_2) {
            writer_tJDBCOutput_2.open("tJDBCOutput_2");
        }

        resourceMap.put("writer_tJDBCOutput_2", writer_tJDBCOutput_2);
    } // end of "sourceOrSink_tJDBCOutput_2 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_2 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_2.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_2 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_2 = props_tJDBCOutput_2.getSchema(c_tJDBCOutput_2, false);
    incomingEnforcer_tJDBCOutput_2 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_2);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_2 = null;


 



/**
 * [tJDBCOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
					globalMap.get( "tHash_Lookup_row43" ))
					;					
					
	

row43Struct row43HashKey = new row43Struct();
row43Struct row43Default = new row43Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
storage_historyStruct storage_history_tmp = new storage_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJDBCInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_4", false);
		start_Hash.put("tJDBCInput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_4";

	
		int tos_count_tJDBCInput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_4 = (String)(restRequest_tJDBCInput_4 != null ? restRequest_tJDBCInput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_4 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_4 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_4 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_4.createRuntimeProperties();
 		                    props_tJDBCInput_4.setValue("sql",
 		                    "SELECT \n  storage_domain_id, \n  upper(cast(storage_domain_id as char(36))) as storage_domain_join_id,\n  storage_domai"
+"n_status,\n  available_disk_size_gb, \n  used_disk_size_gb\nFROM dwh_storage_domain_history_view");
 		                    
 		                    props_tJDBCInput_4.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_4.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_storage_domain_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"storage_domain_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"available_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"available_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"available_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"used_disk_size_gb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"used_disk_size_gb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"used_disk_size_gb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_4\",\"di.table.label\":\"dwh_storage_domain_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_4_1_fisrt sst_tJDBCInput_4_1_fisrt = new SchemaSettingTool_tJDBCInput_4_1_fisrt();
 		                    
 		                    props_tJDBCInput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_4.tableSelection.setValue("tablename",
 		                    "dwh_storage_domain_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_4_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("trim",tJDBCInput_4_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_4_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_4_trimTable_columnName.add("storage_domain_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("storage_domain_status");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("available_disk_size_gb");
 		                            
 		                            tJDBCInput_4_trimTable_columnName.add("used_disk_size_gb");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_4.trimTable).setValue("columnName",tJDBCInput_4_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_4 = props_tJDBCInput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_4);
        }
    }
globalMap.put("tJDBCInput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_4_MAPPINGS_URL", mappings_url_tJDBCInput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_4 = null;
topology_tJDBCInput_4 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_4 = def_tJDBCInput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_4, topology_tJDBCInput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_4 = def_tJDBCInput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_4 = componentRuntime_tJDBCInput_4.initialize(container_tJDBCInput_4, props_tJDBCInput_4);

if (initVr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_4.getMessage());
}

if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_4;
	compDriverInitialization_tJDBCInput_4.runAtDriver(container_tJDBCInput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_4 = null;
if(componentRuntime_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_4;
	if (doesNodeBelongToRequest_tJDBCInput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_4 = sourceOrSink_tJDBCInput_4.validate(container_tJDBCInput_4);
        if (vr_tJDBCInput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_4.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_4 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_4 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_4;
        reader_tJDBCInput_4 = source_tJDBCInput_4.createReader(container_tJDBCInput_4);
	    reader_tJDBCInput_4 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_4, container_tJDBCInput_4);

            boolean multi_output_is_allowed_tJDBCInput_4 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_4 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_4.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_4 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_4 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_4 = props_tJDBCInput_4.getSchema(c_tJDBCInput_4, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_4 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_4, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_4 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_4 = reader_tJDBCInput_4.start();

        resourceMap.put("reader_tJDBCInput_4", reader_tJDBCInput_4);

        for (; available_tJDBCInput_4; available_tJDBCInput_4 = reader_tJDBCInput_4.advance()) {
			nb_line_tJDBCInput_4++;

			
			if (multi_output_is_allowed_tJDBCInput_4) {
				
					row44 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_4 = reader_tJDBCInput_4.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_4) {
						row44 = new row44Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_4 == null) {
            factory_tJDBCInput_4 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_4.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_4.setWrapped(factory_tJDBCInput_4.convertToAvro(data_tJDBCInput_4));
                Object columnValue_0_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(0);
                        row44.storage_domain_id = (Object) (columnValue_0_tJDBCInput_4);
                Object columnValue_1_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(1);
                        row44.storage_domain_join_id = (String) (columnValue_1_tJDBCInput_4);
                Object columnValue_2_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(2);
                        row44.storage_domain_status = (Short) (columnValue_2_tJDBCInput_4);
                Object columnValue_3_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(3);
                        row44.available_disk_size_gb = (Integer) (columnValue_3_tJDBCInput_4);
                Object columnValue_4_tJDBCInput_4 = outgoingEnforcer_tJDBCInput_4.get(4);
                        row44.used_disk_size_gb = (Integer) (columnValue_4_tJDBCInput_4);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_4) {
				java.util.Map<String,Object> info_tJDBCInput_4 = e_tJDBCInput_4.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_4 = null;
					if(info_tJDBCInput_4.containsKey("error")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("error");
					}else if(info_tJDBCInput_4.containsKey("errorMessage")){
						errorMessage_tJDBCInput_4 = info_tJDBCInput_4.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_4 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_4 = "Row "+ nb_line_tJDBCInput_4 + ": "+errorMessage_tJDBCInput_4;
					System.err.println(errorMessage_tJDBCInput_4);
				
					// If the record is reject, the main line record should put NULL
					row44 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_4 = null;


 



/**
 * [tJDBCInput_4 begin ] stop
 */
	
	/**
	 * [tJDBCInput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 


	tos_count_tJDBCInput_4++;

/**
 * [tJDBCInput_4 main ] stop
 */
	
	/**
	 * [tJDBCInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_2 = false;
		  boolean mainRowRejected_tMap_2 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row43" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow43 = false;
       		  	    	
       		  	    	
 							row43Struct row43ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row43HashKey.storage_domain_join_id = row44.storage_domain_join_id ;
                        		    		

								
		                        	row43HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row43.lookup( row43HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row43.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_2 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row43 != null && tHash_Lookup_row43.getCount(row43HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row43' and it contains more one result from keys :  row43.storage_domain_join_id = '" + row43HashKey.storage_domain_join_id + "'");
								} // G 071
							

							row43Struct row43 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row43Struct fromLookup_row43 = null;
							row43 = row43Default;
										 
							
								 
							
							
								if (tHash_Lookup_row43 !=null && tHash_Lookup_row43.hasNext()) { // G 099
								
							
								
								fromLookup_row43 = tHash_Lookup_row43.next();

							
							
								} // G 099
							
							

							if(fromLookup_row43 != null) {
								row43 = fromLookup_row43;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

storage_history = null;

if(!rejectedInnerJoin_tMap_2 ) {

// # Output table : 'storage_history'
storage_history_tmp.history_datetime = context.runTime;
storage_history_tmp.storage_domain_id = row44.storage_domain_id;
storage_history_tmp.storage_domain_status = row44.storage_domain_status;
storage_history_tmp.seconds_in_status = context.runInterleave;
storage_history_tmp.available_disk_size_gb = row44.available_disk_size_gb ;
storage_history_tmp.used_disk_size_gb = row44.used_disk_size_gb ;
storage_history_tmp.storage_configuration_version = row43.history_id ;
storage_history = storage_history_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "storage_history"
if(storage_history != null) { 



	
	/**
	 * [tJDBCOutput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"storage_history"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_2 != null) {
            incomingEnforcer_tJDBCOutput_2.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_2.put("history_datetime", storage_history.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("storage_domain_id") != null){
                    incomingEnforcer_tJDBCOutput_2.put("storage_domain_id", storage_history.storage_domain_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("storage_domain_status") != null){
                    incomingEnforcer_tJDBCOutput_2.put("storage_domain_status", storage_history.storage_domain_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("seconds_in_status") != null){
                    incomingEnforcer_tJDBCOutput_2.put("seconds_in_status", storage_history.seconds_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("available_disk_size_gb") != null){
                    incomingEnforcer_tJDBCOutput_2.put("available_disk_size_gb", storage_history.available_disk_size_gb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("used_disk_size_gb") != null){
                    incomingEnforcer_tJDBCOutput_2.put("used_disk_size_gb", storage_history.used_disk_size_gb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2 != null && incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("storage_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_2.put("storage_configuration_version", storage_history.storage_configuration_version);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_2 = null;
        if (incomingEnforcer_tJDBCOutput_2 != null) {
            data_tJDBCOutput_2 = incomingEnforcer_tJDBCOutput_2.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_2 != null && data_tJDBCOutput_2 != null) {
        	writer_tJDBCOutput_2.write(data_tJDBCOutput_2);
        }
        
        nb_line_tJDBCOutput_2++;

 


	tos_count_tJDBCOutput_2++;

/**
 * [tJDBCOutput_2 main ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_end ] stop
 */

} // End of branch "storage_history"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	


 



/**
 * [tJDBCInput_4 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// end of generic


resourceMap.put("finish_tJDBCInput_4", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_4 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_4 = null;
    if (reader_tJDBCInput_4 != null) {
        reader_tJDBCInput_4.close();
        resultMap_tJDBCInput_4 = reader_tJDBCInput_4.getReturnValues();
    }
if(resultMap_tJDBCInput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_4 : resultMap_tJDBCInput_4.entrySet()) {
		switch(entry_tJDBCInput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "ERROR_MESSAGE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_LINE", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_SUCCESS", entry_tJDBCInput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", "NB_REJECT", entry_tJDBCInput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_4 = new StringBuilder();
            for (int i_tJDBCInput_4 = 0; i_tJDBCInput_4 < entry_tJDBCInput_4.getKey().length(); i_tJDBCInput_4++) {
                char ch_tJDBCInput_4 = entry_tJDBCInput_4.getKey().charAt(i_tJDBCInput_4);
                if(Character.isUpperCase(ch_tJDBCInput_4) && i_tJDBCInput_4> 0) {
                	studio_key_tJDBCInput_4.append('_');
                }
                studio_key_tJDBCInput_4.append(ch_tJDBCInput_4);
            }
			container_tJDBCInput_4.setComponentData("tJDBCInput_4", studio_key_tJDBCInput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_4.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_4", true);
end_Hash.put("tJDBCInput_4", System.currentTimeMillis());




/**
 * [tJDBCInput_4 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row43 != null) {
						tHash_Lookup_row43.endGet();
					}
					globalMap.remove( "tHash_Lookup_row43" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tJDBCOutput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_2", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_2 = null;
    if (writer_tJDBCOutput_2 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_2 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_2.close();
        resultMap_tJDBCOutput_2 = writer_tJDBCOutput_2.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_2), container_tJDBCOutput_2);
    }
if(resultMap_tJDBCOutput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_2 : resultMap_tJDBCOutput_2.entrySet()) {
		switch(entry_tJDBCOutput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "ERROR_MESSAGE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_LINE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_SUCCESS", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_REJECT", entry_tJDBCOutput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_2 = new StringBuilder();
            for (int i_tJDBCOutput_2 = 0; i_tJDBCOutput_2 < entry_tJDBCOutput_2.getKey().length(); i_tJDBCOutput_2++) {
                char ch_tJDBCOutput_2 = entry_tJDBCOutput_2.getKey().charAt(i_tJDBCOutput_2);
                if(Character.isUpperCase(ch_tJDBCOutput_2) && i_tJDBCOutput_2> 0) {
                	studio_key_tJDBCOutput_2.append('_');
                }
                studio_key_tJDBCOutput_2.append(ch_tJDBCOutput_2);
            }
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", studio_key_tJDBCOutput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_2.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"storage_history");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_2", true);
end_Hash.put("tJDBCOutput_2", System.currentTimeMillis());




/**
 * [tJDBCOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row43"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_4")==null){
    if(resourceMap.get("reader_tJDBCInput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_4")).close();
		} catch (java.io.IOException e_tJDBCInput_4) {
			String errorMessage_tJDBCInput_4 = "failed to release the resource in tJDBCInput_4 :" + e_tJDBCInput_4.getMessage();
			System.err.println(errorMessage_tJDBCInput_4);
		}
	}
}
 



/**
 * [tJDBCInput_4 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_2")==null){
    if(resourceMap.get("writer_tJDBCOutput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_2")).close();
		} catch (java.io.IOException e_tJDBCOutput_2) {
			String errorMessage_tJDBCOutput_2 = "failed to release the resource in tJDBCOutput_2 :" + e_tJDBCOutput_2.getMessage();
			System.err.println(errorMessage_tJDBCOutput_2);
		}
	}
}
 



/**
 * [tJDBCOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row43Struct implements routines.system.IPersistableComparableLookupRow<row43Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String storage_domain_join_id;

				public String getStorage_domain_join_id () {
					return this.storage_domain_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.storage_domain_join_id == null) ? 0 : this.storage_domain_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row43Struct other = (row43Struct) obj;
		
						if (this.storage_domain_join_id == null) {
							if (other.storage_domain_join_id != null)
								return false;
						
						} else if (!this.storage_domain_join_id.equals(other.storage_domain_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row43Struct other) {

		other.history_id = this.history_id;
	            other.storage_domain_join_id = this.storage_domain_join_id;
	            
	}

	public void copyKeysDataTo(row43Struct other) {

		other.storage_domain_join_id = this.storage_domain_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.storage_domain_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.storage_domain_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",storage_domain_join_id="+storage_domain_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.storage_domain_join_id, other.storage_domain_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row43Struct row43 = new row43Struct();




	
	/**
	 * [tAdvancedHash_row43 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row43", false);
		start_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row43";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tAdvancedHash_row43 = 0;
		

			   		// connection name:row43
			   		// source node:tJDBCInput_3 - inputs:(after_tJDBCInput_4) outputs:(row43,row43) | target node:tAdvancedHash_row43 - inputs:(row43) outputs:()
			   		// linked node: tMap_2 - inputs:(row44,row43) outputs:(storage_history)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row43 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row43Struct>getLookup(matchingModeEnum_row43);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row43", tHash_Lookup_row43);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row43 begin ] stop
 */



	
	/**
	 * [tJDBCInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_3", false);
		start_Hash.put("tJDBCInput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_3";

	
		int tos_count_tJDBCInput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_3 = (String)(restRequest_tJDBCInput_3 != null ? restRequest_tJDBCInput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_3 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_3 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_3 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_3.createRuntimeProperties();
 		                    props_tJDBCInput_3.setValue("sql",
 		                    "SELECT history_id, upper(cast(storage_domain_id as char(36))) as storage_domain_join_id\nFROM  v4_5_latest_configuratio"
+"n_storage_domains");
 		                    
 		                    props_tJDBCInput_3.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_3.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"storage_domain_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"storage_domain_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"storage_domain_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_3\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_3_1_fisrt sst_tJDBCInput_3_1_fisrt = new SchemaSettingTool_tJDBCInput_3_1_fisrt();
 		                    
 		                    props_tJDBCInput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_3.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_storage_domains");
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_3_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("trim",tJDBCInput_3_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_3_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_3_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_3_trimTable_columnName.add("storage_domain_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_3.trimTable).setValue("columnName",tJDBCInput_3_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_3 = props_tJDBCInput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_3);
        }
    }
globalMap.put("tJDBCInput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_3_MAPPINGS_URL", mappings_url_tJDBCInput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_3 = null;
topology_tJDBCInput_3 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_3 = def_tJDBCInput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_3, topology_tJDBCInput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_3 = def_tJDBCInput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_3 = componentRuntime_tJDBCInput_3.initialize(container_tJDBCInput_3, props_tJDBCInput_3);

if (initVr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_3.getMessage());
}

if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_3;
	compDriverInitialization_tJDBCInput_3.runAtDriver(container_tJDBCInput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_3 = null;
if(componentRuntime_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_3;
	if (doesNodeBelongToRequest_tJDBCInput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_3 = sourceOrSink_tJDBCInput_3.validate(container_tJDBCInput_3);
        if (vr_tJDBCInput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_3.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_3 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_3 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_3;
        reader_tJDBCInput_3 = source_tJDBCInput_3.createReader(container_tJDBCInput_3);
	    reader_tJDBCInput_3 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_3, container_tJDBCInput_3);

            boolean multi_output_is_allowed_tJDBCInput_3 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_3 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_3.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_3 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_3 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_3 = props_tJDBCInput_3.getSchema(c_tJDBCInput_3, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_3 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_3, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_3 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_3 = reader_tJDBCInput_3.start();

        resourceMap.put("reader_tJDBCInput_3", reader_tJDBCInput_3);

        for (; available_tJDBCInput_3; available_tJDBCInput_3 = reader_tJDBCInput_3.advance()) {
			nb_line_tJDBCInput_3++;

			
			if (multi_output_is_allowed_tJDBCInput_3) {
				
					row43 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_3 = reader_tJDBCInput_3.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_3) {
						row43 = new row43Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_3 == null) {
            factory_tJDBCInput_3 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_3.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_3.setWrapped(factory_tJDBCInput_3.convertToAvro(data_tJDBCInput_3));
                Object columnValue_0_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(0);
                        row43.history_id = (Integer) (columnValue_0_tJDBCInput_3);
                Object columnValue_1_tJDBCInput_3 = outgoingEnforcer_tJDBCInput_3.get(1);
                        row43.storage_domain_join_id = (String) (columnValue_1_tJDBCInput_3);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_3) {
				java.util.Map<String,Object> info_tJDBCInput_3 = e_tJDBCInput_3.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_3 = null;
					if(info_tJDBCInput_3.containsKey("error")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("error");
					}else if(info_tJDBCInput_3.containsKey("errorMessage")){
						errorMessage_tJDBCInput_3 = info_tJDBCInput_3.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_3 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_3 = "Row "+ nb_line_tJDBCInput_3 + ": "+errorMessage_tJDBCInput_3;
					System.err.println(errorMessage_tJDBCInput_3);
				
					// If the record is reject, the main line record should put NULL
					row43 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_3 = null;


 



/**
 * [tJDBCInput_3 begin ] stop
 */
	
	/**
	 * [tJDBCInput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 


	tos_count_tJDBCInput_3++;

/**
 * [tJDBCInput_3 main ] stop
 */
	
	/**
	 * [tJDBCInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					


			   
			   

					row43Struct row43_HashRow = new row43Struct();
		   	   	   
				
				row43_HashRow.history_id = row43.history_id;
				
				row43_HashRow.storage_domain_join_id = row43.storage_domain_join_id;
				
			tHash_Lookup_row43.put(row43_HashRow);
			
            




 


	tos_count_tAdvancedHash_row43++;

/**
 * [tAdvancedHash_row43 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

 



/**
 * [tAdvancedHash_row43 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

 



/**
 * [tAdvancedHash_row43 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	


 



/**
 * [tJDBCInput_3 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// end of generic


resourceMap.put("finish_tJDBCInput_3", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_3 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_3 = null;
    if (reader_tJDBCInput_3 != null) {
        reader_tJDBCInput_3.close();
        resultMap_tJDBCInput_3 = reader_tJDBCInput_3.getReturnValues();
    }
if(resultMap_tJDBCInput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_3 : resultMap_tJDBCInput_3.entrySet()) {
		switch(entry_tJDBCInput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "ERROR_MESSAGE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_LINE", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_SUCCESS", entry_tJDBCInput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", "NB_REJECT", entry_tJDBCInput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_3 = new StringBuilder();
            for (int i_tJDBCInput_3 = 0; i_tJDBCInput_3 < entry_tJDBCInput_3.getKey().length(); i_tJDBCInput_3++) {
                char ch_tJDBCInput_3 = entry_tJDBCInput_3.getKey().charAt(i_tJDBCInput_3);
                if(Character.isUpperCase(ch_tJDBCInput_3) && i_tJDBCInput_3> 0) {
                	studio_key_tJDBCInput_3.append('_');
                }
                studio_key_tJDBCInput_3.append(ch_tJDBCInput_3);
            }
			container_tJDBCInput_3.setComponentData("tJDBCInput_3", studio_key_tJDBCInput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_3.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_3", true);
end_Hash.put("tJDBCInput_3", System.currentTimeMillis());




/**
 * [tJDBCInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

tHash_Lookup_row43.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row43", true);
end_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());




/**
 * [tAdvancedHash_row43 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_3")==null){
    if(resourceMap.get("reader_tJDBCInput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_3")).close();
		} catch (java.io.IOException e_tJDBCInput_3) {
			String errorMessage_tJDBCInput_3 = "failed to release the resource in tJDBCInput_3 :" + e_tJDBCInput_3.getMessage();
			System.err.println(errorMessage_tJDBCInput_3);
		}
	}
}
 



/**
 * [tJDBCInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";

	

 



/**
 * [tAdvancedHash_row43 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class host_historyStruct implements routines.system.IPersistableRow<host_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public short host_status;

				public short getHost_status () {
					return this.host_status;
				}
				
			    public int seconds_in_status;

				public int getSeconds_in_status () {
					return this.seconds_in_status;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Long ksm_shared_memory_mb;

				public Long getKsm_shared_memory_mb () {
					return this.ksm_shared_memory_mb;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short ksm_cpu_percent;

				public Short getKsm_cpu_percent () {
					return this.ksm_cpu_percent;
				}
				
			    public Short active_vms;

				public Short getActive_vms () {
					return this.active_vms;
				}
				
			    public Short total_vms;

				public Short getTotal_vms () {
					return this.total_vms;
				}
				
			    public Integer total_vms_vcpus;

				public Integer getTotal_vms_vcpus () {
					return this.total_vms_vcpus;
				}
				
			    public Integer cpu_load;

				public Integer getCpu_load () {
					return this.cpu_load;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Integer swap_used_mb;

				public Integer getSwap_used_mb () {
					return this.swap_used_mb;
				}
				
			    public Integer host_configuration_version;

				public Integer getHost_configuration_version () {
					return this.host_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.seconds_in_status = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_id = (Object) dis.readObject();
					
			        this.host_status = dis.readShort();
					
			        this.seconds_in_status = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.active_vms = null;
           				} else {
           			    	this.active_vms = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
						this.host_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// short
				
		            	dos.writeShort(this.host_status);
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Short
				
						if(this.active_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.active_vms);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Integer
				
						writeInteger(this.host_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_id="+String.valueOf(host_id));
		sb.append(",host_status="+String.valueOf(host_status));
		sb.append(",seconds_in_status="+String.valueOf(seconds_in_status));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",ksm_shared_memory_mb="+String.valueOf(ksm_shared_memory_mb));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",ksm_cpu_percent="+String.valueOf(ksm_cpu_percent));
		sb.append(",active_vms="+String.valueOf(active_vms));
		sb.append(",total_vms="+String.valueOf(total_vms));
		sb.append(",total_vms_vcpus="+String.valueOf(total_vms_vcpus));
		sb.append(",cpu_load="+String.valueOf(cpu_load));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",swap_used_mb="+String.valueOf(swap_used_mb));
		sb.append(",host_configuration_version="+String.valueOf(host_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(host_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				
			    public Short host_status;

				public Short getHost_status () {
					return this.host_status;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Long ksm_shared_memory_mb;

				public Long getKsm_shared_memory_mb () {
					return this.ksm_shared_memory_mb;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short ksm_cpu_percent;

				public Short getKsm_cpu_percent () {
					return this.ksm_cpu_percent;
				}
				
			    public Integer cpu_load;

				public Integer getCpu_load () {
					return this.cpu_load;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Integer swap_used_mb;

				public Integer getSwap_used_mb () {
					return this.swap_used_mb;
				}
				
			    public Short vm_active;

				public Short getVm_active () {
					return this.vm_active;
				}
				
			    public Short total_vms;

				public Short getTotal_vms () {
					return this.total_vms;
				}
				
			    public Integer total_vms_vcpus;

				public Integer getTotal_vms_vcpus () {
					return this.total_vms_vcpus;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_status = null;
           				} else {
           			    	this.host_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_active = null;
           				} else {
           			    	this.vm_active = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_status = null;
           				} else {
           			    	this.host_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_active = null;
           				} else {
           			    	this.vm_active = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_status);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Short
				
						if(this.vm_active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_active);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_status);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Short
				
						if(this.vm_active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_active);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_id="+String.valueOf(host_id));
		sb.append(",host_join_id="+host_join_id);
		sb.append(",host_status="+String.valueOf(host_status));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",ksm_shared_memory_mb="+String.valueOf(ksm_shared_memory_mb));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",ksm_cpu_percent="+String.valueOf(ksm_cpu_percent));
		sb.append(",cpu_load="+String.valueOf(cpu_load));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",swap_used_mb="+String.valueOf(swap_used_mb));
		sb.append(",vm_active="+String.valueOf(vm_active));
		sb.append(",total_vms="+String.valueOf(total_vms));
		sb.append(",total_vms_vcpus="+String.valueOf(total_vms_vcpus));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_5Struct implements routines.system.IPersistableRow<after_tJDBCInput_5Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object host_id;

				public Object getHost_id () {
					return this.host_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				
			    public Short host_status;

				public Short getHost_status () {
					return this.host_status;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Long ksm_shared_memory_mb;

				public Long getKsm_shared_memory_mb () {
					return this.ksm_shared_memory_mb;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short ksm_cpu_percent;

				public Short getKsm_cpu_percent () {
					return this.ksm_cpu_percent;
				}
				
			    public Integer cpu_load;

				public Integer getCpu_load () {
					return this.cpu_load;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Integer swap_used_mb;

				public Integer getSwap_used_mb () {
					return this.swap_used_mb;
				}
				
			    public Short vm_active;

				public Short getVm_active () {
					return this.vm_active;
				}
				
			    public Short total_vms;

				public Short getTotal_vms () {
					return this.total_vms;
				}
				
			    public Integer total_vms_vcpus;

				public Integer getTotal_vms_vcpus () {
					return this.total_vms_vcpus;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_status = null;
           				} else {
           			    	this.host_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_active = null;
           				} else {
           			    	this.vm_active = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_id = (Object) dis.readObject();
					
					this.host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.host_status = null;
           				} else {
           			    	this.host_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_shared_memory_mb = null;
           				} else {
           			    	this.ksm_shared_memory_mb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ksm_cpu_percent = null;
           				} else {
           			    	this.ksm_cpu_percent = dis.readShort();
           				}
					
						this.cpu_load = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
						this.swap_used_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_active = null;
           				} else {
           			    	this.vm_active = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_vms = null;
           				} else {
           			    	this.total_vms = dis.readShort();
           				}
					
						this.total_vms_vcpus = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_status);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Short
				
						if(this.vm_active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_active);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_id);
					
					// String
				
						writeString(this.host_join_id,dos);
					
					// Short
				
						if(this.host_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.host_status);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Long
				
						if(this.ksm_shared_memory_mb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ksm_shared_memory_mb);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.ksm_cpu_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.ksm_cpu_percent);
		            	}
					
					// Integer
				
						writeInteger(this.cpu_load,dos);
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Integer
				
						writeInteger(this.swap_used_mb,dos);
					
					// Short
				
						if(this.vm_active == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_active);
		            	}
					
					// Short
				
						if(this.total_vms == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.total_vms);
		            	}
					
					// Integer
				
						writeInteger(this.total_vms_vcpus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_id="+String.valueOf(host_id));
		sb.append(",host_join_id="+host_join_id);
		sb.append(",host_status="+String.valueOf(host_status));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",ksm_shared_memory_mb="+String.valueOf(ksm_shared_memory_mb));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",ksm_cpu_percent="+String.valueOf(ksm_cpu_percent));
		sb.append(",cpu_load="+String.valueOf(cpu_load));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",swap_used_mb="+String.valueOf(swap_used_mb));
		sb.append(",vm_active="+String.valueOf(vm_active));
		sb.append(",total_vms="+String.valueOf(total_vms));
		sb.append(",total_vms_vcpus="+String.valueOf(total_vms_vcpus));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_6Process(globalMap);

		row10Struct row10 = new row10Struct();
host_historyStruct host_history = new host_historyStruct();





	
	/**
	 * [tJDBCOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_3", false);
		start_Hash.put("tJDBCOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"host_history");
					}
				
		int tos_count_tJDBCOutput_3 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_3 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_3 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_3 = (String)(restRequest_tJDBCOutput_3 != null ? restRequest_tJDBCOutput_3.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_3 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_3 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_3 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_3 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_3.createRuntimeProperties();
 		                    props_tJDBCOutput_3.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_3.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.tableSelection.setValue("tablename",
 		                    "host_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_1_fisrt sst_tJDBCOutput_3_1_fisrt = new SchemaSettingTool_tJDBCOutput_3_1_fisrt();
 		                    
 		                    props_tJDBCOutput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_2_fisrt sst_tJDBCOutput_3_2_fisrt = new SchemaSettingTool_tJDBCOutput_3_2_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"active_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"active_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"host_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_3_fisrt sst_tJDBCOutput_3_3_fisrt = new SchemaSettingTool_tJDBCOutput_3_3_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_3 = props_tJDBCOutput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_3);
        }
    }
globalMap.put("tJDBCOutput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_3_MAPPINGS_URL", mappings_url_tJDBCOutput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_3 = null;
topology_tJDBCOutput_3 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_3 = def_tJDBCOutput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_3, topology_tJDBCOutput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_3 = def_tJDBCOutput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_3 = componentRuntime_tJDBCOutput_3.initialize(container_tJDBCOutput_3, props_tJDBCOutput_3);

if (initVr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_3.getMessage());
}

if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_3;
	compDriverInitialization_tJDBCOutput_3.runAtDriver(container_tJDBCOutput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_3 = null;
if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_3;
	if (doesNodeBelongToRequest_tJDBCOutput_3) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_3 = sourceOrSink_tJDBCOutput_3.validate(container_tJDBCOutput_3);
        if (vr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_3.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_3 = null;
    if (sourceOrSink_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_3 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_3;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_3 = sink_tJDBCOutput_3.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writeOperation_tJDBCOutput_3.initialize(container_tJDBCOutput_3);
        }
        writer_tJDBCOutput_3 = writeOperation_tJDBCOutput_3.createWriter(container_tJDBCOutput_3);
        if (doesNodeBelongToRequest_tJDBCOutput_3) {
            writer_tJDBCOutput_3.open("tJDBCOutput_3");
        }

        resourceMap.put("writer_tJDBCOutput_3", writer_tJDBCOutput_3);
    } // end of "sourceOrSink_tJDBCOutput_3 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_3 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_3.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_3 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_3 = props_tJDBCOutput_3.getSchema(c_tJDBCOutput_3, false);
    incomingEnforcer_tJDBCOutput_3 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_3);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_3 = null;


 



/**
 * [tJDBCOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct> tHash_Lookup_row42 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct>) 
					globalMap.get( "tHash_Lookup_row42" ))
					;					
					
	

row42Struct row42HashKey = new row42Struct();
row42Struct row42Default = new row42Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
host_historyStruct host_history_tmp = new host_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tJDBCInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_5", false);
		start_Hash.put("tJDBCInput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_5";

	
		int tos_count_tJDBCInput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_5 = (String)(restRequest_tJDBCInput_5 != null ? restRequest_tJDBCInput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_5 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_5 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_5 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_5.createRuntimeProperties();
 		                    props_tJDBCInput_5.setValue("sql",
 		                    "SELECT \n  host_id,\n  upper(cast(host_id as char(36))) as host_join_id,\n  host_status, \n  memory_usage_percent, \n  k"
+"sm_shared_memory_mb,\n  cpu_usage_percent, \n  ksm_cpu_percent, \n  cpu_load, \n  system_cpu_usage_percent, \n  user_cpu"
+"_usage_percent, \n  swap_used_mb, \n  vm_active, \n  total_vms, \n  total_vms_vcpus\nFROM dwh_host_history_view");
 		                    
 		                    props_tJDBCInput_5.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_5.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_host_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"host_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_shared_memory_mb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_shared_memory_mb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_shared_memory_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ksm_cpu_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"ksm_cpu_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"ksm_cpu_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_load\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"cpu_load\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_load\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"swap_used_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"swap_used_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"swap_used_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_active\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_active\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_active\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"total_vms\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"total_vms\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"total_vms_vcpus\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"total_vms_vcpus\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"total_vms_vcpus\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_5\",\"di.table.label\":\"dwh_host_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_5_1_fisrt sst_tJDBCInput_5_1_fisrt = new SchemaSettingTool_tJDBCInput_5_1_fisrt();
 		                    
 		                    props_tJDBCInput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_5.tableSelection.setValue("tablename",
 		                    "dwh_host_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_5_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("trim",tJDBCInput_5_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_5_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_5_trimTable_columnName.add("host_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("host_join_id");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("host_status");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("memory_usage_percent");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("ksm_shared_memory_mb");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("cpu_usage_percent");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("ksm_cpu_percent");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("cpu_load");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("system_cpu_usage_percent");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("user_cpu_usage_percent");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("swap_used_mb");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("vm_active");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("total_vms");
 		                            
 		                            tJDBCInput_5_trimTable_columnName.add("total_vms_vcpus");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_5.trimTable).setValue("columnName",tJDBCInput_5_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_5 = props_tJDBCInput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_5);
        }
    }
globalMap.put("tJDBCInput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_5_MAPPINGS_URL", mappings_url_tJDBCInput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_5 = null;
topology_tJDBCInput_5 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_5 = def_tJDBCInput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_5, topology_tJDBCInput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_5 = def_tJDBCInput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_5 = componentRuntime_tJDBCInput_5.initialize(container_tJDBCInput_5, props_tJDBCInput_5);

if (initVr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_5.getMessage());
}

if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_5;
	compDriverInitialization_tJDBCInput_5.runAtDriver(container_tJDBCInput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_5 = null;
if(componentRuntime_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_5;
	if (doesNodeBelongToRequest_tJDBCInput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_5 = sourceOrSink_tJDBCInput_5.validate(container_tJDBCInput_5);
        if (vr_tJDBCInput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_5.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_5 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_5 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_5;
        reader_tJDBCInput_5 = source_tJDBCInput_5.createReader(container_tJDBCInput_5);
	    reader_tJDBCInput_5 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_5, container_tJDBCInput_5);

            boolean multi_output_is_allowed_tJDBCInput_5 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_5 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_5.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_5 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_5 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_5 = props_tJDBCInput_5.getSchema(c_tJDBCInput_5, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_5 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_5, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_5 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_5 = reader_tJDBCInput_5.start();

        resourceMap.put("reader_tJDBCInput_5", reader_tJDBCInput_5);

        for (; available_tJDBCInput_5; available_tJDBCInput_5 = reader_tJDBCInput_5.advance()) {
			nb_line_tJDBCInput_5++;

			
			if (multi_output_is_allowed_tJDBCInput_5) {
				
					row10 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_5 = reader_tJDBCInput_5.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_5) {
						row10 = new row10Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_5 == null) {
            factory_tJDBCInput_5 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_5.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_5.setWrapped(factory_tJDBCInput_5.convertToAvro(data_tJDBCInput_5));
                Object columnValue_0_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(0);
                        row10.host_id = (Object) (columnValue_0_tJDBCInput_5);
                Object columnValue_1_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(1);
                        row10.host_join_id = (String) (columnValue_1_tJDBCInput_5);
                Object columnValue_2_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(2);
                        row10.host_status = (Short) (columnValue_2_tJDBCInput_5);
                Object columnValue_3_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(3);
                        row10.memory_usage_percent = (Short) (columnValue_3_tJDBCInput_5);
                Object columnValue_4_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(4);
                        row10.ksm_shared_memory_mb = (Long) (columnValue_4_tJDBCInput_5);
                Object columnValue_5_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(5);
                        row10.cpu_usage_percent = (Short) (columnValue_5_tJDBCInput_5);
                Object columnValue_6_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(6);
                        row10.ksm_cpu_percent = (Short) (columnValue_6_tJDBCInput_5);
                Object columnValue_7_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(7);
                        row10.cpu_load = (Integer) (columnValue_7_tJDBCInput_5);
                Object columnValue_8_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(8);
                        row10.system_cpu_usage_percent = (Short) (columnValue_8_tJDBCInput_5);
                Object columnValue_9_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(9);
                        row10.user_cpu_usage_percent = (Short) (columnValue_9_tJDBCInput_5);
                Object columnValue_10_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(10);
                        row10.swap_used_mb = (Integer) (columnValue_10_tJDBCInput_5);
                Object columnValue_11_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(11);
                        row10.vm_active = (Short) (columnValue_11_tJDBCInput_5);
                Object columnValue_12_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(12);
                        row10.total_vms = (Short) (columnValue_12_tJDBCInput_5);
                Object columnValue_13_tJDBCInput_5 = outgoingEnforcer_tJDBCInput_5.get(13);
                        row10.total_vms_vcpus = (Integer) (columnValue_13_tJDBCInput_5);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_5) {
				java.util.Map<String,Object> info_tJDBCInput_5 = e_tJDBCInput_5.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_5 = null;
					if(info_tJDBCInput_5.containsKey("error")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("error");
					}else if(info_tJDBCInput_5.containsKey("errorMessage")){
						errorMessage_tJDBCInput_5 = info_tJDBCInput_5.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_5 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_5 = "Row "+ nb_line_tJDBCInput_5 + ": "+errorMessage_tJDBCInput_5;
					System.err.println(errorMessage_tJDBCInput_5);
				
					// If the record is reject, the main line record should put NULL
					row10 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_5 = null;


 



/**
 * [tJDBCInput_5 begin ] stop
 */
	
	/**
	 * [tJDBCInput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 


	tos_count_tJDBCInput_5++;

/**
 * [tJDBCInput_5 main ] stop
 */
	
	/**
	 * [tJDBCInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_3 = false;
		  boolean mainRowRejected_tMap_3 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row10.host_status != 0
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row10'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row42" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow42 = false;
       		  	    	
       		  	    	
 							row42Struct row42ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row42HashKey.host_join_id = row10.host_join_id ;
                        		    		

								
		                        	row42HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row42.lookup( row42HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row42.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_3 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row42 != null && tHash_Lookup_row42.getCount(row42HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row42' and it contains more one result from keys :  row42.host_join_id = '" + row42HashKey.host_join_id + "'");
								} // G 071
							

							row42Struct row42 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row42Struct fromLookup_row42 = null;
							row42 = row42Default;
										 
							
								 
							
							
								if (tHash_Lookup_row42 !=null && tHash_Lookup_row42.hasNext()) { // G 099
								
							
								
								fromLookup_row42 = tHash_Lookup_row42.next();

							
							
								} // G 099
							
							

							if(fromLookup_row42 != null) {
								row42 = fromLookup_row42;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

host_history = null;

if(!rejectedInnerJoin_tMap_3 ) {

// # Output table : 'host_history'
host_history_tmp.history_datetime = context.runTime;
host_history_tmp.host_id = row10.host_id;
host_history_tmp.host_status = (row10.host_status == 3 || row10.host_status == 8 || row10.host_status ==  12 || row10.host_status == 9) ? (short) 1 :
(row10.host_status == 2 || row10.host_status == 6 || row10.host_status == 11) ? (short) 2 :
(row10.host_status == 5 || row10.host_status == 10 || row10.host_status == 4 || row10.host_status == 7 || row10.host_status == 1 || row10.host_status == 13) ? (short) 3 :
(short) -1    ;
host_history_tmp.seconds_in_status = context.runInterleave;
host_history_tmp.memory_usage_percent = row10.memory_usage_percent;
host_history_tmp.ksm_shared_memory_mb = row10.ksm_shared_memory_mb ;
host_history_tmp.cpu_usage_percent = row10.cpu_usage_percent;
host_history_tmp.ksm_cpu_percent = row10.ksm_cpu_percent;
host_history_tmp.active_vms = row10.vm_active;
host_history_tmp.total_vms = row10.total_vms;
host_history_tmp.total_vms_vcpus = row10.total_vms_vcpus;
host_history_tmp.cpu_load = row10.cpu_load;
host_history_tmp.system_cpu_usage_percent = row10.system_cpu_usage_percent;
host_history_tmp.user_cpu_usage_percent = row10.user_cpu_usage_percent;
host_history_tmp.swap_used_mb = row10.swap_used_mb;
host_history_tmp.host_configuration_version = row42.history_id ;
host_history = host_history_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "host_history"
if(host_history != null) { 



	
	/**
	 * [tJDBCOutput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"host_history"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_3 != null) {
            incomingEnforcer_tJDBCOutput_3.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_3.put("history_datetime", host_history.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("host_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("host_id", host_history.host_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("host_status") != null){
                    incomingEnforcer_tJDBCOutput_3.put("host_status", host_history.host_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("seconds_in_status") != null){
                    incomingEnforcer_tJDBCOutput_3.put("seconds_in_status", host_history.seconds_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("memory_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("memory_usage_percent", host_history.memory_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("ksm_shared_memory_mb") != null){
                    incomingEnforcer_tJDBCOutput_3.put("ksm_shared_memory_mb", host_history.ksm_shared_memory_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("cpu_usage_percent", host_history.cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("ksm_cpu_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("ksm_cpu_percent", host_history.ksm_cpu_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("active_vms") != null){
                    incomingEnforcer_tJDBCOutput_3.put("active_vms", host_history.active_vms);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("total_vms") != null){
                    incomingEnforcer_tJDBCOutput_3.put("total_vms", host_history.total_vms);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("total_vms_vcpus") != null){
                    incomingEnforcer_tJDBCOutput_3.put("total_vms_vcpus", host_history.total_vms_vcpus);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("cpu_load") != null){
                    incomingEnforcer_tJDBCOutput_3.put("cpu_load", host_history.cpu_load);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("system_cpu_usage_percent", host_history.system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_3.put("user_cpu_usage_percent", host_history.user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("swap_used_mb") != null){
                    incomingEnforcer_tJDBCOutput_3.put("swap_used_mb", host_history.swap_used_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3 != null && incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_3.put("host_configuration_version", host_history.host_configuration_version);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_3 = null;
        if (incomingEnforcer_tJDBCOutput_3 != null) {
            data_tJDBCOutput_3 = incomingEnforcer_tJDBCOutput_3.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_3 != null && data_tJDBCOutput_3 != null) {
        	writer_tJDBCOutput_3.write(data_tJDBCOutput_3);
        }
        
        nb_line_tJDBCOutput_3++;

 


	tos_count_tJDBCOutput_3++;

/**
 * [tJDBCOutput_3 main ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_end ] stop
 */

} // End of branch "host_history"



	
		} // G_TM_M_280 close main tMap filter for table 'row10'
	
	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	


 



/**
 * [tJDBCInput_5 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// end of generic


resourceMap.put("finish_tJDBCInput_5", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_5 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_5 = null;
    if (reader_tJDBCInput_5 != null) {
        reader_tJDBCInput_5.close();
        resultMap_tJDBCInput_5 = reader_tJDBCInput_5.getReturnValues();
    }
if(resultMap_tJDBCInput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_5 : resultMap_tJDBCInput_5.entrySet()) {
		switch(entry_tJDBCInput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "ERROR_MESSAGE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_LINE", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_SUCCESS", entry_tJDBCInput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", "NB_REJECT", entry_tJDBCInput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_5 = new StringBuilder();
            for (int i_tJDBCInput_5 = 0; i_tJDBCInput_5 < entry_tJDBCInput_5.getKey().length(); i_tJDBCInput_5++) {
                char ch_tJDBCInput_5 = entry_tJDBCInput_5.getKey().charAt(i_tJDBCInput_5);
                if(Character.isUpperCase(ch_tJDBCInput_5) && i_tJDBCInput_5> 0) {
                	studio_key_tJDBCInput_5.append('_');
                }
                studio_key_tJDBCInput_5.append(ch_tJDBCInput_5);
            }
			container_tJDBCInput_5.setComponentData("tJDBCInput_5", studio_key_tJDBCInput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_5.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_5", true);
end_Hash.put("tJDBCInput_5", System.currentTimeMillis());




/**
 * [tJDBCInput_5 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row42 != null) {
						tHash_Lookup_row42.endGet();
					}
					globalMap.remove( "tHash_Lookup_row42" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJDBCOutput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_3", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_3 = null;
    if (writer_tJDBCOutput_3 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_3 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_3.close();
        resultMap_tJDBCOutput_3 = writer_tJDBCOutput_3.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_3), container_tJDBCOutput_3);
    }
if(resultMap_tJDBCOutput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_3 : resultMap_tJDBCOutput_3.entrySet()) {
		switch(entry_tJDBCOutput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "ERROR_MESSAGE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_LINE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_SUCCESS", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_REJECT", entry_tJDBCOutput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_3 = new StringBuilder();
            for (int i_tJDBCOutput_3 = 0; i_tJDBCOutput_3 < entry_tJDBCOutput_3.getKey().length(); i_tJDBCOutput_3++) {
                char ch_tJDBCOutput_3 = entry_tJDBCOutput_3.getKey().charAt(i_tJDBCOutput_3);
                if(Character.isUpperCase(ch_tJDBCOutput_3) && i_tJDBCOutput_3> 0) {
                	studio_key_tJDBCOutput_3.append('_');
                }
                studio_key_tJDBCOutput_3.append(ch_tJDBCOutput_3);
            }
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", studio_key_tJDBCOutput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_3.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"host_history");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_3", true);
end_Hash.put("tJDBCOutput_3", System.currentTimeMillis());




/**
 * [tJDBCOutput_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row42"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_5")==null){
    if(resourceMap.get("reader_tJDBCInput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_5")).close();
		} catch (java.io.IOException e_tJDBCInput_5) {
			String errorMessage_tJDBCInput_5 = "failed to release the resource in tJDBCInput_5 :" + e_tJDBCInput_5.getMessage();
			System.err.println(errorMessage_tJDBCInput_5);
		}
	}
}
 



/**
 * [tJDBCInput_5 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_3")==null){
    if(resourceMap.get("writer_tJDBCOutput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_3")).close();
		} catch (java.io.IOException e_tJDBCOutput_3) {
			String errorMessage_tJDBCOutput_3 = "failed to release the resource in tJDBCOutput_3 :" + e_tJDBCOutput_3.getMessage();
			System.err.println(errorMessage_tJDBCOutput_3);
		}
	}
}
 



/**
 * [tJDBCOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row42Struct implements routines.system.IPersistableComparableLookupRow<row42Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.host_join_id == null) ? 0 : this.host_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row42Struct other = (row42Struct) obj;
		
						if (this.host_join_id == null) {
							if (other.host_join_id != null)
								return false;
						
						} else if (!this.host_join_id.equals(other.host_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row42Struct other) {

		other.history_id = this.history_id;
	            other.host_join_id = this.host_join_id;
	            
	}

	public void copyKeysDataTo(row42Struct other) {

		other.host_join_id = this.host_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_join_id="+host_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.host_join_id, other.host_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row42Struct row42 = new row42Struct();




	
	/**
	 * [tAdvancedHash_row42 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row42", false);
		start_Hash.put("tAdvancedHash_row42", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row42";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tAdvancedHash_row42 = 0;
		

			   		// connection name:row42
			   		// source node:tJDBCInput_6 - inputs:(after_tJDBCInput_5) outputs:(row42,row42) | target node:tAdvancedHash_row42 - inputs:(row42) outputs:()
			   		// linked node: tMap_3 - inputs:(row10,row42) outputs:(host_history)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row42 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct> tHash_Lookup_row42 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row42Struct>getLookup(matchingModeEnum_row42);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row42", tHash_Lookup_row42);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row42 begin ] stop
 */



	
	/**
	 * [tJDBCInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_6", false);
		start_Hash.put("tJDBCInput_6", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_6";

	
		int tos_count_tJDBCInput_6 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_6 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_6 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_6 = (String)(restRequest_tJDBCInput_6 != null ? restRequest_tJDBCInput_6.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_6 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_6 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_6 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_6 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_6.createRuntimeProperties();
 		                    props_tJDBCInput_6.setValue("sql",
 		                    "SELECT history_id, upper(cast(host_id as char(36))) as host_join_id\nFROM v4_5_latest_configuration_hosts");
 		                    
 		                    props_tJDBCInput_6.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_6.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_6.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_6.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_6.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_6.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_6_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_6\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_6_1_fisrt sst_tJDBCInput_6_1_fisrt = new SchemaSettingTool_tJDBCInput_6_1_fisrt();
 		                    
 		                    props_tJDBCInput_6.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_6_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_6.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_hosts");
 		                    
 		                    java.util.List<Object> tJDBCInput_6_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_6_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_6.trimTable).setValue("trim",tJDBCInput_6_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_6_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_6_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_6_trimTable_columnName.add("host_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_6.trimTable).setValue("columnName",tJDBCInput_6_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_6.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_6 = props_tJDBCInput_6.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_6 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_6 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_6 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_6.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_6);
        }
    }
globalMap.put("tJDBCInput_6_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_6);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_6= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_6_MAPPINGS_URL", mappings_url_tJDBCInput_6);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_6 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_6";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_6 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_6 = null;
topology_tJDBCInput_6 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_6 = def_tJDBCInput_6.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_6, topology_tJDBCInput_6);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_6 = def_tJDBCInput_6.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_6 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_6.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_6 = componentRuntime_tJDBCInput_6.initialize(container_tJDBCInput_6, props_tJDBCInput_6);

if (initVr_tJDBCInput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_6.getMessage());
}

if(componentRuntime_tJDBCInput_6 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_6 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_6;
	compDriverInitialization_tJDBCInput_6.runAtDriver(container_tJDBCInput_6);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_6 = null;
if(componentRuntime_tJDBCInput_6 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_6 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_6;
	if (doesNodeBelongToRequest_tJDBCInput_6) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_6 = sourceOrSink_tJDBCInput_6.validate(container_tJDBCInput_6);
        if (vr_tJDBCInput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_6.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_6 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_6 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_6;
        reader_tJDBCInput_6 = source_tJDBCInput_6.createReader(container_tJDBCInput_6);
	    reader_tJDBCInput_6 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_6, container_tJDBCInput_6);

            boolean multi_output_is_allowed_tJDBCInput_6 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_6 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_6.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_6 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_6 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_6 = props_tJDBCInput_6.getSchema(c_tJDBCInput_6, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_6 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_6, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_6 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_6 = reader_tJDBCInput_6.start();

        resourceMap.put("reader_tJDBCInput_6", reader_tJDBCInput_6);

        for (; available_tJDBCInput_6; available_tJDBCInput_6 = reader_tJDBCInput_6.advance()) {
			nb_line_tJDBCInput_6++;

			
			if (multi_output_is_allowed_tJDBCInput_6) {
				
					row42 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_6 = reader_tJDBCInput_6.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_6) {
						row42 = new row42Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_6 == null) {
            factory_tJDBCInput_6 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_6.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_6.setWrapped(factory_tJDBCInput_6.convertToAvro(data_tJDBCInput_6));
                Object columnValue_0_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(0);
                        row42.history_id = (Integer) (columnValue_0_tJDBCInput_6);
                Object columnValue_1_tJDBCInput_6 = outgoingEnforcer_tJDBCInput_6.get(1);
                        row42.host_join_id = (String) (columnValue_1_tJDBCInput_6);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_6) {
				java.util.Map<String,Object> info_tJDBCInput_6 = e_tJDBCInput_6.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_6 = null;
					if(info_tJDBCInput_6.containsKey("error")){
						errorMessage_tJDBCInput_6 = info_tJDBCInput_6.get("error");
					}else if(info_tJDBCInput_6.containsKey("errorMessage")){
						errorMessage_tJDBCInput_6 = info_tJDBCInput_6.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_6 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_6 = "Row "+ nb_line_tJDBCInput_6 + ": "+errorMessage_tJDBCInput_6;
					System.err.println(errorMessage_tJDBCInput_6);
				
					// If the record is reject, the main line record should put NULL
					row42 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_6 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_6 = null;


 



/**
 * [tJDBCInput_6 begin ] stop
 */
	
	/**
	 * [tJDBCInput_6 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	


 


	tos_count_tJDBCInput_6++;

/**
 * [tJDBCInput_6 main ] stop
 */
	
	/**
	 * [tJDBCInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	


 



/**
 * [tJDBCInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					


			   
			   

					row42Struct row42_HashRow = new row42Struct();
		   	   	   
				
				row42_HashRow.history_id = row42.history_id;
				
				row42_HashRow.host_join_id = row42.host_join_id;
				
			tHash_Lookup_row42.put(row42_HashRow);
			
            




 


	tos_count_tAdvancedHash_row42++;

/**
 * [tAdvancedHash_row42 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";

	

 



/**
 * [tAdvancedHash_row42 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row42 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";

	

 



/**
 * [tAdvancedHash_row42 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	


 



/**
 * [tJDBCInput_6 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_6 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	
// end of generic


resourceMap.put("finish_tJDBCInput_6", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_6 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_6 = null;
    if (reader_tJDBCInput_6 != null) {
        reader_tJDBCInput_6.close();
        resultMap_tJDBCInput_6 = reader_tJDBCInput_6.getReturnValues();
    }
if(resultMap_tJDBCInput_6!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_6 : resultMap_tJDBCInput_6.entrySet()) {
		switch(entry_tJDBCInput_6.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "ERROR_MESSAGE", entry_tJDBCInput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "NB_LINE", entry_tJDBCInput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "NB_SUCCESS", entry_tJDBCInput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", "NB_REJECT", entry_tJDBCInput_6.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_6 = new StringBuilder();
            for (int i_tJDBCInput_6 = 0; i_tJDBCInput_6 < entry_tJDBCInput_6.getKey().length(); i_tJDBCInput_6++) {
                char ch_tJDBCInput_6 = entry_tJDBCInput_6.getKey().charAt(i_tJDBCInput_6);
                if(Character.isUpperCase(ch_tJDBCInput_6) && i_tJDBCInput_6> 0) {
                	studio_key_tJDBCInput_6.append('_');
                }
                studio_key_tJDBCInput_6.append(ch_tJDBCInput_6);
            }
			container_tJDBCInput_6.setComponentData("tJDBCInput_6", studio_key_tJDBCInput_6.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_6.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_6", true);
end_Hash.put("tJDBCInput_6", System.currentTimeMillis());




/**
 * [tJDBCInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";

	

tHash_Lookup_row42.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row42", true);
end_Hash.put("tAdvancedHash_row42", System.currentTimeMillis());




/**
 * [tAdvancedHash_row42 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_6 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_6";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_6")==null){
    if(resourceMap.get("reader_tJDBCInput_6")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_6")).close();
		} catch (java.io.IOException e_tJDBCInput_6) {
			String errorMessage_tJDBCInput_6 = "failed to release the resource in tJDBCInput_6 :" + e_tJDBCInput_6.getMessage();
			System.err.println(errorMessage_tJDBCInput_6);
		}
	}
}
 



/**
 * [tJDBCInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";

	

 



/**
 * [tAdvancedHash_row42 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class hinterface_historyStruct implements routines.system.IPersistableRow<hinterface_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Integer host_interface_configuration_version;

				public Integer getHost_interface_configuration_version () {
					return this.host_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.host_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.host_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.host_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",host_interface_configuration_version="+String.valueOf(host_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(hinterface_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_join_id;

				public String getHost_interface_join_id () {
					return this.host_interface_join_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_join_id="+host_interface_join_id);
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_8Struct implements routines.system.IPersistableRow<after_tJDBCInput_8Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object host_interface_id;

				public Object getHost_interface_id () {
					return this.host_interface_id;
				}
				
			    public String host_interface_join_id;

				public String getHost_interface_join_id () {
					return this.host_interface_join_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.host_interface_id = (Object) dis.readObject();
					
					this.host_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.host_interface_id);
					
					// String
				
						writeString(this.host_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("host_interface_id="+String.valueOf(host_interface_id));
		sb.append(",host_interface_join_id="+host_interface_join_id);
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_13Process(globalMap);

		row11Struct row11 = new row11Struct();
hinterface_historyStruct hinterface_history = new hinterface_historyStruct();





	
	/**
	 * [tJDBCOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_4", false);
		start_Hash.put("tJDBCOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"hinterface_history");
					}
				
		int tos_count_tJDBCOutput_4 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_4 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_4 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_4 = (String)(restRequest_tJDBCOutput_4 != null ? restRequest_tJDBCOutput_4.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_4 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_4 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_4 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_4 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_4.createRuntimeProperties();
 		                    props_tJDBCOutput_4.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_4.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.tableSelection.setValue("tablename",
 		                    "host_interface_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"host_interface_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_1_fisrt sst_tJDBCOutput_4_1_fisrt = new SchemaSettingTool_tJDBCOutput_4_1_fisrt();
 		                    
 		                    props_tJDBCOutput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"host_interface_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"host_interface_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_2_fisrt sst_tJDBCOutput_4_2_fisrt = new SchemaSettingTool_tJDBCOutput_4_2_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"host_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"host_interface_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_3_fisrt sst_tJDBCOutput_4_3_fisrt = new SchemaSettingTool_tJDBCOutput_4_3_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_4 = props_tJDBCOutput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_4);
        }
    }
globalMap.put("tJDBCOutput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_4_MAPPINGS_URL", mappings_url_tJDBCOutput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_4 = null;
topology_tJDBCOutput_4 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_4 = def_tJDBCOutput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_4, topology_tJDBCOutput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_4 = def_tJDBCOutput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_4 = componentRuntime_tJDBCOutput_4.initialize(container_tJDBCOutput_4, props_tJDBCOutput_4);

if (initVr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_4.getMessage());
}

if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_4;
	compDriverInitialization_tJDBCOutput_4.runAtDriver(container_tJDBCOutput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_4 = null;
if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_4;
	if (doesNodeBelongToRequest_tJDBCOutput_4) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_4 = sourceOrSink_tJDBCOutput_4.validate(container_tJDBCOutput_4);
        if (vr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_4.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_4 = null;
    if (sourceOrSink_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_4 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_4;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_4 = sink_tJDBCOutput_4.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writeOperation_tJDBCOutput_4.initialize(container_tJDBCOutput_4);
        }
        writer_tJDBCOutput_4 = writeOperation_tJDBCOutput_4.createWriter(container_tJDBCOutput_4);
        if (doesNodeBelongToRequest_tJDBCOutput_4) {
            writer_tJDBCOutput_4.open("tJDBCOutput_4");
        }

        resourceMap.put("writer_tJDBCOutput_4", writer_tJDBCOutput_4);
    } // end of "sourceOrSink_tJDBCOutput_4 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_4 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_4.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_4 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_4 = props_tJDBCOutput_4.getSchema(c_tJDBCOutput_4, false);
    incomingEnforcer_tJDBCOutput_4 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_4);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_4 = null;


 



/**
 * [tJDBCOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct> tHash_Lookup_row45 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct>) 
					globalMap.get( "tHash_Lookup_row45" ))
					;					
					
	

row45Struct row45HashKey = new row45Struct();
row45Struct row45Default = new row45Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
hinterface_historyStruct hinterface_history_tmp = new hinterface_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tJDBCInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_8", false);
		start_Hash.put("tJDBCInput_8", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_8";

	
		int tos_count_tJDBCInput_8 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_8 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_8 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_8 = (String)(restRequest_tJDBCInput_8 != null ? restRequest_tJDBCInput_8.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_8 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_8 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_8 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_8 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_8.createRuntimeProperties();
 		                    props_tJDBCInput_8.setValue("sql",
 		                    "SELECT \n  host_interface_id, \n  upper(cast(host_interface_id as char(36))) as host_interface_join_id,\n  receive_rate"
+"_percent, \n  transmit_rate_percent,\n  received_total_byte,\n  transmitted_total_byte,\n  received_dropped_total_packets,\n"
+"  transmitted_dropped_total_packets\nFROM dwh_host_interface_history_view");
 		                    
 		                    props_tJDBCInput_8.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_8.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_8.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_8.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_8_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_host_interface_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"host_interface_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_8\",\"di.table.label\":\"dwh_host_interface_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_8_1_fisrt sst_tJDBCInput_8_1_fisrt = new SchemaSettingTool_tJDBCInput_8_1_fisrt();
 		                    
 		                    props_tJDBCInput_8.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_8_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_8.tableSelection.setValue("tablename",
 		                    "dwh_host_interface_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_8_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_8_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_8.trimTable).setValue("trim",tJDBCInput_8_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_8_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_8_trimTable_columnName.add("host_interface_id");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("host_interface_join_id");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("receive_rate_percent");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("transmit_rate_percent");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("received_total_byte");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("transmitted_total_byte");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("received_dropped_total_packets");
 		                            
 		                            tJDBCInput_8_trimTable_columnName.add("transmitted_dropped_total_packets");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_8.trimTable).setValue("columnName",tJDBCInput_8_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_8.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_8 = props_tJDBCInput_8.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_8 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_8 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_8 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_8.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_8);
        }
    }
globalMap.put("tJDBCInput_8_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_8);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_8= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_8_MAPPINGS_URL", mappings_url_tJDBCInput_8);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_8 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_8";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_8 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_8 = null;
topology_tJDBCInput_8 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_8 = def_tJDBCInput_8.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_8, topology_tJDBCInput_8);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_8 = def_tJDBCInput_8.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_8 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_8.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_8 = componentRuntime_tJDBCInput_8.initialize(container_tJDBCInput_8, props_tJDBCInput_8);

if (initVr_tJDBCInput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_8.getMessage());
}

if(componentRuntime_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_8 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_8;
	compDriverInitialization_tJDBCInput_8.runAtDriver(container_tJDBCInput_8);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_8 = null;
if(componentRuntime_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_8 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_8;
	if (doesNodeBelongToRequest_tJDBCInput_8) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_8 = sourceOrSink_tJDBCInput_8.validate(container_tJDBCInput_8);
        if (vr_tJDBCInput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_8.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_8 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_8 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_8;
        reader_tJDBCInput_8 = source_tJDBCInput_8.createReader(container_tJDBCInput_8);
	    reader_tJDBCInput_8 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_8, container_tJDBCInput_8);

            boolean multi_output_is_allowed_tJDBCInput_8 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_8 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_8.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_8 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_8 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_8 = props_tJDBCInput_8.getSchema(c_tJDBCInput_8, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_8 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_8, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_8 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_8 = reader_tJDBCInput_8.start();

        resourceMap.put("reader_tJDBCInput_8", reader_tJDBCInput_8);

        for (; available_tJDBCInput_8; available_tJDBCInput_8 = reader_tJDBCInput_8.advance()) {
			nb_line_tJDBCInput_8++;

			
			if (multi_output_is_allowed_tJDBCInput_8) {
				
					row11 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_8 = reader_tJDBCInput_8.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_8) {
						row11 = new row11Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_8 == null) {
            factory_tJDBCInput_8 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_8.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_8.setWrapped(factory_tJDBCInput_8.convertToAvro(data_tJDBCInput_8));
                Object columnValue_0_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(0);
                        row11.host_interface_id = (Object) (columnValue_0_tJDBCInput_8);
                Object columnValue_1_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(1);
                        row11.host_interface_join_id = (String) (columnValue_1_tJDBCInput_8);
                Object columnValue_2_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(2);
                        row11.receive_rate_percent = (Double) (columnValue_2_tJDBCInput_8);
                Object columnValue_3_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(3);
                        row11.transmit_rate_percent = (Double) (columnValue_3_tJDBCInput_8);
                Object columnValue_4_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(4);
                        row11.received_total_byte = (Double) (columnValue_4_tJDBCInput_8);
                Object columnValue_5_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(5);
                        row11.transmitted_total_byte = (Double) (columnValue_5_tJDBCInput_8);
                Object columnValue_6_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(6);
                        row11.received_dropped_total_packets = (Double) (columnValue_6_tJDBCInput_8);
                Object columnValue_7_tJDBCInput_8 = outgoingEnforcer_tJDBCInput_8.get(7);
                        row11.transmitted_dropped_total_packets = (Double) (columnValue_7_tJDBCInput_8);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_8) {
				java.util.Map<String,Object> info_tJDBCInput_8 = e_tJDBCInput_8.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_8 = null;
					if(info_tJDBCInput_8.containsKey("error")){
						errorMessage_tJDBCInput_8 = info_tJDBCInput_8.get("error");
					}else if(info_tJDBCInput_8.containsKey("errorMessage")){
						errorMessage_tJDBCInput_8 = info_tJDBCInput_8.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_8 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_8 = "Row "+ nb_line_tJDBCInput_8 + ": "+errorMessage_tJDBCInput_8;
					System.err.println(errorMessage_tJDBCInput_8);
				
					// If the record is reject, the main line record should put NULL
					row11 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_8 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_8 = null;


 



/**
 * [tJDBCInput_8 begin ] stop
 */
	
	/**
	 * [tJDBCInput_8 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 


	tos_count_tJDBCInput_8++;

/**
 * [tJDBCInput_8 main ] stop
 */
	
	/**
	 * [tJDBCInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 



/**
 * [tJDBCInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_4 = false;
		  boolean mainRowRejected_tMap_4 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row45" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow45 = false;
       		  	    	
       		  	    	
 							row45Struct row45ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row45HashKey.host_interface_join_id = row11.host_interface_join_id ;
                        		    		

								
		                        	row45HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row45.lookup( row45HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row45.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_4 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row45 != null && tHash_Lookup_row45.getCount(row45HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row45' and it contains more one result from keys :  row45.host_interface_join_id = '" + row45HashKey.host_interface_join_id + "'");
								} // G 071
							

							row45Struct row45 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row45Struct fromLookup_row45 = null;
							row45 = row45Default;
										 
							
								 
							
							
								if (tHash_Lookup_row45 !=null && tHash_Lookup_row45.hasNext()) { // G 099
								
							
								
								fromLookup_row45 = tHash_Lookup_row45.next();

							
							
								} // G 099
							
							

							if(fromLookup_row45 != null) {
								row45 = fromLookup_row45;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

hinterface_history = null;

if(!rejectedInnerJoin_tMap_4 ) {

// # Output table : 'hinterface_history'
hinterface_history_tmp.history_datetime = context.runTime;
hinterface_history_tmp.host_interface_id = row11.host_interface_id;
hinterface_history_tmp.receive_rate_percent = row11.receive_rate_percent;
hinterface_history_tmp.transmit_rate_percent = row11.transmit_rate_percent;
hinterface_history_tmp.host_interface_configuration_version = row45.history_id ;
hinterface_history_tmp.received_total_byte = row11.received_total_byte ;
hinterface_history_tmp.transmitted_total_byte = row11.transmitted_total_byte ;
hinterface_history_tmp.received_dropped_total_packets = row11.received_dropped_total_packets ;
hinterface_history_tmp.transmitted_dropped_total_packets = row11.transmitted_dropped_total_packets ;
hinterface_history = hinterface_history_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "hinterface_history"
if(hinterface_history != null) { 



	
	/**
	 * [tJDBCOutput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"hinterface_history"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_4 != null) {
            incomingEnforcer_tJDBCOutput_4.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_4.put("history_datetime", hinterface_history.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("host_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("host_interface_id", hinterface_history.host_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("receive_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("receive_rate_percent", hinterface_history.receive_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("transmit_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_4.put("transmit_rate_percent", hinterface_history.transmit_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("host_interface_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_4.put("host_interface_configuration_version", hinterface_history.host_interface_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("received_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_4.put("received_total_byte", hinterface_history.received_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("transmitted_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_4.put("transmitted_total_byte", hinterface_history.transmitted_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("received_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_4.put("received_dropped_total_packets", hinterface_history.received_dropped_total_packets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4 != null && incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("transmitted_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_4.put("transmitted_dropped_total_packets", hinterface_history.transmitted_dropped_total_packets);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_4 = null;
        if (incomingEnforcer_tJDBCOutput_4 != null) {
            data_tJDBCOutput_4 = incomingEnforcer_tJDBCOutput_4.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_4 != null && data_tJDBCOutput_4 != null) {
        	writer_tJDBCOutput_4.write(data_tJDBCOutput_4);
        }
        
        nb_line_tJDBCOutput_4++;

 


	tos_count_tJDBCOutput_4++;

/**
 * [tJDBCOutput_4 main ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_end ] stop
 */

} // End of branch "hinterface_history"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	


 



/**
 * [tJDBCInput_8 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_8 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	
// end of generic


resourceMap.put("finish_tJDBCInput_8", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_8 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_8 = null;
    if (reader_tJDBCInput_8 != null) {
        reader_tJDBCInput_8.close();
        resultMap_tJDBCInput_8 = reader_tJDBCInput_8.getReturnValues();
    }
if(resultMap_tJDBCInput_8!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_8 : resultMap_tJDBCInput_8.entrySet()) {
		switch(entry_tJDBCInput_8.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "ERROR_MESSAGE", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_LINE", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_SUCCESS", entry_tJDBCInput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", "NB_REJECT", entry_tJDBCInput_8.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_8 = new StringBuilder();
            for (int i_tJDBCInput_8 = 0; i_tJDBCInput_8 < entry_tJDBCInput_8.getKey().length(); i_tJDBCInput_8++) {
                char ch_tJDBCInput_8 = entry_tJDBCInput_8.getKey().charAt(i_tJDBCInput_8);
                if(Character.isUpperCase(ch_tJDBCInput_8) && i_tJDBCInput_8> 0) {
                	studio_key_tJDBCInput_8.append('_');
                }
                studio_key_tJDBCInput_8.append(ch_tJDBCInput_8);
            }
			container_tJDBCInput_8.setComponentData("tJDBCInput_8", studio_key_tJDBCInput_8.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_8.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_8", true);
end_Hash.put("tJDBCInput_8", System.currentTimeMillis());




/**
 * [tJDBCInput_8 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row45 != null) {
						tHash_Lookup_row45.endGet();
					}
					globalMap.remove( "tHash_Lookup_row45" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJDBCOutput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_4", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_4 = null;
    if (writer_tJDBCOutput_4 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_4 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_4.close();
        resultMap_tJDBCOutput_4 = writer_tJDBCOutput_4.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_4), container_tJDBCOutput_4);
    }
if(resultMap_tJDBCOutput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_4 : resultMap_tJDBCOutput_4.entrySet()) {
		switch(entry_tJDBCOutput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "ERROR_MESSAGE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_LINE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_SUCCESS", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_REJECT", entry_tJDBCOutput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_4 = new StringBuilder();
            for (int i_tJDBCOutput_4 = 0; i_tJDBCOutput_4 < entry_tJDBCOutput_4.getKey().length(); i_tJDBCOutput_4++) {
                char ch_tJDBCOutput_4 = entry_tJDBCOutput_4.getKey().charAt(i_tJDBCOutput_4);
                if(Character.isUpperCase(ch_tJDBCOutput_4) && i_tJDBCOutput_4> 0) {
                	studio_key_tJDBCOutput_4.append('_');
                }
                studio_key_tJDBCOutput_4.append(ch_tJDBCOutput_4);
            }
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", studio_key_tJDBCOutput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_4.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"hinterface_history");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_4", true);
end_Hash.put("tJDBCOutput_4", System.currentTimeMillis());




/**
 * [tJDBCOutput_4 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row45"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_8 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_8";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_8")==null){
    if(resourceMap.get("reader_tJDBCInput_8")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_8")).close();
		} catch (java.io.IOException e_tJDBCInput_8) {
			String errorMessage_tJDBCInput_8 = "failed to release the resource in tJDBCInput_8 :" + e_tJDBCInput_8.getMessage();
			System.err.println(errorMessage_tJDBCInput_8);
		}
	}
}
 



/**
 * [tJDBCInput_8 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_4")==null){
    if(resourceMap.get("writer_tJDBCOutput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_4")).close();
		} catch (java.io.IOException e_tJDBCOutput_4) {
			String errorMessage_tJDBCOutput_4 = "failed to release the resource in tJDBCOutput_4 :" + e_tJDBCOutput_4.getMessage();
			System.err.println(errorMessage_tJDBCOutput_4);
		}
	}
}
 



/**
 * [tJDBCOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row45Struct implements routines.system.IPersistableComparableLookupRow<row45Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String host_interface_join_id;

				public String getHost_interface_join_id () {
					return this.host_interface_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.host_interface_join_id == null) ? 0 : this.host_interface_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row45Struct other = (row45Struct) obj;
		
						if (this.host_interface_join_id == null) {
							if (other.host_interface_join_id != null)
								return false;
						
						} else if (!this.host_interface_join_id.equals(other.host_interface_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row45Struct other) {

		other.history_id = this.history_id;
	            other.host_interface_join_id = this.host_interface_join_id;
	            
	}

	public void copyKeysDataTo(row45Struct other) {

		other.host_interface_join_id = this.host_interface_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.host_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.host_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.host_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.host_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_interface_join_id="+host_interface_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.host_interface_join_id, other.host_interface_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();




	
	/**
	 * [tAdvancedHash_row45 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row45", false);
		start_Hash.put("tAdvancedHash_row45", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row45";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tAdvancedHash_row45 = 0;
		

			   		// connection name:row45
			   		// source node:tJDBCInput_13 - inputs:(after_tJDBCInput_8) outputs:(row45,row45) | target node:tAdvancedHash_row45 - inputs:(row45) outputs:()
			   		// linked node: tMap_4 - inputs:(row11,row45) outputs:(hinterface_history)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row45 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct> tHash_Lookup_row45 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row45Struct>getLookup(matchingModeEnum_row45);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row45", tHash_Lookup_row45);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row45 begin ] stop
 */



	
	/**
	 * [tJDBCInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_13", false);
		start_Hash.put("tJDBCInput_13", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_13";

	
		int tos_count_tJDBCInput_13 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_13 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_13 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_13 = (String)(restRequest_tJDBCInput_13 != null ? restRequest_tJDBCInput_13.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_13 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_13 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_13 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_13 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_13.createRuntimeProperties();
 		                    props_tJDBCInput_13.setValue("sql",
 		                    "SELECT history_id, upper(cast(host_interface_id as char(36))) as host_interface_join_id\nFROM v4_5_latest_configuration"
+"_hosts_interfaces");
 		                    
 		                    props_tJDBCInput_13.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_13.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_13.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_13.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_13_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_interface_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_interface_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_interface_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_13\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_13_1_fisrt sst_tJDBCInput_13_1_fisrt = new SchemaSettingTool_tJDBCInput_13_1_fisrt();
 		                    
 		                    props_tJDBCInput_13.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_13_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_13.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_hosts_interfaces");
 		                    
 		                    java.util.List<Object> tJDBCInput_13_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_13_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_13.trimTable).setValue("trim",tJDBCInput_13_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_13_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_13_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_13_trimTable_columnName.add("host_interface_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_13.trimTable).setValue("columnName",tJDBCInput_13_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_13.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_13 = props_tJDBCInput_13.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_13 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_13 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_13 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_13.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_13);
        }
    }
globalMap.put("tJDBCInput_13_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_13);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_13= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_13_MAPPINGS_URL", mappings_url_tJDBCInput_13);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_13 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_13";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_13 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_13 = null;
topology_tJDBCInput_13 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_13 = def_tJDBCInput_13.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_13, topology_tJDBCInput_13);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_13 = def_tJDBCInput_13.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_13 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_13.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_13 = componentRuntime_tJDBCInput_13.initialize(container_tJDBCInput_13, props_tJDBCInput_13);

if (initVr_tJDBCInput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_13.getMessage());
}

if(componentRuntime_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_13 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_13;
	compDriverInitialization_tJDBCInput_13.runAtDriver(container_tJDBCInput_13);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_13 = null;
if(componentRuntime_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_13 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_13;
	if (doesNodeBelongToRequest_tJDBCInput_13) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_13 = sourceOrSink_tJDBCInput_13.validate(container_tJDBCInput_13);
        if (vr_tJDBCInput_13.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_13.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_13 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_13 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_13;
        reader_tJDBCInput_13 = source_tJDBCInput_13.createReader(container_tJDBCInput_13);
	    reader_tJDBCInput_13 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_13, container_tJDBCInput_13);

            boolean multi_output_is_allowed_tJDBCInput_13 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_13 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_13.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_13 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_13 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_13 = props_tJDBCInput_13.getSchema(c_tJDBCInput_13, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_13 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_13, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_13 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_13 = reader_tJDBCInput_13.start();

        resourceMap.put("reader_tJDBCInput_13", reader_tJDBCInput_13);

        for (; available_tJDBCInput_13; available_tJDBCInput_13 = reader_tJDBCInput_13.advance()) {
			nb_line_tJDBCInput_13++;

			
			if (multi_output_is_allowed_tJDBCInput_13) {
				
					row45 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_13 = reader_tJDBCInput_13.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_13) {
						row45 = new row45Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_13 == null) {
            factory_tJDBCInput_13 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_13.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_13.setWrapped(factory_tJDBCInput_13.convertToAvro(data_tJDBCInput_13));
                Object columnValue_0_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(0);
                        row45.history_id = (Integer) (columnValue_0_tJDBCInput_13);
                Object columnValue_1_tJDBCInput_13 = outgoingEnforcer_tJDBCInput_13.get(1);
                        row45.host_interface_join_id = (String) (columnValue_1_tJDBCInput_13);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_13) {
				java.util.Map<String,Object> info_tJDBCInput_13 = e_tJDBCInput_13.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_13 = null;
					if(info_tJDBCInput_13.containsKey("error")){
						errorMessage_tJDBCInput_13 = info_tJDBCInput_13.get("error");
					}else if(info_tJDBCInput_13.containsKey("errorMessage")){
						errorMessage_tJDBCInput_13 = info_tJDBCInput_13.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_13 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_13 = "Row "+ nb_line_tJDBCInput_13 + ": "+errorMessage_tJDBCInput_13;
					System.err.println(errorMessage_tJDBCInput_13);
				
					// If the record is reject, the main line record should put NULL
					row45 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_13 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_13 = null;


 



/**
 * [tJDBCInput_13 begin ] stop
 */
	
	/**
	 * [tJDBCInput_13 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 


	tos_count_tJDBCInput_13++;

/**
 * [tJDBCInput_13 main ] stop
 */
	
	/**
	 * [tJDBCInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 



/**
 * [tJDBCInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					


			   
			   

					row45Struct row45_HashRow = new row45Struct();
		   	   	   
				
				row45_HashRow.history_id = row45.history_id;
				
				row45_HashRow.host_interface_join_id = row45.host_interface_join_id;
				
			tHash_Lookup_row45.put(row45_HashRow);
			
            




 


	tos_count_tAdvancedHash_row45++;

/**
 * [tAdvancedHash_row45 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";

	

 



/**
 * [tAdvancedHash_row45 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row45 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";

	

 



/**
 * [tAdvancedHash_row45 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	


 



/**
 * [tJDBCInput_13 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_13 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	
// end of generic


resourceMap.put("finish_tJDBCInput_13", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_13 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_13 = null;
    if (reader_tJDBCInput_13 != null) {
        reader_tJDBCInput_13.close();
        resultMap_tJDBCInput_13 = reader_tJDBCInput_13.getReturnValues();
    }
if(resultMap_tJDBCInput_13!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_13 : resultMap_tJDBCInput_13.entrySet()) {
		switch(entry_tJDBCInput_13.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "ERROR_MESSAGE", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_LINE", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_SUCCESS", entry_tJDBCInput_13.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", "NB_REJECT", entry_tJDBCInput_13.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_13 = new StringBuilder();
            for (int i_tJDBCInput_13 = 0; i_tJDBCInput_13 < entry_tJDBCInput_13.getKey().length(); i_tJDBCInput_13++) {
                char ch_tJDBCInput_13 = entry_tJDBCInput_13.getKey().charAt(i_tJDBCInput_13);
                if(Character.isUpperCase(ch_tJDBCInput_13) && i_tJDBCInput_13> 0) {
                	studio_key_tJDBCInput_13.append('_');
                }
                studio_key_tJDBCInput_13.append(ch_tJDBCInput_13);
            }
			container_tJDBCInput_13.setComponentData("tJDBCInput_13", studio_key_tJDBCInput_13.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_13.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_13", true);
end_Hash.put("tJDBCInput_13", System.currentTimeMillis());




/**
 * [tJDBCInput_13 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";

	

tHash_Lookup_row45.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row45", true);
end_Hash.put("tAdvancedHash_row45", System.currentTimeMillis());




/**
 * [tAdvancedHash_row45 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_13 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_13";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_13")==null){
    if(resourceMap.get("reader_tJDBCInput_13")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_13")).close();
		} catch (java.io.IOException e_tJDBCInput_13) {
			String errorMessage_tJDBCInput_13 = "failed to release the resource in tJDBCInput_13 :" + e_tJDBCInput_13.getMessage();
			System.err.println(errorMessage_tJDBCInput_13);
		}
	}
}
 



/**
 * [tJDBCInput_13 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";

	

 



/**
 * [tAdvancedHash_row45 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class vm_historyStruct implements routines.system.IPersistableRow<vm_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public short vm_status;

				public short getVm_status () {
					return this.vm_status;
				}
				
			    public int seconds_in_status;

				public int getSeconds_in_status () {
					return this.seconds_in_status;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object current_user_id;

				public Object getCurrent_user_id () {
					return this.current_user_id;
				}
				
			    public Boolean user_logged_in_to_guest;

				public Boolean getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public Integer vm_configuration_version;

				public Integer getVm_configuration_version () {
					return this.vm_configuration_version;
				}
				
			    public Integer current_host_configuration_version;

				public Integer getCurrent_host_configuration_version () {
					return this.current_host_configuration_version;
				}
				
			    public Long memory_buffered_kb;

				public Long getMemory_buffered_kb () {
					return this.memory_buffered_kb;
				}
				
			    public Long memory_cached_kb;

				public Long getMemory_cached_kb () {
					return this.memory_cached_kb;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.seconds_in_status = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
			        this.vm_status = dis.readShort();
					
			        this.seconds_in_status = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.currently_running_on_host = (Object) dis.readObject();
					
						this.vm_configuration_version = readInteger(dis);
					
						this.current_host_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// short
				
		            	dos.writeShort(this.vm_status);
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// Integer
				
						writeInteger(this.vm_configuration_version,dos);
					
					// Integer
				
						writeInteger(this.current_host_configuration_version,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",vm_status="+String.valueOf(vm_status));
		sb.append(",seconds_in_status="+String.valueOf(seconds_in_status));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",current_user_id="+String.valueOf(current_user_id));
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",vm_configuration_version="+String.valueOf(vm_configuration_version));
		sb.append(",current_host_configuration_version="+String.valueOf(current_host_configuration_version));
		sb.append(",memory_buffered_kb="+String.valueOf(memory_buffered_kb));
		sb.append(",memory_cached_kb="+String.valueOf(memory_cached_kb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class disk_usage_historyStruct implements routines.system.IPersistableRow<disk_usage_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String disks_usage;

				public String getDisks_usage () {
					return this.disks_usage;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_id = (Object) dis.readObject();
					
					this.disks_usage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.disks_usage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_id="+String.valueOf(vm_id));
		sb.append(",disks_usage="+disks_usage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(disk_usage_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public Short vm_status;

				public Short getVm_status () {
					return this.vm_status;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public String disks_usage;

				public String getDisks_usage () {
					return this.disks_usage;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object current_user_id;

				public Object getCurrent_user_id () {
					return this.current_user_id;
				}
				
			    public Boolean user_logged_in_to_guest;

				public Boolean getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public String running_on_host_join_id;

				public String getRunning_on_host_join_id () {
					return this.running_on_host_join_id;
				}
				
			    public Long memory_buffered_kb;

				public Long getMemory_buffered_kb () {
					return this.memory_buffered_kb;
				}
				
			    public Long memory_cached_kb;

				public Long getMemory_cached_kb () {
					return this.memory_cached_kb;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_status = null;
           				} else {
           			    	this.vm_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
					this.disks_usage = readString(dis);
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.currently_running_on_host = (Object) dis.readObject();
					
					this.running_on_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_status = null;
           				} else {
           			    	this.vm_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
					this.disks_usage = readString(dis);
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.currently_running_on_host = (Object) dis.readObject();
					
					this.running_on_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_status);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.disks_usage,dos);
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// String
				
						writeString(this.running_on_host_join_id,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_status);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.disks_usage,dos);
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// String
				
						writeString(this.running_on_host_join_id,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",vm_status="+String.valueOf(vm_status));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",disks_usage="+disks_usage);
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",current_user_id="+String.valueOf(current_user_id));
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",running_on_host_join_id="+running_on_host_join_id);
		sb.append(",memory_buffered_kb="+String.valueOf(memory_buffered_kb));
		sb.append(",memory_cached_kb="+String.valueOf(memory_cached_kb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_10Struct implements routines.system.IPersistableRow<after_tJDBCInput_10Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object vm_id;

				public Object getVm_id () {
					return this.vm_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				
			    public Short vm_status;

				public Short getVm_status () {
					return this.vm_status;
				}
				
			    public Short cpu_usage_percent;

				public Short getCpu_usage_percent () {
					return this.cpu_usage_percent;
				}
				
			    public Short memory_usage_percent;

				public Short getMemory_usage_percent () {
					return this.memory_usage_percent;
				}
				
			    public Short system_cpu_usage_percent;

				public Short getSystem_cpu_usage_percent () {
					return this.system_cpu_usage_percent;
				}
				
			    public Short user_cpu_usage_percent;

				public Short getUser_cpu_usage_percent () {
					return this.user_cpu_usage_percent;
				}
				
			    public String disks_usage;

				public String getDisks_usage () {
					return this.disks_usage;
				}
				
			    public String vm_ip;

				public String getVm_ip () {
					return this.vm_ip;
				}
				
			    public String vm_client_ip;

				public String getVm_client_ip () {
					return this.vm_client_ip;
				}
				
			    public Object current_user_id;

				public Object getCurrent_user_id () {
					return this.current_user_id;
				}
				
			    public Boolean user_logged_in_to_guest;

				public Boolean getUser_logged_in_to_guest () {
					return this.user_logged_in_to_guest;
				}
				
			    public Object currently_running_on_host;

				public Object getCurrently_running_on_host () {
					return this.currently_running_on_host;
				}
				
			    public String running_on_host_join_id;

				public String getRunning_on_host_join_id () {
					return this.running_on_host_join_id;
				}
				
			    public Long memory_buffered_kb;

				public Long getMemory_buffered_kb () {
					return this.memory_buffered_kb;
				}
				
			    public Long memory_cached_kb;

				public Long getMemory_cached_kb () {
					return this.memory_cached_kb;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_status = null;
           				} else {
           			    	this.vm_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
					this.disks_usage = readString(dis);
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.currently_running_on_host = (Object) dis.readObject();
					
					this.running_on_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_id = (Object) dis.readObject();
					
					this.vm_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_status = null;
           				} else {
           			    	this.vm_status = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.cpu_usage_percent = null;
           				} else {
           			    	this.cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_usage_percent = null;
           				} else {
           			    	this.memory_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_cpu_usage_percent = null;
           				} else {
           			    	this.system_cpu_usage_percent = dis.readShort();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_cpu_usage_percent = null;
           				} else {
           			    	this.user_cpu_usage_percent = dis.readShort();
           				}
					
					this.disks_usage = readString(dis);
					
					this.vm_ip = readString(dis);
					
					this.vm_client_ip = readString(dis);
					
						this.current_user_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.user_logged_in_to_guest = null;
           				} else {
           			    	this.user_logged_in_to_guest = dis.readBoolean();
           				}
					
						this.currently_running_on_host = (Object) dis.readObject();
					
					this.running_on_host_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_buffered_kb = null;
           				} else {
           			    	this.memory_buffered_kb = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.memory_cached_kb = null;
           				} else {
           			    	this.memory_cached_kb = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_status);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.disks_usage,dos);
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// String
				
						writeString(this.running_on_host_join_id,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_id);
					
					// String
				
						writeString(this.vm_join_id,dos);
					
					// Short
				
						if(this.vm_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_status);
		            	}
					
					// Short
				
						if(this.cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.memory_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.memory_usage_percent);
		            	}
					
					// Short
				
						if(this.system_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.system_cpu_usage_percent);
		            	}
					
					// Short
				
						if(this.user_cpu_usage_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.user_cpu_usage_percent);
		            	}
					
					// String
				
						writeString(this.disks_usage,dos);
					
					// String
				
						writeString(this.vm_ip,dos);
					
					// String
				
						writeString(this.vm_client_ip,dos);
					
					// Object
				
       			    	dos.writeObject(this.current_user_id);
					
					// Boolean
				
						if(this.user_logged_in_to_guest == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this.user_logged_in_to_guest);
		            	}
					
					// Object
				
       			    	dos.writeObject(this.currently_running_on_host);
					
					// String
				
						writeString(this.running_on_host_join_id,dos);
					
					// Long
				
						if(this.memory_buffered_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_buffered_kb);
		            	}
					
					// Long
				
						if(this.memory_cached_kb == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.memory_cached_kb);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_id="+String.valueOf(vm_id));
		sb.append(",vm_join_id="+vm_join_id);
		sb.append(",vm_status="+String.valueOf(vm_status));
		sb.append(",cpu_usage_percent="+String.valueOf(cpu_usage_percent));
		sb.append(",memory_usage_percent="+String.valueOf(memory_usage_percent));
		sb.append(",system_cpu_usage_percent="+String.valueOf(system_cpu_usage_percent));
		sb.append(",user_cpu_usage_percent="+String.valueOf(user_cpu_usage_percent));
		sb.append(",disks_usage="+disks_usage);
		sb.append(",vm_ip="+vm_ip);
		sb.append(",vm_client_ip="+vm_client_ip);
		sb.append(",current_user_id="+String.valueOf(current_user_id));
		sb.append(",user_logged_in_to_guest="+String.valueOf(user_logged_in_to_guest));
		sb.append(",currently_running_on_host="+String.valueOf(currently_running_on_host));
		sb.append(",running_on_host_join_id="+running_on_host_join_id);
		sb.append(",memory_buffered_kb="+String.valueOf(memory_buffered_kb));
		sb.append(",memory_cached_kb="+String.valueOf(memory_cached_kb));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_9Process(globalMap);
		tJDBCInput_14Process(globalMap);

		row12Struct row12 = new row12Struct();
vm_historyStruct vm_history = new vm_historyStruct();
disk_usage_historyStruct disk_usage_history = new disk_usage_historyStruct();





	
	/**
	 * [tJDBCOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_5", false);
		start_Hash.put("tJDBCOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_history");
					}
				
		int tos_count_tJDBCOutput_5 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_5 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_5 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_5 = (String)(restRequest_tJDBCOutput_5 != null ? restRequest_tJDBCOutput_5.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_5 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_5 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_5 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_5 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_5.createRuntimeProperties();
 		                    props_tJDBCOutput_5.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_5.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.tableSelection.setValue("tablename",
 		                    "vm_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_1_fisrt sst_tJDBCOutput_5_1_fisrt = new SchemaSettingTool_tJDBCOutput_5_1_fisrt();
 		                    
 		                    props_tJDBCOutput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_2_fisrt sst_tJDBCOutput_5_2_fisrt = new SchemaSettingTool_tJDBCOutput_5_2_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"talend.field.dbType\":\"INT2\",\"talend.field.default\":\"\\\"0\\\"\",\"di.column.talendType\":\"id_Short\",\"talend.field.pattern\":\"\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"2\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_host_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"current_host_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"current_host_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"vm_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_3_fisrt sst_tJDBCOutput_5_3_fisrt = new SchemaSettingTool_tJDBCOutput_5_3_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_5 = props_tJDBCOutput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_5);
        }
    }
globalMap.put("tJDBCOutput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_5_MAPPINGS_URL", mappings_url_tJDBCOutput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_5 = null;
topology_tJDBCOutput_5 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_5 = def_tJDBCOutput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_5, topology_tJDBCOutput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_5 = def_tJDBCOutput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_5 = componentRuntime_tJDBCOutput_5.initialize(container_tJDBCOutput_5, props_tJDBCOutput_5);

if (initVr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_5.getMessage());
}

if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_5;
	compDriverInitialization_tJDBCOutput_5.runAtDriver(container_tJDBCOutput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_5 = null;
if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_5;
	if (doesNodeBelongToRequest_tJDBCOutput_5) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_5 = sourceOrSink_tJDBCOutput_5.validate(container_tJDBCOutput_5);
        if (vr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_5.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_5 = null;
    if (sourceOrSink_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_5 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_5;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_5 = sink_tJDBCOutput_5.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writeOperation_tJDBCOutput_5.initialize(container_tJDBCOutput_5);
        }
        writer_tJDBCOutput_5 = writeOperation_tJDBCOutput_5.createWriter(container_tJDBCOutput_5);
        if (doesNodeBelongToRequest_tJDBCOutput_5) {
            writer_tJDBCOutput_5.open("tJDBCOutput_5");
        }

        resourceMap.put("writer_tJDBCOutput_5", writer_tJDBCOutput_5);
    } // end of "sourceOrSink_tJDBCOutput_5 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_5 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_5.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_5 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_5 = props_tJDBCOutput_5.getSchema(c_tJDBCOutput_5, false);
    incomingEnforcer_tJDBCOutput_5 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_5);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_5 = null;


 



/**
 * [tJDBCOutput_5 begin ] stop
 */




	
	/**
	 * [tJDBCOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_8", false);
		start_Hash.put("tJDBCOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_8";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"disk_usage_history");
					}
				
		int tos_count_tJDBCOutput_8 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_8 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_8 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_8 = (String)(restRequest_tJDBCOutput_8 != null ? restRequest_tJDBCOutput_8.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_8 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_8 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_8 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_8 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_8.createRuntimeProperties();
 		                    props_tJDBCOutput_8.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_8.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_8.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_8.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_8.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_8.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_8.tableSelection.setValue("tablename",
 		                    "vm_disks_usage_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disks_usage_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"vm_disks_usage_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_1_fisrt sst_tJDBCOutput_8_1_fisrt = new SchemaSettingTool_tJDBCOutput_8_1_fisrt();
 		                    
 		                    props_tJDBCOutput_8.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disks_usage_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"vm_disks_usage_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_2_fisrt sst_tJDBCOutput_8_2_fisrt = new SchemaSettingTool_tJDBCOutput_8_2_fisrt();
 		                    
 		                    props_tJDBCOutput_8.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_8_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_8\",\"di.table.label\":\"vm_disks_usage_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_8_3_fisrt sst_tJDBCOutput_8_3_fisrt = new SchemaSettingTool_tJDBCOutput_8_3_fisrt();
 		                    
 		                    props_tJDBCOutput_8.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_8_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_8.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_8.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_8.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_8 = props_tJDBCOutput_8.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_8 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_8 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_8 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_8.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_8);
        }
    }
globalMap.put("tJDBCOutput_8_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_8);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_8= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_8_MAPPINGS_URL", mappings_url_tJDBCOutput_8);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_8 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_8";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_8 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_8 = null;
topology_tJDBCOutput_8 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_8 = def_tJDBCOutput_8.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_8, topology_tJDBCOutput_8);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_8 = def_tJDBCOutput_8.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_8 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_8.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_8 = componentRuntime_tJDBCOutput_8.initialize(container_tJDBCOutput_8, props_tJDBCOutput_8);

if (initVr_tJDBCOutput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_8.getMessage());
}

if(componentRuntime_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_8 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_8;
	compDriverInitialization_tJDBCOutput_8.runAtDriver(container_tJDBCOutput_8);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_8 = null;
if(componentRuntime_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_8 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_8;
	if (doesNodeBelongToRequest_tJDBCOutput_8) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_8 = sourceOrSink_tJDBCOutput_8.validate(container_tJDBCOutput_8);
        if (vr_tJDBCOutput_8.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_8.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_8 = null;
    if (sourceOrSink_tJDBCOutput_8 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_8 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_8;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_8 = sink_tJDBCOutput_8.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_8) {
            writeOperation_tJDBCOutput_8.initialize(container_tJDBCOutput_8);
        }
        writer_tJDBCOutput_8 = writeOperation_tJDBCOutput_8.createWriter(container_tJDBCOutput_8);
        if (doesNodeBelongToRequest_tJDBCOutput_8) {
            writer_tJDBCOutput_8.open("tJDBCOutput_8");
        }

        resourceMap.put("writer_tJDBCOutput_8", writer_tJDBCOutput_8);
    } // end of "sourceOrSink_tJDBCOutput_8 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_8 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_8.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_8 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_8 = props_tJDBCOutput_8.getSchema(c_tJDBCOutput_8, false);
    incomingEnforcer_tJDBCOutput_8 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_8);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_8 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_8 = null;


 



/**
 * [tJDBCOutput_8 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
					globalMap.get( "tHash_Lookup_row47" ))
					;					
					
	

row47Struct row47HashKey = new row47Struct();
row47Struct row47Default = new row47Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
					globalMap.get( "tHash_Lookup_row48" ))
					;					
					
	

row48Struct row48HashKey = new row48Struct();
row48Struct row48Default = new row48Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_historyStruct vm_history_tmp = new vm_historyStruct();
disk_usage_historyStruct disk_usage_history_tmp = new disk_usage_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJDBCInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_10", false);
		start_Hash.put("tJDBCInput_10", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_10";

	
		int tos_count_tJDBCInput_10 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_10 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_10 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_10 = (String)(restRequest_tJDBCInput_10 != null ? restRequest_tJDBCInput_10.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_10 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_10 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_10 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_10 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_10.createRuntimeProperties();
 		                    props_tJDBCInput_10.setValue("sql",
 		                    "SELECT \n  vm_id, \n  upper(cast(vm_id as char(36))) as vm_join_id,\n  vm_status, \n  cpu_usage_percent, \n  memory_usa"
+"ge_percent, \n  system_cpu_usage_percent, \n  user_cpu_usage_percent, \n  disks_usage,\n  vm_ip, \n  vm_client_ip,\n  curre"
+"nt_user_id,\n  user_logged_in_to_guest,\n  currently_running_on_host,\n  upper(cast(currently_running_on_host as char(36)"
+")) as running_on_host_join_id,\n  memory_buffered_kb,\n  memory_cached_kb\nFROM dwh_vm_history_view");
 		                    
 		                    props_tJDBCInput_10.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_10.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_10.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_10.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_10_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_vm_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"memory_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"system_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"system_cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"system_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_cpu_usage_percent\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"user_cpu_usage_percent\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_cpu_usage_percent\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"disks_usage\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"disks_usage\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"disks_usage\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TEXT\",\"talend.field.dbColumnName\":\"vm_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_ip\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_client_ip\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_client_ip\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"255\",\"di.table.label\":\"vm_client_ip\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"current_user_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"current_user_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"16\",\"di.table.label\":\"current_user_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"user_logged_in_to_guest\",\"type\":[\"boolean\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"user_logged_in_to_guest\",\"di.column.talendType\":\"id_Boolean\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"user_logged_in_to_guest\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"currently_running_on_host\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"currently_running_on_host\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"currently_running_on_host\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"running_on_host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"running_on_host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"running_on_host_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_buffered_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_buffered_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_buffered_kb\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"memory_cached_kb\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"memory_cached_kb\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"memory_cached_kb\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_10\",\"di.table.label\":\"dwh_vm_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_10_1_fisrt sst_tJDBCInput_10_1_fisrt = new SchemaSettingTool_tJDBCInput_10_1_fisrt();
 		                    
 		                    props_tJDBCInput_10.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_10_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_10.tableSelection.setValue("tablename",
 		                    "dwh_vm_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_10_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("trim",tJDBCInput_10_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_10_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_10_trimTable_columnName.add("vm_id");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_join_id");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_status");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("cpu_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("memory_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("system_cpu_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("user_cpu_usage_percent");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("disks_usage");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_ip");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("vm_client_ip");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("current_user_id");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("user_logged_in_to_guest");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("currently_running_on_host");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("running_on_host_join_id");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("memory_buffered_kb");
 		                            
 		                            tJDBCInput_10_trimTable_columnName.add("memory_cached_kb");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_10.trimTable).setValue("columnName",tJDBCInput_10_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_10.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_10 = props_tJDBCInput_10.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_10 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_10 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_10 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_10.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_10);
        }
    }
globalMap.put("tJDBCInput_10_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_10);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_10= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_10_MAPPINGS_URL", mappings_url_tJDBCInput_10);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_10 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_10";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_10 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_10 = null;
topology_tJDBCInput_10 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_10 = def_tJDBCInput_10.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_10, topology_tJDBCInput_10);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_10 = def_tJDBCInput_10.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_10 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_10.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_10 = componentRuntime_tJDBCInput_10.initialize(container_tJDBCInput_10, props_tJDBCInput_10);

if (initVr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_10.getMessage());
}

if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_10 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_10;
	compDriverInitialization_tJDBCInput_10.runAtDriver(container_tJDBCInput_10);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_10 = null;
if(componentRuntime_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_10 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_10;
	if (doesNodeBelongToRequest_tJDBCInput_10) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_10 = sourceOrSink_tJDBCInput_10.validate(container_tJDBCInput_10);
        if (vr_tJDBCInput_10.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_10.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_10 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_10 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_10;
        reader_tJDBCInput_10 = source_tJDBCInput_10.createReader(container_tJDBCInput_10);
	    reader_tJDBCInput_10 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_10, container_tJDBCInput_10);

            boolean multi_output_is_allowed_tJDBCInput_10 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_10 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_10.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_10 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_10 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_10 = props_tJDBCInput_10.getSchema(c_tJDBCInput_10, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_10 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_10, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_10 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_10 = reader_tJDBCInput_10.start();

        resourceMap.put("reader_tJDBCInput_10", reader_tJDBCInput_10);

        for (; available_tJDBCInput_10; available_tJDBCInput_10 = reader_tJDBCInput_10.advance()) {
			nb_line_tJDBCInput_10++;

			
			if (multi_output_is_allowed_tJDBCInput_10) {
				
					row12 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_10 = reader_tJDBCInput_10.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_10) {
						row12 = new row12Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_10 == null) {
            factory_tJDBCInput_10 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_10.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_10.setWrapped(factory_tJDBCInput_10.convertToAvro(data_tJDBCInput_10));
                Object columnValue_0_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(0);
                        row12.vm_id = (Object) (columnValue_0_tJDBCInput_10);
                Object columnValue_1_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(1);
                        row12.vm_join_id = (String) (columnValue_1_tJDBCInput_10);
                Object columnValue_2_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(2);
                        row12.vm_status = (Short) (columnValue_2_tJDBCInput_10);
                Object columnValue_3_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(3);
                        row12.cpu_usage_percent = (Short) (columnValue_3_tJDBCInput_10);
                Object columnValue_4_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(4);
                        row12.memory_usage_percent = (Short) (columnValue_4_tJDBCInput_10);
                Object columnValue_5_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(5);
                        row12.system_cpu_usage_percent = (Short) (columnValue_5_tJDBCInput_10);
                Object columnValue_6_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(6);
                        row12.user_cpu_usage_percent = (Short) (columnValue_6_tJDBCInput_10);
                Object columnValue_7_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(7);
                        row12.disks_usage = (String) (columnValue_7_tJDBCInput_10);
                Object columnValue_8_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(8);
                        row12.vm_ip = (String) (columnValue_8_tJDBCInput_10);
                Object columnValue_9_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(9);
                        row12.vm_client_ip = (String) (columnValue_9_tJDBCInput_10);
                Object columnValue_10_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(10);
                        row12.current_user_id = (Object) (columnValue_10_tJDBCInput_10);
                Object columnValue_11_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(11);
                        row12.user_logged_in_to_guest = (Boolean) (columnValue_11_tJDBCInput_10);
                Object columnValue_12_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(12);
                        row12.currently_running_on_host = (Object) (columnValue_12_tJDBCInput_10);
                Object columnValue_13_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(13);
                        row12.running_on_host_join_id = (String) (columnValue_13_tJDBCInput_10);
                Object columnValue_14_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(14);
                        row12.memory_buffered_kb = (Long) (columnValue_14_tJDBCInput_10);
                Object columnValue_15_tJDBCInput_10 = outgoingEnforcer_tJDBCInput_10.get(15);
                        row12.memory_cached_kb = (Long) (columnValue_15_tJDBCInput_10);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_10) {
				java.util.Map<String,Object> info_tJDBCInput_10 = e_tJDBCInput_10.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_10 = null;
					if(info_tJDBCInput_10.containsKey("error")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("error");
					}else if(info_tJDBCInput_10.containsKey("errorMessage")){
						errorMessage_tJDBCInput_10 = info_tJDBCInput_10.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_10 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_10 = "Row "+ nb_line_tJDBCInput_10 + ": "+errorMessage_tJDBCInput_10;
					System.err.println(errorMessage_tJDBCInput_10);
				
					// If the record is reject, the main line record should put NULL
					row12 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_10 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_10 = null;


 



/**
 * [tJDBCInput_10 begin ] stop
 */
	
	/**
	 * [tJDBCInput_10 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 


	tos_count_tJDBCInput_10++;

/**
 * [tJDBCInput_10 main ] stop
 */
	
	/**
	 * [tJDBCInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_5 = false;
		  boolean mainRowRejected_tMap_5 = false;
            				    								  
		
		              
			   	  		  if(
 				  		  			
 				  		  			(
 				  		  			
 				  		  			row12.vm_status != -1 && row12.vm_status != 6
 				  		  			
 				  		  			)
  				  		  			
	  	  		  				) { // G_TM_M_280

							 // CALL close main tMap filter for table 'row12'
							

				///////////////////////////////////////////////
				// Starting Lookup Table "row47" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow47 = false;
       		  	    	
       		  	    	
 							row47Struct row47ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row47HashKey.vm_join_id = row12.vm_join_id ;
                        		    		

								
		                        	row47HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row47.lookup( row47HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row47.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_5 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row47 != null && tHash_Lookup_row47.getCount(row47HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row47' and it contains more one result from keys :  row47.vm_join_id = '" + row47HashKey.vm_join_id + "'");
								} // G 071
							

							row47Struct row47 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row47Struct fromLookup_row47 = null;
							row47 = row47Default;
										 
							
								 
							
							
								if (tHash_Lookup_row47 !=null && tHash_Lookup_row47.hasNext()) { // G 099
								
							
								
								fromLookup_row47 = tHash_Lookup_row47.next();

							
							
								} // G 099
							
							

							if(fromLookup_row47 != null) {
								row47 = fromLookup_row47;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row48" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow48 = false;
       		  	    	
       		  	    	
 							row48Struct row48ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row48HashKey.host_join_id = row12.running_on_host_join_id ;
                        		    		

								
		                        	row48HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row48.lookup( row48HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row48 != null && tHash_Lookup_row48.getCount(row48HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row48' and it contains more one result from keys :  row48.host_join_id = '" + row48HashKey.host_join_id + "'");
								} // G 071
							

							row48Struct row48 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row48Struct fromLookup_row48 = null;
							row48 = row48Default;
										 
							
								 
							
							
								if (tHash_Lookup_row48 !=null && tHash_Lookup_row48.hasNext()) { // G 099
								
							
								
								fromLookup_row48 = tHash_Lookup_row48.next();

							
							
								} // G 099
							
							

							if(fromLookup_row48 != null) {
								row48 = fromLookup_row48;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

vm_history = null;
disk_usage_history = null;

if(!rejectedInnerJoin_tMap_5 ) {

// # Output table : 'vm_history'
vm_history_tmp.history_datetime = context.runTime;
vm_history_tmp.vm_id = row12.vm_id;
vm_history_tmp.vm_status = (row12.vm_status == 0 || row12.vm_status == 15 || row12.vm_status == 9) ? (short) 0 :
(row12.vm_status == 1 || row12.vm_status == 2 || row12.vm_status == 3 || row12.vm_status == 5 || row12.vm_status == 10 || row12.vm_status == 11 || row12.vm_status == 12 || row12.vm_status == 16) ? (short) 1 :
(row12.vm_status == 4 || row12.vm_status == 13) ? (short) 2 :
(row12.vm_status == 14 || row12.vm_status == 7 || row12.vm_status == 8) ? (short) 3 : 
(short) -1   ;
vm_history_tmp.seconds_in_status = context.runInterleave;
vm_history_tmp.cpu_usage_percent = row12.cpu_usage_percent;
vm_history_tmp.memory_usage_percent = row12.memory_usage_percent;
vm_history_tmp.user_cpu_usage_percent = row12.user_cpu_usage_percent;
vm_history_tmp.system_cpu_usage_percent = row12.system_cpu_usage_percent;
vm_history_tmp.vm_ip = row12.vm_ip;
vm_history_tmp.vm_client_ip = row12.vm_client_ip ;
vm_history_tmp.current_user_id = row12.current_user_id ;
vm_history_tmp.user_logged_in_to_guest = row12.user_logged_in_to_guest;
vm_history_tmp.currently_running_on_host = row12.currently_running_on_host;
vm_history_tmp.vm_configuration_version = row47.history_id ;
vm_history_tmp.current_host_configuration_version = row48.history_id ;
vm_history_tmp.memory_buffered_kb = row12.memory_buffered_kb ;
vm_history_tmp.memory_cached_kb = row12.memory_cached_kb ;
vm_history = vm_history_tmp;

// # Output table : 'disk_usage_history'
disk_usage_history_tmp.history_datetime = context.runTime;
disk_usage_history_tmp.vm_id = row12.vm_id;
disk_usage_history_tmp.disks_usage = row12.disks_usage ;
disk_usage_history = disk_usage_history_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "vm_history"
if(vm_history != null) { 



	
	/**
	 * [tJDBCOutput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_history"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_5 != null) {
            incomingEnforcer_tJDBCOutput_5.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_5.put("history_datetime", vm_history.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vm_id", vm_history.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vm_status") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vm_status", vm_history.vm_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("seconds_in_status") != null){
                    incomingEnforcer_tJDBCOutput_5.put("seconds_in_status", vm_history.seconds_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("cpu_usage_percent", vm_history.cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("memory_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("memory_usage_percent", vm_history.memory_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("user_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("user_cpu_usage_percent", vm_history.user_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("system_cpu_usage_percent") != null){
                    incomingEnforcer_tJDBCOutput_5.put("system_cpu_usage_percent", vm_history.system_cpu_usage_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vm_ip") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vm_ip", vm_history.vm_ip);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vm_client_ip") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vm_client_ip", vm_history.vm_client_ip);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("current_user_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("current_user_id", vm_history.current_user_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("user_logged_in_to_guest") != null){
                    incomingEnforcer_tJDBCOutput_5.put("user_logged_in_to_guest", vm_history.user_logged_in_to_guest);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("currently_running_on_host") != null){
                    incomingEnforcer_tJDBCOutput_5.put("currently_running_on_host", vm_history.currently_running_on_host);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("vm_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_5.put("vm_configuration_version", vm_history.vm_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("current_host_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_5.put("current_host_configuration_version", vm_history.current_host_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("memory_buffered_kb") != null){
                    incomingEnforcer_tJDBCOutput_5.put("memory_buffered_kb", vm_history.memory_buffered_kb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5 != null && incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("memory_cached_kb") != null){
                    incomingEnforcer_tJDBCOutput_5.put("memory_cached_kb", vm_history.memory_cached_kb);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_5 = null;
        if (incomingEnforcer_tJDBCOutput_5 != null) {
            data_tJDBCOutput_5 = incomingEnforcer_tJDBCOutput_5.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_5 != null && data_tJDBCOutput_5 != null) {
        	writer_tJDBCOutput_5.write(data_tJDBCOutput_5);
        }
        
        nb_line_tJDBCOutput_5++;

 


	tos_count_tJDBCOutput_5++;

/**
 * [tJDBCOutput_5 main ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_end ] stop
 */

} // End of branch "vm_history"




// Start of branch "disk_usage_history"
if(disk_usage_history != null) { 



	
	/**
	 * [tJDBCOutput_8 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"disk_usage_history"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_8 != null) {
            incomingEnforcer_tJDBCOutput_8.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_8.put("history_datetime", disk_usage_history.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("vm_id") != null){
                    incomingEnforcer_tJDBCOutput_8.put("vm_id", disk_usage_history.vm_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_8 != null && incomingEnforcer_tJDBCOutput_8.getRuntimeSchema().getField("disks_usage") != null){
                    incomingEnforcer_tJDBCOutput_8.put("disks_usage", disk_usage_history.disks_usage);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_8 = null;
        if (incomingEnforcer_tJDBCOutput_8 != null) {
            data_tJDBCOutput_8 = incomingEnforcer_tJDBCOutput_8.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_8 != null && data_tJDBCOutput_8 != null) {
        	writer_tJDBCOutput_8.write(data_tJDBCOutput_8);
        }
        
        nb_line_tJDBCOutput_8++;

 


	tos_count_tJDBCOutput_8++;

/**
 * [tJDBCOutput_8 main ] stop
 */
	
	/**
	 * [tJDBCOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	


 



/**
 * [tJDBCOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	


 



/**
 * [tJDBCOutput_8 process_data_end ] stop
 */

} // End of branch "disk_usage_history"



	
		} // G_TM_M_280 close main tMap filter for table 'row12'
	
	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	


 



/**
 * [tJDBCInput_10 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_10 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// end of generic


resourceMap.put("finish_tJDBCInput_10", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_10 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_10 = null;
    if (reader_tJDBCInput_10 != null) {
        reader_tJDBCInput_10.close();
        resultMap_tJDBCInput_10 = reader_tJDBCInput_10.getReturnValues();
    }
if(resultMap_tJDBCInput_10!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_10 : resultMap_tJDBCInput_10.entrySet()) {
		switch(entry_tJDBCInput_10.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "ERROR_MESSAGE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_LINE", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_SUCCESS", entry_tJDBCInput_10.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", "NB_REJECT", entry_tJDBCInput_10.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_10 = new StringBuilder();
            for (int i_tJDBCInput_10 = 0; i_tJDBCInput_10 < entry_tJDBCInput_10.getKey().length(); i_tJDBCInput_10++) {
                char ch_tJDBCInput_10 = entry_tJDBCInput_10.getKey().charAt(i_tJDBCInput_10);
                if(Character.isUpperCase(ch_tJDBCInput_10) && i_tJDBCInput_10> 0) {
                	studio_key_tJDBCInput_10.append('_');
                }
                studio_key_tJDBCInput_10.append(ch_tJDBCInput_10);
            }
			container_tJDBCInput_10.setComponentData("tJDBCInput_10", studio_key_tJDBCInput_10.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_10.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_10", true);
end_Hash.put("tJDBCInput_10", System.currentTimeMillis());




/**
 * [tJDBCInput_10 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row47 != null) {
						tHash_Lookup_row47.endGet();
					}
					globalMap.remove( "tHash_Lookup_row47" );

					
					
				
					if(tHash_Lookup_row48 != null) {
						tHash_Lookup_row48.endGet();
					}
					globalMap.remove( "tHash_Lookup_row48" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tJDBCOutput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_5", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_5 = null;
    if (writer_tJDBCOutput_5 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_5 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_5.close();
        resultMap_tJDBCOutput_5 = writer_tJDBCOutput_5.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_5), container_tJDBCOutput_5);
    }
if(resultMap_tJDBCOutput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_5 : resultMap_tJDBCOutput_5.entrySet()) {
		switch(entry_tJDBCOutput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "ERROR_MESSAGE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_LINE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_SUCCESS", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_REJECT", entry_tJDBCOutput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_5 = new StringBuilder();
            for (int i_tJDBCOutput_5 = 0; i_tJDBCOutput_5 < entry_tJDBCOutput_5.getKey().length(); i_tJDBCOutput_5++) {
                char ch_tJDBCOutput_5 = entry_tJDBCOutput_5.getKey().charAt(i_tJDBCOutput_5);
                if(Character.isUpperCase(ch_tJDBCOutput_5) && i_tJDBCOutput_5> 0) {
                	studio_key_tJDBCOutput_5.append('_');
                }
                studio_key_tJDBCOutput_5.append(ch_tJDBCOutput_5);
            }
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", studio_key_tJDBCOutput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_5.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_history");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_5", true);
end_Hash.put("tJDBCOutput_5", System.currentTimeMillis());




/**
 * [tJDBCOutput_5 end ] stop
 */




	
	/**
	 * [tJDBCOutput_8 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_8", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_8 = null;
    if (writer_tJDBCOutput_8 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_8 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_8.close();
        resultMap_tJDBCOutput_8 = writer_tJDBCOutput_8.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_8), container_tJDBCOutput_8);
    }
if(resultMap_tJDBCOutput_8!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_8 : resultMap_tJDBCOutput_8.entrySet()) {
		switch(entry_tJDBCOutput_8.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "ERROR_MESSAGE", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_LINE", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_SUCCESS", entry_tJDBCOutput_8.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", "NB_REJECT", entry_tJDBCOutput_8.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_8 = new StringBuilder();
            for (int i_tJDBCOutput_8 = 0; i_tJDBCOutput_8 < entry_tJDBCOutput_8.getKey().length(); i_tJDBCOutput_8++) {
                char ch_tJDBCOutput_8 = entry_tJDBCOutput_8.getKey().charAt(i_tJDBCOutput_8);
                if(Character.isUpperCase(ch_tJDBCOutput_8) && i_tJDBCOutput_8> 0) {
                	studio_key_tJDBCOutput_8.append('_');
                }
                studio_key_tJDBCOutput_8.append(ch_tJDBCOutput_8);
            }
			container_tJDBCOutput_8.setComponentData("tJDBCOutput_8", studio_key_tJDBCOutput_8.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_8.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"disk_usage_history");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_8", true);
end_Hash.put("tJDBCOutput_8", System.currentTimeMillis());




/**
 * [tJDBCOutput_8 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row47"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row48"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_10 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_10";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_10")==null){
    if(resourceMap.get("reader_tJDBCInput_10")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_10")).close();
		} catch (java.io.IOException e_tJDBCInput_10) {
			String errorMessage_tJDBCInput_10 = "failed to release the resource in tJDBCInput_10 :" + e_tJDBCInput_10.getMessage();
			System.err.println(errorMessage_tJDBCInput_10);
		}
	}
}
 



/**
 * [tJDBCInput_10 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_5")==null){
    if(resourceMap.get("writer_tJDBCOutput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_5")).close();
		} catch (java.io.IOException e_tJDBCOutput_5) {
			String errorMessage_tJDBCOutput_5 = "failed to release the resource in tJDBCOutput_5 :" + e_tJDBCOutput_5.getMessage();
			System.err.println(errorMessage_tJDBCOutput_5);
		}
	}
}
 



/**
 * [tJDBCOutput_5 finally ] stop
 */




	
	/**
	 * [tJDBCOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_8";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_8")==null){
    if(resourceMap.get("writer_tJDBCOutput_8")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_8")).close();
		} catch (java.io.IOException e_tJDBCOutput_8) {
			String errorMessage_tJDBCOutput_8 = "failed to release the resource in tJDBCOutput_8 :" + e_tJDBCOutput_8.getMessage();
			System.err.println(errorMessage_tJDBCOutput_8);
		}
	}
}
 



/**
 * [tJDBCOutput_8 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row47Struct implements routines.system.IPersistableComparableLookupRow<row47Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String vm_join_id;

				public String getVm_join_id () {
					return this.vm_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_join_id == null) ? 0 : this.vm_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row47Struct other = (row47Struct) obj;
		
						if (this.vm_join_id == null) {
							if (other.vm_join_id != null)
								return false;
						
						} else if (!this.vm_join_id.equals(other.vm_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row47Struct other) {

		other.history_id = this.history_id;
	            other.vm_join_id = this.vm_join_id;
	            
	}

	public void copyKeysDataTo(row47Struct other) {

		other.vm_join_id = this.vm_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.vm_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_join_id="+vm_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_join_id, other.vm_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row47Struct row47 = new row47Struct();




	
	/**
	 * [tAdvancedHash_row47 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row47", false);
		start_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row47";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tAdvancedHash_row47 = 0;
		

			   		// connection name:row47
			   		// source node:tJDBCInput_9 - inputs:(after_tJDBCInput_10) outputs:(row47,row47) | target node:tAdvancedHash_row47 - inputs:(row47) outputs:()
			   		// linked node: tMap_5 - inputs:(row12,row47,row48) outputs:(vm_history,disk_usage_history)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row47 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row47Struct>getLookup(matchingModeEnum_row47);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row47", tHash_Lookup_row47);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row47 begin ] stop
 */



	
	/**
	 * [tJDBCInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_9", false);
		start_Hash.put("tJDBCInput_9", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_9";

	
		int tos_count_tJDBCInput_9 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_9 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_9 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_9 = (String)(restRequest_tJDBCInput_9 != null ? restRequest_tJDBCInput_9.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_9 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_9 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_9 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_9 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_9.createRuntimeProperties();
 		                    props_tJDBCInput_9.setValue("sql",
 		                    "SELECT history_id, upper(cast(vm_id as char(36))) as vm_join_id\nFROM  v4_5_latest_configuration_vms");
 		                    
 		                    props_tJDBCInput_9.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_9.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_9.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_9.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_9_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_9\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_9_1_fisrt sst_tJDBCInput_9_1_fisrt = new SchemaSettingTool_tJDBCInput_9_1_fisrt();
 		                    
 		                    props_tJDBCInput_9.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_9_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_9.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms");
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_9_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("trim",tJDBCInput_9_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_9_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_9_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_9_trimTable_columnName.add("vm_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_9.trimTable).setValue("columnName",tJDBCInput_9_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_9.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_9 = props_tJDBCInput_9.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_9 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_9 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_9 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_9.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_9);
        }
    }
globalMap.put("tJDBCInput_9_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_9);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_9= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_9_MAPPINGS_URL", mappings_url_tJDBCInput_9);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_9 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_9";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_9 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_9 = null;
topology_tJDBCInput_9 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_9 = def_tJDBCInput_9.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_9, topology_tJDBCInput_9);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_9 = def_tJDBCInput_9.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_9 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_9.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_9 = componentRuntime_tJDBCInput_9.initialize(container_tJDBCInput_9, props_tJDBCInput_9);

if (initVr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_9.getMessage());
}

if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_9 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_9;
	compDriverInitialization_tJDBCInput_9.runAtDriver(container_tJDBCInput_9);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_9 = null;
if(componentRuntime_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_9 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_9;
	if (doesNodeBelongToRequest_tJDBCInput_9) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_9 = sourceOrSink_tJDBCInput_9.validate(container_tJDBCInput_9);
        if (vr_tJDBCInput_9.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_9.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_9 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_9 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_9;
        reader_tJDBCInput_9 = source_tJDBCInput_9.createReader(container_tJDBCInput_9);
	    reader_tJDBCInput_9 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_9, container_tJDBCInput_9);

            boolean multi_output_is_allowed_tJDBCInput_9 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_9 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_9.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_9 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_9 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_9 = props_tJDBCInput_9.getSchema(c_tJDBCInput_9, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_9 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_9, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_9 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_9 = reader_tJDBCInput_9.start();

        resourceMap.put("reader_tJDBCInput_9", reader_tJDBCInput_9);

        for (; available_tJDBCInput_9; available_tJDBCInput_9 = reader_tJDBCInput_9.advance()) {
			nb_line_tJDBCInput_9++;

			
			if (multi_output_is_allowed_tJDBCInput_9) {
				
					row47 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_9 = reader_tJDBCInput_9.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_9) {
						row47 = new row47Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_9 == null) {
            factory_tJDBCInput_9 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_9.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_9.setWrapped(factory_tJDBCInput_9.convertToAvro(data_tJDBCInput_9));
                Object columnValue_0_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(0);
                        row47.history_id = (Integer) (columnValue_0_tJDBCInput_9);
                Object columnValue_1_tJDBCInput_9 = outgoingEnforcer_tJDBCInput_9.get(1);
                        row47.vm_join_id = (String) (columnValue_1_tJDBCInput_9);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_9) {
				java.util.Map<String,Object> info_tJDBCInput_9 = e_tJDBCInput_9.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_9 = null;
					if(info_tJDBCInput_9.containsKey("error")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("error");
					}else if(info_tJDBCInput_9.containsKey("errorMessage")){
						errorMessage_tJDBCInput_9 = info_tJDBCInput_9.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_9 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_9 = "Row "+ nb_line_tJDBCInput_9 + ": "+errorMessage_tJDBCInput_9;
					System.err.println(errorMessage_tJDBCInput_9);
				
					// If the record is reject, the main line record should put NULL
					row47 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_9 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_9 = null;


 



/**
 * [tJDBCInput_9 begin ] stop
 */
	
	/**
	 * [tJDBCInput_9 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 


	tos_count_tJDBCInput_9++;

/**
 * [tJDBCInput_9 main ] stop
 */
	
	/**
	 * [tJDBCInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					


			   
			   

					row47Struct row47_HashRow = new row47Struct();
		   	   	   
				
				row47_HashRow.history_id = row47.history_id;
				
				row47_HashRow.vm_join_id = row47.vm_join_id;
				
			tHash_Lookup_row47.put(row47_HashRow);
			
            




 


	tos_count_tAdvancedHash_row47++;

/**
 * [tAdvancedHash_row47 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

 



/**
 * [tAdvancedHash_row47 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

 



/**
 * [tAdvancedHash_row47 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	


 



/**
 * [tJDBCInput_9 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_9 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// end of generic


resourceMap.put("finish_tJDBCInput_9", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_9 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_9 = null;
    if (reader_tJDBCInput_9 != null) {
        reader_tJDBCInput_9.close();
        resultMap_tJDBCInput_9 = reader_tJDBCInput_9.getReturnValues();
    }
if(resultMap_tJDBCInput_9!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_9 : resultMap_tJDBCInput_9.entrySet()) {
		switch(entry_tJDBCInput_9.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "ERROR_MESSAGE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_LINE", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_SUCCESS", entry_tJDBCInput_9.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", "NB_REJECT", entry_tJDBCInput_9.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_9 = new StringBuilder();
            for (int i_tJDBCInput_9 = 0; i_tJDBCInput_9 < entry_tJDBCInput_9.getKey().length(); i_tJDBCInput_9++) {
                char ch_tJDBCInput_9 = entry_tJDBCInput_9.getKey().charAt(i_tJDBCInput_9);
                if(Character.isUpperCase(ch_tJDBCInput_9) && i_tJDBCInput_9> 0) {
                	studio_key_tJDBCInput_9.append('_');
                }
                studio_key_tJDBCInput_9.append(ch_tJDBCInput_9);
            }
			container_tJDBCInput_9.setComponentData("tJDBCInput_9", studio_key_tJDBCInput_9.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_9.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_9", true);
end_Hash.put("tJDBCInput_9", System.currentTimeMillis());




/**
 * [tJDBCInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

tHash_Lookup_row47.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row47", true);
end_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());




/**
 * [tAdvancedHash_row47 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_9 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_9";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_9")==null){
    if(resourceMap.get("reader_tJDBCInput_9")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_9")).close();
		} catch (java.io.IOException e_tJDBCInput_9) {
			String errorMessage_tJDBCInput_9 = "failed to release the resource in tJDBCInput_9 :" + e_tJDBCInput_9.getMessage();
			System.err.println(errorMessage_tJDBCInput_9);
		}
	}
}
 



/**
 * [tJDBCInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";

	

 



/**
 * [tAdvancedHash_row47 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row48Struct implements routines.system.IPersistableComparableLookupRow<row48Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String host_join_id;

				public String getHost_join_id () {
					return this.host_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.host_join_id == null) ? 0 : this.host_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row48Struct other = (row48Struct) obj;
		
						if (this.host_join_id == null) {
							if (other.host_join_id != null)
								return false;
						
						} else if (!this.host_join_id.equals(other.host_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row48Struct other) {

		other.history_id = this.history_id;
	            other.host_join_id = this.host_join_id;
	            
	}

	public void copyKeysDataTo(row48Struct other) {

		other.host_join_id = this.host_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.host_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.host_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",host_join_id="+host_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.host_join_id, other.host_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row48Struct row48 = new row48Struct();




	
	/**
	 * [tAdvancedHash_row48 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row48", false);
		start_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row48";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tAdvancedHash_row48 = 0;
		

			   		// connection name:row48
			   		// source node:tJDBCInput_14 - inputs:(after_tJDBCInput_10) outputs:(row48,row48) | target node:tAdvancedHash_row48 - inputs:(row48) outputs:()
			   		// linked node: tMap_5 - inputs:(row12,row47,row48) outputs:(vm_history,disk_usage_history)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row48 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row48Struct>getLookup(matchingModeEnum_row48);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row48", tHash_Lookup_row48);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row48 begin ] stop
 */



	
	/**
	 * [tJDBCInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_14", false);
		start_Hash.put("tJDBCInput_14", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_14";

	
		int tos_count_tJDBCInput_14 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_14 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_14 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_14 = (String)(restRequest_tJDBCInput_14 != null ? restRequest_tJDBCInput_14.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_14 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_14 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_14 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_14 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_14.createRuntimeProperties();
 		                    props_tJDBCInput_14.setValue("sql",
 		                    "SELECT history_id, upper(cast(host_id as char(36))) as host_join_id\nFROM v4_5_latest_configuration_hosts");
 		                    
 		                    props_tJDBCInput_14.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_14.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_14.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_14.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_14_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_interfaces\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"host_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"host_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"host_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_14\",\"di.table.label\":\"v4_5_latest_configuration_vms_interfaces\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_14_1_fisrt sst_tJDBCInput_14_1_fisrt = new SchemaSettingTool_tJDBCInput_14_1_fisrt();
 		                    
 		                    props_tJDBCInput_14.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_14_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_14.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_hosts");
 		                    
 		                    java.util.List<Object> tJDBCInput_14_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_14_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_14_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_14.trimTable).setValue("trim",tJDBCInput_14_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_14_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_14_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_14_trimTable_columnName.add("host_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_14.trimTable).setValue("columnName",tJDBCInput_14_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_14.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_14 = props_tJDBCInput_14.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_14 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_14 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_14 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_14.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_14);
        }
    }
globalMap.put("tJDBCInput_14_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_14);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_14= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_14_MAPPINGS_URL", mappings_url_tJDBCInput_14);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_14 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_14";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_14 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_14 = null;
topology_tJDBCInput_14 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_14 = def_tJDBCInput_14.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_14, topology_tJDBCInput_14);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_14 = def_tJDBCInput_14.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_14 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_14.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_14 = componentRuntime_tJDBCInput_14.initialize(container_tJDBCInput_14, props_tJDBCInput_14);

if (initVr_tJDBCInput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_14.getMessage());
}

if(componentRuntime_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_14 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_14;
	compDriverInitialization_tJDBCInput_14.runAtDriver(container_tJDBCInput_14);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_14 = null;
if(componentRuntime_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_14 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_14;
	if (doesNodeBelongToRequest_tJDBCInput_14) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_14 = sourceOrSink_tJDBCInput_14.validate(container_tJDBCInput_14);
        if (vr_tJDBCInput_14.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_14.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_14 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_14 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_14;
        reader_tJDBCInput_14 = source_tJDBCInput_14.createReader(container_tJDBCInput_14);
	    reader_tJDBCInput_14 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_14, container_tJDBCInput_14);

            boolean multi_output_is_allowed_tJDBCInput_14 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_14 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_14.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_14 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_14 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_14 = props_tJDBCInput_14.getSchema(c_tJDBCInput_14, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_14 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_14, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_14 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_14 = reader_tJDBCInput_14.start();

        resourceMap.put("reader_tJDBCInput_14", reader_tJDBCInput_14);

        for (; available_tJDBCInput_14; available_tJDBCInput_14 = reader_tJDBCInput_14.advance()) {
			nb_line_tJDBCInput_14++;

			
			if (multi_output_is_allowed_tJDBCInput_14) {
				
					row48 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_14 = reader_tJDBCInput_14.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_14) {
						row48 = new row48Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_14 == null) {
            factory_tJDBCInput_14 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_14.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_14.setWrapped(factory_tJDBCInput_14.convertToAvro(data_tJDBCInput_14));
                Object columnValue_0_tJDBCInput_14 = outgoingEnforcer_tJDBCInput_14.get(0);
                        row48.history_id = (Integer) (columnValue_0_tJDBCInput_14);
                Object columnValue_1_tJDBCInput_14 = outgoingEnforcer_tJDBCInput_14.get(1);
                        row48.host_join_id = (String) (columnValue_1_tJDBCInput_14);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_14) {
				java.util.Map<String,Object> info_tJDBCInput_14 = e_tJDBCInput_14.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_14 = null;
					if(info_tJDBCInput_14.containsKey("error")){
						errorMessage_tJDBCInput_14 = info_tJDBCInput_14.get("error");
					}else if(info_tJDBCInput_14.containsKey("errorMessage")){
						errorMessage_tJDBCInput_14 = info_tJDBCInput_14.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_14 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_14 = "Row "+ nb_line_tJDBCInput_14 + ": "+errorMessage_tJDBCInput_14;
					System.err.println(errorMessage_tJDBCInput_14);
				
					// If the record is reject, the main line record should put NULL
					row48 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_14 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_14 = null;


 



/**
 * [tJDBCInput_14 begin ] stop
 */
	
	/**
	 * [tJDBCInput_14 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 


	tos_count_tJDBCInput_14++;

/**
 * [tJDBCInput_14 main ] stop
 */
	
	/**
	 * [tJDBCInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 



/**
 * [tJDBCInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					


			   
			   

					row48Struct row48_HashRow = new row48Struct();
		   	   	   
				
				row48_HashRow.history_id = row48.history_id;
				
				row48_HashRow.host_join_id = row48.host_join_id;
				
			tHash_Lookup_row48.put(row48_HashRow);
			
            




 


	tos_count_tAdvancedHash_row48++;

/**
 * [tAdvancedHash_row48 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";

	

 



/**
 * [tAdvancedHash_row48 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";

	

 



/**
 * [tAdvancedHash_row48 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	


 



/**
 * [tJDBCInput_14 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_14 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	
// end of generic


resourceMap.put("finish_tJDBCInput_14", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_14 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_14 = null;
    if (reader_tJDBCInput_14 != null) {
        reader_tJDBCInput_14.close();
        resultMap_tJDBCInput_14 = reader_tJDBCInput_14.getReturnValues();
    }
if(resultMap_tJDBCInput_14!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_14 : resultMap_tJDBCInput_14.entrySet()) {
		switch(entry_tJDBCInput_14.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "ERROR_MESSAGE", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_LINE", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_SUCCESS", entry_tJDBCInput_14.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", "NB_REJECT", entry_tJDBCInput_14.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_14 = new StringBuilder();
            for (int i_tJDBCInput_14 = 0; i_tJDBCInput_14 < entry_tJDBCInput_14.getKey().length(); i_tJDBCInput_14++) {
                char ch_tJDBCInput_14 = entry_tJDBCInput_14.getKey().charAt(i_tJDBCInput_14);
                if(Character.isUpperCase(ch_tJDBCInput_14) && i_tJDBCInput_14> 0) {
                	studio_key_tJDBCInput_14.append('_');
                }
                studio_key_tJDBCInput_14.append(ch_tJDBCInput_14);
            }
			container_tJDBCInput_14.setComponentData("tJDBCInput_14", studio_key_tJDBCInput_14.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_14.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_14", true);
end_Hash.put("tJDBCInput_14", System.currentTimeMillis());




/**
 * [tJDBCInput_14 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";

	

tHash_Lookup_row48.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row48", true);
end_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());




/**
 * [tAdvancedHash_row48 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_14 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_14";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_14")==null){
    if(resourceMap.get("reader_tJDBCInput_14")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_14")).close();
		} catch (java.io.IOException e_tJDBCInput_14) {
			String errorMessage_tJDBCInput_14 = "failed to release the resource in tJDBCInput_14 :" + e_tJDBCInput_14.getMessage();
			System.err.println(errorMessage_tJDBCInput_14);
		}
	}
}
 



/**
 * [tJDBCInput_14 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";

	

 



/**
 * [tAdvancedHash_row48 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class vinterface_historyStruct implements routines.system.IPersistableRow<vinterface_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Integer vm_interface_configuration_version;

				public Integer getVm_interface_configuration_version () {
					return this.vm_interface_configuration_version;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_interface_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
						this.vm_interface_configuration_version = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Integer
				
						writeInteger(this.vm_interface_configuration_version,dos);
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",vm_interface_configuration_version="+String.valueOf(vm_interface_configuration_version));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vinterface_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_join_id;

				public String getVm_interface_join_id () {
					return this.vm_interface_join_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_join_id="+vm_interface_join_id);
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_12Struct implements routines.system.IPersistableRow<after_tJDBCInput_12Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object vm_interface_id;

				public Object getVm_interface_id () {
					return this.vm_interface_id;
				}
				
			    public String vm_interface_join_id;

				public String getVm_interface_join_id () {
					return this.vm_interface_join_id;
				}
				
			    public Double receive_rate_percent;

				public Double getReceive_rate_percent () {
					return this.receive_rate_percent;
				}
				
			    public Double transmit_rate_percent;

				public Double getTransmit_rate_percent () {
					return this.transmit_rate_percent;
				}
				
			    public Double received_total_byte;

				public Double getReceived_total_byte () {
					return this.received_total_byte;
				}
				
			    public Double transmitted_total_byte;

				public Double getTransmitted_total_byte () {
					return this.transmitted_total_byte;
				}
				
			    public Double received_dropped_total_packets;

				public Double getReceived_dropped_total_packets () {
					return this.received_dropped_total_packets;
				}
				
			    public Double transmitted_dropped_total_packets;

				public Double getTransmitted_dropped_total_packets () {
					return this.transmitted_dropped_total_packets;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_interface_id = (Object) dis.readObject();
					
					this.vm_interface_join_id = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.receive_rate_percent = null;
           				} else {
           			    	this.receive_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmit_rate_percent = null;
           				} else {
           			    	this.transmit_rate_percent = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_total_byte = null;
           				} else {
           			    	this.received_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_total_byte = null;
           				} else {
           			    	this.transmitted_total_byte = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.received_dropped_total_packets = null;
           				} else {
           			    	this.received_dropped_total_packets = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.transmitted_dropped_total_packets = null;
           				} else {
           			    	this.transmitted_dropped_total_packets = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_interface_id);
					
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
					// Double
				
						if(this.receive_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.receive_rate_percent);
		            	}
					
					// Double
				
						if(this.transmit_rate_percent == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmit_rate_percent);
		            	}
					
					// Double
				
						if(this.received_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_total_byte);
		            	}
					
					// Double
				
						if(this.transmitted_total_byte == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_total_byte);
		            	}
					
					// Double
				
						if(this.received_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.received_dropped_total_packets);
		            	}
					
					// Double
				
						if(this.transmitted_dropped_total_packets == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.transmitted_dropped_total_packets);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_interface_id="+String.valueOf(vm_interface_id));
		sb.append(",vm_interface_join_id="+vm_interface_join_id);
		sb.append(",receive_rate_percent="+String.valueOf(receive_rate_percent));
		sb.append(",transmit_rate_percent="+String.valueOf(transmit_rate_percent));
		sb.append(",received_total_byte="+String.valueOf(received_total_byte));
		sb.append(",transmitted_total_byte="+String.valueOf(transmitted_total_byte));
		sb.append(",received_dropped_total_packets="+String.valueOf(received_dropped_total_packets));
		sb.append(",transmitted_dropped_total_packets="+String.valueOf(transmitted_dropped_total_packets));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_15Process(globalMap);

		row13Struct row13 = new row13Struct();
vinterface_historyStruct vinterface_history = new vinterface_historyStruct();





	
	/**
	 * [tJDBCOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_6", false);
		start_Hash.put("tJDBCOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vinterface_history");
					}
				
		int tos_count_tJDBCOutput_6 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_6 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_6 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_6 = (String)(restRequest_tJDBCOutput_6 != null ? restRequest_tJDBCOutput_6.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_6 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_6 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_6 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_6 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_6.createRuntimeProperties();
 		                    props_tJDBCOutput_6.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_6.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_6.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.tableSelection.setValue("tablename",
 		                    "vm_interface_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"vm_interface_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_1_fisrt sst_tJDBCOutput_6_1_fisrt = new SchemaSettingTool_tJDBCOutput_6_1_fisrt();
 		                    
 		                    props_tJDBCOutput_6.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"vm_interface_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_2_fisrt sst_tJDBCOutput_6_2_fisrt = new SchemaSettingTool_tJDBCOutput_6_2_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"8\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_interface_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"vm_interface_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_3_fisrt sst_tJDBCOutput_6_3_fisrt = new SchemaSettingTool_tJDBCOutput_6_3_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_6.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_6 = props_tJDBCOutput_6.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_6 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_6 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_6 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_6.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_6);
        }
    }
globalMap.put("tJDBCOutput_6_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_6);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_6= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_6_MAPPINGS_URL", mappings_url_tJDBCOutput_6);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_6 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_6";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_6 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_6 = null;
topology_tJDBCOutput_6 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_6 = def_tJDBCOutput_6.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_6, topology_tJDBCOutput_6);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_6 = def_tJDBCOutput_6.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_6 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_6.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_6 = componentRuntime_tJDBCOutput_6.initialize(container_tJDBCOutput_6, props_tJDBCOutput_6);

if (initVr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_6.getMessage());
}

if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_6 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_6;
	compDriverInitialization_tJDBCOutput_6.runAtDriver(container_tJDBCOutput_6);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_6 = null;
if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_6 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_6;
	if (doesNodeBelongToRequest_tJDBCOutput_6) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_6 = sourceOrSink_tJDBCOutput_6.validate(container_tJDBCOutput_6);
        if (vr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_6.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_6 = null;
    if (sourceOrSink_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_6 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_6;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_6 = sink_tJDBCOutput_6.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_6) {
            writeOperation_tJDBCOutput_6.initialize(container_tJDBCOutput_6);
        }
        writer_tJDBCOutput_6 = writeOperation_tJDBCOutput_6.createWriter(container_tJDBCOutput_6);
        if (doesNodeBelongToRequest_tJDBCOutput_6) {
            writer_tJDBCOutput_6.open("tJDBCOutput_6");
        }

        resourceMap.put("writer_tJDBCOutput_6", writer_tJDBCOutput_6);
    } // end of "sourceOrSink_tJDBCOutput_6 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_6 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_6.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_6 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_6 = props_tJDBCOutput_6.getSchema(c_tJDBCOutput_6, false);
    incomingEnforcer_tJDBCOutput_6 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_6);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_6 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_6 = null;


 



/**
 * [tJDBCOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
					globalMap.get( "tHash_Lookup_row50" ))
					;					
					
	

row50Struct row50HashKey = new row50Struct();
row50Struct row50Default = new row50Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
vinterface_historyStruct vinterface_history_tmp = new vinterface_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tJDBCInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_12", false);
		start_Hash.put("tJDBCInput_12", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_12";

	
		int tos_count_tJDBCInput_12 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_12 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_12 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_12 = (String)(restRequest_tJDBCInput_12 != null ? restRequest_tJDBCInput_12.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_12 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_12 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_12 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_12 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_12.createRuntimeProperties();
 		                    props_tJDBCInput_12.setValue("sql",
 		                    "SELECT \n  vm_interface_id, \n  upper(cast(vm_interface_id as char(36))) as vm_interface_join_id,\n  receive_rate_perce"
+"nt, \n  transmit_rate_percent,\n  received_total_byte,\n  transmitted_total_byte,\n  received_dropped_total_packets,\n  tran"
+"smitted_dropped_total_packets\nFROM dwh_vm_interface_history_view");
 		                    
 		                    props_tJDBCInput_12.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_12.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_12.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_12.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_12_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_vm_interface_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"16\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_interface_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"receive_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"receive_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"receive_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmit_rate_percent\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"transmit_rate_percent\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"24\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmit_rate_percent\",\"talend.field.precision\":\"4\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"received_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_total_byte\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_total_byte\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"transmitted_total_byte\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"received_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"received_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"received_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"transmitted_dropped_total_packets\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"transmitted_dropped_total_packets\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"18\",\"di.table.label\":\"transmitted_dropped_total_packets\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_12\",\"di.table.label\":\"dwh_vm_interface_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_12_1_fisrt sst_tJDBCInput_12_1_fisrt = new SchemaSettingTool_tJDBCInput_12_1_fisrt();
 		                    
 		                    props_tJDBCInput_12.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_12_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_12.tableSelection.setValue("tablename",
 		                    "dwh_vm_interface_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_12_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_12_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_12.trimTable).setValue("trim",tJDBCInput_12_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_12_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_12_trimTable_columnName.add("vm_interface_id");
 		                            
 		                            tJDBCInput_12_trimTable_columnName.add("vm_interface_join_id");
 		                            
 		                            tJDBCInput_12_trimTable_columnName.add("receive_rate_percent");
 		                            
 		                            tJDBCInput_12_trimTable_columnName.add("transmit_rate_percent");
 		                            
 		                            tJDBCInput_12_trimTable_columnName.add("received_total_byte");
 		                            
 		                            tJDBCInput_12_trimTable_columnName.add("transmitted_total_byte");
 		                            
 		                            tJDBCInput_12_trimTable_columnName.add("received_dropped_total_packets");
 		                            
 		                            tJDBCInput_12_trimTable_columnName.add("transmitted_dropped_total_packets");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_12.trimTable).setValue("columnName",tJDBCInput_12_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_12.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_12 = props_tJDBCInput_12.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_12 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_12 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_12 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_12.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_12);
        }
    }
globalMap.put("tJDBCInput_12_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_12);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_12= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_12_MAPPINGS_URL", mappings_url_tJDBCInput_12);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_12 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_12";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_12 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_12 = null;
topology_tJDBCInput_12 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_12 = def_tJDBCInput_12.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_12, topology_tJDBCInput_12);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_12 = def_tJDBCInput_12.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_12 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_12.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_12 = componentRuntime_tJDBCInput_12.initialize(container_tJDBCInput_12, props_tJDBCInput_12);

if (initVr_tJDBCInput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_12.getMessage());
}

if(componentRuntime_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_12 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_12;
	compDriverInitialization_tJDBCInput_12.runAtDriver(container_tJDBCInput_12);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_12 = null;
if(componentRuntime_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_12 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_12;
	if (doesNodeBelongToRequest_tJDBCInput_12) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_12 = sourceOrSink_tJDBCInput_12.validate(container_tJDBCInput_12);
        if (vr_tJDBCInput_12.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_12.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_12 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_12 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_12;
        reader_tJDBCInput_12 = source_tJDBCInput_12.createReader(container_tJDBCInput_12);
	    reader_tJDBCInput_12 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_12, container_tJDBCInput_12);

            boolean multi_output_is_allowed_tJDBCInput_12 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_12 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_12.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_12 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_12 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_12 = props_tJDBCInput_12.getSchema(c_tJDBCInput_12, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_12 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_12, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_12 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_12 = reader_tJDBCInput_12.start();

        resourceMap.put("reader_tJDBCInput_12", reader_tJDBCInput_12);

        for (; available_tJDBCInput_12; available_tJDBCInput_12 = reader_tJDBCInput_12.advance()) {
			nb_line_tJDBCInput_12++;

			
			if (multi_output_is_allowed_tJDBCInput_12) {
				
					row13 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_12 = reader_tJDBCInput_12.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_12) {
						row13 = new row13Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_12 == null) {
            factory_tJDBCInput_12 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_12.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_12.setWrapped(factory_tJDBCInput_12.convertToAvro(data_tJDBCInput_12));
                Object columnValue_0_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(0);
                        row13.vm_interface_id = (Object) (columnValue_0_tJDBCInput_12);
                Object columnValue_1_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(1);
                        row13.vm_interface_join_id = (String) (columnValue_1_tJDBCInput_12);
                Object columnValue_2_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(2);
                        row13.receive_rate_percent = (Double) (columnValue_2_tJDBCInput_12);
                Object columnValue_3_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(3);
                        row13.transmit_rate_percent = (Double) (columnValue_3_tJDBCInput_12);
                Object columnValue_4_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(4);
                        row13.received_total_byte = (Double) (columnValue_4_tJDBCInput_12);
                Object columnValue_5_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(5);
                        row13.transmitted_total_byte = (Double) (columnValue_5_tJDBCInput_12);
                Object columnValue_6_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(6);
                        row13.received_dropped_total_packets = (Double) (columnValue_6_tJDBCInput_12);
                Object columnValue_7_tJDBCInput_12 = outgoingEnforcer_tJDBCInput_12.get(7);
                        row13.transmitted_dropped_total_packets = (Double) (columnValue_7_tJDBCInput_12);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_12) {
				java.util.Map<String,Object> info_tJDBCInput_12 = e_tJDBCInput_12.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_12 = null;
					if(info_tJDBCInput_12.containsKey("error")){
						errorMessage_tJDBCInput_12 = info_tJDBCInput_12.get("error");
					}else if(info_tJDBCInput_12.containsKey("errorMessage")){
						errorMessage_tJDBCInput_12 = info_tJDBCInput_12.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_12 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_12 = "Row "+ nb_line_tJDBCInput_12 + ": "+errorMessage_tJDBCInput_12;
					System.err.println(errorMessage_tJDBCInput_12);
				
					// If the record is reject, the main line record should put NULL
					row13 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_12 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_12 = null;


 



/**
 * [tJDBCInput_12 begin ] stop
 */
	
	/**
	 * [tJDBCInput_12 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 


	tos_count_tJDBCInput_12++;

/**
 * [tJDBCInput_12 main ] stop
 */
	
	/**
	 * [tJDBCInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 



/**
 * [tJDBCInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_6 = false;
		  boolean mainRowRejected_tMap_6 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row50" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow50 = false;
       		  	    	
       		  	    	
 							row50Struct row50ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row50HashKey.vm_interface_join_id = row13.vm_interface_join_id ;
                        		    		

								
		                        	row50HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row50.lookup( row50HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row50.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_6 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row50' and it contains more one result from keys :  row50.vm_interface_join_id = '" + row50HashKey.vm_interface_join_id + "'");
								} // G 071
							

							row50Struct row50 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row50Struct fromLookup_row50 = null;
							row50 = row50Default;
										 
							
								 
							
							
								if (tHash_Lookup_row50 !=null && tHash_Lookup_row50.hasNext()) { // G 099
								
							
								
								fromLookup_row50 = tHash_Lookup_row50.next();

							
							
								} // G 099
							
							

							if(fromLookup_row50 != null) {
								row50 = fromLookup_row50;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

vinterface_history = null;

if(!rejectedInnerJoin_tMap_6 ) {

// # Output table : 'vinterface_history'
vinterface_history_tmp.history_datetime = context.runTime;
vinterface_history_tmp.vm_interface_id = row13.vm_interface_id ;
vinterface_history_tmp.receive_rate_percent = row13.receive_rate_percent;
vinterface_history_tmp.transmit_rate_percent = row13.transmit_rate_percent;
vinterface_history_tmp.vm_interface_configuration_version = row50.history_id ;
vinterface_history_tmp.received_total_byte = row13.received_total_byte ;
vinterface_history_tmp.transmitted_total_byte = row13.transmitted_total_byte ;
vinterface_history_tmp.received_dropped_total_packets = row13.received_dropped_total_packets ;
vinterface_history_tmp.transmitted_dropped_total_packets = row13.transmitted_dropped_total_packets ;
vinterface_history = vinterface_history_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "vinterface_history"
if(vinterface_history != null) { 



	
	/**
	 * [tJDBCOutput_6 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vinterface_history"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_6 != null) {
            incomingEnforcer_tJDBCOutput_6.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_6.put("history_datetime", vinterface_history.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_interface_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_interface_id", vinterface_history.vm_interface_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("receive_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_6.put("receive_rate_percent", vinterface_history.receive_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("transmit_rate_percent") != null){
                    incomingEnforcer_tJDBCOutput_6.put("transmit_rate_percent", vinterface_history.transmit_rate_percent);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("vm_interface_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_6.put("vm_interface_configuration_version", vinterface_history.vm_interface_configuration_version);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("received_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_6.put("received_total_byte", vinterface_history.received_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("transmitted_total_byte") != null){
                    incomingEnforcer_tJDBCOutput_6.put("transmitted_total_byte", vinterface_history.transmitted_total_byte);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("received_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_6.put("received_dropped_total_packets", vinterface_history.received_dropped_total_packets);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6 != null && incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("transmitted_dropped_total_packets") != null){
                    incomingEnforcer_tJDBCOutput_6.put("transmitted_dropped_total_packets", vinterface_history.transmitted_dropped_total_packets);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_6 = null;
        if (incomingEnforcer_tJDBCOutput_6 != null) {
            data_tJDBCOutput_6 = incomingEnforcer_tJDBCOutput_6.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_6 != null && data_tJDBCOutput_6 != null) {
        	writer_tJDBCOutput_6.write(data_tJDBCOutput_6);
        }
        
        nb_line_tJDBCOutput_6++;

 


	tos_count_tJDBCOutput_6++;

/**
 * [tJDBCOutput_6 main ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_end ] stop
 */

} // End of branch "vinterface_history"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	


 



/**
 * [tJDBCInput_12 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_12 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	
// end of generic


resourceMap.put("finish_tJDBCInput_12", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_12 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_12 = null;
    if (reader_tJDBCInput_12 != null) {
        reader_tJDBCInput_12.close();
        resultMap_tJDBCInput_12 = reader_tJDBCInput_12.getReturnValues();
    }
if(resultMap_tJDBCInput_12!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_12 : resultMap_tJDBCInput_12.entrySet()) {
		switch(entry_tJDBCInput_12.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "ERROR_MESSAGE", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_LINE", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_SUCCESS", entry_tJDBCInput_12.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", "NB_REJECT", entry_tJDBCInput_12.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_12 = new StringBuilder();
            for (int i_tJDBCInput_12 = 0; i_tJDBCInput_12 < entry_tJDBCInput_12.getKey().length(); i_tJDBCInput_12++) {
                char ch_tJDBCInput_12 = entry_tJDBCInput_12.getKey().charAt(i_tJDBCInput_12);
                if(Character.isUpperCase(ch_tJDBCInput_12) && i_tJDBCInput_12> 0) {
                	studio_key_tJDBCInput_12.append('_');
                }
                studio_key_tJDBCInput_12.append(ch_tJDBCInput_12);
            }
			container_tJDBCInput_12.setComponentData("tJDBCInput_12", studio_key_tJDBCInput_12.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_12.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_12", true);
end_Hash.put("tJDBCInput_12", System.currentTimeMillis());




/**
 * [tJDBCInput_12 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row50 != null) {
						tHash_Lookup_row50.endGet();
					}
					globalMap.remove( "tHash_Lookup_row50" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tJDBCOutput_6 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_6", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_6 = null;
    if (writer_tJDBCOutput_6 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_6 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_6.close();
        resultMap_tJDBCOutput_6 = writer_tJDBCOutput_6.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_6), container_tJDBCOutput_6);
    }
if(resultMap_tJDBCOutput_6!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_6 : resultMap_tJDBCOutput_6.entrySet()) {
		switch(entry_tJDBCOutput_6.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "ERROR_MESSAGE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_LINE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_SUCCESS", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_REJECT", entry_tJDBCOutput_6.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_6 = new StringBuilder();
            for (int i_tJDBCOutput_6 = 0; i_tJDBCOutput_6 < entry_tJDBCOutput_6.getKey().length(); i_tJDBCOutput_6++) {
                char ch_tJDBCOutput_6 = entry_tJDBCOutput_6.getKey().charAt(i_tJDBCOutput_6);
                if(Character.isUpperCase(ch_tJDBCOutput_6) && i_tJDBCOutput_6> 0) {
                	studio_key_tJDBCOutput_6.append('_');
                }
                studio_key_tJDBCOutput_6.append(ch_tJDBCOutput_6);
            }
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", studio_key_tJDBCOutput_6.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_6.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vinterface_history");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_6", true);
end_Hash.put("tJDBCOutput_6", System.currentTimeMillis());




/**
 * [tJDBCOutput_6 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row50"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_12 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_12";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_12")==null){
    if(resourceMap.get("reader_tJDBCInput_12")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_12")).close();
		} catch (java.io.IOException e_tJDBCInput_12) {
			String errorMessage_tJDBCInput_12 = "failed to release the resource in tJDBCInput_12 :" + e_tJDBCInput_12.getMessage();
			System.err.println(errorMessage_tJDBCInput_12);
		}
	}
}
 



/**
 * [tJDBCInput_12 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_6")==null){
    if(resourceMap.get("writer_tJDBCOutput_6")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_6")).close();
		} catch (java.io.IOException e_tJDBCOutput_6) {
			String errorMessage_tJDBCOutput_6 = "failed to release the resource in tJDBCOutput_6 :" + e_tJDBCOutput_6.getMessage();
			System.err.println(errorMessage_tJDBCOutput_6);
		}
	}
}
 



/**
 * [tJDBCOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row50Struct implements routines.system.IPersistableComparableLookupRow<row50Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String vm_interface_join_id;

				public String getVm_interface_join_id () {
					return this.vm_interface_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_interface_join_id == null) ? 0 : this.vm_interface_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row50Struct other = (row50Struct) obj;
		
						if (this.vm_interface_join_id == null) {
							if (other.vm_interface_join_id != null)
								return false;
						
						} else if (!this.vm_interface_join_id.equals(other.vm_interface_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row50Struct other) {

		other.history_id = this.history_id;
	            other.vm_interface_join_id = this.vm_interface_join_id;
	            
	}

	public void copyKeysDataTo(row50Struct other) {

		other.vm_interface_join_id = this.vm_interface_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.vm_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.vm_interface_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_interface_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_interface_join_id="+vm_interface_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row50Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_interface_join_id, other.vm_interface_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row50Struct row50 = new row50Struct();




	
	/**
	 * [tAdvancedHash_row50 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row50", false);
		start_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row50";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row50");
					}
				
		int tos_count_tAdvancedHash_row50 = 0;
		

			   		// connection name:row50
			   		// source node:tJDBCInput_15 - inputs:(after_tJDBCInput_12) outputs:(row50,row50) | target node:tAdvancedHash_row50 - inputs:(row50) outputs:()
			   		// linked node: tMap_6 - inputs:(row13,row50) outputs:(vinterface_history)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row50 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row50Struct>getLookup(matchingModeEnum_row50);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row50", tHash_Lookup_row50);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row50 begin ] stop
 */



	
	/**
	 * [tJDBCInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_15", false);
		start_Hash.put("tJDBCInput_15", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_15";

	
		int tos_count_tJDBCInput_15 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_15 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_15 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_15 = (String)(restRequest_tJDBCInput_15 != null ? restRequest_tJDBCInput_15.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_15 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_15 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_15 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_15 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_15.createRuntimeProperties();
 		                    props_tJDBCInput_15.setValue("sql",
 		                    "SELECT history_id, upper(cast(vm_interface_id as char(36))) as vm_interface_join_id\nFROM  v4_5_latest_configuration_vm"
+"s_interfaces");
 		                    
 		                    props_tJDBCInput_15.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_15.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_15.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_15.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_15.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_15.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_15_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_disks\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_interface_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_interface_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_interface_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_15\",\"di.table.label\":\"v4_5_latest_configuration_vms_disks\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_15_1_fisrt sst_tJDBCInput_15_1_fisrt = new SchemaSettingTool_tJDBCInput_15_1_fisrt();
 		                    
 		                    props_tJDBCInput_15.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_15_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_15.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms_interfaces");
 		                    
 		                    java.util.List<Object> tJDBCInput_15_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_15_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_15.trimTable).setValue("trim",tJDBCInput_15_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_15_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_15_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_15_trimTable_columnName.add("vm_interface_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_15.trimTable).setValue("columnName",tJDBCInput_15_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_15.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_15 = props_tJDBCInput_15.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_15 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_15 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_15 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_15.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_15);
        }
    }
globalMap.put("tJDBCInput_15_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_15);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_15= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_15_MAPPINGS_URL", mappings_url_tJDBCInput_15);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_15 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_15";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_15 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_15 = null;
topology_tJDBCInput_15 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_15 = def_tJDBCInput_15.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_15, topology_tJDBCInput_15);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_15 = def_tJDBCInput_15.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_15 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_15.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_15 = componentRuntime_tJDBCInput_15.initialize(container_tJDBCInput_15, props_tJDBCInput_15);

if (initVr_tJDBCInput_15.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_15.getMessage());
}

if(componentRuntime_tJDBCInput_15 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_15 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_15;
	compDriverInitialization_tJDBCInput_15.runAtDriver(container_tJDBCInput_15);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_15 = null;
if(componentRuntime_tJDBCInput_15 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_15 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_15;
	if (doesNodeBelongToRequest_tJDBCInput_15) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_15 = sourceOrSink_tJDBCInput_15.validate(container_tJDBCInput_15);
        if (vr_tJDBCInput_15.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_15.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_15 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_15 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_15;
        reader_tJDBCInput_15 = source_tJDBCInput_15.createReader(container_tJDBCInput_15);
	    reader_tJDBCInput_15 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_15, container_tJDBCInput_15);

            boolean multi_output_is_allowed_tJDBCInput_15 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_15 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_15.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_15 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_15 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_15 = props_tJDBCInput_15.getSchema(c_tJDBCInput_15, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_15 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_15, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_15 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_15 = reader_tJDBCInput_15.start();

        resourceMap.put("reader_tJDBCInput_15", reader_tJDBCInput_15);

        for (; available_tJDBCInput_15; available_tJDBCInput_15 = reader_tJDBCInput_15.advance()) {
			nb_line_tJDBCInput_15++;

			
			if (multi_output_is_allowed_tJDBCInput_15) {
				
					row50 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_15 = reader_tJDBCInput_15.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_15) {
						row50 = new row50Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_15 == null) {
            factory_tJDBCInput_15 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_15.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_15.setWrapped(factory_tJDBCInput_15.convertToAvro(data_tJDBCInput_15));
                Object columnValue_0_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(0);
                        row50.history_id = (Integer) (columnValue_0_tJDBCInput_15);
                Object columnValue_1_tJDBCInput_15 = outgoingEnforcer_tJDBCInput_15.get(1);
                        row50.vm_interface_join_id = (String) (columnValue_1_tJDBCInput_15);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_15) {
				java.util.Map<String,Object> info_tJDBCInput_15 = e_tJDBCInput_15.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_15 = null;
					if(info_tJDBCInput_15.containsKey("error")){
						errorMessage_tJDBCInput_15 = info_tJDBCInput_15.get("error");
					}else if(info_tJDBCInput_15.containsKey("errorMessage")){
						errorMessage_tJDBCInput_15 = info_tJDBCInput_15.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_15 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_15 = "Row "+ nb_line_tJDBCInput_15 + ": "+errorMessage_tJDBCInput_15;
					System.err.println(errorMessage_tJDBCInput_15);
				
					// If the record is reject, the main line record should put NULL
					row50 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_15 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_15 = null;


 



/**
 * [tJDBCInput_15 begin ] stop
 */
	
	/**
	 * [tJDBCInput_15 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	


 


	tos_count_tJDBCInput_15++;

/**
 * [tJDBCInput_15 main ] stop
 */
	
	/**
	 * [tJDBCInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	


 



/**
 * [tJDBCInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row50"
						
						);
					}
					


			   
			   

					row50Struct row50_HashRow = new row50Struct();
		   	   	   
				
				row50_HashRow.history_id = row50.history_id;
				
				row50_HashRow.vm_interface_join_id = row50.vm_interface_join_id;
				
			tHash_Lookup_row50.put(row50_HashRow);
			
            




 


	tos_count_tAdvancedHash_row50++;

/**
 * [tAdvancedHash_row50 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";

	

 



/**
 * [tAdvancedHash_row50 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";

	

 



/**
 * [tAdvancedHash_row50 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	


 



/**
 * [tJDBCInput_15 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_15 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	
// end of generic


resourceMap.put("finish_tJDBCInput_15", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_15 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_15 = null;
    if (reader_tJDBCInput_15 != null) {
        reader_tJDBCInput_15.close();
        resultMap_tJDBCInput_15 = reader_tJDBCInput_15.getReturnValues();
    }
if(resultMap_tJDBCInput_15!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_15 : resultMap_tJDBCInput_15.entrySet()) {
		switch(entry_tJDBCInput_15.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "ERROR_MESSAGE", entry_tJDBCInput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "NB_LINE", entry_tJDBCInput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "NB_SUCCESS", entry_tJDBCInput_15.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", "NB_REJECT", entry_tJDBCInput_15.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_15 = new StringBuilder();
            for (int i_tJDBCInput_15 = 0; i_tJDBCInput_15 < entry_tJDBCInput_15.getKey().length(); i_tJDBCInput_15++) {
                char ch_tJDBCInput_15 = entry_tJDBCInput_15.getKey().charAt(i_tJDBCInput_15);
                if(Character.isUpperCase(ch_tJDBCInput_15) && i_tJDBCInput_15> 0) {
                	studio_key_tJDBCInput_15.append('_');
                }
                studio_key_tJDBCInput_15.append(ch_tJDBCInput_15);
            }
			container_tJDBCInput_15.setComponentData("tJDBCInput_15", studio_key_tJDBCInput_15.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_15.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_15", true);
end_Hash.put("tJDBCInput_15", System.currentTimeMillis());




/**
 * [tJDBCInput_15 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";

	

tHash_Lookup_row50.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row50");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row50", true);
end_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());




/**
 * [tAdvancedHash_row50 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_15 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_15";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_15")==null){
    if(resourceMap.get("reader_tJDBCInput_15")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_15")).close();
		} catch (java.io.IOException e_tJDBCInput_15) {
			String errorMessage_tJDBCInput_15 = "failed to release the resource in tJDBCInput_15 :" + e_tJDBCInput_15.getMessage();
			System.err.println(errorMessage_tJDBCInput_15);
		}
	}
}
 



/**
 * [tJDBCInput_15 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";

	

 



/**
 * [tAdvancedHash_row50 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class vm_disk_historyStruct implements routines.system.IPersistableRow<vm_disk_historyStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date history_datetime;

				public java.util.Date getHistory_datetime () {
					return this.history_datetime;
				}
				
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public Object image_id;

				public Object getImage_id () {
					return this.image_id;
				}
				
			    public Short vm_disk_status;

				public Short getVm_disk_status () {
					return this.vm_disk_status;
				}
				
			    public int seconds_in_status;

				public int getSeconds_in_status () {
					return this.seconds_in_status;
				}
				
			    public int vm_disk_actual_size_mb;

				public int getVm_disk_actual_size_mb () {
					return this.vm_disk_actual_size_mb;
				}
				
			    public Long read_rate_bytes_per_second;

				public Long getRead_rate_bytes_per_second () {
					return this.read_rate_bytes_per_second;
				}
				
			    public Double read_latency_seconds;

				public Double getRead_latency_seconds () {
					return this.read_latency_seconds;
				}
				
			    public Long write_rate_bytes_per_second;

				public Long getWrite_rate_bytes_per_second () {
					return this.write_rate_bytes_per_second;
				}
				
			    public Double write_latency_seconds;

				public Double getWrite_latency_seconds () {
					return this.write_latency_seconds;
				}
				
			    public Long read_ops_per_second;

				public Long getRead_ops_per_second () {
					return this.read_ops_per_second;
				}
				
			    public Long write_ops_per_second;

				public Long getWrite_ops_per_second () {
					return this.write_ops_per_second;
				}
				
			    public Double flush_latency_seconds;

				public Double getFlush_latency_seconds () {
					return this.flush_latency_seconds;
				}
				
			    public Integer vm_disk_configuration_version;

				public Integer getVm_disk_configuration_version () {
					return this.vm_disk_configuration_version;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.seconds_in_status = dis.readInt();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.history_datetime = readDate(dis);
					
						this.vm_disk_id = (Object) dis.readObject();
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
			        this.seconds_in_status = dis.readInt();
					
			        this.vm_disk_actual_size_mb = dis.readInt();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
						this.vm_disk_configuration_version = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.history_datetime,dos);
					
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// int
				
		            	dos.writeInt(this.seconds_in_status);
					
					// int
				
		            	dos.writeInt(this.vm_disk_actual_size_mb);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_configuration_version,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_datetime="+String.valueOf(history_datetime));
		sb.append(",vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",image_id="+String.valueOf(image_id));
		sb.append(",vm_disk_status="+String.valueOf(vm_disk_status));
		sb.append(",seconds_in_status="+String.valueOf(seconds_in_status));
		sb.append(",vm_disk_actual_size_mb="+String.valueOf(vm_disk_actual_size_mb));
		sb.append(",read_rate_bytes_per_second="+String.valueOf(read_rate_bytes_per_second));
		sb.append(",read_latency_seconds="+String.valueOf(read_latency_seconds));
		sb.append(",write_rate_bytes_per_second="+String.valueOf(write_rate_bytes_per_second));
		sb.append(",write_latency_seconds="+String.valueOf(write_latency_seconds));
		sb.append(",read_ops_per_second="+String.valueOf(read_ops_per_second));
		sb.append(",write_ops_per_second="+String.valueOf(write_ops_per_second));
		sb.append(",flush_latency_seconds="+String.valueOf(flush_latency_seconds));
		sb.append(",vm_disk_configuration_version="+String.valueOf(vm_disk_configuration_version));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(vm_disk_historyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public String vm_disk_join_id;

				public String getVm_disk_join_id () {
					return this.vm_disk_join_id;
				}
				
			    public Object image_id;

				public Object getImage_id () {
					return this.image_id;
				}
				
			    public Short vm_disk_status;

				public Short getVm_disk_status () {
					return this.vm_disk_status;
				}
				
			    public Integer vm_disk_actual_size_mb;

				public Integer getVm_disk_actual_size_mb () {
					return this.vm_disk_actual_size_mb;
				}
				
			    public Long read_rate_bytes_per_second;

				public Long getRead_rate_bytes_per_second () {
					return this.read_rate_bytes_per_second;
				}
				
			    public Double read_latency_seconds;

				public Double getRead_latency_seconds () {
					return this.read_latency_seconds;
				}
				
			    public Long write_rate_bytes_per_second;

				public Long getWrite_rate_bytes_per_second () {
					return this.write_rate_bytes_per_second;
				}
				
			    public Double write_latency_seconds;

				public Double getWrite_latency_seconds () {
					return this.write_latency_seconds;
				}
				
			    public Long read_ops_per_second;

				public Long getRead_ops_per_second () {
					return this.read_ops_per_second;
				}
				
			    public Long write_ops_per_second;

				public Long getWrite_ops_per_second () {
					return this.write_ops_per_second;
				}
				
			    public Double flush_latency_seconds;

				public Double getFlush_latency_seconds () {
					return this.flush_latency_seconds;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
						this.vm_disk_actual_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
						this.vm_disk_actual_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_actual_size_mb,dos);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_actual_size_mb,dos);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",vm_disk_join_id="+vm_disk_join_id);
		sb.append(",image_id="+String.valueOf(image_id));
		sb.append(",vm_disk_status="+String.valueOf(vm_disk_status));
		sb.append(",vm_disk_actual_size_mb="+String.valueOf(vm_disk_actual_size_mb));
		sb.append(",read_rate_bytes_per_second="+String.valueOf(read_rate_bytes_per_second));
		sb.append(",read_latency_seconds="+String.valueOf(read_latency_seconds));
		sb.append(",write_rate_bytes_per_second="+String.valueOf(write_rate_bytes_per_second));
		sb.append(",write_latency_seconds="+String.valueOf(write_latency_seconds));
		sb.append(",read_ops_per_second="+String.valueOf(read_ops_per_second));
		sb.append(",write_ops_per_second="+String.valueOf(write_ops_per_second));
		sb.append(",flush_latency_seconds="+String.valueOf(flush_latency_seconds));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tJDBCInput_18Struct implements routines.system.IPersistableRow<after_tJDBCInput_18Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public Object vm_disk_id;

				public Object getVm_disk_id () {
					return this.vm_disk_id;
				}
				
			    public String vm_disk_join_id;

				public String getVm_disk_join_id () {
					return this.vm_disk_join_id;
				}
				
			    public Object image_id;

				public Object getImage_id () {
					return this.image_id;
				}
				
			    public Short vm_disk_status;

				public Short getVm_disk_status () {
					return this.vm_disk_status;
				}
				
			    public Integer vm_disk_actual_size_mb;

				public Integer getVm_disk_actual_size_mb () {
					return this.vm_disk_actual_size_mb;
				}
				
			    public Long read_rate_bytes_per_second;

				public Long getRead_rate_bytes_per_second () {
					return this.read_rate_bytes_per_second;
				}
				
			    public Double read_latency_seconds;

				public Double getRead_latency_seconds () {
					return this.read_latency_seconds;
				}
				
			    public Long write_rate_bytes_per_second;

				public Long getWrite_rate_bytes_per_second () {
					return this.write_rate_bytes_per_second;
				}
				
			    public Double write_latency_seconds;

				public Double getWrite_latency_seconds () {
					return this.write_latency_seconds;
				}
				
			    public Long read_ops_per_second;

				public Long getRead_ops_per_second () {
					return this.read_ops_per_second;
				}
				
			    public Long write_ops_per_second;

				public Long getWrite_ops_per_second () {
					return this.write_ops_per_second;
				}
				
			    public Double flush_latency_seconds;

				public Double getFlush_latency_seconds () {
					return this.flush_latency_seconds;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
						this.vm_disk_actual_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
						this.vm_disk_id = (Object) dis.readObject();
					
					this.vm_disk_join_id = readString(dis);
					
						this.image_id = (Object) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.vm_disk_status = null;
           				} else {
           			    	this.vm_disk_status = dis.readShort();
           				}
					
						this.vm_disk_actual_size_mb = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_rate_bytes_per_second = null;
           				} else {
           			    	this.read_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_latency_seconds = null;
           				} else {
           			    	this.read_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_rate_bytes_per_second = null;
           				} else {
           			    	this.write_rate_bytes_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_latency_seconds = null;
           				} else {
           			    	this.write_latency_seconds = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.read_ops_per_second = null;
           				} else {
           			    	this.read_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.write_ops_per_second = null;
           				} else {
           			    	this.write_ops_per_second = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.flush_latency_seconds = null;
           				} else {
           			    	this.flush_latency_seconds = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_actual_size_mb,dos);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.vm_disk_id);
					
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
					// Object
				
       			    	dos.writeObject(this.image_id);
					
					// Short
				
						if(this.vm_disk_status == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeShort(this.vm_disk_status);
		            	}
					
					// Integer
				
						writeInteger(this.vm_disk_actual_size_mb,dos);
					
					// Long
				
						if(this.read_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.read_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.read_latency_seconds);
		            	}
					
					// Long
				
						if(this.write_rate_bytes_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_rate_bytes_per_second);
		            	}
					
					// Double
				
						if(this.write_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.write_latency_seconds);
		            	}
					
					// Long
				
						if(this.read_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.read_ops_per_second);
		            	}
					
					// Long
				
						if(this.write_ops_per_second == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.write_ops_per_second);
		            	}
					
					// Double
				
						if(this.flush_latency_seconds == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.flush_latency_seconds);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("vm_disk_id="+String.valueOf(vm_disk_id));
		sb.append(",vm_disk_join_id="+vm_disk_join_id);
		sb.append(",image_id="+String.valueOf(image_id));
		sb.append(",vm_disk_status="+String.valueOf(vm_disk_status));
		sb.append(",vm_disk_actual_size_mb="+String.valueOf(vm_disk_actual_size_mb));
		sb.append(",read_rate_bytes_per_second="+String.valueOf(read_rate_bytes_per_second));
		sb.append(",read_latency_seconds="+String.valueOf(read_latency_seconds));
		sb.append(",write_rate_bytes_per_second="+String.valueOf(write_rate_bytes_per_second));
		sb.append(",write_latency_seconds="+String.valueOf(write_latency_seconds));
		sb.append(",read_ops_per_second="+String.valueOf(read_ops_per_second));
		sb.append(",write_ops_per_second="+String.valueOf(write_ops_per_second));
		sb.append(",flush_latency_seconds="+String.valueOf(flush_latency_seconds));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tJDBCInput_18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tJDBCInput_20Process(globalMap);

		row1Struct row1 = new row1Struct();
vm_disk_historyStruct vm_disk_history = new vm_disk_historyStruct();





	
	/**
	 * [tJDBCOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_7", false);
		start_Hash.put("tJDBCOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_7";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"vm_disk_history");
					}
				
		int tos_count_tJDBCOutput_7 = 0;
		

boolean doesNodeBelongToRequest_tJDBCOutput_7 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCOutput_7 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCOutput_7 = (String)(restRequest_tJDBCOutput_7 != null ? restRequest_tJDBCOutput_7.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_7 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_7 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCOutput_7 = null;


org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_7 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_7.createRuntimeProperties();
 		                    props_tJDBCOutput_7.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_7.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_7.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_7.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCOutput_7.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_7.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_7.tableSelection.setValue("tablename",
 		                    "vm_disk_samples_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"vm_disk_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_1_fisrt sst_tJDBCOutput_7_1_fisrt = new SchemaSettingTool_tJDBCOutput_7_1_fisrt();
 		                    
 		                    props_tJDBCOutput_7.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_samples_history\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"vm_disk_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_2_fisrt sst_tJDBCOutput_7_2_fisrt = new SchemaSettingTool_tJDBCOutput_7_2_fisrt();
 		                    
 		                    props_tJDBCOutput_7.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_7_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_datetime\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMPTZ\",\"talend.field.dbColumnName\":\"history_datetime\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_datetime\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":\"string\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"seconds_in_status\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"seconds_in_status\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"4\",\"di.table.label\":\"seconds_in_status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":\"int\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_configuration_version\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_configuration_version\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_configuration_version\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_7\",\"di.table.label\":\"vm_disk_samples_history\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_7_3_fisrt sst_tJDBCOutput_7_3_fisrt = new SchemaSettingTool_tJDBCOutput_7_3_fisrt();
 		                    
 		                    props_tJDBCOutput_7.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_7_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_7.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_7.additionalColumns.setValue("referenceColumns",
 		                    "history_datetime");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_7.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_7 = props_tJDBCOutput_7.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_7 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_7 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_7 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_7.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_7);
        }
    }
globalMap.put("tJDBCOutput_7_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_7);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCOutput_7= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_7_MAPPINGS_URL", mappings_url_tJDBCOutput_7);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_7 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_7";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_7 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_7 = null;
topology_tJDBCOutput_7 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_7 = def_tJDBCOutput_7.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_7, topology_tJDBCOutput_7);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_7 = def_tJDBCOutput_7.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_7 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_7.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_7 = componentRuntime_tJDBCOutput_7.initialize(container_tJDBCOutput_7, props_tJDBCOutput_7);

if (initVr_tJDBCOutput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_7.getMessage());
}

if(componentRuntime_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_7 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_7;
	compDriverInitialization_tJDBCOutput_7.runAtDriver(container_tJDBCOutput_7);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_7 = null;
if(componentRuntime_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_7 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_7;
	if (doesNodeBelongToRequest_tJDBCOutput_7) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_7 = sourceOrSink_tJDBCOutput_7.validate(container_tJDBCOutput_7);
        if (vr_tJDBCOutput_7.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCOutput_7.getMessage());
        }
	}
}

    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_7 = null;
    if (sourceOrSink_tJDBCOutput_7 instanceof org.talend.components.api.component.runtime.Sink) {
    	org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_7 =
            	(org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_7;
        org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_7 = sink_tJDBCOutput_7.createWriteOperation();
        if (doesNodeBelongToRequest_tJDBCOutput_7) {
            writeOperation_tJDBCOutput_7.initialize(container_tJDBCOutput_7);
        }
        writer_tJDBCOutput_7 = writeOperation_tJDBCOutput_7.createWriter(container_tJDBCOutput_7);
        if (doesNodeBelongToRequest_tJDBCOutput_7) {
            writer_tJDBCOutput_7.open("tJDBCOutput_7");
        }

        resourceMap.put("writer_tJDBCOutput_7", writer_tJDBCOutput_7);
    } // end of "sourceOrSink_tJDBCOutput_7 instanceof ...Sink"
    org.talend.components.api.component.Connector c_tJDBCOutput_7 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_7.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_7 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_7 = props_tJDBCOutput_7.getSchema(c_tJDBCOutput_7, false);
    incomingEnforcer_tJDBCOutput_7 = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_7);

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_7 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_7 = null;


 



/**
 * [tJDBCOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
					globalMap.get( "tHash_Lookup_row3" ))
					;					
					
	

row3Struct row3HashKey = new row3Struct();
row3Struct row3Default = new row3Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
vm_disk_historyStruct vm_disk_history_tmp = new vm_disk_historyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tJDBCInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_18", false);
		start_Hash.put("tJDBCInput_18", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_18";

	
		int tos_count_tJDBCInput_18 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_18 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_18 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_18 = (String)(restRequest_tJDBCInput_18 != null ? restRequest_tJDBCInput_18.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_18 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_18 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_18 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_18 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_18.createRuntimeProperties();
 		                    props_tJDBCInput_18.setValue("sql",
 		                    "SELECT vm_disk_id,\n		upper(cast(vm_disk_id as char(36))) as vm_disk_join_id,\n        image_id,\n		vm_disk_status,\n		vm_d"
+"isk_actual_size_mb,\n		read_rate_bytes_per_second,\n		read_latency_seconds,\n		write_rate_bytes_per_second,\n		write_latency"
+"_seconds,\n        read_ops_per_second,\n        write_ops_per_second,\n		flush_latency_seconds\nFROM dwh_vm_disks_history_v"
+"iew");
 		                    
 		                    props_tJDBCInput_18.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_18.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_18.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_18.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_18_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"dwh_vm_disks_history_view\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.dbColumnName\":\"vm_disk_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"vm_disk_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_join_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"image_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"image_id\",\"di.column.talendType\":\"id_Object\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"image_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_status\",\"type\":[{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT2\",\"talend.field.dbColumnName\":\"vm_disk_status\",\"di.column.talendType\":\"id_Short\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"5\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_actual_size_mb\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"vm_disk_actual_size_mb\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_actual_size_mb\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"read_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"read_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"read_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_rate_bytes_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"write_rate_bytes_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_rate_bytes_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"write_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"write_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"read_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"read_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"read_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"write_ops_per_second\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"write_ops_per_second\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.table.label\":\"write_ops_per_second\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"flush_latency_seconds\",\"type\":[\"double\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.dbColumnName\":\"flush_latency_seconds\",\"di.column.talendType\":\"id_Double\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"flush_latency_seconds\",\"talend.field.precision\":\"9\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_18\",\"di.table.label\":\"dwh_vm_disks_history_view\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_18_1_fisrt sst_tJDBCInput_18_1_fisrt = new SchemaSettingTool_tJDBCInput_18_1_fisrt();
 		                    
 		                    props_tJDBCInput_18.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_18_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_18.tableSelection.setValue("tablename",
 		                    "dwh_vm_disks_history_view");
 		                    
 		                    java.util.List<Object> tJDBCInput_18_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_18_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_18.trimTable).setValue("trim",tJDBCInput_18_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_18_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_18_trimTable_columnName.add("vm_disk_id");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("vm_disk_join_id");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("image_id");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("vm_disk_status");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("vm_disk_actual_size_mb");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("read_rate_bytes_per_second");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("read_latency_seconds");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("write_rate_bytes_per_second");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("write_latency_seconds");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("read_ops_per_second");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("write_ops_per_second");
 		                            
 		                            tJDBCInput_18_trimTable_columnName.add("flush_latency_seconds");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_18.trimTable).setValue("columnName",tJDBCInput_18_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_18.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_18 = props_tJDBCInput_18.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_18 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_18 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_18 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_18.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_18);
        }
    }
globalMap.put("tJDBCInput_18_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_18);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_18= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_18_MAPPINGS_URL", mappings_url_tJDBCInput_18);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_18 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_18";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_18 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_18 = null;
topology_tJDBCInput_18 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_18 = def_tJDBCInput_18.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_18, topology_tJDBCInput_18);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_18 = def_tJDBCInput_18.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_18 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_18.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_18 = componentRuntime_tJDBCInput_18.initialize(container_tJDBCInput_18, props_tJDBCInput_18);

if (initVr_tJDBCInput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_18.getMessage());
}

if(componentRuntime_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_18 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_18;
	compDriverInitialization_tJDBCInput_18.runAtDriver(container_tJDBCInput_18);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_18 = null;
if(componentRuntime_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_18 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_18;
	if (doesNodeBelongToRequest_tJDBCInput_18) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_18 = sourceOrSink_tJDBCInput_18.validate(container_tJDBCInput_18);
        if (vr_tJDBCInput_18.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_18.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_18 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_18 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_18;
        reader_tJDBCInput_18 = source_tJDBCInput_18.createReader(container_tJDBCInput_18);
	    reader_tJDBCInput_18 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_18, container_tJDBCInput_18);

            boolean multi_output_is_allowed_tJDBCInput_18 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_18 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_18.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_18 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_18 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_18 = props_tJDBCInput_18.getSchema(c_tJDBCInput_18, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_18 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_18, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_18 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_18 = reader_tJDBCInput_18.start();

        resourceMap.put("reader_tJDBCInput_18", reader_tJDBCInput_18);

        for (; available_tJDBCInput_18; available_tJDBCInput_18 = reader_tJDBCInput_18.advance()) {
			nb_line_tJDBCInput_18++;

			
			if (multi_output_is_allowed_tJDBCInput_18) {
				
					row1 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_18 = reader_tJDBCInput_18.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_18) {
						row1 = new row1Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_18 == null) {
            factory_tJDBCInput_18 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_18.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_18.setWrapped(factory_tJDBCInput_18.convertToAvro(data_tJDBCInput_18));
                Object columnValue_0_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(0);
                        row1.vm_disk_id = (Object) (columnValue_0_tJDBCInput_18);
                Object columnValue_1_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(1);
                        row1.vm_disk_join_id = (String) (columnValue_1_tJDBCInput_18);
                Object columnValue_2_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(2);
                        row1.image_id = (Object) (columnValue_2_tJDBCInput_18);
                Object columnValue_3_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(3);
                        row1.vm_disk_status = (Short) (columnValue_3_tJDBCInput_18);
                Object columnValue_4_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(4);
                        row1.vm_disk_actual_size_mb = (Integer) (columnValue_4_tJDBCInput_18);
                Object columnValue_5_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(5);
                        row1.read_rate_bytes_per_second = (Long) (columnValue_5_tJDBCInput_18);
                Object columnValue_6_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(6);
                        row1.read_latency_seconds = (Double) (columnValue_6_tJDBCInput_18);
                Object columnValue_7_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(7);
                        row1.write_rate_bytes_per_second = (Long) (columnValue_7_tJDBCInput_18);
                Object columnValue_8_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(8);
                        row1.write_latency_seconds = (Double) (columnValue_8_tJDBCInput_18);
                Object columnValue_9_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(9);
                        row1.read_ops_per_second = (Long) (columnValue_9_tJDBCInput_18);
                Object columnValue_10_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(10);
                        row1.write_ops_per_second = (Long) (columnValue_10_tJDBCInput_18);
                Object columnValue_11_tJDBCInput_18 = outgoingEnforcer_tJDBCInput_18.get(11);
                        row1.flush_latency_seconds = (Double) (columnValue_11_tJDBCInput_18);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_18) {
				java.util.Map<String,Object> info_tJDBCInput_18 = e_tJDBCInput_18.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_18 = null;
					if(info_tJDBCInput_18.containsKey("error")){
						errorMessage_tJDBCInput_18 = info_tJDBCInput_18.get("error");
					}else if(info_tJDBCInput_18.containsKey("errorMessage")){
						errorMessage_tJDBCInput_18 = info_tJDBCInput_18.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_18 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_18 = "Row "+ nb_line_tJDBCInput_18 + ": "+errorMessage_tJDBCInput_18;
					System.err.println(errorMessage_tJDBCInput_18);
				
					// If the record is reject, the main line record should put NULL
					row1 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_18 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_18 = null;


 



/**
 * [tJDBCInput_18 begin ] stop
 */
	
	/**
	 * [tJDBCInput_18 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 


	tos_count_tJDBCInput_18++;

/**
 * [tJDBCInput_18 main ] stop
 */
	
	/**
	 * [tJDBCInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 



/**
 * [tJDBCInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		

        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_7 = false;
		  boolean mainRowRejected_tMap_7 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row3" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow3 = false;
       		  	    	
       		  	    	
 							row3Struct row3ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row3HashKey.vm_disk_join_id = row1.vm_disk_join_id ;
                        		    		

								
		                        	row3HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row3.lookup( row3HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row3.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_7 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row3 != null && tHash_Lookup_row3.getCount(row3HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row3' and it contains more one result from keys :  row3.vm_disk_join_id = '" + row3HashKey.vm_disk_join_id + "'");
								} // G 071
							

							row3Struct row3 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row3Struct fromLookup_row3 = null;
							row3 = row3Default;
										 
							
								 
							
							
								if (tHash_Lookup_row3 !=null && tHash_Lookup_row3.hasNext()) { // G 099
								
							
								
								fromLookup_row3 = tHash_Lookup_row3.next();

							
							
								} // G 099
							
							

							if(fromLookup_row3 != null) {
								row3 = fromLookup_row3;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

vm_disk_history = null;

if(!rejectedInnerJoin_tMap_7 ) {

// # Output table : 'vm_disk_history'
vm_disk_history_tmp.history_datetime = context.runTime;
vm_disk_history_tmp.vm_disk_id = row1.vm_disk_id;
vm_disk_history_tmp.image_id = row1.image_id;
vm_disk_history_tmp.vm_disk_status = row1.vm_disk_status;
vm_disk_history_tmp.seconds_in_status = context.runInterleave;
vm_disk_history_tmp.vm_disk_actual_size_mb = row1.vm_disk_actual_size_mb;
vm_disk_history_tmp.read_rate_bytes_per_second = row1.read_rate_bytes_per_second ;
vm_disk_history_tmp.read_latency_seconds = row1.read_latency_seconds;
vm_disk_history_tmp.write_rate_bytes_per_second = row1.write_rate_bytes_per_second ;
vm_disk_history_tmp.write_latency_seconds = row1.write_latency_seconds;
vm_disk_history_tmp.read_ops_per_second = row1.read_ops_per_second ;
vm_disk_history_tmp.write_ops_per_second = row1.write_ops_per_second ;
vm_disk_history_tmp.flush_latency_seconds = row1.flush_latency_seconds;
vm_disk_history_tmp.vm_disk_configuration_version = row3.history_id ;
vm_disk_history = vm_disk_history_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "vm_disk_history"
if(vm_disk_history != null) { 



	
	/**
	 * [tJDBCOutput_7 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"vm_disk_history"
						
						);
					}
					

        if (incomingEnforcer_tJDBCOutput_7 != null) {
            incomingEnforcer_tJDBCOutput_7.createNewRecord();
        }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("history_datetime") != null){
                    incomingEnforcer_tJDBCOutput_7.put("history_datetime", vm_disk_history.history_datetime);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_id") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_id", vm_disk_history.vm_disk_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("image_id") != null){
                    incomingEnforcer_tJDBCOutput_7.put("image_id", vm_disk_history.image_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_status") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_status", vm_disk_history.vm_disk_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("seconds_in_status") != null){
                    incomingEnforcer_tJDBCOutput_7.put("seconds_in_status", vm_disk_history.seconds_in_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_actual_size_mb") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_actual_size_mb", vm_disk_history.vm_disk_actual_size_mb);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("read_rate_bytes_per_second") != null){
                    incomingEnforcer_tJDBCOutput_7.put("read_rate_bytes_per_second", vm_disk_history.read_rate_bytes_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("read_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_7.put("read_latency_seconds", vm_disk_history.read_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("write_rate_bytes_per_second") != null){
                    incomingEnforcer_tJDBCOutput_7.put("write_rate_bytes_per_second", vm_disk_history.write_rate_bytes_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("write_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_7.put("write_latency_seconds", vm_disk_history.write_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("read_ops_per_second") != null){
                    incomingEnforcer_tJDBCOutput_7.put("read_ops_per_second", vm_disk_history.read_ops_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("write_ops_per_second") != null){
                    incomingEnforcer_tJDBCOutput_7.put("write_ops_per_second", vm_disk_history.write_ops_per_second);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("flush_latency_seconds") != null){
                    incomingEnforcer_tJDBCOutput_7.put("flush_latency_seconds", vm_disk_history.flush_latency_seconds);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_7 != null && incomingEnforcer_tJDBCOutput_7.getRuntimeSchema().getField("vm_disk_configuration_version") != null){
                    incomingEnforcer_tJDBCOutput_7.put("vm_disk_configuration_version", vm_disk_history.vm_disk_configuration_version);
                }
        
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_7 = null;
        if (incomingEnforcer_tJDBCOutput_7 != null) {
            data_tJDBCOutput_7 = incomingEnforcer_tJDBCOutput_7.getCurrentRecord();
        }
        
        if (writer_tJDBCOutput_7 != null && data_tJDBCOutput_7 != null) {
        	writer_tJDBCOutput_7.write(data_tJDBCOutput_7);
        }
        
        nb_line_tJDBCOutput_7++;

 


	tos_count_tJDBCOutput_7++;

/**
 * [tJDBCOutput_7 main ] stop
 */
	
	/**
	 * [tJDBCOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	


 



/**
 * [tJDBCOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	


 



/**
 * [tJDBCOutput_7 process_data_end ] stop
 */

} // End of branch "vm_disk_history"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	


 



/**
 * [tJDBCInput_18 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_18 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	
// end of generic


resourceMap.put("finish_tJDBCInput_18", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_18 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_18 = null;
    if (reader_tJDBCInput_18 != null) {
        reader_tJDBCInput_18.close();
        resultMap_tJDBCInput_18 = reader_tJDBCInput_18.getReturnValues();
    }
if(resultMap_tJDBCInput_18!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_18 : resultMap_tJDBCInput_18.entrySet()) {
		switch(entry_tJDBCInput_18.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "ERROR_MESSAGE", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_LINE", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_SUCCESS", entry_tJDBCInput_18.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", "NB_REJECT", entry_tJDBCInput_18.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_18 = new StringBuilder();
            for (int i_tJDBCInput_18 = 0; i_tJDBCInput_18 < entry_tJDBCInput_18.getKey().length(); i_tJDBCInput_18++) {
                char ch_tJDBCInput_18 = entry_tJDBCInput_18.getKey().charAt(i_tJDBCInput_18);
                if(Character.isUpperCase(ch_tJDBCInput_18) && i_tJDBCInput_18> 0) {
                	studio_key_tJDBCInput_18.append('_');
                }
                studio_key_tJDBCInput_18.append(ch_tJDBCInput_18);
            }
			container_tJDBCInput_18.setComponentData("tJDBCInput_18", studio_key_tJDBCInput_18.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_18.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_18", true);
end_Hash.put("tJDBCInput_18", System.currentTimeMillis());




/**
 * [tJDBCInput_18 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row3 != null) {
						tHash_Lookup_row3.endGet();
					}
					globalMap.remove( "tHash_Lookup_row3" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tJDBCOutput_7 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_7", Boolean.TRUE);

    java.util.Map<String, Object> resultMap_tJDBCOutput_7 = null;
    if (writer_tJDBCOutput_7 != null) {
        org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_7 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_7.close();
        resultMap_tJDBCOutput_7 = writer_tJDBCOutput_7.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_7), container_tJDBCOutput_7);
    }
if(resultMap_tJDBCOutput_7!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_7 : resultMap_tJDBCOutput_7.entrySet()) {
		switch(entry_tJDBCOutput_7.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "ERROR_MESSAGE", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_LINE", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_SUCCESS", entry_tJDBCOutput_7.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", "NB_REJECT", entry_tJDBCOutput_7.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_7 = new StringBuilder();
            for (int i_tJDBCOutput_7 = 0; i_tJDBCOutput_7 < entry_tJDBCOutput_7.getKey().length(); i_tJDBCOutput_7++) {
                char ch_tJDBCOutput_7 = entry_tJDBCOutput_7.getKey().charAt(i_tJDBCOutput_7);
                if(Character.isUpperCase(ch_tJDBCOutput_7) && i_tJDBCOutput_7> 0) {
                	studio_key_tJDBCOutput_7.append('_');
                }
                studio_key_tJDBCOutput_7.append(ch_tJDBCOutput_7);
            }
			container_tJDBCOutput_7.setComponentData("tJDBCOutput_7", studio_key_tJDBCOutput_7.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_7.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"vm_disk_history");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_7", true);
end_Hash.put("tJDBCOutput_7", System.currentTimeMillis());




/**
 * [tJDBCOutput_7 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row3"); 
				     			
				try{
					
	
	/**
	 * [tJDBCInput_18 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_18";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_18")==null){
    if(resourceMap.get("reader_tJDBCInput_18")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_18")).close();
		} catch (java.io.IOException e_tJDBCInput_18) {
			String errorMessage_tJDBCInput_18 = "failed to release the resource in tJDBCInput_18 :" + e_tJDBCInput_18.getMessage();
			System.err.println(errorMessage_tJDBCInput_18);
		}
	}
}
 



/**
 * [tJDBCInput_18 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_7";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_7")==null){
    if(resourceMap.get("writer_tJDBCOutput_7")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_7")).close();
		} catch (java.io.IOException e_tJDBCOutput_7) {
			String errorMessage_tJDBCOutput_7 = "failed to release the resource in tJDBCOutput_7 :" + e_tJDBCOutput_7.getMessage();
			System.err.println(errorMessage_tJDBCOutput_7);
		}
	}
}
 



/**
 * [tJDBCOutput_7 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableComparableLookupRow<row3Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer history_id;

				public Integer getHistory_id () {
					return this.history_id;
				}
				
			    public String vm_disk_join_id;

				public String getVm_disk_join_id () {
					return this.vm_disk_join_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.vm_disk_join_id == null) ? 0 : this.vm_disk_join_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row3Struct other = (row3Struct) obj;
		
						if (this.vm_disk_join_id == null) {
							if (other.vm_disk_join_id != null)
								return false;
						
						} else if (!this.vm_disk_join_id.equals(other.vm_disk_join_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row3Struct other) {

		other.history_id = this.history_id;
	            other.vm_disk_join_id = this.vm_disk_join_id;
	            
	}

	public void copyKeysDataTo(row3Struct other) {

		other.vm_disk_join_id = this.vm_disk_join_id;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.vm_disk_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.vm_disk_join_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.vm_disk_join_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.history_id = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.history_id = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.history_id, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.history_id, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("history_id="+String.valueOf(history_id));
		sb.append(",vm_disk_join_id="+vm_disk_join_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.vm_disk_join_id, other.vm_disk_join_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tAdvancedHash_row3 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row3", false);
		start_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tAdvancedHash_row3 = 0;
		

			   		// connection name:row3
			   		// source node:tJDBCInput_20 - inputs:(after_tJDBCInput_18) outputs:(row3,row3) | target node:tAdvancedHash_row3 - inputs:(row3) outputs:()
			   		// linked node: tMap_7 - inputs:(row1,row3) outputs:(vm_disk_history)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row3 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row3Struct>getLookup(matchingModeEnum_row3);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row3", tHash_Lookup_row3);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row3 begin ] stop
 */



	
	/**
	 * [tJDBCInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_20", false);
		start_Hash.put("tJDBCInput_20", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_20";

	
		int tos_count_tJDBCInput_20 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_20 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_20 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_20 = (String)(restRequest_tJDBCInput_20 != null ? restRequest_tJDBCInput_20.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_20 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_20 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_20 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_20 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_20.createRuntimeProperties();
 		                    props_tJDBCInput_20.setValue("sql",
 		                    "SELECT history_id, upper(cast(vm_disk_id as char(36))) as vm_disk_join_id\nFROM  v4_5_latest_configuration_vms_disks");
 		                    
 		                    props_tJDBCInput_20.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_20.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_2");
 		                    
 		                    props_tJDBCInput_20.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_20.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_20_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"v4_5_latest_configuration_vms_disks\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"history_id\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.dbColumnName\":\"history_id\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"4\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"history_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"vm_disk_join_id\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"POINT\",\"talend.field.dbColumnName\":\"vm_disk_join_id\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"36\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"vm_disk_join_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_20\",\"di.table.label\":\"v4_5_latest_configuration_vms_disks\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_20_1_fisrt sst_tJDBCInput_20_1_fisrt = new SchemaSettingTool_tJDBCInput_20_1_fisrt();
 		                    
 		                    props_tJDBCInput_20.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_20_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_20.tableSelection.setValue("tablename",
 		                    "v4_5_latest_configuration_vms_disks");
 		                    
 		                    java.util.List<Object> tJDBCInput_20_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_20_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_20.trimTable).setValue("trim",tJDBCInput_20_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_20_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_20_trimTable_columnName.add("history_id");
 		                            
 		                            tJDBCInput_20_trimTable_columnName.add("vm_disk_join_id");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_20.trimTable).setValue("columnName",tJDBCInput_20_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_20.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_20 = props_tJDBCInput_20.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_20 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_20 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_20 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_20.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_20);
        }
    }
globalMap.put("tJDBCInput_20_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_20);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_20= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_20_MAPPINGS_URL", mappings_url_tJDBCInput_20);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_20 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_20";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_20 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_20 = null;
topology_tJDBCInput_20 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_20 = def_tJDBCInput_20.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_20, topology_tJDBCInput_20);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_20 = def_tJDBCInput_20.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_20 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_20.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_20 = componentRuntime_tJDBCInput_20.initialize(container_tJDBCInput_20, props_tJDBCInput_20);

if (initVr_tJDBCInput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_20.getMessage());
}

if(componentRuntime_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_20 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_20;
	compDriverInitialization_tJDBCInput_20.runAtDriver(container_tJDBCInput_20);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_20 = null;
if(componentRuntime_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_20 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_20;
	if (doesNodeBelongToRequest_tJDBCInput_20) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_20 = sourceOrSink_tJDBCInput_20.validate(container_tJDBCInput_20);
        if (vr_tJDBCInput_20.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_20.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_20 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_20 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_20;
        reader_tJDBCInput_20 = source_tJDBCInput_20.createReader(container_tJDBCInput_20);
	    reader_tJDBCInput_20 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_20, container_tJDBCInput_20);

            boolean multi_output_is_allowed_tJDBCInput_20 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_20 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_20.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_20 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_20 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_20 = props_tJDBCInput_20.getSchema(c_tJDBCInput_20, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_20 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_20, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_20 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_20 = reader_tJDBCInput_20.start();

        resourceMap.put("reader_tJDBCInput_20", reader_tJDBCInput_20);

        for (; available_tJDBCInput_20; available_tJDBCInput_20 = reader_tJDBCInput_20.advance()) {
			nb_line_tJDBCInput_20++;

			
			if (multi_output_is_allowed_tJDBCInput_20) {
				
					row3 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_20 = reader_tJDBCInput_20.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_20) {
						row3 = new row3Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_20 == null) {
            factory_tJDBCInput_20 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_20.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_20.setWrapped(factory_tJDBCInput_20.convertToAvro(data_tJDBCInput_20));
                Object columnValue_0_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(0);
                        row3.history_id = (Integer) (columnValue_0_tJDBCInput_20);
                Object columnValue_1_tJDBCInput_20 = outgoingEnforcer_tJDBCInput_20.get(1);
                        row3.vm_disk_join_id = (String) (columnValue_1_tJDBCInput_20);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_20) {
				java.util.Map<String,Object> info_tJDBCInput_20 = e_tJDBCInput_20.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_20 = null;
					if(info_tJDBCInput_20.containsKey("error")){
						errorMessage_tJDBCInput_20 = info_tJDBCInput_20.get("error");
					}else if(info_tJDBCInput_20.containsKey("errorMessage")){
						errorMessage_tJDBCInput_20 = info_tJDBCInput_20.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_20 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_20 = "Row "+ nb_line_tJDBCInput_20 + ": "+errorMessage_tJDBCInput_20;
					System.err.println(errorMessage_tJDBCInput_20);
				
					// If the record is reject, the main line record should put NULL
					row3 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_20 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_20 = null;


 



/**
 * [tJDBCInput_20 begin ] stop
 */
	
	/**
	 * [tJDBCInput_20 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 


	tos_count_tJDBCInput_20++;

/**
 * [tJDBCInput_20 main ] stop
 */
	
	/**
	 * [tJDBCInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 



/**
 * [tJDBCInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


			   
			   

					row3Struct row3_HashRow = new row3Struct();
		   	   	   
				
				row3_HashRow.history_id = row3.history_id;
				
				row3_HashRow.vm_disk_join_id = row3.vm_disk_join_id;
				
			tHash_Lookup_row3.put(row3_HashRow);
			
            




 


	tos_count_tAdvancedHash_row3++;

/**
 * [tAdvancedHash_row3 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";

	

 



/**
 * [tAdvancedHash_row3 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";

	

 



/**
 * [tAdvancedHash_row3 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	


 



/**
 * [tJDBCInput_20 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_20 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	
// end of generic


resourceMap.put("finish_tJDBCInput_20", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_20 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_20 = null;
    if (reader_tJDBCInput_20 != null) {
        reader_tJDBCInput_20.close();
        resultMap_tJDBCInput_20 = reader_tJDBCInput_20.getReturnValues();
    }
if(resultMap_tJDBCInput_20!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_20 : resultMap_tJDBCInput_20.entrySet()) {
		switch(entry_tJDBCInput_20.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "ERROR_MESSAGE", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_LINE", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_SUCCESS", entry_tJDBCInput_20.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", "NB_REJECT", entry_tJDBCInput_20.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_20 = new StringBuilder();
            for (int i_tJDBCInput_20 = 0; i_tJDBCInput_20 < entry_tJDBCInput_20.getKey().length(); i_tJDBCInput_20++) {
                char ch_tJDBCInput_20 = entry_tJDBCInput_20.getKey().charAt(i_tJDBCInput_20);
                if(Character.isUpperCase(ch_tJDBCInput_20) && i_tJDBCInput_20> 0) {
                	studio_key_tJDBCInput_20.append('_');
                }
                studio_key_tJDBCInput_20.append(ch_tJDBCInput_20);
            }
			container_tJDBCInput_20.setComponentData("tJDBCInput_20", studio_key_tJDBCInput_20.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_20.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_20", true);
end_Hash.put("tJDBCInput_20", System.currentTimeMillis());




/**
 * [tJDBCInput_20 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";

	

tHash_Lookup_row3.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row3", true);
end_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());




/**
 * [tAdvancedHash_row3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_20 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_20";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_20")==null){
    if(resourceMap.get("reader_tJDBCInput_20")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_20")).close();
		} catch (java.io.IOException e_tJDBCInput_20) {
			String errorMessage_tJDBCInput_20 = "failed to release the resource in tJDBCInput_20 :" + e_tJDBCInput_20.getMessage();
			System.err.println(errorMessage_tJDBCInput_20);
		}
	}
}
 



/**
 * [tJDBCInput_20 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";

	

 



/**
 * [tAdvancedHash_row3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_20_SUBPROCESS_STATE", 1);
	}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";

	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tJDBCConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	

public void tJDBCConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJDBCConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCConnection_1", false);
		start_Hash.put("tJDBCConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCConnection_1";

	
		int tos_count_tJDBCConnection_1 = 0;
		

boolean doesNodeBelongToRequest_tJDBCConnection_1 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCConnection_1 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCConnection_1 = (String)(restRequest_tJDBCConnection_1 != null ? restRequest_tJDBCConnection_1.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCConnection_1 =
        new org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCConnection_1 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCConnection_1 = null;


org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties props_tJDBCConnection_1 =
        (org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties) def_tJDBCConnection_1.createRuntimeProperties();
 		                    props_tJDBCConnection_1.setValue("shareConnection",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("sharedConnectionName",
 		                    "engine");
 		                    
 		                    props_tJDBCConnection_1.setValue("useAutoCommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("autocommit",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("jdbcUrl",
 		                    context.ovirtEngineDbJdbcConnection);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("driverClass",
 		                    context.ovirtEngineDbDriverClass);
 		                    
 		                    java.util.List<Object> tJDBCConnection_1_connection_driverTable_drivers = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCConnection_1_connection_driverTable_drivers.add("mvn:postgresql/postgresql/8.4-703.jdbc4/jar");
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCConnection_1.connection.driverTable).setValue("drivers",tJDBCConnection_1_connection_driverTable_drivers);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("userId",
 		                    context.ovirtEngineDbUser);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("password",
 		                    context.ovirtEngineDbPassword);
 		                    
globalMap.put("tJDBCConnection_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCConnection_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCConnection_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCConnection_1_MAPPINGS_URL", mappings_url_tJDBCConnection_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCConnection_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCConnection_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCConnection_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCConnection_1 = null;
topology_tJDBCConnection_1 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCConnection_1 = def_tJDBCConnection_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCConnection_1, topology_tJDBCConnection_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCConnection_1 = def_tJDBCConnection_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCConnection_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCConnection_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCConnection_1 = componentRuntime_tJDBCConnection_1.initialize(container_tJDBCConnection_1, props_tJDBCConnection_1);

if (initVr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCConnection_1.getMessage());
}

if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCConnection_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCConnection_1;
	compDriverInitialization_tJDBCConnection_1.runAtDriver(container_tJDBCConnection_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCConnection_1 = null;
if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCConnection_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCConnection_1;
	if (doesNodeBelongToRequest_tJDBCConnection_1) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCConnection_1 = sourceOrSink_tJDBCConnection_1.validate(container_tJDBCConnection_1);
        if (vr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCConnection_1.getMessage());
        }
	}
}

 



/**
 * [tJDBCConnection_1 begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 


	tos_count_tJDBCConnection_1++;

/**
 * [tJDBCConnection_1 main ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCConnection_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// end of generic

 

ok_Hash.put("tJDBCConnection_1", true);
end_Hash.put("tJDBCConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJDBCConnection_2Process(globalMap);



/**
 * [tJDBCConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// finally of generic

 



/**
 * [tJDBCConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 1);
	}
	

public void tJDBCConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJDBCConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCConnection_2", false);
		start_Hash.put("tJDBCConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCConnection_2";

	
		int tos_count_tJDBCConnection_2 = 0;
		

boolean doesNodeBelongToRequest_tJDBCConnection_2 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCConnection_2 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCConnection_2 = (String)(restRequest_tJDBCConnection_2 != null ? restRequest_tJDBCConnection_2.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCConnection_2 =
        new org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCConnection_2 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCConnection_2 = null;


org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties props_tJDBCConnection_2 =
        (org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties) def_tJDBCConnection_2.createRuntimeProperties();
 		                    props_tJDBCConnection_2.setValue("shareConnection",
 		                    true);
 		                    
 		                    props_tJDBCConnection_2.setValue("sharedConnectionName",
 		                    "sample_ovirt_engine_history");
 		                    
 		                    props_tJDBCConnection_2.setValue("useAutoCommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_2.setValue("autocommit",
 		                    false);
 		                    
 		                    props_tJDBCConnection_2.connection.setValue("jdbcUrl",
 		                    context.ovirtEngineHistoryDbJdbcConnection);
 		                    
 		                    props_tJDBCConnection_2.connection.setValue("driverClass",
 		                    context.ovirtEngineHistoryDbDriverClass);
 		                    
 		                    java.util.List<Object> tJDBCConnection_2_connection_driverTable_drivers = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCConnection_2_connection_driverTable_drivers.add("mvn:postgresql/postgresql/8.4-703.jdbc4/jar");
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCConnection_2.connection.driverTable).setValue("drivers",tJDBCConnection_2_connection_driverTable_drivers);
 		                    
 		                    props_tJDBCConnection_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCConnection_2.connection.userPassword.setValue("userId",
 		                    context.ovirtEngineHistoryDbUser);
 		                    
 		                    props_tJDBCConnection_2.connection.userPassword.setValue("password",
 		                    context.ovirtEngineHistoryDbPassword);
 		                    
globalMap.put("tJDBCConnection_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCConnection_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCConnection_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCConnection_2_MAPPINGS_URL", mappings_url_tJDBCConnection_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCConnection_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCConnection_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCConnection_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCConnection_2 = null;
topology_tJDBCConnection_2 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCConnection_2 = def_tJDBCConnection_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCConnection_2, topology_tJDBCConnection_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCConnection_2 = def_tJDBCConnection_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCConnection_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCConnection_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCConnection_2 = componentRuntime_tJDBCConnection_2.initialize(container_tJDBCConnection_2, props_tJDBCConnection_2);

if (initVr_tJDBCConnection_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCConnection_2.getMessage());
}

if(componentRuntime_tJDBCConnection_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCConnection_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCConnection_2;
	compDriverInitialization_tJDBCConnection_2.runAtDriver(container_tJDBCConnection_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCConnection_2 = null;
if(componentRuntime_tJDBCConnection_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCConnection_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCConnection_2;
	if (doesNodeBelongToRequest_tJDBCConnection_2) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCConnection_2 = sourceOrSink_tJDBCConnection_2.validate(container_tJDBCConnection_2);
        if (vr_tJDBCConnection_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCConnection_2.getMessage());
        }
	}
}

 



/**
 * [tJDBCConnection_2 begin ] stop
 */
	
	/**
	 * [tJDBCConnection_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	


 


	tos_count_tJDBCConnection_2++;

/**
 * [tJDBCConnection_2 main ] stop
 */
	
	/**
	 * [tJDBCConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	


 



/**
 * [tJDBCConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	


 



/**
 * [tJDBCConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tJDBCConnection_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	
// end of generic

 

ok_Hash.put("tJDBCConnection_2", true);
end_Hash.put("tJDBCConnection_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tJDBCInput_21Process(globalMap);



/**
 * [tJDBCConnection_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_2";

	
// finally of generic

 



/**
 * [tJDBCConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCConnection_2_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public String key;

				public String getKey () {
					return this.key;
				}
				
			    public java.util.Date value;

				public java.util.Date getValue () {
					return this.value;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.key = readString(dis);
					
					this.value = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.key = readString(dis);
					
					this.value = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.key,dos);
					
					// java.util.Date
				
						writeDate(this.value,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.key,dos);
					
					// java.util.Date
				
						writeDate(this.value,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("key="+key);
		sb.append(",value="+String.valueOf(value));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();




	
	/**
	 * [tContextLoad_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tContextLoad_1", false);
		start_Hash.put("tContextLoad_1", System.currentTimeMillis());
		
	
	currentComponent="tContextLoad_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tContextLoad_1 = 0;
		
	java.util.List<String> assignList_tContextLoad_1 = new java.util.ArrayList<String>();
	java.util.List<String> newPropertyList_tContextLoad_1 = new java.util.ArrayList<String>();
	java.util.List<String> noAssignList_tContextLoad_1 = new java.util.ArrayList<String>();
	int nb_line_tContextLoad_1 = 0;

 



/**
 * [tContextLoad_1 begin ] stop
 */



	
	/**
	 * [tJDBCInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_21", false);
		start_Hash.put("tJDBCInput_21", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_21";

	
		int tos_count_tJDBCInput_21 = 0;
		

boolean doesNodeBelongToRequest_tJDBCInput_21 = 0 == 0;
@SuppressWarnings("unchecked")
java.util.Map<String, Object> restRequest_tJDBCInput_21 = (java.util.Map<String, Object>)globalMap.get("restRequest");
String currentTRestRequestOperation_tJDBCInput_21 = (String)(restRequest_tJDBCInput_21 != null ? restRequest_tJDBCInput_21.get("OPERATION") : null);

org.talend.components.api.component.ComponentDefinition def_tJDBCInput_21 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.api.component.runtime.Writer writer_tJDBCInput_21 = null;
org.talend.components.api.component.runtime.Reader reader_tJDBCInput_21 = null;


org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_21 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_21.createRuntimeProperties();
 		                    props_tJDBCInput_21.setValue("sql",
 		                    "select distinct 'runTime', CURRENT_TIMESTAMP(6)");
 		                    
 		                    props_tJDBCInput_21.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.setValue("enableSpecialTableName",
 		                    true);
 		                    
 		                    props_tJDBCInput_21.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_21.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_21.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_21_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCInput_21\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"key\",\"type\":[\"string\",\"null\"],\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"key\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"key\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"value\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATETIME\",\"talend.field.dbColumnName\":\"value\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd HH:mm:ss.SSSSSS\",\"talend.field.length\":\"35\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"0\",\"di.table.label\":\"value\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_21\",\"di.table.label\":\"tJDBCInput_21\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_21_1_fisrt sst_tJDBCInput_21_1_fisrt = new SchemaSettingTool_tJDBCInput_21_1_fisrt();
 		                    
 		                    props_tJDBCInput_21.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_21_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_21.tableSelection.setValue("tablename",
 		                    "");
 		                    
 		                    java.util.List<Object> tJDBCInput_21_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_21_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_21_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_21.trimTable).setValue("trim",tJDBCInput_21_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_21_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_21_trimTable_columnName.add("key");
 		                            
 		                            tJDBCInput_21_trimTable_columnName.add("value");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_21.trimTable).setValue("columnName",tJDBCInput_21_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_21.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_21 = props_tJDBCInput_21.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_21 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_21 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_21 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_21.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_21);
        }
    }
globalMap.put("tJDBCInput_21_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_21);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "8.0");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.37.0");
java.net.URL mappings_url_tJDBCInput_21= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_21_MAPPINGS_URL", mappings_url_tJDBCInput_21);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_21 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_21";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_21 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_21 = null;
topology_tJDBCInput_21 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_21 = def_tJDBCInput_21.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_21, topology_tJDBCInput_21);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_21 = def_tJDBCInput_21.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_21 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_21.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_21 = componentRuntime_tJDBCInput_21.initialize(container_tJDBCInput_21, props_tJDBCInput_21);

if (initVr_tJDBCInput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_21.getMessage());
}

if(componentRuntime_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_21 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_21;
	compDriverInitialization_tJDBCInput_21.runAtDriver(container_tJDBCInput_21);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_21 = null;
if(componentRuntime_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_21 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_21;
	if (doesNodeBelongToRequest_tJDBCInput_21) {
        org.talend.daikon.properties.ValidationResult vr_tJDBCInput_21 = sourceOrSink_tJDBCInput_21.validate(container_tJDBCInput_21);
        if (vr_tJDBCInput_21.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
            throw new RuntimeException(vr_tJDBCInput_21.getMessage());
        }
	}
}

    if (sourceOrSink_tJDBCInput_21 instanceof org.talend.components.api.component.runtime.Source) {
        org.talend.components.api.component.runtime.Source source_tJDBCInput_21 =
                (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_21;
        reader_tJDBCInput_21 = source_tJDBCInput_21.createReader(container_tJDBCInput_21);
	    reader_tJDBCInput_21 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_21, container_tJDBCInput_21);

            boolean multi_output_is_allowed_tJDBCInput_21 = false;
            org.talend.components.api.component.Connector c_tJDBCInput_21 = null;
            for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_21.getAvailableConnectors(null, true)) {
                if (currentConnector.getName().equals("MAIN")) {
                    c_tJDBCInput_21 = currentConnector;
                }

                if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                    multi_output_is_allowed_tJDBCInput_21 = true;
                }
            }
            org.apache.avro.Schema schema_tJDBCInput_21 = props_tJDBCInput_21.getSchema(c_tJDBCInput_21, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_21 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_21, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_21 = null;

        // Iterate through the incoming data.
        boolean available_tJDBCInput_21 = reader_tJDBCInput_21.start();

        resourceMap.put("reader_tJDBCInput_21", reader_tJDBCInput_21);

        for (; available_tJDBCInput_21; available_tJDBCInput_21 = reader_tJDBCInput_21.advance()) {
			nb_line_tJDBCInput_21++;

			
			if (multi_output_is_allowed_tJDBCInput_21) {
				
					row2 = null;
				

				
			}
			

			try {
				Object data_tJDBCInput_21 = reader_tJDBCInput_21.getCurrent();
				

					if(multi_output_is_allowed_tJDBCInput_21) {
						row2 = new row2Struct();
					}

					
        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_21 == null) {
            factory_tJDBCInput_21 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_21.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_21.setWrapped(factory_tJDBCInput_21.convertToAvro(data_tJDBCInput_21));
                Object columnValue_0_tJDBCInput_21 = outgoingEnforcer_tJDBCInput_21.get(0);
                        row2.key = (String) (columnValue_0_tJDBCInput_21);
                Object columnValue_1_tJDBCInput_21 = outgoingEnforcer_tJDBCInput_21.get(1);
                        row2.value = (java.util.Date) (columnValue_1_tJDBCInput_21);
			} catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_21) {
				java.util.Map<String,Object> info_tJDBCInput_21 = e_tJDBCInput_21.getRejectInfo();
				
					//TODO use a method instead of getting method by the special key "error/errorMessage"
					Object errorMessage_tJDBCInput_21 = null;
					if(info_tJDBCInput_21.containsKey("error")){
						errorMessage_tJDBCInput_21 = info_tJDBCInput_21.get("error");
					}else if(info_tJDBCInput_21.containsKey("errorMessage")){
						errorMessage_tJDBCInput_21 = info_tJDBCInput_21.get("errorMessage");
					}else{
						errorMessage_tJDBCInput_21 = "Rejected but error message missing";
					}
					errorMessage_tJDBCInput_21 = "Row "+ nb_line_tJDBCInput_21 + ": "+errorMessage_tJDBCInput_21;
					System.err.println(errorMessage_tJDBCInput_21);
				
					// If the record is reject, the main line record should put NULL
					row2 = null;
				
			} // end of catch

                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_21 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_21 = null;


 



/**
 * [tJDBCInput_21 begin ] stop
 */
	
	/**
	 * [tJDBCInput_21 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 


	tos_count_tJDBCInput_21++;

/**
 * [tJDBCInput_21 main ] stop
 */
	
	/**
	 * [tJDBCInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 



/**
 * [tJDBCInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tContextLoad_1 main ] start
	 */

	

	
	
	currentComponent="tContextLoad_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					
        //////////////////////////
        String tmp_key_tContextLoad_1 = null;
                    String key_tContextLoad_1 = null;
                      if (row2.key != null){
                          tmp_key_tContextLoad_1 = row2.key.trim();
                        if ((tmp_key_tContextLoad_1.startsWith("#") || tmp_key_tContextLoad_1.startsWith("!") )){
                          tmp_key_tContextLoad_1 = null;
                        } else {
                          row2.key = tmp_key_tContextLoad_1;
                        }
                      }
                        if(row2.key != null) {
                    key_tContextLoad_1 =
                        row2.key;
                        }
                    String value_tContextLoad_1 = null;
                        if(row2.value != null) {
                    value_tContextLoad_1 =
                        FormatterUtils.format_Date(row2.value, "yyyy-MM-dd HH:mm:ss.SSSSSS");
                        }
				
				String currentValue_tContextLoad_1 = value_tContextLoad_1;
										
						if ((key_tContextLoad_1 != null) && ("ovirtEngineDbPassword".equals(key_tContextLoad_1)) ) currentValue_tContextLoad_1 = currentValue_tContextLoad_1.replaceAll(".", "*");						
						if ((key_tContextLoad_1 != null) && ("ovirtEngineHistoryDbPassword".equals(key_tContextLoad_1)) ) currentValue_tContextLoad_1 = currentValue_tContextLoad_1.replaceAll(".", "*");

  if (tmp_key_tContextLoad_1 != null){
  try{
        if(key_tContextLoad_1!=null && "ovirtEngineDbDriverClass".equals(key_tContextLoad_1))
        {
           context.ovirtEngineDbDriverClass=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "ovirtEngineDbPassword".equals(key_tContextLoad_1))
        {
           context.ovirtEngineDbPassword=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "ovirtEngineDbUser".equals(key_tContextLoad_1))
        {
           context.ovirtEngineDbUser=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "ovirtEngineDbJdbcConnection".equals(key_tContextLoad_1))
        {
           context.ovirtEngineDbJdbcConnection=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "ovirtEngineHistoryDbJdbcConnection".equals(key_tContextLoad_1))
        {
           context.ovirtEngineHistoryDbJdbcConnection=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "ovirtEngineHistoryDbDriverClass".equals(key_tContextLoad_1))
        {
           context.ovirtEngineHistoryDbDriverClass=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "ovirtEngineHistoryDbPassword".equals(key_tContextLoad_1))
        {
           context.ovirtEngineHistoryDbPassword=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "ovirtEngineHistoryDbUser".equals(key_tContextLoad_1))
        {
           context.ovirtEngineHistoryDbUser=value_tContextLoad_1;
        }

        if(key_tContextLoad_1!=null && "runInterleave".equals(key_tContextLoad_1))
        {

                context.runInterleave=Integer.parseInt(value_tContextLoad_1);

        }

        if(key_tContextLoad_1!=null && "runTime".equals(key_tContextLoad_1))
        {
                String context_runTime_value = context.getProperty("runTime");
                if(context_runTime_value==null)
                    context_runTime_value = "";
                int context_runTime_pos = context_runTime_value.indexOf(";");
                String context_runTime_pattern =  "yyyy-MM-dd HH:mm:ss";
                if(context_runTime_pos > -1){
                    context_runTime_pattern = context_runTime_value.substring(0, context_runTime_pos);
                }
                context.runTime=(java.util.Date)(new java.text.SimpleDateFormat(context_runTime_pattern).parse(value_tContextLoad_1));

        }


        if (context.getProperty(key_tContextLoad_1)!=null)
        {
            assignList_tContextLoad_1.add(key_tContextLoad_1);
        }else  {
            newPropertyList_tContextLoad_1.add(key_tContextLoad_1);
        }
        if(value_tContextLoad_1 == null){
            context.setProperty(key_tContextLoad_1, "");
        }else{
            context.setProperty(key_tContextLoad_1,value_tContextLoad_1);
        }
    }catch(java.lang.Exception e){
globalMap.put("tContextLoad_1_ERROR_MESSAGE",e.getMessage());
        System.err.println("Setting a value for the key \"" + key_tContextLoad_1 + "\" has failed. Error message: " + e.getMessage());
    }
        nb_line_tContextLoad_1++;
    }
        //////////////////////////

 


	tos_count_tContextLoad_1++;

/**
 * [tContextLoad_1 main ] stop
 */
	
	/**
	 * [tContextLoad_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tContextLoad_1";

	

 



/**
 * [tContextLoad_1 process_data_begin ] stop
 */
	
	/**
	 * [tContextLoad_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tContextLoad_1";

	

 



/**
 * [tContextLoad_1 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	


 



/**
 * [tJDBCInput_21 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_21 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	
// end of generic


resourceMap.put("finish_tJDBCInput_21", Boolean.TRUE);

    } // while  
    } // end of "if (sourceOrSink_tJDBCInput_21 instanceof ...Source)"
    java.util.Map<String, Object> resultMap_tJDBCInput_21 = null;
    if (reader_tJDBCInput_21 != null) {
        reader_tJDBCInput_21.close();
        resultMap_tJDBCInput_21 = reader_tJDBCInput_21.getReturnValues();
    }
if(resultMap_tJDBCInput_21!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_21 : resultMap_tJDBCInput_21.entrySet()) {
		switch(entry_tJDBCInput_21.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "ERROR_MESSAGE", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_LINE", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_SUCCESS", entry_tJDBCInput_21.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", "NB_REJECT", entry_tJDBCInput_21.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_21 = new StringBuilder();
            for (int i_tJDBCInput_21 = 0; i_tJDBCInput_21 < entry_tJDBCInput_21.getKey().length(); i_tJDBCInput_21++) {
                char ch_tJDBCInput_21 = entry_tJDBCInput_21.getKey().charAt(i_tJDBCInput_21);
                if(Character.isUpperCase(ch_tJDBCInput_21) && i_tJDBCInput_21> 0) {
                	studio_key_tJDBCInput_21.append('_');
                }
                studio_key_tJDBCInput_21.append(ch_tJDBCInput_21);
            }
			container_tJDBCInput_21.setComponentData("tJDBCInput_21", studio_key_tJDBCInput_21.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_21.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_21", true);
end_Hash.put("tJDBCInput_21", System.currentTimeMillis());




/**
 * [tJDBCInput_21 end ] stop
 */

	
	/**
	 * [tContextLoad_1 end ] start
	 */

	

	
	
	currentComponent="tContextLoad_1";

	
	
	java.util.Enumeration<?> enu_tContextLoad_1 = context.propertyNames();
    while(enu_tContextLoad_1.hasMoreElements())
    {           
    	String key_tContextLoad_1 = (String)enu_tContextLoad_1.nextElement();
        if(!assignList_tContextLoad_1.contains(key_tContextLoad_1) && !newPropertyList_tContextLoad_1.contains(key_tContextLoad_1))
        {
            noAssignList_tContextLoad_1.add(key_tContextLoad_1);
        }          
    } 

    String newPropertyStr_tContextLoad_1 = newPropertyList_tContextLoad_1.toString();
    String newProperty_tContextLoad_1 = newPropertyStr_tContextLoad_1.substring(1, newPropertyStr_tContextLoad_1.length() - 1);
    
    String noAssignStr_tContextLoad_1 = noAssignList_tContextLoad_1.toString();
    String noAssign_tContextLoad_1 = noAssignStr_tContextLoad_1.substring(1, noAssignStr_tContextLoad_1.length() - 1);
    
    globalMap.put("tContextLoad_1_KEY_NOT_INCONTEXT", newProperty_tContextLoad_1);
    globalMap.put("tContextLoad_1_KEY_NOT_LOADED", noAssign_tContextLoad_1);

    globalMap.put("tContextLoad_1_NB_LINE",nb_line_tContextLoad_1);

	List<String> parametersToEncrypt_tContextLoad_1 = new java.util.ArrayList<String>();
	
		parametersToEncrypt_tContextLoad_1.add("ovirtEngineDbPassword");
		
		parametersToEncrypt_tContextLoad_1.add("ovirtEngineHistoryDbPassword");
		
	
	resumeUtil.addLog("NODE", "NODE:tContextLoad_1", "", Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt_tContextLoad_1));    
    
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tContextLoad_1", true);
end_Hash.put("tContextLoad_1", System.currentTimeMillis());




/**
 * [tContextLoad_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_21 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_21";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_21")==null){
    if(resourceMap.get("reader_tJDBCInput_21")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_21")).close();
		} catch (java.io.IOException e_tJDBCInput_21) {
			String errorMessage_tJDBCInput_21 = "failed to release the resource in tJDBCInput_21 :" + e_tJDBCInput_21.getMessage();
			System.err.println(errorMessage_tJDBCInput_21);
		}
	}
}
 



/**
 * [tJDBCInput_21 finally ] stop
 */

	
	/**
	 * [tContextLoad_1 finally ] start
	 */

	

	
	
	currentComponent="tContextLoad_1";

	

 



/**
 * [tContextLoad_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_21_SUBPROCESS_STATE", 1);
	}
	


public static class row_talendLogs_LOGSStruct implements routines.system.IPersistableRow<row_talendLogs_LOGSStruct> {
    final static byte[] commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];
    static byte[] commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length) {
				if(length < 1024 && commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync.length == 0) {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[1024];
				} else {
   					commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length);
			strReturn = new String(commonByteArray_OVIRT_ENGINE_DWH_StatisticsSync, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_OVIRT_ENGINE_DWH_StatisticsSync) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row_talendLogs_LOGSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void talendLogs_LOGSProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row_talendLogs_LOGSStruct row_talendLogs_LOGS = new row_talendLogs_LOGSStruct();




	
	/**
	 * [talendLogs_CONSOLE begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_CONSOLE", false);
		start_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Main");
					}
				
		int tos_count_talendLogs_CONSOLE = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_talendLogs_CONSOLE = "|";
		java.io.PrintStream consoleOut_talendLogs_CONSOLE = null;	

 		StringBuilder strBuffer_talendLogs_CONSOLE = null;
		int nb_line_talendLogs_CONSOLE = 0;
///////////////////////    			



 



/**
 * [talendLogs_CONSOLE begin ] stop
 */



	
	/**
	 * [talendLogs_LOGS begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_LOGS", false);
		start_Hash.put("talendLogs_LOGS", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
		int tos_count_talendLogs_LOGS = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : talendLogs_LOGS.getMessages()) {
		row_talendLogs_LOGS.type = lcm.getType();
		row_talendLogs_LOGS.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row_talendLogs_LOGS.priority = lcm.getPriority();
		row_talendLogs_LOGS.message = lcm.getMessage();
		row_talendLogs_LOGS.code = lcm.getCode();
		
		row_talendLogs_LOGS.moment = java.util.Calendar.getInstance().getTime();
	
    	row_talendLogs_LOGS.pid = pid;
		row_talendLogs_LOGS.root_pid = rootPid;
		row_talendLogs_LOGS.father_pid = fatherPid;
	
    	row_talendLogs_LOGS.project = projectName;
    	row_talendLogs_LOGS.job = jobName;
    	row_talendLogs_LOGS.context = contextStr;
    		
 



/**
 * [talendLogs_LOGS begin ] stop
 */
	
	/**
	 * [talendLogs_LOGS main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 


	tos_count_talendLogs_LOGS++;

/**
 * [talendLogs_LOGS main ] stop
 */
	
	/**
	 * [talendLogs_LOGS process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_begin ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Main"
						
						);
					}
					
///////////////////////		
						



				strBuffer_talendLogs_CONSOLE = new StringBuilder();




   				
	    		if(row_talendLogs_LOGS.moment != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
								FormatterUtils.format_Date(row_talendLogs_LOGS.moment, "yyyy-MM-dd HH:mm:ss")				
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.root_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.root_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.father_pid != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.father_pid)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.project != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.project)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.job != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.job)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.context != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.context)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.priority != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.priority)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.type != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.type)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.origin != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.origin)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.message != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.message)							
				);


							
	    		} //  			

    			strBuffer_talendLogs_CONSOLE.append("|");
    			


   				
	    		if(row_talendLogs_LOGS.code != null) { //              
                    							
       
				strBuffer_talendLogs_CONSOLE.append(
				                String.valueOf(row_talendLogs_LOGS.code)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_talendLogs_CONSOLE = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_talendLogs_CONSOLE = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_talendLogs_CONSOLE);
                    }
                    consoleOut_talendLogs_CONSOLE.println(strBuffer_talendLogs_CONSOLE.toString());
                    consoleOut_talendLogs_CONSOLE.flush();
                    nb_line_talendLogs_CONSOLE++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_talendLogs_CONSOLE++;

/**
 * [talendLogs_CONSOLE main ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_begin ] stop
 */
	
	/**
	 * [talendLogs_CONSOLE process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE process_data_end ] stop
 */



	
	/**
	 * [talendLogs_LOGS process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_end ] stop
 */
	
	/**
	 * [talendLogs_LOGS end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
	}
} catch (Exception e_talendLogs_LOGS) {
globalMap.put("talendLogs_LOGS_ERROR_MESSAGE",e_talendLogs_LOGS.getMessage());
	logIgnoredError(String.format("talendLogs_LOGS - tLogCatcher failed to process log message(s) due to internal error: %s", e_talendLogs_LOGS), e_talendLogs_LOGS);
}

 

ok_Hash.put("talendLogs_LOGS", true);
end_Hash.put("talendLogs_LOGS", System.currentTimeMillis());




/**
 * [talendLogs_LOGS end ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	


//////
//////
globalMap.put("talendLogs_CONSOLE_NB_LINE",nb_line_talendLogs_CONSOLE);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Main");
			  	}
			  	
 

ok_Hash.put("talendLogs_CONSOLE", true);
end_Hash.put("talendLogs_CONSOLE", System.currentTimeMillis());




/**
 * [talendLogs_CONSOLE end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [talendLogs_LOGS finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS finally ] stop
 */

	
	/**
	 * [talendLogs_CONSOLE finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_CONSOLE";
	
	currentComponent="talendLogs_CONSOLE";

	

 



/**
 * [talendLogs_CONSOLE finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
    	public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
        }

    	public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
        }
    };
    
    private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";
    
    {
    	globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
    }

    public static void main(String[] args){
        final StatisticsSync StatisticsSyncClass = new StatisticsSync();

        int exitCode = StatisticsSyncClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        if (inOSGi) {
            java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

            if (jobProperties != null && jobProperties.get("context") != null) {
                contextStr = (String)jobProperties.get("context");
            }
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = StatisticsSync.class.getClassLoader().getResourceAsStream("ovirt_engine_dwh/statisticssync_4_5/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = StatisticsSync.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("ovirtEngineDbDriverClass", "id_String");
                        if(context.getStringValue("ovirtEngineDbDriverClass") == null) {
                            context.ovirtEngineDbDriverClass = null;
                        } else {
                            context.ovirtEngineDbDriverClass=(String) context.getProperty("ovirtEngineDbDriverClass");
                        }
                        context.setContextType("ovirtEngineDbPassword", "id_Password");
                        if(context.getStringValue("ovirtEngineDbPassword") == null) {
                            context.ovirtEngineDbPassword = null;
                        } else {
                            String pwd_ovirtEngineDbPassword_value = context.getProperty("ovirtEngineDbPassword");
                            context.ovirtEngineDbPassword = null;
                            if(pwd_ovirtEngineDbPassword_value!=null) {
                                if(context_param.containsKey("ovirtEngineDbPassword")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.ovirtEngineDbPassword = pwd_ovirtEngineDbPassword_value;
                                } else if (!pwd_ovirtEngineDbPassword_value.isEmpty()) {
                                    try {
                                        context.ovirtEngineDbPassword = routines.system.PasswordEncryptUtil.decryptPassword(pwd_ovirtEngineDbPassword_value);
                                        context.put("ovirtEngineDbPassword",context.ovirtEngineDbPassword);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("ovirtEngineDbUser", "id_String");
                        if(context.getStringValue("ovirtEngineDbUser") == null) {
                            context.ovirtEngineDbUser = null;
                        } else {
                            context.ovirtEngineDbUser=(String) context.getProperty("ovirtEngineDbUser");
                        }
                        context.setContextType("ovirtEngineDbJdbcConnection", "id_String");
                        if(context.getStringValue("ovirtEngineDbJdbcConnection") == null) {
                            context.ovirtEngineDbJdbcConnection = null;
                        } else {
                            context.ovirtEngineDbJdbcConnection=(String) context.getProperty("ovirtEngineDbJdbcConnection");
                        }
                        context.setContextType("ovirtEngineHistoryDbJdbcConnection", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbJdbcConnection") == null) {
                            context.ovirtEngineHistoryDbJdbcConnection = null;
                        } else {
                            context.ovirtEngineHistoryDbJdbcConnection=(String) context.getProperty("ovirtEngineHistoryDbJdbcConnection");
                        }
                        context.setContextType("ovirtEngineHistoryDbDriverClass", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbDriverClass") == null) {
                            context.ovirtEngineHistoryDbDriverClass = null;
                        } else {
                            context.ovirtEngineHistoryDbDriverClass=(String) context.getProperty("ovirtEngineHistoryDbDriverClass");
                        }
                        context.setContextType("ovirtEngineHistoryDbPassword", "id_Password");
                        if(context.getStringValue("ovirtEngineHistoryDbPassword") == null) {
                            context.ovirtEngineHistoryDbPassword = null;
                        } else {
                            String pwd_ovirtEngineHistoryDbPassword_value = context.getProperty("ovirtEngineHistoryDbPassword");
                            context.ovirtEngineHistoryDbPassword = null;
                            if(pwd_ovirtEngineHistoryDbPassword_value!=null) {
                                if(context_param.containsKey("ovirtEngineHistoryDbPassword")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.ovirtEngineHistoryDbPassword = pwd_ovirtEngineHistoryDbPassword_value;
                                } else if (!pwd_ovirtEngineHistoryDbPassword_value.isEmpty()) {
                                    try {
                                        context.ovirtEngineHistoryDbPassword = routines.system.PasswordEncryptUtil.decryptPassword(pwd_ovirtEngineHistoryDbPassword_value);
                                        context.put("ovirtEngineHistoryDbPassword",context.ovirtEngineHistoryDbPassword);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("ovirtEngineHistoryDbUser", "id_String");
                        if(context.getStringValue("ovirtEngineHistoryDbUser") == null) {
                            context.ovirtEngineHistoryDbUser = null;
                        } else {
                            context.ovirtEngineHistoryDbUser=(String) context.getProperty("ovirtEngineHistoryDbUser");
                        }
                        context.setContextType("runInterleave", "id_Integer");
                        if(context.getStringValue("runInterleave") == null) {
                            context.runInterleave = null;
                        } else {
                            try{
                                context.runInterleave=routines.system.ParserUtils.parseTo_Integer (context.getProperty("runInterleave"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "runInterleave", e.getMessage()));
                                context.runInterleave=null;
                            }
                        }
                        context.setContextType("runTime", "id_Date");
                        if(context.getStringValue("runTime") == null) {
                            context.runTime = null;
                        } else {
                            String context_runTime_value = context.getProperty("runTime");
                            try{
                                if (context_runTime_value == null){
                                    context_runTime_value = "";
                                }
                                int context_runTime_pos = context_runTime_value.indexOf(";");
                                String context_runTime_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_runTime_pos > -1){
                                    context_runTime_pattern = context_runTime_value.substring(0, context_runTime_pos);
                                    context_runTime_value = context_runTime_value.substring(context_runTime_pos + 1);
                                }

                                context.runTime=(java.util.Date)(new java.text.SimpleDateFormat(context_runTime_pattern).parse(context_runTime_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_runTime_longValue = Long.valueOf(context_runTime_value);
                                    context.runTime = new java.util.Date(context_runTime_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "runTime", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.runTime=null;
                                }
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("ovirtEngineDbDriverClass")) {
                context.ovirtEngineDbDriverClass = (String) parentContextMap.get("ovirtEngineDbDriverClass");
            }if (parentContextMap.containsKey("ovirtEngineDbPassword")) {
                context.ovirtEngineDbPassword = (java.lang.String) parentContextMap.get("ovirtEngineDbPassword");
            }if (parentContextMap.containsKey("ovirtEngineDbUser")) {
                context.ovirtEngineDbUser = (String) parentContextMap.get("ovirtEngineDbUser");
            }if (parentContextMap.containsKey("ovirtEngineDbJdbcConnection")) {
                context.ovirtEngineDbJdbcConnection = (String) parentContextMap.get("ovirtEngineDbJdbcConnection");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbJdbcConnection")) {
                context.ovirtEngineHistoryDbJdbcConnection = (String) parentContextMap.get("ovirtEngineHistoryDbJdbcConnection");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbDriverClass")) {
                context.ovirtEngineHistoryDbDriverClass = (String) parentContextMap.get("ovirtEngineHistoryDbDriverClass");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbPassword")) {
                context.ovirtEngineHistoryDbPassword = (java.lang.String) parentContextMap.get("ovirtEngineHistoryDbPassword");
            }if (parentContextMap.containsKey("ovirtEngineHistoryDbUser")) {
                context.ovirtEngineHistoryDbUser = (String) parentContextMap.get("ovirtEngineHistoryDbUser");
            }if (parentContextMap.containsKey("runInterleave")) {
                context.runInterleave = (Integer) parentContextMap.get("runInterleave");
            }if (parentContextMap.containsKey("runTime")) {
                context.runTime = (java.util.Date) parentContextMap.get("runTime");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("ovirtEngineDbPassword");
			parametersToEncrypt.add("ovirtEngineHistoryDbPassword");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_4Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_4) {
globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", -1);

e_tJDBCInput_4.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_4) {
globalMap.put("tJDBCInput_4_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_4;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_5Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_5) {
globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", -1);

e_tJDBCInput_5.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_5) {
globalMap.put("tJDBCInput_5_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_5;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_8Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_8) {
globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", -1);

e_tJDBCInput_8.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_8) {
globalMap.put("tJDBCInput_8_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_8;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_10Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_10) {
globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", -1);

e_tJDBCInput_10.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_10) {
globalMap.put("tJDBCInput_10_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_10;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_12Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_12) {
globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", -1);

e_tJDBCInput_12.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_12) {
globalMap.put("tJDBCInput_12_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_12;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {
                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJDBCInput_18Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJDBCInput_18) {
globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", -1);

e_tJDBCInput_18.printStackTrace();

}catch (java.lang.Error e_tJDBCInput_18) {
globalMap.put("tJDBCInput_18_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJDBCInput_18;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : StatisticsSync");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tJDBCConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tJDBCConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tJDBCConnection_1", globalMap.get("conn_tJDBCConnection_1"));
            connections.put("conn_tJDBCConnection_2", globalMap.get("conn_tJDBCConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1126150 characters generated by Talend Open Studio for Data Integration 
 *     on the January 6, 2022 at 1:14:34 PM IST
 ************************************************************************************************/