{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "singlestat",
      "name": "Singlestat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The virtual machine dashboard displays the configuration details and resource usage metrics of a selected virtual machine.",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1612257175112,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Virtual Machines",
      "tooltip": "The portal does not display deleted virtual machines",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#vms-general;name=${vm_name_url}"
    }
  ],
  "panels": [
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 39,
      "panels": [],
      "title": "Description",
      "type": "row"
    },
    {
      "content": "###### The virtual machine dashboard displays the configuration details and resource usage metrics of a selected virtual machine.",
      "datasource": "$datasource",
      "gridPos": {
        "h": 2,
        "w": 23,
        "x": 0,
        "y": 1
      },
      "id": 30,
      "mode": "markdown",
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 32,
      "title": "Configuration Details",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "columns": [],
      "datasource": "$datasource",
      "description": "The data center, cluster, host that the virtual machine is currently running on, and description. In the latest configuration.\n",
      "fontSize": "100%",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 28,
      "links": [
        {
          "title": "",
          "url": ""
        }
      ],
      "pageSize": null,
      "pluginVersion": "6.2.2",
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": true
      },
      "styles": [
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "is_deleted",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "host_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Data Center",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "datacenter_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Cluster",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "cluster_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Currently Running on Host",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "Link to Host Dashboard",
          "linkUrl": "/ovirt-engine-grafana/d/HostDashboard/host-dashboard?orgId=1&var-datasource=$datasource&var-show_deleted=${__cell_0}&var-host_id=${__cell_1}",
          "mappingType": 1,
          "pattern": "host_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "VM Description",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_description",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-1 \n\nSELECT DISTINCT\n    'No' AS is_deleted,\n    host_id,\n    CASE\n        WHEN v4_5_configuration_history_datacenters.delete_date IS NULL\n            THEN datacenter_name\n        WHEN v4_5_configuration_history_datacenters.delete_date IS NOT NULL\n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( v4_5_configuration_history_datacenters.delete_date AS date ) AS varchar ) || ')' \n    END AS datacenter_name,\n    CASE\n        WHEN v4_5_configuration_history_clusters.delete_date IS NULL\n            THEN cluster_name\n        WHEN v4_5_configuration_history_clusters.delete_date IS NOT NULL\n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( v4_5_configuration_history_clusters.delete_date AS date ) AS varchar ) || ')'\n    END AS cluster_name,\n    host_name,\n    vm_description\nFROM\n    v4_5_configuration_history_vms\n    INNER JOIN\n    v4_5_configuration_history_clusters\n        ON\n            (\n                v4_5_configuration_history_vms.cluster_id =\n                v4_5_configuration_history_clusters.cluster_id\n                AND v4_5_configuration_history_vms.history_id\n                    IN\n                        (\n                            SELECT MAX (history_id)\n                            FROM v4_5_configuration_history_vms\n                            WHERE vm_id = ('$vm_id')\n                        )\n                AND v4_5_configuration_history_clusters.history_id\n                    IN\n                        (\n                            SELECT MAX (history_id)\n                            FROM v4_5_configuration_history_clusters\n                            GROUP BY cluster_id\n                        )\n            )\n      INNER JOIN \n      v4_5_configuration_history_datacenters\n          ON\n              (\n                  v4_5_configuration_history_clusters.datacenter_id =\n                  v4_5_configuration_history_datacenters.datacenter_id\n                  AND v4_5_configuration_history_datacenters.history_id\n                      IN\n                          (\n                              SELECT MAX (history_id)\n                              FROM v4_5_configuration_history_datacenters\n                              GROUP BY datacenter_id\n                          )\n              )\n      LEFT OUTER JOIN\n      v4_5_statistics_vms_resources_usage_samples\n          ON\n              (\n                  v4_5_configuration_history_vms.vm_id =\n                  v4_5_statistics_vms_resources_usage_samples.vm_id\n                  AND v4_5_statistics_vms_resources_usage_samples.history_id\n                      IN\n                          (\n                              SELECT MAX (history_id)\n                              FROM v4_5_statistics_vms_resources_usage_samples\n                              WHERE vm_id = ('$vm_id')\n                          )\n              )\n      LEFT OUTER JOIN\n      v4_5_configuration_history_hosts\n          ON\n              (\n                  v4_5_statistics_vms_resources_usage_samples.currently_running_on_host =\n                  v4_5_configuration_history_hosts.host_id\n                  AND v4_5_configuration_history_hosts.history_id\n                      IN\n                          (\n                              SELECT MAX (history_id)\n                              FROM v4_5_configuration_history_hosts\n                              GROUP BY host_id\n                          )\n              )",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transform": "table",
      "type": "table"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "The latest configuration details of the virtual machine.",
      "fontSize": "100%",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 2,
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": 4,
        "desc": true
      },
      "styles": [
        {
          "alias": "OS Version",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "os_version",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "IP",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_ip",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Create Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "create_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Update Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "update_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Delete Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "delete_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-2 - This query will return\n-- the latest VM configurations.\n\nSELECT DISTINCT\n    a.value AS os_version,\n    vm_ip,\n    CAST ( v4_5_configuration_history_vms.create_date AS date ) AS create_date,\n    CASE \n        WHEN delete_date IS NULL\n            THEN update_date\n        ELSE NULL\n    END AS update_date,\n    CASE\n        WHEN delete_date IS NOT NULL\n            THEN delete_date\n        ELSE NULL\n    END AS delete_date\nFROM \n    v4_5_configuration_history_vms\n    LEFT OUTER JOIN \n    (\n        SELECT enum_type, enum_key, value\n        FROM enum_translator\n        WHERE language_code = 'en_US' AND enum_type = 'OS_TYPE'\n    )AS a\n        ON \n            (\n                v4_5_configuration_history_vms.operating_system =\n                a.enum_key AND a.enum_type = 'OS_TYPE'\n            )\n    LEFT OUTER JOIN\n    v4_5_statistics_vms_resources_usage_samples\n        ON\n            (\n                v4_5_statistics_vms_resources_usage_samples.vm_id =\n                v4_5_configuration_history_vms.vm_id\n                AND v4_5_statistics_vms_resources_usage_samples.history_id\n                    IN\n                        (\n                            SELECT MAX (history_id)\n                            FROM v4_5_statistics_vms_resources_usage_samples\n                            GROUP BY vm_id\n                        )\n            )\nWHERE \n    -- Here we filter by the virtual machine/s chosen by the user\n    v4_5_configuration_history_vms.vm_id = ('$vm_id')\n    AND v4_5_configuration_history_vms.history_id\n        IN\n            (\n                SELECT MAX (history_id)\n                FROM v4_5_configuration_history_vms\n                GROUP BY vm_id\n            )",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transform": "table",
      "type": "table"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 0,
      "description": "The status of the virtual machine. In the latest configuration.",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 8
      },
      "id": 27,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "pluginVersion": "6.7.4",
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-3 \n\nSELECT DISTINCT\n    CASE\n        WHEN vm_status = -1\n            THEN 'Unknown Status'\n        WHEN vm_status = 0\n            THEN 'Down'\n        WHEN vm_status = 1\n            THEN 'Up'\n        WHEN vm_status = 2\n            THEN 'Paused'\n        WHEN vm_status = 3\n            THEN 'Problematic'\n        ELSE NULL\n    END\nFROM \n    v4_5_statistics_vms_resources_usage_samples \nWHERE\n    vm_id = ('$vm_id')\n    AND history_id\n        IN\n            (\n                SELECT MAX (history_id)\n                FROM v4_5_statistics_vms_resources_usage_samples\n                GROUP BY vm_id\n            )\nGROUP BY vm_status",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Status (EX05-3)",
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 0,
      "description": "High Availability (true or false). In the latest configuration.",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 3,
        "y": 8
      },
      "id": 10,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "pluginVersion": "6.7.4",
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-4 \n\nSELECT\n    CASE \n        WHEN high_availability = 'false'\n            THEN 'False'\n        WHEN high_availability = 'true'\n            THEN 'True'\n        ELSE NULL\n    END \nFROM \n    v4_5_configuration_history_vms\nWHERE \n    -- Here we filter by the virtual machine chosen by the user\n    v4_5_configuration_history_vms.vm_id = ('$vm_id')\n    -- Here we get the latest vm configurations\n    AND v4_5_configuration_history_vms.history_id \n        IN \n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_5_configuration_history_vms a\n                GROUP BY a.vm_id\n            )\nGROUP BY \n    vm_id, \n    high_availability",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "High Availability (EX05-4)",
      "type": "singlestat",
      "valueFontSize": "50%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 0,
      "description": "The number of CPU cores of the virtual machine. In the latest configuration.",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 6,
        "y": 8
      },
      "id": 4,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "pluginVersion": "6.7.4",
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-5 \n\nSELECT\n    COALESCE ( cpu_per_socket, 0 ) * COALESCE ( number_of_sockets, 0 ) AS vm_cpucores\nFROM \n    v4_5_configuration_history_vms\nWHERE \n    -- Here we filter by the virtual machine chosen by the user\n    v4_5_configuration_history_vms.vm_id = ('$vm_id')\n    -- Here we get the latest vm configurations\n    AND v4_5_configuration_history_vms.history_id \n        IN \n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_5_configuration_history_vms a\n                GROUP BY a.vm_id\n            )\nGROUP BY\n    vm_id, \n    cpu_per_socket, \n    number_of_sockets",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "CPU Cores (EX05-5)",
      "type": "singlestat",
      "valueFontSize": "70%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 2,
      "description": "The memory size of the virtual machine. In the latest configuration.",
      "format": "decgbytes",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 12,
        "y": 8
      },
      "id": 5,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "pluginVersion": "6.7.4",
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-6 \n\nSELECT\n    CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 AS vm_memsize\nFROM \n    v4_5_configuration_history_vms\nWHERE \n    -- Here we filter by the virtual machine chosen by the user\n    v4_5_configuration_history_vms.vm_id = ('$vm_id')\n    -- Here we get the latest vm configurations\n    AND v4_5_configuration_history_vms.history_id \n        IN \n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_5_configuration_history_vms a\n                GROUP BY a.vm_id\n            )\nGROUP BY \n    vm_id, \n    memory_size_mb",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Memory Size (EX05-6)",
      "type": "singlestat",
      "valueFontSize": "70%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 2,
      "description": "The total disks size of the virtual machine. In the latest configuration.",
      "format": "decgbytes",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 18,
        "y": 8
      },
      "id": 16,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-7 \n\nSELECT SUM (vm_disk_size_mb)\nFROM\n    (\n        SELECT DISTINCT\n            vm_disk_name,\n            ( CAST ( COALESCE ( vm_disk_size_mb, 0 ) AS float ) / 1024 ) AS vm_disk_size_mb\n        FROM\n            v4_5_configuration_history_vms\n            INNER JOIN \n            v4_5_configuration_history_vms_devices\n                ON\n                    (\n                        v4_5_configuration_history_vms_devices.vm_id =\n                        v4_5_configuration_history_vms.vm_id\n                        AND v4_5_configuration_history_vms_devices.history_id \n                            IN \n                                ( \n                                    SELECT MAX (history_id) \n                                    FROM v4_5_configuration_history_vms_devices \n                                    WHERE type = 'disk' \n                                    GROUP BY device_id\n                                )\n                    )\n            INNER JOIN \n            v4_5_configuration_history_vms_disks\n                ON\n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        v4_5_configuration_history_vms_devices.device_id\n                    )\n            LEFT OUTER JOIN \n            v4_5_statistics_vms_disks_resources_usage_samples\n                ON\n                    (\n                        v4_5_statistics_vms_disks_resources_usage_samples.vm_disk_id =\n                        v4_5_configuration_history_vms_disks.vm_disk_id\n                        AND v4_5_statistics_vms_disks_resources_usage_samples.history_id\n                            IN\n                                (\n                                    SELECT MAX (history_id)\n                                    FROM v4_5_statistics_vms_disks_resources_usage_samples\n                                    GROUP BY vm_disk_id\n                                )\n                    )\n        WHERE \n            v4_5_configuration_history_vms.vm_id = ('$vm_id')\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN\n                    (\n                        SELECT MAX (history_id)\n                        FROM v4_5_configuration_history_vms_disks\n                        GROUP BY vm_disk_id\n                    )\n    ) AS sub_queries",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Total Disk Size (EX05-7)",
      "type": "singlestat",
      "valueFontSize": "70%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "datasource": "$datasource",
      "description": "The uptime percentage of the virtual machine, over the selected period.",
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 0,
        "y": 11
      },
      "id": 9,
      "options": {
        "fieldOptions": {
          "calcs": [
            "mean"
          ],
          "defaults": {
            "decimals": 2,
            "mappings": [],
            "max": 100,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [],
          "values": false
        },
        "orientation": "auto",
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "6.7.4",
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-8 - This query returns the average\n-- uptime percent for the selected vm\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    (\n        -- Here we sum the total uptime\n        SUM \n            (\n                CASE\n                    WHEN statistics.vm_status = 1\n                        THEN COALESCE ( statistics.minutes_in_status, 0 )\n                    ELSE 0\n                END\n            ) \n        /\n        -- Here we sum the total time\n        SUM \n            (\n                statistics.minutes_in_status\n            )\n    ) * 100 AS uptime_mins_percent\nFROM \n    (\n        SELECT vm_id, vm_status, minutes_in_status, history_datetime\n        FROM v4_5_statistics_vms_resources_usage_samples\n    ) AS statistics\n    INNER JOIN \n    v4_5_configuration_history_vms\n        ON \n            (\n                v4_5_configuration_history_vms.vm_id =\n                statistics.vm_id\n            )\nWHERE\n    -- Here we filter by the vm chosen by the user\n    v4_5_configuration_history_vms.vm_id = ('$vm_id')\n    -- Show data only when the selected period is up to 24 hours back\n    AND $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the time range chosen by the user\n    AND statistics.history_datetime >= $__timeFrom()\n    AND statistics.history_datetime < $__timeTo()",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-8 - This query returns the average\n-- uptime percent for the selected vm\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    (\n        -- Here we sum the total uptime\n        SUM \n            (\n                CASE\n                    WHEN statistics.vm_status = 1\n                        THEN COALESCE ( statistics.minutes_in_status, 0 )\n                    ELSE 0\n                END\n            ) \n        /\n        -- Here we sum the total time\n        SUM \n            (\n                statistics.minutes_in_status\n            )\n    ) * 100 AS uptime_mins_percent\nFROM \n    (\n            SELECT vm_id, vm_status, minutes_in_status, history_datetime\n            FROM v4_5_statistics_vms_resources_usage_hourly\n        UNION\n            SELECT vm_id, vm_status, minutes_in_status, history_datetime\n            FROM v4_5_statistics_vms_resources_usage_daily\n            WHERE\n                history_datetime <\n                    (\n                        SELECT MIN ( history_datetime )\n                        FROM v4_5_statistics_vms_resources_usage_hourly\n                    )\n    ) AS statistics\n    INNER JOIN \n    v4_5_configuration_history_vms\n        ON \n            (\n                v4_5_configuration_history_vms.vm_id =\n                statistics.vm_id\n            )\nWHERE\n    -- Here we filter by the vm chosen by the user\n    v4_5_configuration_history_vms.vm_id = ('$vm_id')\n    -- Show data only when the selected period is more then 24 hours back\n    AND $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the time range chosen by the user\n    AND statistics.history_datetime >= $__timeFrom()\n    AND statistics.history_datetime < $__timeTo()",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Uptime (EX05-8)",
      "type": "gauge"
    },
    {
      "datasource": "$datasource",
      "description": "The CPU usage percentage of the virtual machine. In the latest configuration.",
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 6,
        "y": 11
      },
      "id": 7,
      "options": {
        "fieldOptions": {
          "calcs": [
            "mean"
          ],
          "defaults": {
            "decimals": 2,
            "mappings": [],
            "max": 100,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "orange",
                  "value": 60
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [],
          "values": false
        },
        "orientation": "auto",
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "6.7.4",
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-9 - This query returns the average\n-- resources that are used ( cpu and memory )\n-- for the selected vm\n\nSELECT\n    cpu_usage_percent_avg AS average_cpu_used\nFROM \n    (\n        SELECT\n            AVG ( cpu_usage_percent ) AS cpu_usage_percent_avg\n        FROM \n            (\n                SELECT vm_id, vm_status, cpu_usage_percent\n                FROM v4_5_statistics_vms_resources_usage_samples\n                WHERE \n                    history_id\n                        IN\n                            (\n                                SELECT MAX (history_id)\n                                FROM v4_5_statistics_vms_resources_usage_samples\n                                GROUP BY vm_id\n                            )\n            ) AS statistics\n            INNER JOIN \n            v4_5_latest_configuration_vms\n                ON \n                    (\n                        v4_5_latest_configuration_vms.vm_id =\n                        statistics.vm_id\n                    )\n        WHERE\n            -- Here we get only active vm\n            statistics.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND v4_5_latest_configuration_vms.vm_id = ('$vm_id')\n    ) AS average_cpu_percent",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "CPU Usage (EX05-9)",
      "type": "gauge"
    },
    {
      "datasource": "$datasource",
      "description": "The Memory usage percentage of the virtual machine. In the latest configuration.",
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 12,
        "y": 11
      },
      "id": 8,
      "options": {
        "fieldOptions": {
          "calcs": [
            "mean"
          ],
          "defaults": {
            "decimals": 2,
            "mappings": [],
            "max": 100,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "orange",
                  "value": 60
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [],
          "values": false
        },
        "orientation": "auto",
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "6.7.4",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-10 - This query returns the average\n-- resources that are used ( cpu and memory )\n-- for the selected vm\n\nSELECT\n    memory_usage_percent_avg AS average_memory_used\nFROM \n    (\n        SELECT\n            AVG ( memory_usage_percent ) AS memory_usage_percent_avg\n        FROM \n            (\n                SELECT vm_id, vm_status, memory_usage_percent\n                FROM v4_5_statistics_vms_resources_usage_samples\n                WHERE \n                    history_id\n                        IN\n                            (\n                                SELECT MAX (history_id)\n                                FROM v4_5_statistics_vms_resources_usage_samples\n                                GROUP BY vm_id\n                            )\n            ) AS statistics\n            INNER JOIN \n            v4_5_latest_configuration_vms\n                ON \n                    (\n                        v4_5_latest_configuration_vms.vm_id =\n                        statistics.vm_id\n                    )\n        WHERE\n            -- Here we get only active vm\n            statistics.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND v4_5_latest_configuration_vms.vm_id = ('$vm_id')\n    ) AS average_memory_percent",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Memory Usage (EX05-10)",
      "type": "gauge"
    },
    {
      "cacheTimeout": null,
      "datasource": "$datasource",
      "description": "The Disks usage percentage of the virtual machine. In the latest configuration.",
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 18,
        "y": 11
      },
      "id": 18,
      "links": [],
      "options": {
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "defaults": {
            "decimals": 2,
            "mappings": [
              {
                "id": 0,
                "op": "=",
                "text": "N/A",
                "type": 1,
                "value": "null"
              }
            ],
            "nullValueMode": "connected",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#299c46",
                  "value": null
                },
                {
                  "color": "rgba(237, 129, 40, 0.89)",
                  "value": 0.6
                },
                {
                  "color": "#d44a3a",
                  "value": 0.8
                }
              ]
            },
            "unit": "percentunit"
          },
          "overrides": [],
          "values": false
        },
        "orientation": "horizontal",
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "6.7.4",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-11 \n\nSELECT \n    CASE \n        WHEN SUM (COALESCE ( vm_disk_size_mb, 0.00 )) = 0\n            THEN NULL\n        ELSE SUM (COALESCE ( vm_disk_actual_size_mb, 0.00 )) / SUM (COALESCE ( vm_disk_size_mb, 0.00 ))\n    END\nFROM\n    v4_5_configuration_history_vms\n    INNER JOIN \n    v4_5_configuration_history_vms_devices\n        ON\n            (\n                v4_5_configuration_history_vms_devices.vm_id =\n                v4_5_configuration_history_vms.vm_id\n                AND v4_5_configuration_history_vms_devices.history_id \n                    IN \n                        ( \n                            SELECT MAX (history_id) \n                            FROM v4_5_configuration_history_vms_devices \n                            WHERE type = 'disk' \n                            GROUP BY device_id\n                        )\n            )\n    INNER JOIN \n    v4_5_configuration_history_vms_disks\n        ON\n            (\n                v4_5_configuration_history_vms_disks.vm_disk_id =\n                v4_5_configuration_history_vms_devices.device_id\n            )\n    LEFT OUTER JOIN \n    v4_5_statistics_vms_disks_resources_usage_samples\n        ON\n            (\n                v4_5_statistics_vms_disks_resources_usage_samples.vm_disk_id =\n                v4_5_configuration_history_vms_disks.vm_disk_id\n                AND v4_5_statistics_vms_disks_resources_usage_samples.history_id\n                    IN\n                        (\n                            SELECT MAX (history_id)\n                            FROM v4_5_statistics_vms_disks_resources_usage_samples\n                            GROUP BY vm_disk_id\n                        )\n            )\nWHERE v4_5_configuration_history_vms.vm_id = ('$vm_id')",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Disk Usage (EX05-11)",
      "type": "gauge"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "The disks name, size, and used size of the virtual machine. In the latest configuration.",
      "fontSize": "100%",
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 12,
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": false
      },
      "styles": [
        {
          "alias": "Disk Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_disk_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Disk Size",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_disk_size_mb",
          "thresholds": [],
          "type": "number",
          "unit": "decgbytes"
        },
        {
          "alias": "Used Disk Size",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_disk_actual_size_mb",
          "thresholds": [],
          "type": "number",
          "unit": "decgbytes"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-12 \n\nSELECT DISTINCT\n    CASE          \n        WHEN v4_5_configuration_history_vms_disks.delete_date IS NULL  \t     \t    \n            THEN vm_disk_name \t \t\n        WHEN v4_5_configuration_history_vms_disks.delete_date IS NOT null  \t      \t    \n            THEN vm_disk_name || ' (Removed on ' || CAST ( CAST ( v4_5_configuration_history_vms_disks.delete_date AS date ) AS varchar ) || ')'  \n    END AS vm_disk_name,\n    CAST ( COALESCE ( vm_disk_size_mb, 0 ) AS float ) / 1024 AS vm_disk_size_mb,\n    CAST ( COALESCE ( vm_disk_actual_size_mb, 0 ) AS float ) / 1024 AS vm_disk_actual_size_mb\nFROM\n    v4_5_configuration_history_vms\n    INNER JOIN \n    v4_5_configuration_history_vms_devices\n        ON\n            (\n                v4_5_configuration_history_vms_devices.vm_id =\n                v4_5_configuration_history_vms.vm_id\n                AND v4_5_configuration_history_vms_devices.history_id \n                    IN \n                        ( \n                            SELECT MAX (history_id) \n                            FROM v4_5_configuration_history_vms_devices \n                            WHERE type = 'disk' \n                            GROUP BY device_id\n                        )\n            )\n    INNER JOIN \n    v4_5_configuration_history_vms_disks\n        ON\n            (\n                v4_5_configuration_history_vms_disks.vm_disk_id =\n                v4_5_configuration_history_vms_devices.device_id\n            )\n    LEFT OUTER JOIN\n    v4_5_statistics_vms_disks_resources_usage_samples\n        ON\n            (\n                v4_5_statistics_vms_disks_resources_usage_samples.vm_disk_id =\n                v4_5_configuration_history_vms_disks.vm_disk_id\n                AND v4_5_statistics_vms_disks_resources_usage_samples.history_id\n                    IN\n                        (\n                            SELECT MAX (history_id)\n                            FROM v4_5_statistics_vms_disks_resources_usage_samples\n                            GROUP BY vm_disk_id\n                        )\n            )\nWHERE \n    v4_5_configuration_history_vms.vm_id = ('$vm_id')\n    AND v4_5_configuration_history_vms_disks.history_id \n        IN\n            (\n                SELECT MAX (history_id)\n                FROM v4_5_configuration_history_vms_disks\n                GROUP BY vm_disk_id\n            )",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Disk Inventory (EX05-12)",
      "transform": "table",
      "type": "table"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "The latest virtual machine interfaces configuration details.",
      "fontSize": "100%",
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 26,
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Interface Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_interface_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Interface Type",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_interface_type",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Interface Mac Address",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "mac_address",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Logical Network",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "logical_network_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "IP",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "address",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Create Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "create_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Update Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "update_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-13 \n\nSELECT DISTINCT\n    CASE          \n        WHEN v4_5_configuration_history_vms_interfaces.delete_date IS NULL  \t     \t    \n            THEN vm_interface_name \t \t\n        WHEN v4_5_configuration_history_vms_interfaces.delete_date IS NOT null  \t      \t    \n            THEN vm_interface_name || ' (Removed on ' || CAST ( CAST ( v4_5_configuration_history_vms_interfaces.delete_date AS date ) AS varchar ) || ')'  \n    END AS vm_interface_name,\n    CASE\n        WHEN vm_interface_type = 0\n            THEN 'rt18139_pv'\n        WHEN vm_interface_type = 1\n            THEN 'rt18139'\n        WHEN vm_interface_type = 2\n            THEN 'e1000'\n        WHEN vm_interface_type = 3\n            THEN 'pv'\n        ELSE NULL\n    END AS vm_interface_type,\n    mac_address,\n    logical_network_name,\n    v4_5_configuration_history_vms_interfaces.create_date,\n    v4_5_configuration_history_vms_interfaces.update_date\nFROM \n    v4_5_configuration_history_vms_interfaces\n    INNER JOIN\n    v4_5_configuration_history_vms_devices\n        ON\n            (\n                v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                v4_5_configuration_history_vms_devices.device_id\n                AND type = 'interface'\n                AND v4_5_configuration_history_vms_interfaces.history_id\n                    IN\n                        (\n                            SELECT MAX (history_id)\n                            FROM v4_5_configuration_history_vms_interfaces\n                            GROUP BY vm_interface_id\n                        )\n            )\nWHERE \n    vm_id = ('$vm_id')",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Ethernet Interface Inventory (EX05-13)",
      "transform": "table",
      "type": "table"
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 25,
      "panels": [],
      "title": "Session Activity",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "This table details user Spice activity - time spent and resources used in the session in a selected data center and cluster within a selected period.",
      "fontSize": "100%",
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 28
      },
      "id": 37,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": true
      },
      "styles": [
        {
          "alias": "Session Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "history_datetime",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "User Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "user_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Session Length",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "session_time_in_minutes",
          "thresholds": [],
          "type": "number",
          "unit": "m"
        },
        {
          "alias": "CPU Usage",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "cpu_usage_percent",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "CPU Peak",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "max_cpu_usage",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "Memory Usage",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "memory_usage_percent",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "Memory Peak",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "max_memory_usage",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "User CPU Usage",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "user_cpu_usage_percent",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "User CPU Peak",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "max_user_cpu_usage_percent",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "System CPU Usage",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "system_cpu_usage_percent",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "System CPU Peak",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "max_system_cpu_usage_percent",
          "thresholds": [
            "80",
            "90"
          ],
          "type": "number",
          "unit": "percent"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-14 - This query returns for each VM in the specific data center , the\n-- hourly or daily statistics: session time, CPU and memory usage statistics.\n\nSELECT DISTINCT\n    history_datetime,\n    username AS user_name,\n    session_time_in_minutes,\n    cpu_usage_percent,\n    max_cpu_usage,\n    memory_usage_percent,\n    max_memory_usage,\n    user_cpu_usage_percent,\n    max_user_cpu_usage_percent,\n    system_cpu_usage_percent,\n    max_system_cpu_usage_percent\nFROM\n    (\n            SELECT history_datetime, vm_id, user_id, session_time_in_minutes, cpu_usage_percent, max_cpu_usage, memory_usage_percent, max_memory_usage, user_cpu_usage_percent, max_user_cpu_usage_percent, system_cpu_usage_percent, max_system_cpu_usage_percent\n            FROM v4_5_statistics_vms_users_usage_hourly\n        UNION\n            SELECT history_datetime, vm_id, user_id, session_time_in_minutes, cpu_usage_percent, max_cpu_usage, memory_usage_percent, max_memory_usage, user_cpu_usage_percent, max_user_cpu_usage_percent, system_cpu_usage_percent, max_system_cpu_usage_percent \n            FROM v4_5_statistics_vms_users_usage_daily\n            WHERE\n                history_datetime <\n                    (\n                        SELECT MIN ( history_datetime )\n                        FROM v4_5_statistics_vms_users_usage_hourly\n                    )\n    ) AS hourly_daily\n    LEFT OUTER JOIN v4_5_configuration_history_vms\n        ON \n            (\n                hourly_daily.vm_id =\n                v4_5_configuration_history_vms.vm_id\n            )\n    LEFT OUTER JOIN v4_5_configuration_history_clusters\n        ON \n            (\n                v4_5_configuration_history_vms.cluster_id =\n                v4_5_configuration_history_clusters.cluster_id\n                -- Here we get the latest cluster configurations\n                AND v4_5_configuration_history_clusters.history_id \n                    IN \n                        (\n                            SELECT MAX ( a.history_id )\n                            FROM v4_5_configuration_history_clusters a\n                            GROUP BY a.cluster_id\n                        )\n            )\n    LEFT OUTER JOIN v4_5_users_details_history\n        ON \n            (\n                hourly_daily.user_id =\n                v4_5_users_details_history.user_id\n            )\nWHERE\n    -- Here we filter by the datacenter chosen by the user\n    v4_5_configuration_history_vms.cluster_id \n        IN \n            (\n                SELECT cluster_id\n                FROM v4_5_configuration_history_clusters\n            )\n    -- Here we filter by the cluster chosen by the user\n    AND v4_5_configuration_history_vms.vm_id IN ('$vm_id')\n    -- Here we get the latest vm configurations\n    AND v4_5_configuration_history_vms.history_id \n        IN \n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_5_configuration_history_vms a\n                GROUP BY a.vm_id\n            )\n    AND history_datetime >= $__timeFrom()\n    AND history_datetime < $__timeTo()\n    -- This will determine if deleted entities will be included in the report,\n    -- according to the user selection for \"show_deleted\" parameter\n    AND \n        CASE\n            WHEN '$show_deleted'='Yes'\n                THEN 1=1\n            WHEN '$show_deleted'='No'\n                THEN v4_5_configuration_history_vms.delete_date isnull\n        END\nORDER BY\n    history_datetime,\n    username,\n    session_time_in_minutes DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": " ",
      "transform": "table",
      "type": "table"
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 40
      },
      "id": 23,
      "title": "Resource Usage Over Time",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "Average CPU usage and peaks of the virtual machine, over the selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 41
      },
      "hiddenSeries": false,
      "id": 14,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-15 - This query returns the\n-- VM average CPU usage and peaks\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(time),\n    CPU_Usage AS \"CPU Usage\",\n    CPU_Peak AS \"CPU Peak\"\nFROM \n    (\n        -- Here we get the vm Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage,\n            SUM ( COALESCE ( max_cpu_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Peak\n        FROM \n            (\n                SELECT history_datetime, cpu_usage_percent, minutes_in_status, cpu_usage_percent AS max_cpu_usage, vm_status, vm_id\n                FROM v4_5_statistics_vms_resources_usage_samples\n            ) AS samples_hourly_daily\n        WHERE\n            -- Here we filter by active vm only\n            samples_hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples_hourly_daily.vm_id = ('$vm_id')\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    time, \n    CPU_Usage, \n    CPU_Peak\nORDER BY time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-15 - This query returns the\n-- VM average CPU usage and peaks\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(time),\n    CPU_Usage AS \"CPU Usage\",\n    CPU_Peak AS \"CPU Peak\"\nFROM \n    (\n        -- Here we get the vm Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage,\n            SUM ( COALESCE ( max_cpu_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Peak\n        FROM \n            (\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_resources_usage_hourly\n                            )\n            ) AS samples_hourly_daily\n        WHERE\n            -- Here we filter by active vm only\n            samples_hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples_hourly_daily.vm_id = ('$vm_id')\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    time, \n    CPU_Usage, \n    CPU_Peak\nORDER BY time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average and Peak CPU Usage (over time) (EX05-15) ",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "Average memory usage and peaks of the virtual machine, over the selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 47
      },
      "hiddenSeries": false,
      "id": 20,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-16 - This query returns the\n-- VM average memory usage and peaks\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(time),\n    MEM_Usage AS \"Memory Usage\",\n    MEM_Peak AS \"Memory Peak\"\nFROM \n    (\n        -- Here we get the vm Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage,\n            SUM ( COALESCE ( max_memory_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Peak\n        FROM \n            (\n                SELECT history_datetime, memory_usage_percent, minutes_in_status, memory_usage_percent AS max_memory_usage, vm_status, vm_id\n                FROM v4_5_statistics_vms_resources_usage_samples\n            ) AS samples_hourly_daily\n        WHERE\n            -- Here we filter by active vm only\n            samples_hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples_hourly_daily.vm_id = ('$vm_id')\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    time, \n    MEM_Usage, \n    MEM_Peak\nORDER BY time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-16 - This query returns the\n-- VM average memory usage and peaks\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(time),\n    MEM_Usage AS \"Memory Usage\",\n    MEM_Peak AS \"Memory Peak\"\nFROM \n    (\n        -- Here we get the vm Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage,\n            SUM ( COALESCE ( max_memory_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Peak\n        FROM \n            (\n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_resources_usage_hourly\n                            )\n            ) AS samples_hourly_daily\n        WHERE\n            -- Here we filter by active vm only\n            samples_hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples_hourly_daily.vm_id = ('$vm_id')\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    time, \n    MEM_Usage, \n    MEM_Peak\nORDER BY time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average and Peak Memory Usage (over time) (EX05-16)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "Average read and write rates of the virtual machine disks, over the selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 53
      },
      "hiddenSeries": false,
      "id": 19,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-17 - This query returns the\n-- VM Disk Read_Rate, Write_Rate Usage\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(all_sub_queries.time),\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) AS disk_name,\n    AVG ( Read_Rate ) AS \"Read Rate\",\n    AVG ( Write_Rate ) AS \"Write Rate\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name || '*'\n            END AS disk_name,\n            history_datetime AS Time,\n            AVG ( CAST ( COALESCE ( read_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Read_Rate,\n            AVG ( CAST ( COALESCE ( write_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Write_Rate\n        FROM \n            (\n                SELECT history_datetime, vm_disk_id, read_rate_bytes_per_second, write_rate_bytes_per_second\n                FROM v4_5_statistics_vms_disks_resources_usage_samples\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vm disks configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            (\n                                SELECT history_datetime, vm_disk_id, vm_disk_status, read_rate_bytes_per_second, write_rate_bytes_per_second\n                                FROM v4_5_statistics_vms_disks_resources_usage_samples\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vm disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN \n                                                (\n                                                    SELECT history_datetime, vm_configuration_version, vm_status\n                                                    FROM v4_5_statistics_vms_resources_usage_samples\n                                                ) AS samples_hourly_daily\n                                                    ON\n                                                        (\n                                                            samples_hourly_daily.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vm only\n                                                samples_hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY \n                                                                a.vm_id, \n                                                                a.device_id\n                                                        )\n                                        )\n                                -- Here we filter by the time range chosen by the user\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( CAST ( COALESCE ( b.read_rate_bytes_per_second, 0 ) AS float ) ) +\n                                AVG ( CAST ( COALESCE ( b.write_rate_bytes_per_second, 0 ) AS float ) )\n                                DESC\n                    )\n        GROUP BY\n            statistics.vm_disk_id,\n            disk_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY\n    all_sub_queries.time,\n    disk_name\nORDER BY\n    all_sub_queries.time,\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' )",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-17 - This query returns the\n-- VM Disk Read_Rate, Write_Rate Usage\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(all_sub_queries.time),\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) AS disk_name,\n    AVG ( Read_Rate ) AS \"Read Rate\",\n    AVG ( Write_Rate ) AS \"Write Rate\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name || '*'\n            END AS disk_name,\n            history_datetime AS Time,\n            AVG ( CAST ( COALESCE ( read_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Read_Rate,\n            AVG ( CAST ( COALESCE ( write_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Write_Rate\n        FROM \n            (\n                    SELECT history_datetime, vm_disk_id, read_rate_bytes_per_second, write_rate_bytes_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_disk_id, read_rate_bytes_per_second, write_rate_bytes_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vm disks configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            (\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_rate_bytes_per_second, write_rate_bytes_per_second \n                                    FROM v4_5_statistics_vms_disks_resources_usage_hourly \n                                UNION\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_rate_bytes_per_second, write_rate_bytes_per_second\n                                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vm disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN \n                                                (\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_hourly\n                                                    UNION\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_daily\n                                                        WHERE\n                                                            history_datetime <\n                                                                (\n                                                                    SELECT MIN ( history_datetime )\n                                                                    FROM v4_5_statistics_vms_resources_usage_hourly\n                                                                )\n                                                ) AS samples_hourly_daily\n                                                    ON\n                                                        (\n                                                            samples_hourly_daily.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vm only\n                                                samples_hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY \n                                                                a.vm_id, \n                                                                a.device_id\n                                                        )\n                                        )\n                                -- Here we filter by the time range chosen by the user\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( CAST ( COALESCE ( b.read_rate_bytes_per_second, 0 ) AS float ) ) +\n                                AVG ( CAST ( COALESCE ( b.write_rate_bytes_per_second, 0 ) AS float ) )\n                                DESC\n                    )\n        GROUP BY\n            statistics.vm_disk_id,\n            disk_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    disk_name\nORDER BY\n    all_sub_queries.time,\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' )",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Disk Read and Write Rates (over time) (EX05-17)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "MBs",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "Average read and write operations per second of the virtual machine disks, over the selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 59
      },
      "hiddenSeries": false,
      "id": 33,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-18 - This query returns the\n-- VM Disk Read_ops, Write_ops Usage\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(all_sub_queries.time),\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) AS disk_name,\n    AVG ( Read_ops ) AS \"Read ops\",\n    AVG ( Write_ops ) AS \"Write ops\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name || '*'\n            END AS disk_name,\n            history_datetime AS Time,\n            AVG ( COALESCE ( read_ops_per_second, 0 ) ) AS Read_ops,\n            AVG ( COALESCE ( write_ops_per_second, 0 ) ) AS Write_ops\n        FROM \n            (\n                SELECT history_datetime, vm_disk_id, read_ops_per_second, write_ops_per_second\n                FROM v4_5_statistics_vms_disks_resources_usage_samples\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vm disks configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            (\n                                SELECT history_datetime, vm_disk_id, vm_disk_status, read_ops_per_second, write_ops_per_second\n                                FROM v4_5_statistics_vms_disks_resources_usage_samples\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vm disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN \n                                                (\n                                                    SELECT history_datetime, vm_configuration_version, vm_status\n                                                    FROM v4_5_statistics_vms_resources_usage_samples\n                                                ) AS samples_hourly_daily\n                                                    ON\n                                                        (\n                                                            samples_hourly_daily.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vm only\n                                                samples_hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY \n                                                                a.vm_id,\n                                                                a.device_id\n                                                        )\n                                        )\n                                -- Here we filter by the time range chosen by the user\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( COALESCE ( b.read_ops_per_second, 0 ) ) +\n                                AVG ( COALESCE ( b.write_ops_per_second, 0 ) ) \n                                DESC\n                    )\n        GROUP BY\n            statistics.vm_disk_id,\n            disk_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY\n    all_sub_queries.time,\n    disk_name\nORDER BY\n    all_sub_queries.time,\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' )",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-18 - This query returns the\n-- VM Disk Read_ops, Write_ops Usage\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(all_sub_queries.time),\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) AS disk_name,\n    AVG ( Read_ops ) AS \"Read ops\",\n    AVG ( Write_ops ) AS \"Write ops\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name || '*'\n            END AS disk_name,\n            history_datetime AS Time,\n            AVG ( COALESCE ( read_ops_per_second, 0 ) ) AS Read_ops,\n            AVG ( COALESCE ( write_ops_per_second, 0 ) ) AS Write_ops\n        FROM \n            (\n                    SELECT history_datetime, vm_disk_id, read_ops_per_second, write_ops_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_disk_id, read_ops_per_second, write_ops_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n            -- Here we filter by the time range chosen by the user\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vm disks configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            (\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_ops_per_second, write_ops_per_second \n                                    FROM v4_5_statistics_vms_disks_resources_usage_hourly \n                                UNION\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_ops_per_second, write_ops_per_second\n                                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vm disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN \n                                                (\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_hourly\n                                                    UNION\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_daily\n                                                        WHERE\n                                                            history_datetime <\n                                                                (\n                                                                    SELECT MIN ( history_datetime )\n                                                                    FROM v4_5_statistics_vms_resources_usage_hourly\n                                                                )\n                                                ) AS samples_hourly_daily\n                                                    ON\n                                                        (\n                                                            samples_hourly_daily.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vm only\n                                                samples_hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY \n                                                                a.vm_id,\n                                                                a.device_id\n                                                        )\n                                        )\n                                -- Here we filter by the time range chosen by the user\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( COALESCE ( b.read_ops_per_second, 0 ) ) +\n                                AVG ( COALESCE ( b.write_ops_per_second, 0 ) ) \n                                DESC\n                    )\n        GROUP BY\n            statistics.vm_disk_id,\n            disk_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    disk_name\nORDER BY\n    all_sub_queries.time,\n    COALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' )",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Disk I/O operations/sec (over time) (EX05-18)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "ops",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "Average transmit and receive rates of the virtual machine interfaces, over the selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 65
      },
      "hiddenSeries": false,
      "id": 21,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-19 - This query returns the\n-- VM Ethernet Interface Tx and Rx Rates\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) AS interface_name,\n    AVG ( Rx_rate ) AS \"Rx. Rate\",\n    AVG ( Tx_rate ) AS \"Tx. Rate\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name || '*'\n            END AS interface_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM \n            (    \n                SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                FROM v4_5_statistics_vms_interfaces_resources_usage_samples\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n        WHERE \n            -- Here we filter by the time range chosen by the user\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                                FROM v4_5_statistics_vms_interfaces_resources_usage_samples\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            -- Here we filter by the vm chosen by the user\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            (\n                                                SELECT history_datetime, vm_configuration_version, vm_status\n                                                FROM v4_5_statistics_vms_resources_usage_samples\n                                            ) AS samples\n                                                ON \n                                                    (\n                                                        samples.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE \n                                            -- Here we filter by active vm only\n                                            samples.vm_status = 1\n                                            -- Here we filter by the vm chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                            AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm devices configuration\n                                            AND v4_5_configuration_history_vms_devices.history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY \n                                                            a.vm_id,\n                                                            a.device_id\n                                                    )\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                            AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                            DESC\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    interface_name\nORDER BY all_sub_queries.time ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-19 - This query returns the\n-- VM Ethernet Interface Tx and Rx Rates\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) AS interface_name,\n    AVG ( Rx_rate ) AS \"Rx. Rate\",\n    AVG ( Tx_rate ) AS \"Tx. Rate\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name || '*'\n            END AS interface_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM \n            (\n                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n        WHERE \n            -- Here we filter by the time range chosen by the user\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            -- Here we filter by the vm chosen by the user\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            (\n                                                    SELECT history_datetime, vm_configuration_version, vm_status \n                                                    FROM v4_5_statistics_vms_resources_usage_hourly \n                                                UNION\n                                                    SELECT history_datetime, vm_configuration_version, vm_status\n                                                    FROM v4_5_statistics_vms_resources_usage_daily\n                                                    WHERE\n                                                        history_datetime <\n                                                            (\n                                                                SELECT MIN ( history_datetime )\n                                                                FROM v4_5_statistics_vms_resources_usage_hourly\n                                                            )\n                                            ) AS hourly_daily\n                                                ON \n                                                    (\n                                                        hourly_daily.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE \n                                            -- Here we filter by active vm only\n                                            hourly_daily.vm_status = 1\n                                            -- Here we filter by the vm chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                            AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm devices configuration\n                                            AND v4_5_configuration_history_vms_devices.history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY \n                                                            a.vm_id,\n                                                            a.device_id\n                                                    )\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                            AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                            DESC\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    interface_name\nORDER BY all_sub_queries.time ASC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Ethernet Interface Tx and Rx Rates (over time) (EX05-19) ",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "Average transmitted and received total dropped packets of the virtual machine interfaces, over the selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 71
      },
      "hiddenSeries": false,
      "id": 40,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-20 - This query returns the VM Ethernet Interface \n-- average Tx and Rx total dropped packets, over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) AS interface_name,\n    AVG ( Rx_drop ) AS \"Rx. Drop\",\n    AVG ( Tx_drop ) AS \"Tx. Drop\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name || '*'\n            END AS interface_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( received_dropped_total_packets, 0 ) ) AS Rx_drop,\n            AVG ( COALESCE ( transmitted_dropped_total_packets, 0 ) ) AS Tx_drop\n        FROM \n            (    \n                SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                FROM v4_5_statistics_vms_interfaces_resources_usage_samples\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n        WHERE \n            -- Here we filter by the time range chosen by the user\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                                FROM v4_5_statistics_vms_interfaces_resources_usage_samples\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            -- Here we filter by the vm chosen by the user\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            (\n                                                SELECT history_datetime, vm_configuration_version, vm_status\n                                                FROM v4_5_statistics_vms_resources_usage_samples\n                                            ) AS samples\n                                                ON \n                                                    (\n                                                        samples.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE \n                                            -- Here we filter by active vm only\n                                            samples.vm_status = 1\n                                            -- Here we filter by the vm chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                            AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm devices configuration\n                                            AND v4_5_configuration_history_vms_devices.history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY \n                                                            a.vm_id,\n                                                            a.device_id\n                                                    )\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.received_dropped_total_packets, 0 ) ) +\n                            AVG ( COALESCE ( b.transmitted_dropped_total_packets, 0 ) ) \n                            DESC\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    interface_name\nORDER BY all_sub_queries.time ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- EX05-20 - This query returns the VM Ethernet Interface \n-- average Tx and Rx total dropped packets, over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) AS interface_name,\n    AVG ( Rx_drop ) AS \"Rx. Drop\",\n    AVG ( Tx_drop ) AS \"Tx. Drop\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name || '*'\n            END AS interface_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( received_dropped_total_packets, 0 ) ) AS Rx_drop,\n            AVG ( COALESCE ( transmitted_dropped_total_packets, 0 ) ) AS Tx_drop\n        FROM \n            (\n                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n        WHERE \n            -- Here we filter by the time range chosen by the user\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            -- Here we filter by the vm chosen by the user\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            (\n                                                    SELECT history_datetime, vm_configuration_version, vm_status \n                                                    FROM v4_5_statistics_vms_resources_usage_hourly \n                                                UNION\n                                                    SELECT history_datetime, vm_configuration_version, vm_status\n                                                    FROM v4_5_statistics_vms_resources_usage_daily\n                                                    WHERE\n                                                        history_datetime <\n                                                            (\n                                                                SELECT MIN ( history_datetime )\n                                                                FROM v4_5_statistics_vms_resources_usage_hourly\n                                                            )\n                                            ) AS hourly_daily\n                                                ON \n                                                    (\n                                                        hourly_daily.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE \n                                            -- Here we filter by active vm only\n                                            hourly_daily.vm_status = 1\n                                            -- Here we filter by the vm chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id = ('$vm_id')\n                                            AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm devices configuration\n                                            AND v4_5_configuration_history_vms_devices.history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY \n                                                            a.vm_id,\n                                                            a.device_id\n                                                    )\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.received_dropped_total_packets, 0 ) ) +\n                            AVG ( COALESCE ( b.transmitted_dropped_total_packets, 0 ) ) \n                            DESC\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    interface_name\nORDER BY all_sub_queries.time ASC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Ethernet Interface Tx and Rx Dropped Packets (over time) (EX05-20) ",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "VM",
    "CPU",
    "Memory",
    "Disk",
    "Interface",
    "Uptime",
    "HA"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "tags": [],
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Show Deleted Entities?",
        "multi": false,
        "name": "show_deleted",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "No"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          }
        ],
        "query": "No,Yes",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( vm_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN vm_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_5_configuration_history_vms  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \t \t\t\t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t   \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_5_configuration_history_vms.delete_date ISNULL \t                \n        END",
        "hide": 0,
        "includeAll": false,
        "index": -1,
        "label": "Virtual Machine",
        "multi": false,
        "name": "vm_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( vm_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN vm_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_5_configuration_history_vms  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \t \t\t\t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t   \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_5_configuration_history_vms.delete_date ISNULL \t                \n        END",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT vm_name\nFROM v4_5_configuration_history_vms\nWHERE\n    vm_id IN ('$vm_id')\n    AND history_id\n        IN\n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_5_configuration_history_vms a\n                 GROUP BY a.vm_id\n            )\n    AND delete_date IS NULL",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "vm_name_url",
        "options": [],
        "query": "SELECT DISTINCT vm_name\nFROM v4_5_configuration_history_vms\nWHERE\n    vm_id IN ('$vm_id')\n    AND history_id\n        IN\n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_5_configuration_history_vms a\n                 GROUP BY a.vm_id\n            )\n    AND delete_date IS NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "05 Virtual Machine Dashboard",
  "uid": "VirtualMachineDashboard",
  "variables": {
    "list": []
  },
  "version": 1
}