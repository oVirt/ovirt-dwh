{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "singlestat",
      "name": "Singlestat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The cluster quality of service - virtual machines dashboard contains reports that shows the time and total time each virtual machine have performed above/below the CPU or the memory threshold, using a single stats and a table.",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1591263547794,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Virtual Machines",
      "tooltip": "The portal does not display deleted virtual machines",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#vms"
    }
  ],
  "panels": [
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 17,
      "title": "Description",
      "type": "row"
    },
    {
      "content": "\n###### This dashboard contains reports that shows the time and total time each virtual machine have performed above/below the CPU/memory threshold.\n\n\n",
      "datasource": "$datasource",
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 13,
      "links": [],
      "mode": "markdown",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 15,
      "title": "Reports",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 2,
      "description": "This report displays the time virtual machines have performed above CPU threshold.",
      "format": "m",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 0,
        "y": 4
      },
      "id": 11,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "Time Above CPU Threshold",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL05-1 - VMs cpu and memory performance\n-- in relation to the thresholds set by the user\n\n-- Time above CPU threshold\nSELECT  \n    CASE \n        -- Show data only when the selected period is up to 24 hours back\n        WHEN $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( cpu_above ), 0 ) AS cpu_above\n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN cpu_usage_percent >= '$cpu_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS cpu_above\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        cpu_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                            SELECT history_datetime, vm_id, cpu_usage_percent, minutes_in_status, vm_status \n                                            FROM v4_4_statistics_vms_resources_usage_samples\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS samples_sub_queries\n                )\n        -- Show data only when the selected period is more then 24 hours back\n        WHEN $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( cpu_above ), 0 ) AS cpu_above \n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN cpu_usage_percent >= '$cpu_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS cpu_above\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        cpu_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                                SELECT history_datetime, vm_id, cpu_usage_percent, minutes_in_status, vm_status \n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            UNION\n                                                SELECT history_datetime, vm_id, cpu_usage_percent, minutes_in_status, vm_status\n                                                FROM v4_4_statistics_vms_resources_usage_daily\n                                                WHERE\n                                                    history_datetime <\n                                                        (\n                                                            SELECT MIN ( history_datetime )\n                                                            FROM v4_4_statistics_vms_resources_usage_hourly\n                                                        )\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS hourly_daily_sub_queries\n                )\n    END",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Time Above CPU Threshold (SL05-1)",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 2,
      "description": "This report displays the time virtual machines have performed above memory threshold.",
      "format": "m",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 8,
        "x": 7,
        "y": 4
      },
      "id": 10,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "Time Above Memory Threshold",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL05-2 - VMs cpu and memory performance\n-- in relation to the thresholds set by the user\n\n-- Time above memory threshold\nSELECT  \n    CASE \n        -- Show data only when the selected period is up to 24 hours back\n        WHEN $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( mem_above ), 0 ) AS mem_above\n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN memory_usage_percent >= '$mem_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS mem_above\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        memory_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                            SELECT history_datetime, vm_id, memory_usage_percent, minutes_in_status, vm_status \n                                            FROM v4_4_statistics_vms_resources_usage_samples\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS samples_sub_queries\n                )\n        -- Show data only when the selected period is more then 24 hours back\n        WHEN $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( mem_above ), 0 ) AS mem_above \n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN memory_usage_percent >= '$mem_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS mem_above\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        memory_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                                SELECT history_datetime, vm_id, memory_usage_percent, minutes_in_status, vm_status \n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            UNION\n                                                SELECT history_datetime, vm_id, memory_usage_percent, minutes_in_status, vm_status\n                                                FROM v4_4_statistics_vms_resources_usage_daily\n                                                WHERE\n                                                    history_datetime <\n                                                        (\n                                                            SELECT MIN ( history_datetime )\n                                                            FROM v4_4_statistics_vms_resources_usage_hourly\n                                                        )\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS hourly_daily_sub_queries\n                )\n    END",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Time Above Memory Threshold (SL05-2)",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 2,
      "description": "This report displays the time virtual machines have performed below CPU threshold.",
      "format": "m",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 7,
        "x": 0,
        "y": 6
      },
      "id": 8,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "Time Below CPU Threshold",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL05-3 - VMs cpu and memory performance\n-- in relation to the thresholds set by the user\n\n-- Time below CPU threshold\nSELECT  \n    CASE \n        -- Show data only when the selected period is up to 24 hours back\n        WHEN $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( cpu_below ), 0 ) AS cpu_below\n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN cpu_usage_percent < '$cpu_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS cpu_below\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        cpu_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                            SELECT history_datetime, vm_id, cpu_usage_percent, minutes_in_status, vm_status \n                                            FROM v4_4_statistics_vms_resources_usage_samples\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS samples_sub_queries\n                )\n        -- Show data only when the selected period is more then 24 hours back\n        WHEN $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( cpu_below ), 0 ) AS cpu_below \n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN cpu_usage_percent < '$cpu_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS cpu_below\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        cpu_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                                SELECT history_datetime, vm_id, cpu_usage_percent, minutes_in_status, vm_status \n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            UNION\n                                                SELECT history_datetime, vm_id, cpu_usage_percent, minutes_in_status, vm_status\n                                                FROM v4_4_statistics_vms_resources_usage_daily\n                                                WHERE\n                                                    history_datetime <\n                                                        (\n                                                            SELECT MIN ( history_datetime )\n                                                            FROM v4_4_statistics_vms_resources_usage_hourly\n                                                        )\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS hourly_daily_sub_queries\n                )\n    END",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Time Below CPU Threshold (SL05-3)",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "$datasource",
      "decimals": 2,
      "description": "This report displays the time virtual machines have performed below memory threshold.",
      "format": "m",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 8,
        "x": 7,
        "y": 6
      },
      "id": 9,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "Time Below Memory Threshold",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL05-4 - VMs cpu and memory performance\n-- in relation to the thresholds set by the user\n\n-- Time below memory threshold\nSELECT  \n    CASE \n        -- Show data only when the selected period is up to 24 hours back\n        WHEN $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( mem_below ), 0 ) AS mem_below\n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN memory_usage_percent < '$mem_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS mem_below\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        memory_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                            SELECT history_datetime, vm_id, memory_usage_percent, minutes_in_status, vm_status \n                                            FROM v4_4_statistics_vms_resources_usage_samples\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS samples_sub_queries\n                )\n        -- Show data only when the selected period is more then 24 hours back\n        WHEN $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n            THEN\n                (\n                    SELECT\n                        COALESCE ( AVG ( mem_below ), 0 ) AS mem_below \n                    FROM \n                        (\n                            SELECT\n                                SUM \n                                    (\n                                        CASE\n                                            WHEN memory_usage_percent < '$mem_threshold'\n                                                THEN minutes_in_status\n                                            ELSE 0\n                                        END\n                                    ) AS mem_below\n                            FROM \n                                (\n                                    SELECT DISTINCT\n                                        v4_4_configuration_history_vms.vm_id,\n                                        history_datetime,\n                                        memory_usage_percent,\n                                        minutes_in_status\n                                    FROM\n                                        (\n                                                SELECT history_datetime, vm_id, memory_usage_percent, minutes_in_status, vm_status \n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            UNION\n                                                SELECT history_datetime, vm_id, memory_usage_percent, minutes_in_status, vm_status\n                                                FROM v4_4_statistics_vms_resources_usage_daily\n                                                WHERE\n                                                    history_datetime <\n                                                        (\n                                                            SELECT MIN ( history_datetime )\n                                                            FROM v4_4_statistics_vms_resources_usage_hourly\n                                                        )\n                                        ) AS stats_vms\n                                        INNER JOIN v4_4_configuration_history_vms\n                                            ON \n                                                (\n                                                    v4_4_configuration_history_vms.vm_id =\n                                                    stats_vms.vm_id\n                                                )\n                                    WHERE\n                                        -- Here we filter only vm in active status\n                                        stats_vms.vm_status = 1\n                                        -- Here we filter by the datacenter chosen by the users\n                                        AND v4_4_configuration_history_vms.cluster_id \n                                            IN \n                                                (\n                                                    SELECT cluster_id\n                                                    FROM v4_4_configuration_history_clusters\n                                                    WHERE datacenter_id IN ($datacenter_id)\n                                                )\n                                        -- Here we filter by the virtual machine/s chosen by the user\n                                        AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                                        -- Here we get the latest vm configurations\n                                        AND v4_4_configuration_history_vms.history_id \n                                            IN \n                                                (\n                                                    SELECT MAX ( a.history_id )\n                                                    FROM v4_4_configuration_history_vms a\n                                                    GROUP BY a.vm_id\n                                                )\n                                        AND history_datetime >= $__timeFrom()\n                                        AND history_datetime < $__timeTo()\n                                        -- This will determine if deleted entities will be included in the report,\n                                        -- according to the user selection for \"show_deleted\" parameter\n                                        AND\n                                            CASE\n                                                WHEN '$show_deleted'='Yes'\n                                                    THEN 1=1\n                                                WHEN '$show_deleted'='No'\n                                                    THEN delete_date isnull\n                                            END\n                                ) AS sub_query\n                            GROUP BY vm_id\n                        ) AS hourly_daily_sub_queries\n                )\n    END",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Time Below Memory Threshold (SL05-4)",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "avg"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "This report displays the total time each virtual machine have performed above the CPU or the memory threshold.",
      "fontSize": "100%",
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 6,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 5,
        "desc": true
      },
      "styles": [
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "is_delete",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "cluster_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "VM Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "Link to Virtual Machine Dashboard",
          "linkUrl": "/ovirt-engine-grafana/d/VirtualMachineDashboard/virtual-machine-dashboard?orgId=1&var-datasource=$datasource&var-show_deleted=${__cell_0}&var-vm_id=${__cell_2}",
          "mappingType": 1,
          "pattern": "vm_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "VM Delete Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_delete_only_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Time Above CPU Threshold",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "time_above_cpu_threshold",
          "thresholds": [],
          "type": "number",
          "unit": "m"
        },
        {
          "alias": "Time Above Memory Threshold",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "time_above_mem_threshold",
          "thresholds": [],
          "type": "number",
          "unit": "m"
        },
        {
          "alias": "Overall VM Time",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "overall_vm_time",
          "thresholds": [],
          "type": "number",
          "unit": "m"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL05-5 - Cluster Quality of Service - Virtual Machines\n-- This query returns for each vm in the specific datacenter,\n-- the  \"time_above_cpu_threshold\", the \"time_above_mem_threshold\"\n-- and the \"overall_vm_time\".\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT *\nFROM \n    (\n        SELECT\n            is_delete,\n            cluster_id,\n            vm_id,\n            vm_name,\n            vm_delete_only_date,\n            SUM \n                (\n                    CASE\n                        WHEN cpu_usage_percent >= '$cpu_threshold'\n                            THEN minutes_in_status\n                        ELSE 0\n                    END\n                ) AS time_above_cpu_threshold,\n            SUM \n                (\n                    CASE\n                        WHEN memory_usage_percent >= '$mem_threshold'\n                            THEN minutes_in_status\n                        ELSE 0\n                    END\n                ) AS time_above_mem_threshold,\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS overall_vm_time\n        FROM \n            (\n                SELECT DISTINCT\n                    v4_4_configuration_history_vms.cluster_id,\n                    v4_4_configuration_history_vms.vm_id,\n                    v4_4_configuration_history_vms.vm_name,\n                    (\n                        CASE\n                            WHEN v4_4_configuration_history_vms.delete_date IS NULL\n                                THEN 'No'\n                            WHEN v4_4_configuration_history_vms.delete_date IS NOT NULL\n                                THEN 'Yes'\n                        END\n                    ) AS is_delete,\n                    CAST ( v4_4_configuration_history_vms.delete_date AS date ) AS vm_delete_only_date,\n                    stats_vms.history_datetime,\n                    cpu_usage_percent,\n                    memory_usage_percent,\n                    minutes_in_status\n                FROM\n                    (\n                        SELECT history_datetime, vm_id, cpu_usage_percent, memory_usage_percent, minutes_in_status, vm_status \n                        FROM v4_4_statistics_vms_resources_usage_samples\n                    ) AS stats_vms\n                    INNER JOIN v4_4_configuration_history_vms\n                        ON \n                            (\n                                stats_vms.vm_id =\n                                v4_4_configuration_history_vms.vm_id\n                            )\n                WHERE\n                    -- Here we get only vms in active status\n                    stats_vms.vm_status = 1\n                    -- Here we filter by the datacenter chosen by the user\n                    AND v4_4_configuration_history_vms.cluster_id \n                        IN \n                            (\n                                SELECT cluster_id\n                                FROM v4_4_configuration_history_clusters\n                                WHERE datacenter_id IN ($datacenter_id)\n                            )\n                    -- Here we filter by the virtual machine/s chosen by the user\n                    AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                    -- Here we get the latest vm configurations\n                    AND v4_4_configuration_history_vms.history_id \n                        IN \n                            (\n                                SELECT MAX ( a.history_id )\n                                FROM v4_4_configuration_history_vms a\n                                GROUP BY a.vm_id\n                            )\n                    AND stats_vms.history_datetime >= $__timeFrom()\n                    AND stats_vms.history_datetime < $__timeTo()\n                    -- This will determine if deleted entities will be included in the report,\n                    -- according to the user selection for \"show_deleted\" parameter\n                    AND\n                        CASE\n                            WHEN '$show_deleted'='Yes'\n                                THEN 1=1\n                            WHEN '$show_deleted'='No'\n                                THEN delete_date isnull\n                        END\n            ) AS sub_query\n        GROUP BY\n            cluster_id,\n            vm_id,\n            vm_name,\n            is_delete,\n            vm_delete_only_date\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY\n    cluster_id,\n    (\n        CASE\n            WHEN time_above_mem_threshold = 0 AND time_above_cpu_threshold = 0\n                THEN 1 -- Memory and cpu are below the threshold\n            ELSE 0 -- Memory and / or cpu are above threshold\n        END\n    ) ASC,\n    all_sub_queries.is_delete ASC,\n    -- This will order the vms based on the time the memory and cpu\n    -- where above the threshold out of the overall vm time.\n    ( CAST ( all_sub_queries.time_above_cpu_threshold AS float ) / CAST ( all_sub_queries.overall_vm_time AS float ) ) * 100 +\n    ( CAST ( all_sub_queries.time_above_mem_threshold AS float ) / CAST ( all_sub_queries.overall_vm_time AS float ) ) *100 DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL05-5 - Cluster Quality of Service - Virtual Machines\n-- This query returns for each vm in the specific datacenter,\n-- the  \"time_above_cpu_threshold\", the \"time_above_mem_threshold\"\n-- and the \"overall_vm_time\".\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT *\nFROM \n    (\n        SELECT\n            is_delete,\n            cluster_id,\n            vm_id,\n            vm_name,\n            vm_delete_only_date,\n            SUM \n                (\n                    CASE\n                        WHEN cpu_usage_percent >= '$cpu_threshold'\n                            THEN minutes_in_status\n                        ELSE 0\n                    END\n                ) AS time_above_cpu_threshold,\n            SUM \n                (\n                    CASE\n                        WHEN memory_usage_percent >= '$mem_threshold'\n                            THEN minutes_in_status\n                        ELSE 0\n                    END\n                ) AS time_above_mem_threshold,\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS overall_vm_time\n        FROM \n            (\n                SELECT DISTINCT\n                    v4_4_configuration_history_vms.cluster_id,\n                    v4_4_configuration_history_vms.vm_id,\n                    v4_4_configuration_history_vms.vm_name,\n                    (\n                        CASE\n                            WHEN v4_4_configuration_history_vms.delete_date IS NULL\n                                THEN 'No'\n                            WHEN v4_4_configuration_history_vms.delete_date IS NOT NULL\n                                THEN 'Yes'\n                        END\n                    ) AS is_delete,\n                    CAST ( v4_4_configuration_history_vms.delete_date AS date ) AS vm_delete_only_date,\n                    stats_vms.history_datetime,\n                    cpu_usage_percent,\n                    memory_usage_percent,\n                    minutes_in_status\n                FROM\n                    (\n                            SELECT history_datetime, vm_id, cpu_usage_percent, memory_usage_percent, minutes_in_status, vm_status \n                            FROM v4_4_statistics_vms_resources_usage_hourly\n                        UNION\n                            SELECT history_datetime, vm_id, cpu_usage_percent, memory_usage_percent, minutes_in_status, vm_status\n                            FROM v4_4_statistics_vms_resources_usage_daily\n                            WHERE\n                                history_datetime <\n                                    (\n                                        SELECT MIN ( history_datetime )\n                                        FROM v4_4_statistics_vms_resources_usage_hourly\n                                    )\n                    ) AS stats_vms\n                    INNER JOIN v4_4_configuration_history_vms\n                        ON \n                            (\n                                stats_vms.vm_id =\n                                v4_4_configuration_history_vms.vm_id\n                            )\n                WHERE\n                    -- Here we get only vms in active status\n                    stats_vms.vm_status = 1\n                    -- Here we filter by the datacenter chosen by the user\n                    AND v4_4_configuration_history_vms.cluster_id \n                        IN \n                            (\n                                SELECT cluster_id\n                                FROM v4_4_configuration_history_clusters\n                                WHERE datacenter_id IN ($datacenter_id)\n                            )\n                    -- Here we filter by the virtual machine/s chosen by the user\n                    AND v4_4_configuration_history_vms.vm_id IN ($vm_id)\n                    -- Here we get the latest vm configurations\n                    AND v4_4_configuration_history_vms.history_id \n                        IN \n                            (\n                                SELECT MAX ( a.history_id )\n                                FROM v4_4_configuration_history_vms a\n                                GROUP BY a.vm_id\n                            )\n                    AND stats_vms.history_datetime >= $__timeFrom()\n                    AND stats_vms.history_datetime < $__timeTo()\n                    -- This will determine if deleted entities will be included in the report,\n                    -- according to the user selection for \"show_deleted\" parameter\n                    AND\n                        CASE\n                            WHEN '$show_deleted'='Yes'\n                                THEN 1=1\n                            WHEN '$show_deleted'='No'\n                                THEN delete_date isnull\n                        END\n            ) AS sub_query\n        GROUP BY\n            cluster_id,\n            vm_id,\n            vm_name,\n            is_delete,\n            vm_delete_only_date\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY\n    cluster_id,\n    (\n        CASE\n            WHEN time_above_mem_threshold = 0 AND time_above_cpu_threshold = 0\n                THEN 1 -- Memory and cpu are below the threshold\n            ELSE 0 -- Memory and / or cpu are above threshold\n        END\n    ) ASC,\n    all_sub_queries.is_delete ASC,\n    -- This will order the vms based on the time the memory and cpu\n    -- where above the threshold out of the overall vm time.\n    ( CAST ( all_sub_queries.time_above_cpu_threshold AS float ) / CAST ( all_sub_queries.overall_vm_time AS float ) ) * 100 +\n    ( CAST ( all_sub_queries.time_above_mem_threshold AS float ) / CAST ( all_sub_queries.overall_vm_time AS float ) ) *100 DESC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Cluster Quality of Service - Virtual Machines (SL05-5)",
      "transform": "table",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "VM",
    "Cluster",
    "CPU",
    "Memory"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Show Deleted Entities?",
        "multi": false,
        "name": "show_deleted",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "No"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          }
        ],
        "query": "No, Yes",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,   \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t \t\t\t\t\t\n            ) \t \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                \n    END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Data Center",
        "multi": true,
        "name": "datacenter_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,   \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t \t\t\t\t\t\n            ) \t \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                \n    END",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND cluster_id  \t         \t\t    \n        IN \t\t\t     \t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\n                SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t\n                FROM v4_4_configuration_history_vms \t\t\t\t \t\t\t\t\n            ) \t \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Cluster",
        "multi": true,
        "name": "cluster_id",
        "options": [],
        "query": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND cluster_id  \t         \t\t    \n        IN \t\t\t     \t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\n                SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t\n                FROM v4_4_configuration_history_vms \t\t\t\t \t\t\t\t\n            ) \t \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT        \n    CAST ( vm_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN vm_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_vms  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \t \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_vms.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND cluster_id IN ($cluster_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Virtual Machine",
        "multi": true,
        "name": "vm_id",
        "options": [],
        "query": "SELECT DISTINCT        \n    CAST ( vm_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN vm_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_vms  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \t \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_vms.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND cluster_id IN ($cluster_id)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "60",
          "value": "60"
        },
        "hide": 0,
        "includeAll": false,
        "label": "CPU Threshold",
        "multi": false,
        "name": "cpu_threshold",
        "options": [
          {
            "selected": false,
            "text": "0",
            "value": "0"
          },
          {
            "selected": false,
            "text": "5",
            "value": "5"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          {
            "selected": false,
            "text": "15",
            "value": "15"
          },
          {
            "selected": false,
            "text": "20",
            "value": "20"
          },
          {
            "selected": false,
            "text": "25",
            "value": "25"
          },
          {
            "selected": false,
            "text": "30",
            "value": "30"
          },
          {
            "selected": false,
            "text": "35",
            "value": "35"
          },
          {
            "selected": false,
            "text": "40",
            "value": "40"
          },
          {
            "selected": false,
            "text": "45",
            "value": "45"
          },
          {
            "selected": false,
            "text": "50",
            "value": "50"
          },
          {
            "selected": false,
            "text": "55",
            "value": "55"
          },
          {
            "selected": true,
            "text": "60",
            "value": "60"
          },
          {
            "selected": false,
            "text": "65",
            "value": "65"
          },
          {
            "selected": false,
            "text": "70",
            "value": "70"
          },
          {
            "selected": false,
            "text": "75",
            "value": "75"
          },
          {
            "selected": false,
            "text": "80",
            "value": "80"
          },
          {
            "selected": false,
            "text": "85",
            "value": "85"
          },
          {
            "selected": false,
            "text": "90",
            "value": "90"
          },
          {
            "selected": false,
            "text": "95",
            "value": "95"
          },
          {
            "selected": false,
            "text": "100",
            "value": "100"
          }
        ],
        "query": "0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "tags": [],
          "text": "60",
          "value": "60"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Memory Threshold",
        "multi": false,
        "name": "mem_threshold",
        "options": [
          {
            "selected": false,
            "text": "0",
            "value": "0"
          },
          {
            "selected": false,
            "text": "5",
            "value": "5"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          {
            "selected": false,
            "text": "15",
            "value": "15"
          },
          {
            "selected": false,
            "text": "20",
            "value": "20"
          },
          {
            "selected": false,
            "text": "25",
            "value": "25"
          },
          {
            "selected": false,
            "text": "30",
            "value": "30"
          },
          {
            "selected": false,
            "text": "35",
            "value": "35"
          },
          {
            "selected": false,
            "text": "40",
            "value": "40"
          },
          {
            "selected": false,
            "text": "45",
            "value": "45"
          },
          {
            "selected": false,
            "text": "50",
            "value": "50"
          },
          {
            "selected": false,
            "text": "55",
            "value": "55"
          },
          {
            "selected": true,
            "text": "60",
            "value": "60"
          },
          {
            "selected": false,
            "text": "65",
            "value": "65"
          },
          {
            "selected": false,
            "text": "70",
            "value": "70"
          },
          {
            "selected": false,
            "text": "75",
            "value": "75"
          },
          {
            "selected": false,
            "text": "80",
            "value": "80"
          },
          {
            "selected": false,
            "text": "85",
            "value": "85"
          },
          {
            "selected": false,
            "text": "90",
            "value": "90"
          },
          {
            "selected": false,
            "text": "95",
            "value": "95"
          },
          {
            "selected": false,
            "text": "100",
            "value": "100"
          }
        ],
        "query": "0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "05 Cluster Quality of Service - Virtual Machines Dashboard",
  "uid": "ClusterQualityofServiceVMs",
  "variables": {
    "list": []
  },
  "version": 1
}