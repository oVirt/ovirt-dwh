{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The virtual machines uptime dashboard displays data about the virtual machines uptime and downtime",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1591176931022,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Virtual Machines",
      "tooltip": "",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#vms${vm_name_url}"
    }
  ],
  "panels": [
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 10,
      "title": "Description",
      "type": "row"
    },
    {
      "content": "\n###### This dashboard displays data about the virtual machines uptime and downtime.\n\n\n\n\n",
      "datasource": "$datasource",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 6,
      "links": [],
      "mode": "markdown",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 8,
      "title": "Reports",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "datasource": "$datasource",
      "description": "This report displays the average planned downtime of a selected virtual machine within a selected period.",
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 6,
        "y": 4
      },
      "id": 3,
      "links": [],
      "options": {
        "fieldOptions": {
          "calcs": [
            "mean"
          ],
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [],
            "max": 100,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "index": 0,
                  "value": null
                },
                {
                  "color": "red",
                  "index": 1,
                  "value": 80
                }
              ]
            },
            "title": "Planned downtime",
            "unit": "percentunit"
          },
          "overrides": [],
          "thresholds": [
            {
              "color": "green",
              "index": 0,
              "value": null
            },
            {
              "color": "red",
              "index": 1,
              "value": 80
            }
          ],
          "values": true
        },
        "orientation": "horizontal",
        "showThresholdLabels": true,
        "showThresholdMarkers": true
      },
      "pluginVersion": "6.7.4",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL03-1 - This query returns for the specific vm\n-- the total Unplanned_Downtime, Planned_Downtime, Uptime and total time in minutes.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Planned downtime\nSELECT\n    SUM \n        (\n            CASE\n                WHEN vm_status IN ( 2, 0 )\n                    THEN COALESCE ( samples.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( samples.minutes_in_status ) AS \"Planned Downtime\"\nFROM v4_4_statistics_vms_resources_usage_samples AS samples\nWHERE\n    -- Show data only when the selected period is up to 24 hours back \n    $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the vm id chosen by the user\n    AND samples.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom()\n    AND history_datetime < $__timeTo()",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL03-1 - This query returns for the specific vm\n-- the total Unplanned_Downtime, Planned_Downtime, Uptime and total time in minutes.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Planned downtime\nSELECT\n    SUM \n        (\n            CASE\n                WHEN vm_status IN ( 2, 0 )\n                    THEN COALESCE ( hourly_daily.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( hourly_daily.minutes_in_status ) AS \"Planned Downtime\"\nFROM\n    (\n            SELECT history_datetime, vm_status, minutes_in_status, vm_id\n            FROM v4_4_statistics_vms_resources_usage_hourly\n        UNION\n            SELECT history_datetime, vm_status, minutes_in_status, vm_id \n            FROM v4_4_statistics_vms_resources_usage_daily\n            WHERE\n                history_datetime <\n                    (\n                        SELECT MIN ( history_datetime )\n                        FROM v4_4_statistics_vms_resources_usage_hourly\n                    )\n    ) AS hourly_daily\nWHERE\n    -- Show data only when the selected period is more then 24 hours back\n    $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the vm id chosen by the user\n    AND hourly_daily.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom()\n    AND history_datetime < $__timeTo()",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Virtual Machine Downtime (SL03-1)",
      "type": "gauge"
    },
    {
      "datasource": "$datasource",
      "description": "This report displays the average unplanned downtime of a selected virtual machine within a selected period.",
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 12,
        "y": 4
      },
      "id": 12,
      "links": [],
      "options": {
        "fieldOptions": {
          "calcs": [
            "mean"
          ],
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [],
            "max": 100,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "index": 0,
                  "value": null
                },
                {
                  "color": "red",
                  "index": 1,
                  "value": 80
                }
              ]
            },
            "title": "Unplanned downtime",
            "unit": "percentunit"
          },
          "overrides": [],
          "thresholds": [
            {
              "color": "green",
              "index": 0,
              "value": null
            },
            {
              "color": "red",
              "index": 1,
              "value": 80
            }
          ],
          "values": false
        },
        "orientation": "auto",
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "6.7.4",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL03-2 - This query returns for the specific vm\n-- the total Unplanned_Downtime, Planned_Downtime, Uptime and total time in minutes.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Unplanned downtime\nSELECT\n    SUM \n        (\n            CASE\n                WHEN vm_status = 3\n                    THEN COALESCE ( samples.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( samples.minutes_in_status ) AS \"Unplanned Downtime\"\nFROM\n    (\n        SELECT history_datetime, vm_status, minutes_in_status, vm_id\n        FROM v4_4_statistics_vms_resources_usage_samples\n    ) AS samples\nWHERE\n    -- Show data only when the selected period is up to 24 hours back \n    $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the vm id chosen by the user\n    AND samples.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom()\n    AND history_datetime < $__timeTo()",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL03-2 - This query returns for the specific vm\n-- the total Unplanned_Downtime, Planned_Downtime, Uptime and total time in minutes.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Unplanned downtime\nSELECT\n    SUM \n        (\n            CASE\n                WHEN vm_status = 3\n                    THEN COALESCE ( hourly_daily.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( hourly_daily.minutes_in_status ) AS \"Unplanned Downtime\"\nFROM\n    (\n            SELECT history_datetime, vm_status, minutes_in_status, vm_id\n            FROM v4_4_statistics_vms_resources_usage_hourly\n        UNION\n            SELECT history_datetime, vm_status, minutes_in_status, vm_id \n            FROM v4_4_statistics_vms_resources_usage_daily\n            WHERE\n                history_datetime <\n                    (\n                        SELECT MIN ( history_datetime )\n                        FROM v4_4_statistics_vms_resources_usage_hourly\n                    )\n    ) AS hourly_daily\nWHERE\n    -- Show data only when the selected period is more then 24 hours back\n    $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the vm id chosen by the user\n    AND hourly_daily.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom()\n    AND history_datetime < $__timeTo()",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Virtual Machine Downtime (SL03-2)",
      "type": "gauge"
    },
    {
      "cacheTimeout": null,
      "columns": [],
      "datasource": "$datasource",
      "description": "This report displays the average uptime and downtime of a selected virtual machine within a selected period.",
      "fontSize": "100%",
      "gridPos": {
        "h": 16,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 4,
      "links": [],
      "pageSize": null,
      "pluginVersion": "6.2.2",
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 3,
        "desc": true
      },
      "styles": [
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "is_deleted",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "VM Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "Link to Virtual Machine Dashboard",
          "linkUrl": "/ovirt-engine-grafana/d/VirtualMachineDashboard/virtual-machine-dashboard?orgId=1&var-datasource=$datasource&var-show_deleted=${__cell_0}&var-vm_id=${__cell_1}",
          "mappingType": 1,
          "pattern": "vm_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Planned Downtime",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "planned_downtime",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "Unplanned Downtime",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "unplanned_downtime",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "Planned Downtime (time)",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "planned_downtime_in_time",
          "thresholds": [],
          "type": "number",
          "unit": "m"
        },
        {
          "alias": "Unplanned Downtime (time)",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "unplanned_downtime_in_time",
          "thresholds": [],
          "type": "number",
          "unit": "m"
        },
        {
          "alias": "Uptime (time)",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "uptime_in_min",
          "thresholds": [],
          "type": "number",
          "unit": "m"
        },
        {
          "alias": "Number of CPUs",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "vm_cpucores",
          "thresholds": [],
          "type": "number",
          "unit": "none"
        },
        {
          "alias": "Memory Size",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vm_memsize",
          "thresholds": [],
          "type": "number",
          "unit": "decgbytes"
        },
        {
          "alias": "Create Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "create_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Update Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "update_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL03-3 - This query will return the weighted average uptime\n-- and downtime data of each vm in a requested data center, \n-- and cluster for a requested period.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    'No' AS is_deleted,\n    v4_4_latest_configuration_vms.vm_id,\n    vm_name,\n    SUM \n        (\n            CASE\n                WHEN vm_status IN ( 2, 0 )\n                    THEN COALESCE ( samples.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( samples.minutes_in_status ) AS \"planned_downtime\",\n    SUM \n        (\n            CASE\n                WHEN vm_status = 3\n                    THEN COALESCE ( samples.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( samples.minutes_in_status ) AS \"unplanned_downtime\",\n    SUM \n        (\n            CASE\n                WHEN vm_status IN ( 2, 0 )\n                    THEN COALESCE ( samples.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) AS \"planned_downtime_in_time\",\n    SUM \n        (\n            CASE\n                WHEN vm_status = 3\n                    THEN COALESCE ( samples.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) AS \"unplanned_downtime_in_time\",\n--  SUM ( samples.minutes_in_status ) AS \"total_time\",\n    SUM \n        (\n            CASE\n                WHEN vm_status = 1\n                    THEN COALESCE ( samples.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) AS uptime_in_min,\n    COALESCE ( cpu_per_socket, 0 ) * COALESCE ( number_of_sockets, 0 ) AS vm_cpucores,\n    CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 AS vm_memsize,\n    create_date,\n    update_date\nFROM\n    (\n        SELECT history_datetime, vm_id, vm_status, minutes_in_status\n        FROM v4_4_statistics_vms_resources_usage_samples\n    ) AS samples\n    INNER JOIN v4_4_latest_configuration_vms\n        ON \n            (\n                v4_4_latest_configuration_vms.vm_id=\n                samples.vm_id\n            )\nWHERE\n    -- Show data only when the selected period is up to 24 hours back \n    $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the vm id chosen by the user\n    AND samples.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom()\n    AND history_datetime < $__timeTo()\nGROUP BY \n    v4_4_latest_configuration_vms.vm_id,\n    vm_name,\n    number_of_sockets,\n    cpu_per_socket,\n    memory_size_mb,\n    create_date, \n    update_date\nORDER BY vm_name",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SL03-3 - This query will return the weighted average uptime\n-- and downtime data of each vm in a requested data center, \n-- and cluster for a requested period.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    'No' AS is_deleted,\n    v4_4_latest_configuration_vms.vm_id,\n    vm_name,\n    SUM \n        (\n            CASE\n                WHEN vm_status IN ( 2, 0 )\n                    THEN COALESCE ( hourly_daily.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( hourly_daily.minutes_in_status ) AS \"planned_downtime\",\n    SUM \n        (\n            CASE\n                WHEN vm_status = 3\n                    THEN COALESCE ( hourly_daily.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) / SUM ( hourly_daily.minutes_in_status ) AS \"unplanned_downtime\",\n    SUM \n        (\n            CASE\n                WHEN vm_status IN ( 2, 0 )\n                    THEN COALESCE ( hourly_daily.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) AS \"planned_downtime_in_time\",\n    SUM \n        (\n            CASE\n                WHEN vm_status = 3\n                    THEN COALESCE ( hourly_daily.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) AS \"unplanned_downtime_in_time\",\n--  SUM ( hourly_daily.minutes_in_status ) AS \"total_time\",\n    SUM \n        (\n            CASE\n                WHEN vm_status = 1\n                    THEN COALESCE ( hourly_daily.minutes_in_status, 0 )\n                ELSE 0\n            END\n        ) AS uptime_in_min,\n    COALESCE ( cpu_per_socket, 0 ) * COALESCE ( number_of_sockets, 0 ) AS vm_cpucores,\n    CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 AS vm_memsize,\n    create_date,\n    update_date\nFROM\n    (\n            SELECT history_datetime, vm_id, vm_status, minutes_in_status\n            FROM v4_4_statistics_vms_resources_usage_hourly\n        UNION\n            SELECT history_datetime, vm_id, vm_status, minutes_in_status\n            FROM v4_4_statistics_vms_resources_usage_daily\n            WHERE\n                history_datetime <\n                    (\n                        SELECT MIN ( history_datetime )\n                        FROM v4_4_statistics_vms_resources_usage_hourly\n                    )\n    ) AS hourly_daily\n    INNER JOIN v4_4_latest_configuration_vms\n        ON \n            (\n                v4_4_latest_configuration_vms.vm_id=\n                hourly_daily.vm_id\n            )\nWHERE\n    -- Show data only when the selected period is more then 24 hours back\n    $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    -- Here we filter by the vm id chosen by the user\n    AND hourly_daily.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom()\n    AND history_datetime < $__timeTo()\nGROUP BY \n    v4_4_latest_configuration_vms.vm_id,\n    vm_name,\n    number_of_sockets,\n    cpu_per_socket,\n    memory_size_mb,\n    create_date, \n    update_date\nORDER BY vm_name",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Virtual Machine Uptime (SL03-3)",
      "transform": "table",
      "type": "table"
    }
  ],
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "VM",
    "Cluster",
    "DC",
    "Downtime",
    "Uptime",
    "CPU",
    "Memory"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT\n    datacenter_name AS __text,\n    datacenter_id AS __value\nFROM v4_4_latest_configuration_datacenters",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Data Center",
        "multi": true,
        "name": "datacenter_id",
        "options": [],
        "query": "SELECT DISTINCT\n    datacenter_name AS __text,\n    datacenter_id AS __value\nFROM v4_4_latest_configuration_datacenters",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT\n    cluster_name AS __text,\n    cluster_id AS __value\nFROM v4_4_latest_configuration_clusters\nWHERE datacenter_id IN ($datacenter_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Cluster",
        "multi": true,
        "name": "cluster_id",
        "options": [],
        "query": "SELECT DISTINCT\n    cluster_name AS __text,\n    cluster_id AS __value\nFROM v4_4_latest_configuration_clusters\nWHERE datacenter_id IN ($datacenter_id)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT\n    vm_name AS __text,\n    vm_id AS __value\nFROM v4_4_latest_configuration_vms\nWHERE cluster_id IN ($cluster_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Virtual Machine",
        "multi": true,
        "name": "vm_id",
        "options": [],
        "query": "SELECT DISTINCT\n    vm_name AS __text,\n    vm_id AS __value\nFROM v4_4_latest_configuration_vms\nWHERE cluster_id IN ($cluster_id)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT COUNT (vm_id)\nFROM v4_4_latest_configuration_vms\nWHERE vm_id IN ($vm_id) ",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "count_vm_id_url",
        "options": [],
        "query": "SELECT COUNT (vm_id)\nFROM v4_4_latest_configuration_vms\nWHERE vm_id IN ($vm_id) ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT \n    CASE\n        WHEN $count_vm_id_url = 1\n            THEN '-general;name=' || vm_name\n        ELSE NULL\n    END\nFROM v4_4_latest_configuration_vms\nWHERE vm_id IN ($vm_id) \t    ",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "vm_name_url",
        "options": [],
        "query": "SELECT DISTINCT \n    CASE\n        WHEN $count_vm_id_url = 1\n            THEN '-general;name=' || vm_name\n        ELSE NULL\n    END\nFROM v4_4_latest_configuration_vms\nWHERE vm_id IN ($vm_id) \t    ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "03 Virtual Machines Uptime Dashboard",
  "uid": "VirtualMachinesUptimeDashboard",
  "variables": {
    "list": []
  },
  "version": 1
}