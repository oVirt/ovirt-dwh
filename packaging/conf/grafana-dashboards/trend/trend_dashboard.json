{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The trend dashboard displaying reports containing the 5 most/least utilized virtual machines by memory/CPU, over a selected period",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1590481927639,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Clusters",
      "tooltip": "The portal does not display deleted clusters",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#clusters${cluster_name_url}"
    }
  ],
  "panels": [
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 21,
      "panels": [],
      "title": "Description",
      "type": "row"
    },
    {
      "content": "\n###### This dashboard displays usage rates for the 5 most and least utilized virtual machines and hosts by memory and by CPU in the selected cluster over a selected period.",
      "datasource": "$datasource",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 17,
      "links": [],
      "mode": "markdown",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 19,
      "panels": [],
      "title": "Hosts",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak memory usage for the top five busiest hosts of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 4
      },
      "hiddenSeries": false,
      "id": 26,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-1 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 most utilized hosts.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            samples.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_memory_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                SELECT history_datetime, host_id, memory_usage_percent AS max_memory_usage, minutes_in_status\n                FROM v4_4_statistics_hosts_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    samples.host_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND samples.host_id \n                IN \n                    (\n                        -- Calculation of top 5 hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                SELECT history_datetime, host_id, host_status, memory_usage_percent AS max_memory_usage, minutes_in_status \n                                FROM v4_4_statistics_hosts_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized hosts\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY samples.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-1 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 most utilized hosts.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_memory_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                    SELECT history_datetime, host_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, host_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_hosts_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    hourly_daily.host_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND hourly_daily.host_id \n                IN \n                    (\n                        -- Calculation of top 5 hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                    SELECT history_datetime, host_id, host_status, max_memory_usage, minutes_in_status\n                                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, host_id, host_status, max_memory_usage, minutes_in_status \n                                    FROM v4_4_statistics_hosts_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized hosts\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back \nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Most Utilized Hosts by Memory (over time) (TR01-1)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak of CPU usage for the top five busiest hosts of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 4
      },
      "hiddenSeries": false,
      "id": 27,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-2 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 most utilized hosts.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            samples.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_cpu_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                SELECT history_datetime, host_id, cpu_usage_percent AS max_cpu_usage, minutes_in_status\n                FROM v4_4_statistics_hosts_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    samples.host_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND samples.host_id \n                IN \n                    (\n                        -- Calculation of top 5 hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                SELECT history_datetime, cpu_usage_percent AS max_cpu_usage, minutes_in_status, host_id, host_status \n                                FROM v4_4_statistics_hosts_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized hosts\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY samples.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-2 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 most utilized hosts.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_cpu_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                    SELECT history_datetime, host_id, max_cpu_usage, minutes_in_status\n                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, host_id, max_cpu_usage, minutes_in_status \n                    FROM v4_4_statistics_hosts_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    hourly_daily.host_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND hourly_daily.host_id \n                IN \n                    (\n                        -- Calculation of top 5 hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                    SELECT history_datetime, host_id, max_cpu_usage, minutes_in_status, host_status \n                                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, host_id, max_cpu_usage, minutes_in_status, host_status \n                                    FROM v4_4_statistics_hosts_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized hosts\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Most Utilized Hosts by CPU (over time) (TR01-2)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak of memory usage for the bottom five busiest hosts of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 28,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-3 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 least utilized hosts.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            samples.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_memory_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                SELECT history_datetime, host_id, memory_usage_percent AS max_memory_usage, minutes_in_status\n                FROM v4_4_statistics_hosts_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    samples.host_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND samples.host_id \n                IN \n                    (\n                        -- Calculation of the 5 least hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                SELECT history_datetime, host_id, host_status, memory_usage_percent AS max_memory_usage, minutes_in_status\n                                FROM v4_4_statistics_hosts_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) )\n                                -- Here we order by least utillized\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY samples.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-3 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 least utilized hosts.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_memory_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                    SELECT history_datetime, host_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, host_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_hosts_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    hourly_daily.host_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND hourly_daily.host_id \n                IN \n                    (\n                        -- Calculation of the 5 least hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                    SELECT history_datetime, host_id, host_status, max_memory_usage, minutes_in_status\n                                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, host_id, host_status, max_memory_usage, minutes_in_status\n                                    FROM v4_4_statistics_hosts_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) )\n                                -- Here we order by least utillized\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Least Utilized Hosts by Memory (over time) (TR01-3)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak of CPU usage for the bottom five busiest hosts of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 29,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-4 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 least utilized hosts.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            samples.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_cpu_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                SELECT history_datetime, host_id, cpu_usage_percent AS max_cpu_usage, minutes_in_status\n                FROM v4_4_statistics_hosts_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    samples.host_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND samples.host_id \n                IN \n                    (\n                        -- Calculation of the 5 least hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                SELECT history_datetime, host_id, host_status, cpu_usage_percent AS max_cpu_usage, minutes_in_status\n                                FROM v4_4_statistics_hosts_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by least utillized hosts\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY samples.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-4 - This report returns the\n-- cpu and memory usage over time\n-- for the 5 least utilized hosts.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( host_name, MAX ( host_name ) over ( partition BY 1 ), '' ) AS host_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.host_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN host_name\n                ELSE host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS host_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_cpu_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                    SELECT history_datetime, host_id, max_cpu_usage, minutes_in_status\n                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, host_id, max_cpu_usage, minutes_in_status\n                    FROM v4_4_statistics_hosts_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_hosts\n                ON \n                    (\n                    v4_4_configuration_history_hosts.host_id =\n                    hourly_daily.host_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest hosts configuration\n            AND v4_4_configuration_history_hosts.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_hosts a\n                        GROUP BY a.host_id\n                    )\n            AND hourly_daily.host_id \n                IN \n                    (\n                        -- Calculation of the 5 least hosts\n                        SELECT a.host_id\n                        FROM\n                            (\n                                    SELECT history_datetime, host_id, host_status, max_cpu_usage, minutes_in_status\n                                    FROM v4_4_statistics_hosts_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, host_id, host_status, max_cpu_usage, minutes_in_status\n                                    FROM v4_4_statistics_hosts_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_hosts b\n                                ON \n                                    ( \n                                        a.host_id = \n                                        b.host_id \n                                    )\n                        WHERE\n                            -- Here we filter by active hosts only\n                            a.host_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest hosts configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_hosts g\n                                        GROUP BY g.host_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.host_id\n                        -- The hosts will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest hosts.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by least utillized hosts\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.host_id, host_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Least Utilized Hosts by CPU (over time) (TR01-4)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 13,
      "title": "Virtual Machines",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak memory usage for the top five busiest virtual machines of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 21
      },
      "hiddenSeries": false,
      "id": 6,
      "legend": {
        "alignAsTable": false,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-5 - This query returns for the top 5 busiest vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            samples.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_memory_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                SELECT history_datetime, vm_id, memory_usage_percent AS max_memory_usage, minutes_in_status\n                FROM v4_4_statistics_vms_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    samples.vm_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND samples.vm_id \n                IN \n                    (\n                        -- Calculation of top 5 vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                SELECT history_datetime, vm_id, vm_status, memory_usage_percent AS max_memory_usage, minutes_in_status \n                                FROM v4_4_statistics_vms_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized vms\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY samples.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-5 - This query returns for the top 5 busiest vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_memory_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                    SELECT history_datetime, vm_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    hourly_daily.vm_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND hourly_daily.vm_id \n                IN \n                    (\n                        -- Calculation of top 5 vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_id, vm_status, max_memory_usage, minutes_in_status\n                                    FROM v4_4_statistics_vms_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_id, vm_status, max_memory_usage, minutes_in_status \n                                    FROM v4_4_statistics_vms_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized vms\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back \nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Most Utilized Virtual Machines by Memory (over time) (TR01-5)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak of CPU usage for the top five busiest virtual machines of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 21
      },
      "hiddenSeries": false,
      "id": 9,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-6 - This query returns for the top 5 busiest vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            samples.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_cpu_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                SELECT history_datetime, vm_id, cpu_usage_percent AS max_cpu_usage, minutes_in_status\n                FROM v4_4_statistics_vms_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    samples.vm_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND samples.vm_id \n                IN \n                    (\n                        -- Calculation of top 5 vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                SELECT history_datetime, cpu_usage_percent AS max_cpu_usage, minutes_in_status, vm_id, vm_status \n                                FROM v4_4_statistics_vms_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized vms\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY samples.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-6 - This query returns for the top 5 busiest vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_cpu_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                    SELECT history_datetime, vm_id, max_cpu_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_id, max_cpu_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    hourly_daily.vm_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND hourly_daily.vm_id \n                IN \n                    (\n                        -- Calculation of top 5 vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_id, max_cpu_usage, minutes_in_status, vm_status \n                                    FROM v4_4_statistics_vms_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_id, max_cpu_usage, minutes_in_status, vm_status \n                                    FROM v4_4_statistics_vms_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by most utillized vms\n                                DESC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Most Utilized Virtual Machines by CPU (over time) (TR01-6)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak of memory usage for the bottom five busiest virtual machines of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 29
      },
      "hiddenSeries": false,
      "id": 8,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null as zero",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-7 - This query returns for the top 5 least utilized vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            samples.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_memory_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                SELECT history_datetime, vm_id, memory_usage_percent AS max_memory_usage, minutes_in_status\n                FROM v4_4_statistics_vms_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    samples.vm_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND samples.vm_id \n                IN \n                    (\n                        -- Calculation of the 5 least vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                SELECT history_datetime, vm_id, vm_status, memory_usage_percent AS max_memory_usage, minutes_in_status\n                                FROM v4_4_statistics_vms_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) )\n                                -- Here we order by least utillized\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY samples.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-7 - This query returns for the top 5 least utilized vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Memory usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    MEM_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_memory_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM\n            (\n                    SELECT history_datetime, vm_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_id, max_memory_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    hourly_daily.vm_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND hourly_daily.vm_id \n                IN \n                    (\n                        -- Calculation of the 5 least vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_id, vm_status, max_memory_usage, minutes_in_status\n                                    FROM v4_4_statistics_vms_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_id, vm_status, max_memory_usage, minutes_in_status\n                                    FROM v4_4_statistics_vms_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- memory usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_memory_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) )\n                                -- Here we order by least utillized\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Least Utilized Virtual Machines by Memory (over time) (TR01-7)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays weighted average daily peak of CPU usage for the bottom five busiest virtual machines of a selected cluster and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 29
      },
      "hiddenSeries": false,
      "id": 15,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null as zero",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-8 - This query returns for the top 5 least utilized vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            samples.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            samples.history_datetime AS time,\n            SUM ( COALESCE ( samples.max_cpu_usage, 0 ) * COALESCE ( samples.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( samples.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                SELECT history_datetime, vm_id, cpu_usage_percent AS max_cpu_usage, minutes_in_status\n                FROM v4_4_statistics_vms_resources_usage_samples\n            ) AS samples\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    samples.vm_id\n                    )   \n        WHERE\n            samples.history_datetime >= $__timeFrom()\n            AND samples.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND samples.vm_id \n                IN \n                    (\n                        -- Calculation of the 5 least vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                SELECT history_datetime, vm_id, vm_status, cpu_usage_percent AS max_cpu_usage, minutes_in_status\n                                FROM v4_4_statistics_vms_resources_usage_samples\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by least utillized vms\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY samples.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR01-8 - This query returns for the top 5 least utilized vms,\n-- the CPU_Usage and MEM_Usage,\n-- according to the weighted CPU and memory usage peak.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- CPU usage\nSELECT DISTINCT\n    $__time(sub_query.time),\n    COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) AS vm_name,\n    CPU_Usage\nFROM \n    (\n        SELECT\n            hourly_daily.vm_id,\n            CASE\n                WHEN delete_date IS NULL\n                    THEN vm_name\n                ELSE vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'\n            END AS vm_name,\n            hourly_daily.history_datetime AS time,\n            SUM ( COALESCE ( hourly_daily.max_cpu_usage, 0 ) * COALESCE ( hourly_daily.minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( hourly_daily.minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM\n            (\n                    SELECT history_datetime, vm_id, max_cpu_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_id, max_cpu_usage, minutes_in_status\n                    FROM v4_4_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n            INNER JOIN v4_4_configuration_history_vms\n                ON \n                    (\n                    v4_4_configuration_history_vms.vm_id =\n                    hourly_daily.vm_id\n                    )   \n        WHERE\n            hourly_daily.history_datetime >= $__timeFrom()\n            AND hourly_daily.history_datetime < $__timeTo()\n            -- Here we get the latest vms configuration\n            AND v4_4_configuration_history_vms.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_vms a\n                        GROUP BY a.vm_id\n                    )\n            AND hourly_daily.vm_id \n                IN \n                    (\n                        -- Calculation of the 5 least vms\n                        SELECT a.vm_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_id, vm_status, max_cpu_usage, minutes_in_status\n                                    FROM v4_4_statistics_vms_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_id, vm_status, max_cpu_usage, minutes_in_status\n                                    FROM v4_4_statistics_vms_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_4_statistics_vms_resources_usage_hourly\n                                            )\n                            ) AS a\n                            INNER JOIN v4_4_configuration_history_vms b\n                                ON \n                                    ( \n                                        a.vm_id = \n                                        b.vm_id \n                                    )\n                        WHERE\n                            -- Here we filter by active vms only\n                            a.vm_status = 1\n                            -- Here we filter by the datacenter chosen by the user\n                            AND b.cluster_id \n                                IN \n                                    (\n                                        SELECT v4_4_configuration_history_clusters.cluster_id\n                                        FROM v4_4_configuration_history_clusters\n                                        WHERE v4_4_configuration_history_clusters.datacenter_id IN ($datacenter_id)\n                                    )\n                            -- Here we filter by the clusters chosen by the user\n                            AND b.cluster_id IN ($cluster_id)\n                            AND a.history_datetime >= $__timeFrom()\n                            AND a.history_datetime < $__timeTo()\n                            -- Here we get the latest vms configuration\n                            AND b.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( g.history_id )\n                                        FROM v4_4_configuration_history_vms g\n                                        GROUP BY g.vm_id\n                                    )\n                            -- Here we get or remove deleted entities according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY a.vm_id\n                        -- The vms will be ordered according to the summery of\n                        -- CPU usage percent. This defines the busiest vms.\n                        ORDER BY\n                                SUM ( COALESCE ( a.max_cpu_usage * a.minutes_in_status, 0 ) ) /\n                                SUM ( COALESCE ( a.minutes_in_status, 0 ) ) \n                                -- Here we order by least utillized vms\n                                ASC\n                        LIMIT 5\n                    )\n        GROUP BY hourly_daily.vm_id, vm_name, delete_date, history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "gt",
          "value": 80,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Five Least Utilized Virtual Machines by CPU (over time) (TR01-8)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "Host",
    "VM",
    "Cluster",
    "CPU",
    "Memory"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Show Deleted Entities?",
        "multi": false,
        "name": "show_deleted",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "No"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          }
        ],
        "query": "No,Yes",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\t    \n                    OR cluster_id  \t\t\t\t\t\t        \n                        IN \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_hosts \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\n            ) \t \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t   \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Data Center",
        "multi": true,
        "name": "datacenter_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\t    \n                    OR cluster_id  \t\t\t\t\t\t        \n                        IN \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_hosts \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\n            ) \t \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t   \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                \n        END",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND  \t\t    \n    (  \t\t\t\t\n        cluster_id \n            IN \t\t\t     \t\t\t        \n                ( \t\t\t\t\t \t\t\t\t\t    \n                    SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t    \n                    FROM v4_4_configuration_history_vms \t\t\t\t \t\t\t\t    \n                ) \t\t    \n        OR cluster_id \n            IN \t\t\t        \n                ( \t\t\t\t\t    \n                    SELECT DISTINCT cluster_id \t\t\t\t\t    \n                    FROM v4_4_configuration_history_hosts \t\t\t\t    \n                )  \t\t\t\n    ) \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Cluster",
        "multi": true,
        "name": "cluster_id",
        "options": [],
        "query": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND  \t\t    \n    (  \t\t\t\t\n        cluster_id \n            IN \t\t\t     \t\t\t        \n                ( \t\t\t\t\t \t\t\t\t\t    \n                    SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t    \n                    FROM v4_4_configuration_history_vms \t\t\t\t \t\t\t\t    \n                ) \t\t    \n        OR cluster_id \n            IN \t\t\t        \n                ( \t\t\t\t\t    \n                    SELECT DISTINCT cluster_id \t\t\t\t\t    \n                    FROM v4_4_configuration_history_hosts \t\t\t\t    \n                )  \t\t\t\n    ) \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT COUNT (cluster_id)\nFROM v4_4_configuration_history_clusters\nWHERE \n    cluster_id IN ($cluster_id)\n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            )",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "count_cluster_id_url",
        "options": [],
        "query": "SELECT COUNT (cluster_id)\nFROM v4_4_configuration_history_clusters\nWHERE \n    cluster_id IN ($cluster_id)\n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            )",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT \n    CASE\n        WHEN $count_cluster_id_url = 1\n            THEN '-general;name=' || cluster_name\n        ELSE NULL\n    END\nFROM v4_4_configuration_history_clusters\nWHERE \n    cluster_id IN ($cluster_id) \t    \n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \n    AND delete_date IS NULL",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "cluster_name_url",
        "options": [],
        "query": "SELECT DISTINCT \n    CASE\n        WHEN $count_cluster_id_url = 1\n            THEN '-general;name=' || cluster_name\n        ELSE NULL\n    END\nFROM v4_4_configuration_history_clusters\nWHERE \n    cluster_id IN ($cluster_id) \t    \n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \n    AND delete_date IS NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "01 Trend Dashboard",
  "uid": "TrendDashboard",
  "variables": {
    "list": []
  },
  "version": 1
}