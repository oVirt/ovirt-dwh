{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The virtual machines trend dashboard displaying resources measurements over time - Disk I/O rates, CPU, memory, and ethernet interface Tx/Rx.",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1590042163059,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Virtual Machines",
      "tooltip": "The portal does not display deleted virtual machines",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#vms${vm_name_url}"
    }
  ],
  "panels": [
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 28,
      "title": "Description",
      "type": "row"
    },
    {
      "content": "\n###### This dashboard displays resource measurements (CPU, memory, ethernet interface Tx/Rx, disk I/O) for a selected virtual machine over a selected period.\n\n\n\n",
      "datasource": "$datasource",
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 21,
      "links": [],
      "mode": "markdown",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 25,
      "panels": [],
      "title": "Inventory",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays the memory size for the virtual machines in the selected cluster, and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 4
      },
      "hiddenSeries": false,
      "id": 30,
      "legend": {
        "alignAsTable": false,
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-1 - This report returns the cpu cores and memory size over time\n-- for the virtual machines in the selected cluster.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Memory size\nSELECT DISTINCT\n    $__time(history_datetime),\n    SUM ( CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 ) AS \"Total Memory Size\"\nFROM\n    v4_5_configuration_history_vms\n    INNER JOIN\n    v4_5_statistics_vms_resources_usage_samples\n        ON\n            (\n                v4_5_configuration_history_vms.history_id =\n                v4_5_statistics_vms_resources_usage_samples.vm_configuration_version\n            )\nWHERE \n    -- Show data only when the selected period is up to 24 hours back\n    $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    AND v4_5_configuration_history_vms.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom() \n    AND history_datetime < $__timeTo()\n    AND    \n        CASE\n            WHEN '$show_deleted'='Yes'\n                THEN 1=1\n            WHEN '$show_deleted'='No'\n                THEN delete_date isnull\n        END\nGROUP BY history_datetime\nORDER BY history_datetime",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-1 - This report returns the cpu cores and memory size over time\n-- for the virtual machines in the selected cluster.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Memory size\nSELECT DISTINCT\n    $__time(history_datetime),\n    SUM ( CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 ) AS \"Total Memory Size\"\nFROM\n    v4_5_configuration_history_vms\n    INNER JOIN\n    (\n            SELECT history_datetime, vm_configuration_version\n            FROM v4_5_statistics_vms_resources_usage_hourly\n        UNION\n            SELECT history_datetime, vm_configuration_version\n            FROM v4_5_statistics_vms_resources_usage_daily\n            WHERE\n                history_datetime <\n                    (\n                        SELECT MIN ( history_datetime )\n                        FROM v4_5_statistics_vms_resources_usage_hourly\n                    )\n    ) AS hourly_daily\n        ON\n            (\n                v4_5_configuration_history_vms.history_id =\n                hourly_daily.vm_configuration_version\n            )\nWHERE \n    -- Show data only when the selected period is more then 24 hours back\n    $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    AND v4_5_configuration_history_vms.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom() \n    AND history_datetime < $__timeTo()\n    AND\n        CASE\n            WHEN '$show_deleted'='Yes'\n                THEN 1=1\n            WHEN '$show_deleted'='No'\n                THEN delete_date isnull\n        END\nGROUP BY history_datetime\nORDER BY history_datetime",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Virtual Machines Memory Size (over time) (TR03-1)",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "decgbytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays the CPU cores for the virtual machines in the selected cluster, and over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 4
      },
      "hiddenSeries": false,
      "id": 32,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-2 - This report returns the cpu cores and memory size over time\n-- for the virtual machines in the selected cluster.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- CPU cores\nSELECT DISTINCT\n    $__time(history_datetime),\n    SUM ( COALESCE ( cpu_per_socket, 0 ) * COALESCE ( number_of_sockets, 0 ) ) AS \"Total CPU Cores\"\nFROM\n    v4_5_configuration_history_vms\n    INNER JOIN\n    v4_5_statistics_vms_resources_usage_samples\n        ON\n            (\n                v4_5_configuration_history_vms.history_id =\n                v4_5_statistics_vms_resources_usage_samples.vm_configuration_version\n            )\nWHERE \n    -- Show data only when the selected period is up to 24 hours back\n    $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    AND v4_5_configuration_history_vms.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom() \n    AND history_datetime < $__timeTo()\n    AND    \n        CASE\n            WHEN '$show_deleted'='Yes'\n                THEN 1=1\n            WHEN '$show_deleted'='No'\n                THEN delete_date isnull\n        END\nGROUP BY history_datetime\nORDER BY history_datetime",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-2 - This report returns the cpu cores and memory size over time\n-- for the virtual machines in the selected cluster.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- CPU cores\nSELECT DISTINCT\n    $__time(history_datetime),\n    SUM ( COALESCE ( cpu_per_socket, 0 ) * COALESCE ( number_of_sockets, 0 ) ) AS \"Total CPU Cores\"\nFROM\n    v4_5_configuration_history_vms\n    INNER JOIN\n    (\n            SELECT history_datetime, vm_configuration_version\n            FROM v4_5_statistics_vms_resources_usage_hourly\n        UNION\n            SELECT history_datetime, vm_configuration_version\n            FROM v4_5_statistics_vms_resources_usage_daily\n            WHERE\n                history_datetime <\n                    (\n                        SELECT MIN ( history_datetime )\n                        FROM v4_5_statistics_vms_resources_usage_hourly\n                    )\n    ) AS hourly_daily\n        ON\n            (\n                v4_5_configuration_history_vms.history_id =\n                hourly_daily.vm_configuration_version\n            )\nWHERE \n    -- Show data only when the selected period is more then 24 hours back\n    $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    AND v4_5_configuration_history_vms.vm_id IN ($vm_id)\n    AND history_datetime >= $__timeFrom() \n    AND history_datetime < $__timeTo()\n    AND\n        CASE\n            WHEN '$show_deleted'='Yes'\n                THEN 1=1\n            WHEN '$show_deleted'='No'\n                THEN delete_date isnull\n        END\nGROUP BY history_datetime\nORDER BY history_datetime",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Virtual Machines CPU Cores (over time) (TR03-2)",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 0,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 23,
      "panels": [],
      "title": "Utilization",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average CPU usage and peaks for a selected virtual machine over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 13
      },
      "hiddenSeries": false,
      "id": 19,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-3 - This query returns the\n-- VMs CPU usage over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(time),\n    CPU_Usage AS \"CPU Usage\"\nFROM \n    (\n        -- Here we get the vms Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage\n        FROM v4_5_statistics_vms_resources_usage_samples AS samples\n        WHERE\n            -- Here we filter by active vms only\n            samples.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, CPU_Usage\nORDER BY time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-3 - This query returns the\n-- VMs max and average CPU usage peaks\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(time),\n    CPU_Usage AS \"CPU Usage\",\n    CPU_Peak AS \"CPU Peak\"\nFROM \n    (\n        -- Here we get the vms Max and Average CPU Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage,\n            SUM ( COALESCE ( max_cpu_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Peak\n        FROM \n            (\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, cpu_usage_percent, minutes_in_status, max_cpu_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n        WHERE\n            -- Here we filter by active vms only\n            hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND hourly_daily.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, CPU_Usage, CPU_Peak\nORDER BY time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average CPU Usage and Peaks (over time) (TR03-3)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average memory usage and peaks for a selected virtual machine over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 13
      },
      "hiddenSeries": false,
      "id": 15,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-4 - This query returns the\n-- VMs memory usage over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    $__time(time),\n    MEM_Usage AS \"Memory Usage\"\nFROM \n    (\n        -- VMs Max and Average MEMory Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage\n        FROM v4_5_statistics_vms_resources_usage_samples AS samples\n        WHERE\n            -- Here we filter by active vms only\n            samples.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND samples.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, MEM_Usage\nORDER BY time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-4 - This query returns the\n-- VMs max and Average memory usage peaks\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    $__time(time),\n    MEM_Usage AS \"Memory Usage\",\n    MEM_Peak AS \"Memory Peak\"\nFROM \n    (\n        -- VMs Max and Average MEMory Usage Peaks\n        SELECT\n            history_datetime AS time,\n            SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage,\n            SUM ( COALESCE ( max_memory_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n            SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Peak\n        FROM\n            ( \n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, memory_usage_percent, minutes_in_status, max_memory_usage, vm_status, vm_id\n                    FROM v4_5_statistics_vms_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_resources_usage_hourly\n                            )\n            ) AS hourly_daily\n        WHERE\n            -- Here we filter by active vms only\n            hourly_daily.vm_status = 1\n            -- Here we filter by the vm chosen by the user\n            AND hourly_daily.vm_id IN ($vm_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n        GROUP BY history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY time, MEM_Usage, MEM_Peak\nORDER BY time",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average Memory Usage and Peaks (over time) (TR03-4)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average disk read and write rates for a selected virtual machine over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 21
      },
      "hiddenSeries": false,
      "id": 17,
      "legend": {
        "alignAsTable": false,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-5 - This query returns the\n-- VMs Disk Read_Rate, Write_Rate Usage\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_Rate ) AS \"Read Rate\",\n    AVG ( Write_Rate ) AS \"Write Rate\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_5_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( CAST ( COALESCE ( read_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Read_Rate,\n            AVG ( CAST ( COALESCE ( write_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Write_Rate\n        FROM v4_5_statistics_vms_disks_resources_usage_samples AS statistics\n            INNER JOIN v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            v4_5_statistics_vms_disks_resources_usage_samples AS b\n                            INNER JOIN v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN \n                                                v4_5_statistics_vms_resources_usage_samples AS samples\n                                                    ON\n                                                        (\n                                                            samples.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                samples.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( CAST ( COALESCE ( b.read_rate_bytes_per_second, 0 ) AS float ) ) +\n                                AVG ( CAST ( COALESCE ( b.write_rate_bytes_per_second, 0 ) AS float ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_5_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_Rate ) DESC,\n    AVG ( Write_Rate ) DESC,\n    CONCAT\n\t  (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-5 - This query returns the\n-- VMs Disk Read_Rate, Write_Rate Usage\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_Rate ) AS \"Read Rate\",\n    AVG ( Write_Rate ) AS \"Write Rate\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_5_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( CAST ( COALESCE ( read_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Read_Rate,\n            AVG ( CAST ( COALESCE ( write_rate_bytes_per_second, 0 ) AS float ) / ( 1024 * 1024 ) ) AS Write_Rate\n        FROM \n            (\n                    SELECT history_datetime, vm_disk_id, read_rate_bytes_per_second, write_rate_bytes_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_disk_id, read_rate_bytes_per_second, write_rate_bytes_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_rate_bytes_per_second, write_rate_bytes_per_second \n                                    FROM v4_5_statistics_vms_disks_resources_usage_hourly \n                                UNION\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_rate_bytes_per_second, write_rate_bytes_per_second\n                                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN\n                                                (\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_hourly\n                                                    UNION\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_daily\n                                                        WHERE\n                                                            history_datetime <\n                                                                (\n                                                                    SELECT MIN ( history_datetime )\n                                                                    FROM v4_5_statistics_vms_resources_usage_hourly\n                                                                )\n                                                ) AS hourly_daily\n                                                    ON\n                                                        (\n                                                            hourly_daily.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( CAST ( COALESCE ( b.read_rate_bytes_per_second, 0 ) AS float ) ) +\n                                AVG ( CAST ( COALESCE ( b.write_rate_bytes_per_second, 0 ) AS float ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_5_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_Rate ) DESC,\n    AVG ( Write_Rate ) DESC,\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Top 5 Most Utilized Disks Read and Write Rates (over time) (TR03-5)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "MBs",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average disk read and write operations per second for a selected virtual machine over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 21
      },
      "hiddenSeries": false,
      "id": 26,
      "legend": {
        "alignAsTable": false,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-6 - This query returns the\n-- VMs Disk Read_ops, Write_ops Usage\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_ops ) AS \"Read ops\",\n    AVG ( Write_ops ) AS \"Write ops\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_5_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( COALESCE ( read_ops_per_second, 0 ) ) AS Read_ops,\n            AVG ( COALESCE ( write_ops_per_second, 0 ) ) AS Write_ops\n        FROM v4_5_statistics_vms_disks_resources_usage_samples AS statistics\n            INNER JOIN v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM \n                            v4_5_statistics_vms_disks_resources_usage_samples AS b\n                            INNER JOIN v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN \n                                                v4_5_statistics_vms_resources_usage_samples AS samples\n                                                    ON\n                                                        (\n                                                            samples.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                samples.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( COALESCE ( b.read_ops_per_second, 0 ) ) +\n                                AVG ( COALESCE ( b.write_ops_per_second, 0 ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_5_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_ops ) DESC,\n    AVG ( Write_ops ) DESC,\n    CONCAT\n\t  (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-6 - This query returns the\n-- VMs Disk Read_ops, Write_ops Usage\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Read_ops ) AS \"Read ops\",\n    AVG ( Write_ops ) AS \"Write ops\"\nFROM \n    (\n        SELECT\n            CASE\n                WHEN v4_5_configuration_history_vms_disks.delete_date IS NULL\n                    THEN vm_disk_name\n                ELSE vm_disk_name\n            ||\n            '*'\n            END AS disk_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS Time,\n            AVG ( COALESCE ( read_ops_per_second, 0 ) ) AS Read_ops,\n            AVG ( COALESCE ( write_ops_per_second, 0 ) ) AS Write_ops\n        FROM \n            (\n                    SELECT history_datetime, vm_disk_id, read_ops_per_second, write_ops_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_disk_id, read_ops_per_second, write_ops_per_second \n                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN v4_5_configuration_history_vms_disks\n                ON \n                    (\n                        v4_5_configuration_history_vms_disks.vm_disk_id =\n                        statistics.vm_disk_id\n                    )\n\t\t        INNER JOIN v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_disk_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'disk'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we filter by the latest vms_disks  configuration\n            AND v4_5_configuration_history_vms_disks.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_disks AS a\n                        GROUP BY a.vm_disk_id\n                    )\n            AND v4_5_configuration_history_vms_disks.vm_disk_id \n                IN \n                    (\n                        SELECT c.vm_disk_id\n                        FROM\n                            (\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_ops_per_second, write_ops_per_second \n                                    FROM v4_5_statistics_vms_disks_resources_usage_hourly \n                                UNION\n                                    SELECT history_datetime, vm_disk_id, vm_disk_status, read_ops_per_second, write_ops_per_second\n                                    FROM v4_5_statistics_vms_disks_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_disks_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN v4_5_configuration_history_vms_disks AS c\n                                ON \n                                    (\n                                        c.vm_disk_id = \n                                        b.vm_disk_id\n                                    )\n                            WHERE\n                                -- Here we filter by active vms disks only\n                                b.vm_disk_status = 1\n                                AND c.vm_disk_id \n                                    IN \n                                        (\n                                            SELECT device_id\n                                            FROM \n                                                v4_5_configuration_history_vms_devices\n                                                INNER JOIN\n                                                (\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_hourly\n                                                    UNION\n                                                        SELECT history_datetime, vm_configuration_version, vm_status\n                                                        FROM v4_5_statistics_vms_resources_usage_daily\n                                                        WHERE\n                                                            history_datetime <\n                                                                (\n                                                                    SELECT MIN ( history_datetime )\n                                                                    FROM v4_5_statistics_vms_resources_usage_hourly\n                                                                )\n                                                ) AS hourly_daily\n                                                    ON\n                                                        (\n                                                            hourly_daily.vm_configuration_version =\n                                                            v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                        )\n                                            WHERE\n                                                -- Here we filter by active vms only\n                                                hourly_daily.vm_status = 1\n                                                -- Here we filter by the vm chosen by the user\n                                                AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                                AND create_date < $__timeTo()\n                                                AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                                -- Here we get the latest vm_devices configuration\n                                                AND v4_5_configuration_history_vms_devices.history_id \n                                                    IN \n                                                        (\n                                                            SELECT MAX ( a.history_id )\n                                                            FROM v4_5_configuration_history_vms_devices a\n                                                            GROUP BY a.vm_id, a.device_id\n                                                        )\n                                                -- Here we get or remove deleted VM devices according to what the user chose\n                                                -- in the \"show_deleted\" parameter.\n                                                AND\n                                                    CASE\n                                                        WHEN '$show_deleted'='Yes'\n                                                            THEN 1=1\n                                                        WHEN '$show_deleted'='No'\n                                                            THEN delete_date isnull\n                                                    END\n                                        )\n                                AND history_datetime >= $__timeFrom()\n                                AND history_datetime < $__timeTo()\n                                -- Here we get the latest vm_disks configuration\n                                AND c.history_id \n                                    IN \n                                        (\n                                            SELECT MAX ( d.history_id )\n                                            FROM  v4_5_configuration_history_vms_disks AS d\n                                            GROUP BY d.vm_disk_id\n                                        )\n                                -- Here we get or remove deleted VM disks according to what the user chose\n                                -- in the \"show_deleted\" parameter.\n                                AND\n                                    CASE\n                                        WHEN '$show_deleted'='Yes'\n                                            THEN 1=1\n                                        WHEN '$show_deleted'='No'\n                                            THEN delete_date isnull\n                                    END\n                            GROUP BY c.vm_disk_id\n                            -- Here we sort by the disks that have the max read and write rate.\n                            ORDER BY \n                                AVG ( COALESCE ( b.read_ops_per_second, 0 ) ) +\n                                AVG ( COALESCE ( b.write_ops_per_second, 0 ) ) \n                                DESC\n                            LIMIT 5\n                    )\n                -- Here we get or remove deleted entities according to what the user chose\n                -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_5_configuration_history_vms_disks.delete_date isnull\n                END\n        GROUP BY statistics.vm_disk_id, disk_name, history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, disk_name, vm_name\nORDER BY\n    all_sub_queries.time,\n    AVG ( Read_ops ) DESC,\n    AVG ( Write_ops ) DESC,\n    CONCAT\n    (\n\t\t\tCOALESCE ( disk_name, MAX ( disk_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t)",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Top 5 Most Utilized Disks - I/O operations/sec (over time) (TR03-6)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "ops",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays for the top 3 most utilized ethernet interfaces the average transmit and receive rates for a selected virtual machine over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 29
      },
      "hiddenSeries": false,
      "id": 18,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-7 - This query returns the\n--  VMs Ethernet Interface Tx and Rx Rates\n-- over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t  (\n\t      COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n\t      COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t  ) AS disk_and_vm_name,\n    AVG ( Rx_rate ) AS \"Rx. Rate\",\n    AVG ( Tx_rate ) AS \"Tx. Rate\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN v4_5_configuration_history_vms_interfaces.delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM \n            v4_5_statistics_vms_interfaces_resources_usage_samples AS statistics\n            INNER JOIN v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n\t\t        INNER JOIN v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_interface_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'interface'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n        WHERE \n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm_interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            -- Here we get or remove deleted vm_interfaces according to what the user chose\n            -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_5_configuration_history_vms_interfaces.delete_date isnull\n                END\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM \n                            v4_5_statistics_vms_interfaces_resources_usage_samples AS b\n                            INNER JOIN v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            v4_5_statistics_vms_resources_usage_samples AS samples\n                                                ON \n                                                    (\n                                                        samples.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE \n                                            -- Here we filter by active vms only\n                                            samples.vm_status = 1\n                                            -- Here we filter by the vm chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n\t\t\t\t\t\t\t\t\t\t\t                      AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm_devices configuration\n                                            AND v4_5_configuration_history_vms_devices.history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY a.vm_id, a.device_id\n                                                    )\n                                            -- Here we get or remove deleted VMs according to what the user chose\n                                            -- in the \"show_deleted\" parameter.\n                                            AND\n                                                CASE\n                                                    WHEN '$show_deleted'='Yes'\n                                                        THEN 1=1\n                                                    WHEN '$show_deleted'='No'\n                                                        THEN delete_date isnull\n                                                END\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                            -- Here we get or remove deleted vm_interfaces according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                            AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                            DESC\n                        LIMIT 3\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, interface_name, vm_name\nORDER BY all_sub_queries.time ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-7 - This query returns the\n--  VMs Ethernet Interface Tx and Rx Rates\n-- over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t    (\n\t\t\tCOALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n\t\t\tCOALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t\t) AS disk_and_vm_name,\n    AVG ( Rx_rate ) AS \"Rx. Rate\",\n    AVG ( Tx_rate ) AS \"Tx. Rate\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN v4_5_configuration_history_vms_interfaces.delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate,\n            AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n        FROM \n            (    \n                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n\t\t        INNER JOIN v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_interface_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'interface'\n\t\t\t\t\t          )\n\t\t        INNER JOIN v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n        WHERE \n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm_interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            -- Here we get or remove deleted vm_interfaces according to what the user chose\n            -- in the \"show_deleted\" parameter.\n            AND\n                CASE\n                    WHEN '$show_deleted'='Yes'\n                        THEN 1=1\n                    WHEN '$show_deleted'='No'\n                        THEN v4_5_configuration_history_vms_interfaces.delete_date isnull\n                END\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_interface_id, receive_rate_percent, transmit_rate_percent\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            (\n                                                    SELECT history_datetime, vm_configuration_version, vm_status \n                                                    FROM v4_5_statistics_vms_resources_usage_hourly \n                                                UNION\n                                                    SELECT history_datetime, vm_configuration_version, vm_status\n                                                    FROM v4_5_statistics_vms_resources_usage_daily\n                                                    WHERE\n                                                        history_datetime <\n                                                            (\n                                                                SELECT MIN ( history_datetime )\n                                                                FROM v4_5_statistics_vms_resources_usage_hourly\n                                                            )\n                                            ) AS hourly_daily\n                                                ON \n                                                    (\n                                                        hourly_daily.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE\n                                            -- Here we filter by active vms only\n                                            hourly_daily.vm_status = 1\n                                            -- Here we filter by the VM chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n\t\t\t\t\t\t\t\t\t\t\t                      AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm_devices configuration\n                                            AND v4_5_configuration_history_vms_devices.history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY a.vm_id, a.device_id\n                                                    )\n                                            -- Here we get or remove deleted VMs according to what the user chose\n                                            -- in the \"show_deleted\" parameter.\n                                            AND\n                                                CASE\n                                                    WHEN '$show_deleted'='Yes'\n                                                        THEN 1=1\n                                                    WHEN '$show_deleted'='No'\n                                                        THEN delete_date isnull\n                                                END\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                            -- Here we get or remove deleted vm_interfaces according to what the user chose\n                            -- in the \"show_deleted\" parameter.\n                            AND\n                                CASE\n                                    WHEN '$show_deleted'='Yes'\n                                        THEN 1=1\n                                    WHEN '$show_deleted'='No'\n                                        THEN delete_date isnull\n                                END\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                            AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                            DESC\n                        LIMIT 3\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY all_sub_queries.time, interface_name, vm_name\nORDER BY all_sub_queries.time ASC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Top 3 Most Utilized Ethernet Interface Tx and Rx Rates (over time) (TR03-7)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "Average transmitted and received total dropped packets of the virtual machine interfaces, over the selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 29
      },
      "hiddenSeries": false,
      "id": 34,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-8 - This query returns the VM Ethernet Interface \n-- average Tx and Rx total dropped packets, over time.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t  (\n\t      COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n\t      COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t  ) AS disk_and_vm_name,\n    AVG ( Rx_drop ) AS \"Rx. Drop\",\n    AVG ( Tx_drop ) AS \"Tx. Drop\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN v4_5_configuration_history_vms_interfaces.delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( received_dropped_total_packets, 0 ) ) AS Rx_drop,\n            AVG ( COALESCE ( transmitted_dropped_total_packets, 0 ) ) AS Tx_drop\n        FROM \n            (    \n                SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                FROM v4_5_statistics_vms_interfaces_resources_usage_samples\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n\t\t        INNER JOIN v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_interface_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'interface'\n\t\t\t\t\t          )\n\t\t        INNER JOIN \n\t\t        v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t          )\n        WHERE \n            -- Here we filter by the time range chosen by the user\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                                FROM v4_5_statistics_vms_interfaces_resources_usage_samples\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            (\n                                                SELECT history_datetime, vm_configuration_version, vm_status\n                                                FROM v4_5_statistics_vms_resources_usage_samples\n                                            ) AS samples\n                                                ON \n                                                    (\n                                                        samples.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE\n                                            -- Here we filter by active vms only\n                                            samples.vm_status = 1\n                                            -- Here we filter by the VM chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                            AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm devices configuration\n                                            AND history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY \n                                                            a.vm_id,\n                                                            a.device_id\n                                                    )\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.received_dropped_total_packets, 0 ) ) +\n                            AVG ( COALESCE ( b.transmitted_dropped_total_packets, 0 ) ) \n                            DESC\n                            LIMIT 3\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            vm_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    interface_name,\n    vm_name\nORDER BY all_sub_queries.time ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR03-8 - This query returns the VM Ethernet Interface \n-- average Tx and Rx total dropped packets, over time.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(all_sub_queries.time),\n    CONCAT\n\t  (\n\t      COALESCE ( interface_name, MAX ( interface_name ) over ( partition BY 1 ), '' ) || ' (', \n\t      COALESCE ( vm_name, MAX ( vm_name ) over ( partition BY 1 ), '' ) || ')'\n\t  ) AS disk_and_vm_name,\n    AVG ( Rx_drop ) AS \"Rx. Drop\",\n    AVG ( Tx_drop ) AS \"Tx. Drop\"\nFROM \n    (\n        SELECT v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            CASE\n                WHEN v4_5_configuration_history_vms_interfaces.delete_date IS NULL\n                    THEN v4_5_configuration_history_vms_interfaces.vm_interface_name\n                ELSE v4_5_configuration_history_vms_interfaces.vm_interface_name\n            ||\n            '*'\n            END AS interface_name,\n            CASE\n                WHEN MAX (v4_5_configuration_history_vms.delete_date) IS NULL\n                    THEN MAX (vm_name)\n                ELSE MAX (vm_name)\n            ||\n            '*'\n            END AS vm_name,\n            history_datetime AS time,\n            AVG ( COALESCE ( received_dropped_total_packets, 0 ) ) AS Rx_drop,\n            AVG ( COALESCE ( transmitted_dropped_total_packets, 0 ) ) AS Tx_drop\n        FROM \n            (\n                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets \n                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                            )\n            ) AS statistics\n            INNER JOIN \n            v4_5_configuration_history_vms_interfaces\n                ON \n                    (\n                        v4_5_configuration_history_vms_interfaces.vm_interface_id =\n                        statistics.vm_interface_id\n                    )\n\t\t        INNER JOIN \n\t\t        v4_5_configuration_history_vms_devices\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms_devices.device_id =\n\t\t\t\t\t\t            statistics.vm_interface_id\n\t\t\t\t\t\t            AND v4_5_configuration_history_vms_devices.type = 'interface'\n\t\t\t\t\t          )\n\t\t        INNER JOIN \n\t\t        v4_5_configuration_history_vms\n\t\t            ON\n\t\t                (\n\t\t\t\t\t              v4_5_configuration_history_vms.vm_id = \n\t\t\t\t\t\t            v4_5_configuration_history_vms_devices.vm_id\n\t\t\t\t\t\t        )\n        WHERE \n            -- Here we filter by the time range chosen by the user\n            history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest vm interfaces configuration\n            AND v4_5_configuration_history_vms_interfaces.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_5_configuration_history_vms_interfaces AS a\n                        GROUP BY a.vm_interface_id\n                    )\n            AND v4_5_configuration_history_vms_interfaces.vm_interface_id \n                IN \n                    (\n                        SELECT c.vm_interface_id\n                        FROM     \n                            (\n                                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                UNION\n                                    SELECT history_datetime, vm_interface_id, received_dropped_total_packets, transmitted_dropped_total_packets\n                                    FROM v4_5_statistics_vms_interfaces_resources_usage_daily\n                                    WHERE\n                                        history_datetime <\n                                            (\n                                                SELECT MIN ( history_datetime )\n                                                FROM v4_5_statistics_vms_interfaces_resources_usage_hourly\n                                            )\n                            ) AS b\n                            INNER JOIN \n                            v4_5_configuration_history_vms_interfaces AS c\n                                ON \n                                    (\n                                        c.vm_interface_id = \n                                        b.vm_interface_id\n                                    )\n                        WHERE\n                            c.vm_interface_id \n                                IN \n                                    (\n                                        SELECT device_id\n                                        FROM \n                                            v4_5_configuration_history_vms_devices\n                                            INNER JOIN \n                                            (\n                                                    SELECT history_datetime, vm_configuration_version, vm_status \n                                                    FROM v4_5_statistics_vms_resources_usage_hourly \n                                                UNION\n                                                    SELECT history_datetime, vm_configuration_version, vm_status\n                                                    FROM v4_5_statistics_vms_resources_usage_daily\n                                                    WHERE\n                                                        history_datetime <\n                                                            (\n                                                                SELECT MIN ( history_datetime )\n                                                                FROM v4_5_statistics_vms_resources_usage_hourly\n                                                            )\n                                            ) AS hourly_daily\n                                                ON \n                                                    (\n                                                        hourly_daily.vm_configuration_version =\n                                                        v4_5_configuration_history_vms_devices.vm_configuration_version\n                                                    )\n                                        WHERE\n                                            -- Here we filter by active vms only\n                                            hourly_daily.vm_status = 1\n                                            -- Here we filter by the VM chosen by the user\n                                            AND v4_5_configuration_history_vms_devices.vm_id IN ($vm_id)\n                                            AND create_date < $__timeTo()\n                                            AND ( delete_date > $__timeFrom() OR delete_date IS NULL )\n                                            -- Here we get the latest vm devices configuration\n                                            AND v4_5_configuration_history_vms_devices.history_id \n                                                IN \n                                                    (\n                                                        SELECT MAX ( a.history_id )\n                                                        FROM v4_5_configuration_history_vms_devices AS a\n                                                        GROUP BY \n                                                            a.vm_id,\n                                                            a.device_id\n                                                    )\n                                    )\n                            AND c.history_id \n                                IN \n                                    (\n                                        SELECT MAX ( d.history_id )\n                                        FROM v4_5_configuration_history_vms_interfaces AS d\n                                        GROUP BY d.vm_interface_id\n                                    )\n                        GROUP BY c.vm_interface_id\n                        ORDER BY\n                            AVG ( COALESCE ( b.received_dropped_total_packets, 0 ) ) +\n                            AVG ( COALESCE ( b.transmitted_dropped_total_packets, 0 ) ) \n                            DESC\n                            LIMIT 3\n                    )\n        GROUP BY\n            v4_5_configuration_history_vms_interfaces.vm_interface_id,\n            interface_name,\n            vm_name,\n            history_datetime\n    ) AS all_sub_queries\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nGROUP BY \n    all_sub_queries.time, \n    interface_name,\n    vm_name\nORDER BY all_sub_queries.time ASC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Top 3 Ethernet Interface Tx and Rx Dropped Packets (over time) (TR03-8) ",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "VM",
    "Cluster",
    "CPU",
    "Memory",
    "Interface",
    "Disk"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Show Deleted Entities?",
        "multi": false,
        "name": "show_deleted",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "No"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          }
        ],
        "query": "No,Yes",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_5_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_5_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_5_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\n            ) \t \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_5_configuration_history_datacenters.delete_date ISNULL \t                \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Data Center",
        "multi": true,
        "name": "datacenter_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_5_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_5_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_5_configuration_history_vms  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\n            ) \t \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_5_configuration_history_datacenters.delete_date ISNULL \t                \n        END",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_5_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND cluster_id  \t\t    \n        IN \t\t\t     \t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\n                SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t\n                FROM v4_5_configuration_history_vms \t\t\t\t \t\t\t\t\n            ) \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_5_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Cluster",
        "multi": true,
        "name": "cluster_id",
        "options": [],
        "query": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_5_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND cluster_id  \t\t    \n        IN \t\t\t     \t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\n                SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t\n                FROM v4_5_configuration_history_vms \t\t\t\t \t\t\t\t\n            ) \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_5_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT        \n    CAST ( vm_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN vm_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_5_configuration_history_vms  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \t \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_5_configuration_history_vms.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND cluster_id IN ($cluster_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Virtual Machine",
        "multi": true,
        "name": "vm_id",
        "options": [],
        "query": "SELECT DISTINCT        \n    CAST ( vm_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN vm_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN vm_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_5_configuration_history_vms  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \t \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_5_configuration_history_vms.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND cluster_id IN ($cluster_id)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT COUNT (vm_id)\nFROM v4_5_configuration_history_vms\nWHERE \n    vm_id IN ($vm_id)\n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) ",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "count_vm_id_url",
        "options": [],
        "query": "SELECT COUNT (vm_id)\nFROM v4_5_configuration_history_vms\nWHERE \n    vm_id IN ($vm_id)\n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT \n    CASE\n        WHEN $count_vm_id_url = 1\n            THEN '-general;name=' || vm_name\n        ELSE NULL\n    END\nFROM v4_5_configuration_history_vms\nWHERE \n    vm_id IN ($vm_id) \t    \n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \n    AND delete_date IS NULL",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "vm_name_url",
        "options": [],
        "query": "SELECT DISTINCT \n    CASE\n        WHEN $count_vm_id_url = 1\n            THEN '-general;name=' || vm_name\n        ELSE NULL\n    END\nFROM v4_5_configuration_history_vms\nWHERE \n    vm_id IN ($vm_id) \t    \n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_5_configuration_history_vms a  \t\t         \t\t\t\t\t\n                GROUP BY a.vm_id \t         \t\t\t\t\n            ) \n    AND delete_date IS NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "03 Virtual Machines Trend Dashboard",
  "uid": "VMsTrendDashboard",
  "variables": {
    "list": []
  },
  "version": 1
}