{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The hosts resource usage dashboard displaying resources usage measurements - number of virtual machines, CPU, memory, and ethernet interface Tx/Rx",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1590583286094,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Hosts",
      "tooltip": "The portal does not display deleted hosts",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#hosts${host_name_url}"
    }
  ],
  "panels": [
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 38,
      "title": "Description",
      "type": "row"
    },
    {
      "content": "\n###### This dashboard displays resource usage (number of virtual machines, CPU, memory, ethernet interface Tx/Rx) for a selected host within a selected period.\n\n\n\n",
      "datasource": "$datasource",
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 36,
      "links": [],
      "mode": "markdown",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 27,
      "panels": [],
      "title": "Number of Virtual Machines",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average number of virtual machines for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 4
      },
      "hiddenSeries": false,
      "id": 23,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-1 - This query returns the hosts\n-- max and average active VMs counts by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Average active vms\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    vms_num AS \"Avg. Number of VMs\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( VMS ) AS \"vms_num\"\n        FROM \n            (\n                -- Here we get the hosts active vms\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( active_vms, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS VMS\n                FROM\n                        (\n                            SELECT history_datetime, active_vms, minutes_in_status, host_status, host_id\n                            FROM v4_4_statistics_hosts_resources_usage_samples\n                        ) AS samples\n                WHERE\n                    -- Here we filter by active hosts only\n                    samples.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND samples.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-1 - This query returns the hosts\n-- max and average active VMs counts by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Average active vms\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    vms_num AS \"Avg. Number of VMs\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( VMS ) AS \"vms_num\"\n        FROM \n            (\n                -- Here we get the hosts active vms\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( active_vms, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS VMS\n                FROM\n                        (\n                                SELECT history_datetime, active_vms, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            UNION\n                                SELECT history_datetime, active_vms, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_daily\n                                WHERE\n                                    history_datetime <\n                                        (\n                                            SELECT MIN ( history_datetime )\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        )\n                        ) AS hourly_daily\n                WHERE\n                    -- Here we filter by active hosts only\n                    hourly_daily.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND hourly_daily.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average Number of Virtual Machines (TR04-1)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average number of virtual machines peaks for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 4
      },
      "hiddenSeries": false,
      "id": 34,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-2 - This query returns the hosts\n-- max and average active VMs counts by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Max active vms\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    vms_peak AS \"Avg. VMs Peak\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( VMS_Peak ) AS vms_peak\n        FROM \n            (\n                -- Here we get the hosts max active vms\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( max_active_vms, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS VMS_Peak\n                FROM\n                        (\n                            SELECT history_datetime, active_vms AS max_active_vms, minutes_in_status, host_status, host_id\n                            FROM v4_4_statistics_hosts_resources_usage_samples\n                        ) AS samples\n                WHERE\n                    -- Here we filter by active hosts only\n                    samples.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND samples.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')        \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-2 - This query returns the hosts\n-- max and average active VMs counts by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Max active vms\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    vms_peak AS \"Avg. VMs Peak\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( VMS_Peak ) AS vms_peak\n        FROM \n            (\n                -- Here we get the hosts max active vms\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( max_active_vms, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS VMS_Peak\n                FROM\n                        (\n                                SELECT history_datetime, max_active_vms, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            UNION\n                                SELECT history_datetime, max_active_vms, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_daily\n                                WHERE\n                                    history_datetime <\n                                        (\n                                            SELECT MIN ( history_datetime )\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        )\n                        ) AS hourly_daily\n                WHERE\n                    -- Here we filter by active hosts only\n                    hourly_daily.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND hourly_daily.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')        \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average Number of Virtual Machine Peaks (TR04-2)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 25,
      "panels": [],
      "title": "Host CPU Usage",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average CPU usage for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 13
      },
      "hiddenSeries": false,
      "id": 21,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-3 - This query returns the hosts\n-- max and average CPU usage peaks by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Average CPU usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    cpu_usage AS \"CPU Usage\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( CPU_Usage ) AS cpu_usage\n        FROM \n            (\n                -- Here we get the hosts CPU usage percent\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage\n                FROM\n                        (\n                            SELECT history_datetime, cpu_usage_percent, minutes_in_status, host_status, host_id\n                            FROM v4_4_statistics_hosts_resources_usage_samples\n                        ) AS samples\n                WHERE\n                    -- Here we filter by active hosts only\n                    samples.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND samples.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n         -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')       \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-3 - This query returns the hosts\n-- max and average CPU usage peaks by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Average CPU usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    cpu_usage AS \"CPU Usage\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( CPU_Usage ) AS cpu_usage\n        FROM \n            (\n                -- Here we get the hosts CPU usage percent\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( cpu_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Usage\n                FROM\n                        (\n                                SELECT history_datetime, cpu_usage_percent, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            UNION\n                                SELECT history_datetime, cpu_usage_percent, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_daily\n                                WHERE\n                                    history_datetime <\n                                        (\n                                            SELECT MIN ( history_datetime )\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        )\n                        ) AS hourly_daily\n                WHERE\n                    -- Here we filter by active hosts only\n                    hourly_daily.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND hourly_daily.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')        \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average CPU Usage (TR04-3)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average CPU usage peaks for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 13
      },
      "hiddenSeries": false,
      "id": 22,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-4 - This query returns the hosts\n-- max and average CPU usage peaks by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Max CPU usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    cpu_peak AS \"CPU Peak\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( CPU_Peak ) AS cpu_peak\n        FROM \n            (\n                -- Here we get the hosts max CPU usage \n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( max_cpu_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Peak\n                FROM\n                        (\n                            SELECT history_datetime, cpu_usage_percent AS max_cpu_usage, minutes_in_status, host_status, host_id\n                            FROM v4_4_statistics_hosts_resources_usage_samples\n                        ) AS samples\n                WHERE\n                    -- Here we filter by active hosts only\n                    samples.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND samples.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')        \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-4 - This query returns the hosts\n-- max and average CPU usage peaks by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Max CPU usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    cpu_peak AS \"CPU Peak\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( CPU_Peak ) AS cpu_peak\n        FROM \n            (\n                -- Here we get the hosts max CPU usage \n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( max_cpu_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS CPU_Peak\n                FROM\n                        (\n                                SELECT history_datetime, max_cpu_usage, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            UNION\n                                SELECT history_datetime, max_cpu_usage, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_daily\n                                WHERE\n                                    history_datetime <\n                                        (\n                                            SELECT MIN ( history_datetime )\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        )\n                        ) AS hourly_daily\n                WHERE\n                    -- Here we filter by active hosts only\n                    hourly_daily.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND hourly_daily.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average CPU Usage Peaks (TR04-4)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 30,
      "panels": [],
      "title": "Host Memory Usage",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": true,
      "cacheTimeout": null,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average memory usage for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 21
      },
      "hiddenSeries": false,
      "hideTimeOverride": false,
      "id": 15,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-5 - This query returns the hosts\n-- max and average memory usage peaks by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Average memory usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    mem_usage AS \"Memory Usage\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( MEM_Usage ) AS mem_usage\n        FROM \n            (\n                -- Here we get the hosts memory usage percent\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage\n                FROM\n                        (\n                            SELECT history_datetime, memory_usage_percent, minutes_in_status, host_status, host_id\n                            FROM v4_4_statistics_hosts_resources_usage_samples\n                        ) AS samples\n                WHERE\n                    -- Here we filter by active hosts only\n                    samples.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND samples.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')        \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-5 - This query returns the hosts\n-- max and average memory usage peaks by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Average memory usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    mem_usage AS \"Memory Usage\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( MEM_Usage ) AS mem_usage\n        FROM \n            (\n                -- Here we get the hosts memory usage percent\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( memory_usage_percent, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Usage\n                FROM\n                        (\n                                SELECT history_datetime, memory_usage_percent, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            UNION\n                                SELECT history_datetime, memory_usage_percent, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_daily\n                                WHERE\n                                    history_datetime <\n                                        (\n                                            SELECT MIN ( history_datetime )\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        )\n                        ) AS hourly_daily\n                WHERE\n                    -- Here we filter by active hosts only\n                    hourly_daily.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND hourly_daily.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average Memory Usage (TR04-5)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "cacheTimeout": null,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average memory usage peaks for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 21
      },
      "hiddenSeries": false,
      "hideTimeOverride": false,
      "id": 28,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-6 - This query returns the hosts\n-- max and average memory usage peaks by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Max memory usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    mem_peak AS \"Memory Usage Peaks\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( MEM_Peak ) AS mem_peak\n        FROM \n            (\n                -- Here we get the hosts max memory usage\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( max_memory_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Peak\n                FROM\n                        (\n                            SELECT history_datetime, memory_usage_percent AS max_memory_usage, minutes_in_status, host_status, host_id\n                            FROM v4_4_statistics_hosts_resources_usage_samples\n                        ) AS samples\n                WHERE\n                    -- Here we filter by active hosts only\n                    samples.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND samples.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n        -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')         \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-6 - This query returns the hosts\n-- max and average memory usage peaks by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Max memory usage\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n    mem_peak AS \"Memory Usage Peaks\"\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n            AVG ( MEM_Peak ) AS mem_peak\n        FROM \n            (\n                -- Here we get the hosts max memory usage\n                SELECT\n                    history_datetime AS time,\n                    SUM ( COALESCE ( max_memory_usage, 0 ) * COALESCE ( minutes_in_status, 0 ) ) /\n                    SUM ( COALESCE ( minutes_in_status, 0 ) ) AS MEM_Peak\n                FROM\n                        (\n                                SELECT history_datetime, max_memory_usage, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_hourly\n                            UNION\n                                SELECT history_datetime, max_memory_usage, minutes_in_status, host_status, host_id\n                                FROM v4_4_statistics_hosts_resources_usage_daily\n                                WHERE\n                                    history_datetime <\n                                        (\n                                            SELECT MIN ( history_datetime )\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        )\n                        ) AS hourly_daily\n                WHERE\n                    -- Here we filter by active hosts only\n                    hourly_daily.host_status = 1\n                    -- Here we filter by the host chosen by the user\n                    AND hourly_daily.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                GROUP BY history_datetime\n            ) AS sub_query\n         -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')       \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries ",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Average Memory Usage Peaks (TR04-6)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 29
      },
      "id": 33,
      "panels": [],
      "title": "Host Interface Rx and Tx Usage",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays for the top 3 most utilized ethernet interfaces the average ethernet interface transmit rate for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 30
      },
      "hiddenSeries": false,
      "id": 19,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-7 - This query returns top 3 busiest\n-- ethernet interface Tx and Rx rates, by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Tx rate\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n        Tx_rate\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n        AVG ( Tx_rate ) AS Tx_rate\n        FROM \n            (\n                SELECT\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    CASE\n                        WHEN delete_date IS NULL\n                            THEN v4_4_configuration_history_hosts_interfaces.host_interface_name\n                        ELSE v4_4_configuration_history_hosts_interfaces.host_interface_name\n                    ||\n                    '*'\n                    END AS interface_name,\n                    statistics.history_datetime AS time,\n                    AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n                FROM\n                    (\n                        SELECT history_datetime, host_interface_id, transmit_rate_percent\n                        FROM v4_4_statistics_hosts_interfaces_resources_usage_samples\n                    ) AS statistics\n                    INNER JOIN v4_4_configuration_history_hosts_interfaces\n                        ON \n                            (\n                                v4_4_configuration_history_hosts_interfaces.host_interface_id =\n                                statistics.host_interface_id\n                            )\n                WHERE\n                    -- Here we filter by the host chosen by the user\n                    v4_4_configuration_history_hosts_interfaces.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                    AND v4_4_configuration_history_hosts_interfaces.history_id \n                        IN \n                            (\n                                SELECT MAX ( a.history_id )\n                                FROM v4_4_configuration_history_hosts_interfaces AS a\n                                GROUP BY a.host_interface_id\n                            )\n                    AND v4_4_configuration_history_hosts_interfaces.host_interface_id \n                        IN \n                            (\n                                SELECT c.host_interface_id\n                                FROM\n                                    (\n                                        SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                        FROM v4_4_statistics_hosts_interfaces_resources_usage_samples\n                                    ) AS b\n                                    INNER JOIN v4_4_configuration_history_hosts_interfaces c\n                                        ON \n                                            ( \n                                                c.host_interface_id = \n                                                b.host_interface_id \n                                            )\n                                    INNER JOIN\n                                    (\n                                        SELECT history_datetime, host_id, host_status\n                                        FROM v4_4_statistics_hosts_resources_usage_samples\n                                    ) AS e\n                                        ON \n                                            (\n                                                e.history_datetime = b.history_datetime\n                                                AND e.host_id IN ($host_id)\n                                            )\n                                WHERE\n                                    -- Here we filter by active hosts only\n                                    e.host_status = 1\n                                    AND c.host_id IN ($host_id)\n                                    AND b.history_datetime >= $__timeFrom()\n                                    AND b.history_datetime < $__timeTo()\n                                    AND c.history_id \n                                        IN \n                                            (\n                                                SELECT MAX ( d.history_id )\n                                                FROM v4_4_configuration_history_hosts_interfaces AS d\n                                                GROUP BY d.host_interface_id\n                                            )\n                                    -- Here we get or remove deleted VM devices according to what the user chose\n                                    -- in the \"show_deleted\" parameter\n                                    AND\n                                        CASE\n                                            WHEN '$show_deleted'='Yes'\n                                                THEN 1=1\n                                            WHEN '$show_deleted'='No'\n                                                THEN delete_date isnull\n                                        END\n                                GROUP BY c.host_interface_id\n                                ORDER BY\n                                        AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                                        AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                                        DESC\n                                LIMIT 3\n                            ) \n                    -- Here we get or remove deleted VM devices according to what the user chose\n                    -- in the \"show_deleted\" parameter\n                    AND\n                        CASE\n                            WHEN '$show_deleted'='Yes'\n                                THEN 1=1\n                            WHEN '$show_deleted'='No'\n                                THEN delete_date isnull\n                        END\n                GROUP BY\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    interface_name,\n                    statistics.history_datetime\n            ) AS from_sub_query\n        -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')         \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-7 - This query returns top 3 busiest\n-- ethernet interface Tx and Rx rates, by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Tx rate\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n        Tx_rate\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n        AVG ( Tx_rate ) AS Tx_rate\n        FROM \n            (\n                SELECT\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    CASE\n                        WHEN delete_date IS NULL\n                            THEN v4_4_configuration_history_hosts_interfaces.host_interface_name\n                        ELSE v4_4_configuration_history_hosts_interfaces.host_interface_name\n                    ||\n                    '*'\n                    END AS interface_name,\n                    statistics.history_datetime AS time,\n                    AVG ( COALESCE ( transmit_rate_percent, 0 ) ) AS Tx_rate\n                FROM\n                    (\n                            SELECT history_datetime, host_interface_id, transmit_rate_percent\n                            FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                        UNION\n                            SELECT history_datetime, host_interface_id, transmit_rate_percent\n                            FROM v4_4_statistics_hosts_interfaces_resources_usage_daily\n                            WHERE\n                                history_datetime <\n                                    (\n                                        SELECT MIN ( history_datetime )\n                                        FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                    )\n                    ) AS statistics\n                    INNER JOIN v4_4_configuration_history_hosts_interfaces\n                        ON \n                            (\n                                v4_4_configuration_history_hosts_interfaces.host_interface_id =\n                                statistics.host_interface_id\n                            )\n                WHERE\n                    -- Here we filter by the host chosen by the user\n                    v4_4_configuration_history_hosts_interfaces.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                    AND v4_4_configuration_history_hosts_interfaces.history_id \n                        IN \n                            (\n                                SELECT MAX ( a.history_id )\n                                FROM v4_4_configuration_history_hosts_interfaces AS a\n                                GROUP BY a.host_interface_id\n                            )\n                    AND v4_4_configuration_history_hosts_interfaces.host_interface_id \n                        IN \n                            (\n                                SELECT c.host_interface_id\n                                FROM\n                                    (\n                                            SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                            FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                        UNION\n                                            SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                            FROM v4_4_statistics_hosts_interfaces_resources_usage_daily\n                                            WHERE\n                                                history_datetime <\n                                                    (\n                                                        SELECT MIN ( history_datetime )\n                                                        FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                                    )\n                                    ) AS b\n                                    INNER JOIN v4_4_configuration_history_hosts_interfaces c\n                                        ON \n                                            ( \n                                                c.host_interface_id = \n                                                b.host_interface_id \n                                            )\n                                    INNER JOIN\n                                    (\n                                            SELECT history_datetime, host_id, host_status\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        UNION\n                                            SELECT history_datetime, host_id, host_status\n                                            FROM v4_4_statistics_hosts_resources_usage_daily\n                                            WHERE\n                                                history_datetime <\n                                                    (\n                                                        SELECT MIN ( history_datetime )\n                                                        FROM v4_4_statistics_hosts_resources_usage_hourly\n                                                    )\n                                    ) AS e\n                                        ON \n                                            (\n                                                e.history_datetime = b.history_datetime\n                                                AND e.host_id IN ($host_id)\n                                            )\n                                WHERE\n                                    -- Here we filter by active hosts only\n                                    e.host_status = 1\n                                    AND c.host_id IN ($host_id)\n                                    AND b.history_datetime >= $__timeFrom()\n                                    AND b.history_datetime < $__timeTo()\n                                    AND c.history_id \n                                        IN \n                                            (\n                                                SELECT MAX ( d.history_id )\n                                                FROM v4_4_configuration_history_hosts_interfaces AS d\n                                                GROUP BY d.host_interface_id\n                                            )\n                                    -- Here we get or remove deleted VM devices according to what the user chose\n                                    -- in the \"show_deleted\" parameter\n                                    AND\n                                        CASE\n                                            WHEN '$show_deleted'='Yes'\n                                                THEN 1=1\n                                            WHEN '$show_deleted'='No'\n                                                THEN delete_date isnull\n                                        END\n                                GROUP BY c.host_interface_id\n                                ORDER BY\n                                        AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                                        AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                                        DESC\n                                LIMIT 3\n                            ) \n                    -- Here we get or remove deleted VM devices according to what the user chose\n                    -- in the \"show_deleted\" parameter\n                    AND\n                        CASE\n                            WHEN '$show_deleted'='Yes'\n                                THEN 1=1\n                            WHEN '$show_deleted'='No'\n                                THEN delete_date isnull\n                        END\n                GROUP BY\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    interface_name,\n                    statistics.history_datetime\n            ) AS from_sub_query\n        -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')        \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Top 3 Most Utilized Ethernet Interfaces - Transmit Rate (TR04-7)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays for the top 3 most utilized ethernet interfaces the average ethernet interface receive rate for a selected host within a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 30
      },
      "hiddenSeries": false,
      "id": 31,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": false,
        "total": false,
        "values": false
      },
      "lines": false,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-8 - This query returns top 3 busiest\n-- ethernet interface Tx and Rx rates, by hour of day and day of week\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\n\n-- Rx rate\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n        Rx_rate\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n        AVG ( Rx_rate ) AS Rx_rate\n        FROM \n            (\n                SELECT\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    CASE\n                        WHEN delete_date IS NULL\n                            THEN v4_4_configuration_history_hosts_interfaces.host_interface_name\n                        ELSE v4_4_configuration_history_hosts_interfaces.host_interface_name\n                    ||\n                    '*'\n                    END AS interface_name,\n                    statistics.history_datetime AS time,\n                    AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate\n                FROM\n                    (\n                        SELECT history_datetime, host_interface_id, receive_rate_percent\n                        FROM v4_4_statistics_hosts_interfaces_resources_usage_samples\n                    ) AS statistics\n                    INNER JOIN v4_4_configuration_history_hosts_interfaces\n                        ON \n                            (\n                                v4_4_configuration_history_hosts_interfaces.host_interface_id =\n                                statistics.host_interface_id\n                            )\n                WHERE\n                    -- Here we filter by the host chosen by the user\n                    v4_4_configuration_history_hosts_interfaces.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                    AND v4_4_configuration_history_hosts_interfaces.history_id \n                        IN \n                            (\n                                SELECT MAX ( a.history_id )\n                                FROM v4_4_configuration_history_hosts_interfaces AS a\n                                GROUP BY a.host_interface_id\n                            )\n                    AND v4_4_configuration_history_hosts_interfaces.host_interface_id \n                        IN \n                            (\n                                SELECT c.host_interface_id\n                                FROM\n                                    (\n                                        SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                        FROM v4_4_statistics_hosts_interfaces_resources_usage_samples\n                                    ) AS b\n                                    INNER JOIN v4_4_configuration_history_hosts_interfaces c\n                                        ON \n                                            ( \n                                                c.host_interface_id = \n                                                b.host_interface_id \n                                            )\n                                    INNER JOIN\n                                    (\n                                        SELECT history_datetime, host_id, host_status\n                                        FROM v4_4_statistics_hosts_resources_usage_samples\n                                    ) AS e\n                                        ON \n                                            (\n                                                e.history_datetime = b.history_datetime\n                                                AND e.host_id IN ($host_id)\n                                            )\n                                WHERE\n                                    -- Here we filter by active hosts only\n                                    e.host_status = 1\n                                    AND c.host_id IN ($host_id)\n                                    AND b.history_datetime >= $__timeFrom()\n                                    AND b.history_datetime < $__timeTo()\n                                    AND c.history_id \n                                        IN \n                                            (\n                                                SELECT MAX ( d.history_id )\n                                                FROM v4_4_configuration_history_hosts_interfaces AS d\n                                                GROUP BY d.host_interface_id\n                                            )\n                                    -- Here we get or remove deleted VM devices according to what the user chose\n                                    -- in the \"show_deleted\" parameter\n                                    AND\n                                        CASE\n                                            WHEN '$show_deleted'='Yes'\n                                                THEN 1=1\n                                            WHEN '$show_deleted'='No'\n                                                THEN delete_date isnull\n                                        END\n                                GROUP BY c.host_interface_id\n                                ORDER BY\n                                        AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                                        AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                                        DESC\n                                LIMIT 3\n                            ) \n                    -- Here we get or remove deleted VM devices according to what the user chose\n                    -- in the \"show_deleted\" parameter\n                    AND\n                        CASE\n                            WHEN '$show_deleted'='Yes'\n                                THEN 1=1\n                            WHEN '$show_deleted'='No'\n                                THEN delete_date isnull\n                        END\n                GROUP BY\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    interface_name,\n                    statistics.history_datetime\n            ) AS from_sub_query\n        -- Show data only when the selected period is up to 24 hours back \n        WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES') \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- TR04-8 - This query returns top 3 busiest\n-- ethernet interface Tx and Rx rates, by hour of day and day of week\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\n\n-- Rx rate\nSELECT\n    NOW () AS time,\n    CASE $period_id\n        WHEN 1 \n            THEN \n                CASE CAST (num AS int)\n                    WHEN 1 \n                        THEN 'Sunday'\n                    WHEN 2 \n                        THEN 'Monday'\n                    WHEN 3 \n                        THEN 'Tuesday'\n                    WHEN 4 \n                        THEN 'Wednesday'\n                    WHEN 5 \n                        THEN'Thursday'\n                    WHEN 6 \n                        THEN 'Friday'\n                    WHEN 7 \n                        THEN 'Saturday'\n                END\n        WHEN 2 \n            THEN num\n    END AS num,\n        Rx_rate\nFROM \n    (\n        SELECT DISTINCT\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END AS num,\n        AVG ( Rx_rate ) AS Rx_rate\n        FROM \n            (\n                SELECT\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    CASE\n                        WHEN delete_date IS NULL\n                            THEN v4_4_configuration_history_hosts_interfaces.host_interface_name\n                        ELSE v4_4_configuration_history_hosts_interfaces.host_interface_name\n                    ||\n                    '*'\n                    END AS interface_name,\n                    statistics.history_datetime AS time,\n                    AVG ( COALESCE ( receive_rate_percent, 0 ) ) AS Rx_rate\n                FROM\n                    (\n                            SELECT history_datetime, host_interface_id, receive_rate_percent\n                            FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                        UNION\n                            SELECT history_datetime, host_interface_id, receive_rate_percent\n                            FROM v4_4_statistics_hosts_interfaces_resources_usage_daily\n                            WHERE\n                                history_datetime <\n                                    (\n                                        SELECT MIN ( history_datetime )\n                                        FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                    )\n                    ) AS statistics\n                    INNER JOIN v4_4_configuration_history_hosts_interfaces\n                        ON \n                            (\n                                v4_4_configuration_history_hosts_interfaces.host_interface_id =\n                                statistics.host_interface_id\n                            )\n                WHERE\n                    -- Here we filter by the host chosen by the user\n                    v4_4_configuration_history_hosts_interfaces.host_id IN ($host_id)\n                    AND history_datetime >= $__timeFrom()\n                    AND history_datetime < $__timeTo()\n                    AND v4_4_configuration_history_hosts_interfaces.history_id \n                        IN \n                            (\n                                SELECT MAX ( a.history_id )\n                                FROM v4_4_configuration_history_hosts_interfaces AS a\n                                GROUP BY a.host_interface_id\n                            )\n                    AND v4_4_configuration_history_hosts_interfaces.host_interface_id \n                        IN \n                            (\n                                SELECT c.host_interface_id\n                                FROM\n                                    (\n                                            SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                            FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                        UNION\n                                            SELECT history_datetime, host_interface_id, receive_rate_percent, transmit_rate_percent\n                                            FROM v4_4_statistics_hosts_interfaces_resources_usage_daily\n                                            WHERE\n                                                history_datetime <\n                                                    (\n                                                        SELECT MIN ( history_datetime )\n                                                        FROM v4_4_statistics_hosts_interfaces_resources_usage_hourly\n                                                    )\n                                    ) AS b\n                                    INNER JOIN v4_4_configuration_history_hosts_interfaces c\n                                        ON \n                                            ( \n                                                c.host_interface_id = \n                                                b.host_interface_id \n                                            )\n                                    INNER JOIN\n                                    (\n                                            SELECT history_datetime, host_id, host_status\n                                            FROM v4_4_statistics_hosts_resources_usage_hourly\n                                        UNION\n                                            SELECT history_datetime, host_id, host_status\n                                            FROM v4_4_statistics_hosts_resources_usage_daily\n                                            WHERE\n                                                history_datetime <\n                                                    (\n                                                        SELECT MIN ( history_datetime )\n                                                        FROM v4_4_statistics_hosts_resources_usage_hourly\n                                                    )\n                                    ) AS e\n                                        ON \n                                            (\n                                                e.history_datetime = b.history_datetime\n                                                AND e.host_id IN ($host_id)\n                                            )\n                                WHERE\n                                    -- Here we filter by active hosts only\n                                    e.host_status = 1\n                                    AND c.host_id IN ($host_id)\n                                    AND b.history_datetime >= $__timeFrom()\n                                    AND b.history_datetime < $__timeTo()\n                                    AND c.history_id \n                                        IN \n                                            (\n                                                SELECT MAX ( d.history_id )\n                                                FROM v4_4_configuration_history_hosts_interfaces AS d\n                                                GROUP BY d.host_interface_id\n                                            )\n                                    -- Here we get or remove deleted VM devices according to what the user chose\n                                    -- in the \"show_deleted\" parameter\n                                    AND\n                                        CASE\n                                            WHEN '$show_deleted'='Yes'\n                                                THEN 1=1\n                                            WHEN '$show_deleted'='No'\n                                                THEN delete_date isnull\n                                        END\n                                GROUP BY c.host_interface_id\n                                ORDER BY\n                                        AVG ( COALESCE ( b.receive_rate_percent, 0 ) ) +\n                                        AVG ( COALESCE ( b.transmit_rate_percent, 0 ) ) \n                                        DESC\n                                LIMIT 3\n                            ) \n                    -- Here we get or remove deleted VM devices according to what the user chose\n                    -- in the \"show_deleted\" parameter\n                    AND\n                        CASE\n                            WHEN '$show_deleted'='Yes'\n                                THEN 1=1\n                            WHEN '$show_deleted'='No'\n                                THEN delete_date isnull\n                        END\n                GROUP BY\n                    v4_4_configuration_history_hosts_interfaces.host_interface_id,\n                    interface_name,\n                    statistics.history_datetime\n            ) AS from_sub_query\n        -- Show data only when the selected period is more then 24 hours back\n        WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')        \n        GROUP BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END\n        ORDER BY\n            CASE $period_id\n                WHEN 1\n                    THEN TO_CHAR (time, 'D')\n                WHEN 2\n                    THEN TO_CHAR (time, 'HH24:00') \n            END ASC\n    ) AS all_sub_queries",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Top 3 Most Utilized Ethernet Interfaces - Receive Rate (TR04-8)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "series",
        "name": null,
        "show": true,
        "values": [
          "current"
        ]
      },
      "yaxes": [
        {
          "decimals": 1,
          "format": "percent",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "decimals": null,
          "format": "short",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "Host",
    "Cluster",
    "CPU",
    "Memory",
    "Interface"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Show Deleted Entities?",
        "multi": false,
        "name": "show_deleted",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "No"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          }
        ],
        "query": "No,Yes",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_hosts  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\n            ) \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Data Center",
        "multi": true,
        "name": "datacenter_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( datacenter_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN datacenter_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_datacenters  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_datacenters a  \t\t         \t\t\t\t\t\n                GROUP BY a.datacenter_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND datacenter_id  \t         \t\t\t    \n        IN \t\t\t     \t\t\t\t    \n            ( \t\t\t\t\t \t\t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t \t\t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t \t\t\t\t\t\t\n                WHERE  \t\t\t\t\t     \t\t\t\t\t\t    \n                    cluster_id \t\t\t\t\t         \t\t\t\t\t\t        \n                        IN \t\t\t\t\t             \t\t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_hosts  \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\t\n            ) \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t                \n        END",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND cluster_id  \t\t    \n        IN \t\t\t     \t\t\t     \n            ( \t\t\t\t\t \t\t\t        \n                SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts \t\t\t\t \t\t\t\t\n            ) \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Cluster",
        "multi": true,
        "name": "cluster_id",
        "options": [],
        "query": "SELECT DISTINCT        \n    CAST ( cluster_id AS varchar ) AS __value,  \t\n    CASE      \t    \n        WHEN delete_date IS NULL  \t     \t\t    \n            THEN cluster_name \t \t\t\n        WHEN delete_date IS NOT null  \t      \t\t    \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \t\n    END AS __text  \t\nFROM v4_4_configuration_history_clusters  \t\nWHERE       \t    \n    history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters a  \t\t         \t\t\t\t\t\n                GROUP BY a.cluster_id \t         \t\t\t\t\n            ) \t \t\t\n    AND cluster_id  \t\t    \n        IN \t\t\t     \t\t\t     \n            ( \t\t\t\t\t \t\t\t        \n                SELECT DISTINCT cluster_id \t\t\t\t\t \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts \t\t\t\t \t\t\t\t\n            ) \t\t\n    AND \t    \t\t    \n        CASE  \t        \t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t    \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t    \t\t\t\n        END     \t\t\n    AND datacenter_id IN ($datacenter_id)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( host_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN host_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_hosts  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND cluster_id IN ($cluster_id)  \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Host",
        "multi": true,
        "name": "host_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( host_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN host_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_hosts  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND cluster_id IN ($cluster_id)  \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                \n        END",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "    SELECT\n        'Day of Week' AS __text, \n        1 AS __value\nUNION\n    SELECT\n        'Hour of Day' AS  __text,\n        2 AS __value",
        "hide": 0,
        "includeAll": false,
        "index": -1,
        "label": "Period",
        "multi": false,
        "name": "period_id",
        "options": [],
        "query": "    SELECT\n        'Day of Week' AS __text, \n        1 AS __value\nUNION\n    SELECT\n        'Hour of Day' AS  __text,\n        2 AS __value",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT COUNT (host_id)\nFROM v4_4_configuration_history_hosts\nWHERE \n    host_id IN ($host_id)\n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            )",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "count_host_id_url",
        "options": [],
        "query": "SELECT COUNT (host_id)\nFROM v4_4_configuration_history_hosts\nWHERE \n    host_id IN ($host_id)\n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            )",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT \n    CASE\n        WHEN $count_host_id_url = 1\n            THEN '-general;name=' || host_name\n        ELSE NULL\n    END\nFROM v4_4_configuration_history_hosts\nWHERE \n    host_id IN ($host_id) \t    \n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            ) \n    AND delete_date IS NULL",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "host_name_url",
        "options": [],
        "query": "SELECT DISTINCT \n    CASE\n        WHEN $count_host_id_url = 1\n            THEN '-general;name=' || host_name\n        ELSE NULL\n    END\nFROM v4_4_configuration_history_hosts\nWHERE \n    host_id IN ($host_id) \t    \n    AND history_id           \t\t    \n        IN               \t\t\t    \n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            ) \n    AND delete_date IS NULL",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "04 Hosts Resource Usage Dashboard",
  "uid": "HostsResourceUsage",
  "variables": {
    "list": []
  },
  "version": 1
}