{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The storage domain inventory dashboard include storage domain inventory list and disk usage",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1590323227455,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Storage Domains",
      "tooltip": "The portal does not display deleted storage domains",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#storage"
    }
  ],
  "panels": [
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 15,
      "title": "Description",
      "type": "row"
    },
    {
      "content": "\n###### This dashboard include inventory list and disk usage for the selected storage domain.\n\n###### **Note:** Available Disk Size range must contain numeric values or Null.\n\n\n",
      "datasource": "$datasource",
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 13,
      "links": [],
      "mode": "markdown",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 11,
      "title": "Reports",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "This report displays a inventory list of all storage domains of the selected data center.",
      "fontSize": "100%",
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 4,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": true
      },
      "styles": [
        {
          "alias": "Storage Domain Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "storage_domain_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "storage_domain_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Domain Type",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "storage_domain_type",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Storage Type",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "storage_type",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Available Disk Size",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "available_disk_size_gb",
          "thresholds": [],
          "type": "number",
          "unit": "decgbytes"
        },
        {
          "alias": "Used Disk Size",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "used_disk_size_gb",
          "thresholds": [],
          "type": "number",
          "unit": "decgbytes"
        },
        {
          "alias": "Total Disk Size",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "total_size",
          "thresholds": [],
          "type": "number",
          "unit": "decgbytes"
        },
        {
          "alias": "Create Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "create_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Delete Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "delete_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-1 - This query returns for a specific datacenter, the storage domains list,\n-- along with their configuration details, available disk size, \n-- used disk size and total, up to an hour back.\n-- storage_domain_type and storage_type will be returned in localised session language.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT\n    storage_domain_name,\n    v4_4_configuration_history_storage_domains.storage_domain_id,\n    a.value AS storage_domain_type,\n    b.value AS storage_type,\n    available_disk_size_gb, \n    used_disk_size_gb,\n    ( available_disk_size_gb + used_disk_size_gb ) AS total_size,\n    create_date,\n    delete_date\nFROM \n    v4_4_configuration_history_storage_domains\n    INNER JOIN v4_4_map_history_datacenters_storage_domains\n        ON \n            (\n                v4_4_configuration_history_storage_domains.storage_domain_id =\n                v4_4_map_history_datacenters_storage_domains.storage_domain_id\n                -- Here we filter by the datacenter chosen by the user\n                AND v4_4_map_history_datacenters_storage_domains.datacenter_id IN ($datacenter_id)\n                -- Here we get the latest map\n                AND v4_4_map_history_datacenters_storage_domains.history_id \n                    IN \n                        (\n                            SELECT MAX ( a.history_id )\n                            FROM v4_4_map_history_datacenters_storage_domains a\n                            GROUP BY a.storage_domain_id, a.datacenter_id\n                        )\n            )\n    LEFT OUTER JOIN \n        (\n            SELECT\n                enum_translator.enum_type,\n                enum_translator.enum_key,\n                enum_translator.value\n            FROM enum_translator\n            WHERE language_code = 'en_US'\n        ) AS a\n        ON \n            (\n                storage_domain_type = a.enum_key\n                AND a.enum_type = 'STORAGE_DOMAIN_TYPE'\n            )\n    LEFT OUTER JOIN \n        (\n            SELECT\n                enum_translator.enum_type,\n                enum_translator.enum_key,\n                enum_translator.value\n            FROM enum_translator\n            WHERE language_code = 'en_US'\n        ) AS b\n        ON \n            (\n                storage_type = b.enum_key\n                AND b.enum_type = 'STORAGE_TYPE'\n            )\n    LEFT OUTER JOIN \n        (\n                SELECT history_datetime, storage_domain_id, history_id, available_disk_size_gb, used_disk_size_gb \n                FROM v4_4_statistics_storage_domains_resources_usage_samples\n        ) AS samples\n        ON \n            (\n                v4_4_configuration_history_storage_domains.storage_domain_id =\n                samples.storage_domain_id\n                AND samples.history_id \n                    IN \n                        (\n                            SELECT MAX ( a.history_id )\n                            FROM             \n                                (   \n                                    SELECT history_datetime, history_id, storage_domain_id \n                                    FROM v4_4_statistics_storage_domains_resources_usage_samples\n                                ) AS a    \n                            GROUP BY a.storage_domain_id\n                        )\n            )\nWHERE\n    -- Show data only when the selected period is up to 24 hours back \n    $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    AND v4_4_configuration_history_storage_domains.storage_domain_id IN ($storage_id)\n    -- Here we filter by the domain type chosen by the user\n    AND storage_domain_type IN ($domain_type)\n    -- Here we filter by the storage type chosen by the user\n    AND storage_type IN ($storage_type)\n    -- Only show storage domains with available disk size smaller than the threshold set by the user\n    AND \n        CASE \n            WHEN LOWER ( '$disk_upper_threshold' ) != 'null' \n                THEN COALESCE ( available_disk_size_gb, 0 ) < ($disk_upper_threshold)\n            ELSE 1=1\n        END\n    -- Here we get the storage domain latest configurations\n    AND v4_4_configuration_history_storage_domains.history_id \n        IN \n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_4_configuration_history_storage_domains AS a\n                GROUP BY a.storage_domain_id\n            )\n    -- This will determine where deleted entities will be included in the report,\n    -- according to the user selection for \"show_deleted\" parameter\n    AND\n        CASE\n          WHEN '$show_deleted'='Yes'\n              THEN 1=1\n          WHEN '$show_deleted'='No'\n              THEN delete_date isnull\n        END\nORDER BY storage_domain_name",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-1 - This query returns for a specific datacenter, the storage domains list,\n-- along with their configuration details, available disk size, \n-- used disk size and total, up to an hour back.\n-- storage_domain_type and storage_type will be returned in localised session language.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT\n    storage_domain_name,\n    v4_4_configuration_history_storage_domains.storage_domain_id,\n    a.value AS storage_domain_type,\n    b.value AS storage_type,\n    available_disk_size_gb, \n    used_disk_size_gb,\n    ( available_disk_size_gb + used_disk_size_gb ) AS total_size,\n    create_date,\n    delete_date\nFROM \n    v4_4_configuration_history_storage_domains\n    INNER JOIN v4_4_map_history_datacenters_storage_domains\n        ON \n            (\n                v4_4_configuration_history_storage_domains.storage_domain_id =\n                v4_4_map_history_datacenters_storage_domains.storage_domain_id\n                -- Here we filter by the datacenter chosen by the user\n                AND v4_4_map_history_datacenters_storage_domains.datacenter_id IN ($datacenter_id)\n                -- Here we get the latest map\n                AND v4_4_map_history_datacenters_storage_domains.history_id \n                    IN \n                        (\n                            SELECT MAX ( a.history_id )\n                            FROM v4_4_map_history_datacenters_storage_domains a\n                            GROUP BY a.storage_domain_id, a.datacenter_id\n                        )\n            )\n    LEFT OUTER JOIN \n        (\n            SELECT\n                enum_translator.enum_type,\n                enum_translator.enum_key,\n                enum_translator.value\n            FROM enum_translator\n            WHERE language_code = 'en_US'\n        ) AS a\n        ON \n            (\n                storage_domain_type = a.enum_key\n                AND a.enum_type = 'STORAGE_DOMAIN_TYPE'\n            )\n    LEFT OUTER JOIN \n        (\n            SELECT\n                enum_translator.enum_type,\n                enum_translator.enum_key,\n                enum_translator.value\n            FROM enum_translator\n            WHERE language_code = 'en_US'\n        ) AS b\n        ON \n            (\n                storage_type = b.enum_key\n                AND b.enum_type = 'STORAGE_TYPE'\n            )\n    LEFT OUTER JOIN \n        (\n                SELECT history_datetime, storage_domain_id, history_id, available_disk_size_gb, used_disk_size_gb \n                FROM v4_4_statistics_storage_domains_resources_usage_hourly\n            UNION\n                SELECT history_datetime, storage_domain_id, history_id, available_disk_size_gb, used_disk_size_gb \n                FROM v4_4_statistics_storage_domains_resources_usage_daily\n                WHERE\n                    history_datetime <\n                        (\n                            SELECT MIN ( history_datetime )\n                            FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                        )\n        ) AS hourly_daily\n        ON \n            (\n                v4_4_configuration_history_storage_domains.storage_domain_id =\n                hourly_daily.storage_domain_id\n                AND hourly_daily.history_id \n                    IN \n                        (\n                            SELECT MAX ( a.history_id )\n                            FROM             \n                                (   \n                                        SELECT history_datetime, history_id, storage_domain_id \n                                        FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                                    UNION\n                                        SELECT history_datetime, history_id, storage_domain_id \n                                        FROM v4_4_statistics_storage_domains_resources_usage_daily\n                                ) AS a    \n                            GROUP BY a.storage_domain_id\n                        )\n            )\nWHERE\n    -- Show data only when the selected period is more then 24 hours back\n    $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    AND v4_4_configuration_history_storage_domains.storage_domain_id IN ($storage_id)\n    -- Here we filter by the domain type chosen by the user\n    AND storage_domain_type IN ($domain_type)\n    -- Here we filter by the storage type chosen by the user\n    AND storage_type IN ($storage_type)\n    -- Only show storage domains with available disk size smaller than the threshold set by the user\n    AND \n        CASE \n            WHEN LOWER ( '$disk_upper_threshold' ) != 'null' \n                THEN COALESCE ( available_disk_size_gb, 0 ) < ($disk_upper_threshold)\n            ELSE 1=1\n        END\n    AND v4_4_configuration_history_storage_domains.history_id \n        IN \n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_4_configuration_history_storage_domains AS a\n                GROUP BY a.storage_domain_id\n            )\n    -- This will determine where deleted entities will be included in the report,\n    -- according to the user selection for \"show_deleted\" parameter\n    AND\n        CASE\n          WHEN '$show_deleted'='Yes'\n              THEN 1=1\n          WHEN '$show_deleted'='No'\n              THEN delete_date isnull\n        END\nORDER BY storage_domain_name",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Storage Domains Inventory (IN03-1)",
      "transform": "table",
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average available disk size for the selected data center and storage domain over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 8,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "hideZero": true,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-2 - This query returns for a specific storage domain\n-- the average available disk size per hour over the chosen period.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    available_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( available_disk_size_gb ) AS available_disk_size\n        FROM\n            (\n                SELECT history_datetime, available_disk_size_gb, storage_domain_id \n                FROM v4_4_statistics_storage_domains_resources_usage_samples\n            ) AS samples,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            samples.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND samples.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_storage_domains a\n                        GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.history_datetime",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-2 - This query returns for a specific storage domain\n-- the average available disk size per hour over the chosen period.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    available_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( available_disk_size_gb ) AS available_disk_size\n        FROM\n            (\n                    SELECT history_datetime, available_disk_size_gb, storage_domain_id \n                    FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, available_disk_size_gb, storage_domain_id\n                    FROM v4_4_statistics_storage_domains_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                            )\n            ) AS hourly_daily,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            hourly_daily.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND hourly_daily.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_storage_domains a\n                        GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.history_datetime",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Storage Domain Available Size (over time) (IN03-2)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": null,
          "format": "decgbytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays average used disk size for the selected data center and storage domain over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 7,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "hideZero": true,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-3 - This query returns for a specific storage domain\n-- the average used disk size per hour for the chosen period.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    used_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( used_disk_size_gb ) AS used_disk_size\n        FROM\n            (\n                SELECT history_datetime, used_disk_size_gb, storage_domain_id \n                FROM v4_4_statistics_storage_domains_resources_usage_samples\n            ) AS samples,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            samples.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND samples.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                    SELECT MAX ( a.history_id )\n                    FROM v4_4_configuration_history_storage_domains a\n                    GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.history_datetime",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-3 - This query returns for a specific storage domain\n-- the average used disk size per hour for the chosen period.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    used_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( used_disk_size_gb ) AS used_disk_size\n        FROM\n            (\n                    SELECT history_datetime, used_disk_size_gb, storage_domain_id \n                    FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, used_disk_size_gb, storage_domain_id\n                    FROM v4_4_statistics_storage_domains_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                            )\n            ) AS hourly_daily,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            hourly_daily.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND hourly_daily.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                    SELECT MAX ( a.history_id )\n                    FROM v4_4_configuration_history_storage_domains a\n                    GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.history_datetime",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Storage Domain Used Size (over time) (IN03-3)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": null,
          "format": "decgbytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "decimals": null,
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays used disk size versus available disk size ( total disk size ) for the selected data center and storage domain over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 19
      },
      "hiddenSeries": false,
      "id": 6,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "hideZero": true,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 0.5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-4 - This query returns for a specific storage domain\n-- the total disk size.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    used_disk_size + available_disk_size AS total_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( available_disk_size_gb ) AS available_disk_size,\n            AVG ( used_disk_size_gb ) AS used_disk_size\n        FROM\n            (\n                SELECT history_datetime, available_disk_size_gb, used_disk_size_gb, storage_domain_id \n                FROM v4_4_statistics_storage_domains_resources_usage_samples\n            ) AS samples,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            samples.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND samples.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_storage_domains a\n                        GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n    -- Show data only when the selected period is up to 24 hours back \n    WHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\n    ORDER BY sub_query.history_datetime",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-4 - This query returns for a specific storage domain\n-- the total disk size.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    used_disk_size + available_disk_size AS total_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( available_disk_size_gb ) AS available_disk_size,\n            AVG ( used_disk_size_gb ) AS used_disk_size\n        FROM\n            (\n                    SELECT history_datetime, available_disk_size_gb, used_disk_size_gb, storage_domain_id \n                    FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, available_disk_size_gb, used_disk_size_gb, storage_domain_id\n                    FROM v4_4_statistics_storage_domains_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                            )\n            ) AS hourly_daily,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            hourly_daily.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND hourly_daily.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_storage_domains a\n                        GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n    -- Show data only when the selected period is more then 24 hours back\n    WHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\n    ORDER BY sub_query.history_datetime",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Storage Domain Total Size (over time) (IN03-4)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": null,
          "format": "decgbytes",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$datasource",
      "description": "This report displays total used disk size for the selected data center and storage domain over a selected period.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 19
      },
      "hiddenSeries": false,
      "id": 9,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": true,
        "hideZero": true,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null as zero",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-5 - This query returns for a specific storage domain\n-- the total used disk size per hour for the chosen period.\n\n-- This query (A) displays recent data from the last hours, \n-- and for each minute, using the samples table.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    used_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( used_disk_size_gb ) AS used_disk_size\n        FROM\n            (\n                SELECT history_datetime, used_disk_size_gb, storage_domain_id \n                FROM v4_4_statistics_storage_domains_resources_usage_samples\n            ) AS samples,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            samples.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND samples.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_storage_domains a\n                        GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is up to 24 hours back \nWHERE $__timeFrom() >= (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.history_datetime",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN03-5 - This query returns for a specific storage domain\n-- the total used disk size per hour for the chosen period.\n\n-- This query (B) displays historical and recent data \n-- excluding the last few hours, by using the hourly and daily tables.\nSELECT DISTINCT\n    $__time(sub_query.history_datetime),\n    COALESCE \n        (\n            storage_domain_name,\n            MAX ( storage_domain_name ) over ( partition BY 1 ),\n            ''\n        ) AS storage_domain_name,\n    used_disk_size\nFROM \n    (\n        SELECT\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime,\n            AVG ( used_disk_size_gb ) AS used_disk_size\n        FROM\n            (\n                    SELECT history_datetime, used_disk_size_gb, storage_domain_id \n                    FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                UNION\n                    SELECT history_datetime, used_disk_size_gb, storage_domain_id\n                    FROM v4_4_statistics_storage_domains_resources_usage_daily\n                    WHERE\n                        history_datetime <\n                            (\n                                SELECT MIN ( history_datetime )\n                                FROM v4_4_statistics_storage_domains_resources_usage_hourly\n                            )\n            ) AS hourly_daily,\n            v4_4_configuration_history_storage_domains\n        WHERE\n            -- Here we join the the storage domain configurations table with the statistics table\n            v4_4_configuration_history_storage_domains.storage_domain_id =\n            hourly_daily.storage_domain_id\n            -- Here we filter by the storage domain chosen by the user\n            AND hourly_daily.storage_domain_id IN ($storage_id)\n            AND history_datetime >= $__timeFrom()\n            AND history_datetime < $__timeTo()\n            -- Here we get the latest storage domain configurations\n            AND v4_4_configuration_history_storage_domains.history_id \n                IN \n                    (\n                        SELECT MAX ( a.history_id )\n                        FROM v4_4_configuration_history_storage_domains a\n                        GROUP BY a.storage_domain_id\n                    )\n        GROUP BY\n            v4_4_configuration_history_storage_domains.storage_domain_name,\n            history_datetime\n    ) AS sub_query\n-- Show data only when the selected period is more then 24 hours back\nWHERE $__timeFrom() < (NOW() - INTERVAL '1443 MINUTES')\nORDER BY sub_query.history_datetime",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Storage Domain Total Used Size (over time) (IN03-5)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": null,
          "format": "decgbytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "SD",
    "DC",
    "Disk"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Show Deleted Entities?",
        "multi": false,
        "name": "show_deleted",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "No"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          }
        ],
        "query": "No,Yes",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT  \n    CAST ( datacenter_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL\n            THEN datacenter_name \t\n        WHEN delete_date is not null  \t     \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM v4_4_configuration_history_datacenters \nWHERE\n    history_id\n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_datacenters a  \t\t        \n                GROUP BY a.datacenter_id \t        \n            ) \t\n    AND datacenter_id\n      \tIN \t\t\t\n            ( \t\t\t     \n                SELECT DISTINCT datacenter_id \t\t\t\t \n                FROM v4_4_map_history_datacenters_storage_domains \t\t\t\n            ) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t   \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Data Center",
        "multi": true,
        "name": "datacenter_id",
        "options": [],
        "query": "SELECT DISTINCT  \n    CAST ( datacenter_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL\n            THEN datacenter_name \t\n        WHEN delete_date is not null  \t     \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM v4_4_configuration_history_datacenters \nWHERE\n    history_id\n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_datacenters a  \t\t        \n                GROUP BY a.datacenter_id \t        \n            ) \t\n    AND datacenter_id\n      \tIN \t\t\t\n            ( \t\t\t     \n                SELECT DISTINCT datacenter_id \t\t\t\t \n                FROM v4_4_map_history_datacenters_storage_domains \t\t\t\n            ) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t   \n        END",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( storage_domain_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL  \t    \n            THEN storage_domain_name \t\n        WHEN delete_date is not null  \t     \n            THEN storage_domain_name || ' (Detached on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM      \n    ( \t\t\n        SELECT  \t\t    \n            v4_4_configuration_history_storage_domains.*,  \t\t    \n            v4_4_map_history_datacenters_storage_domains.datacenter_id \t\t\n        FROM \t\t    \n            v4_4_configuration_history_storage_domains             \n            LEFT JOIN              \n            v4_4_map_history_datacenters_storage_domains             \n                USING (storage_domain_id) \t\n    ) AS b \nWHERE      \n    history_id          \n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_storage_domains a  \t\t        \n                GROUP BY a.storage_domain_id \t        \n            ) \t\n    AND datacenter_id IN ($datacenter_id) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN delete_date ISNULL \t   \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Storage Domain",
        "multi": true,
        "name": "storage_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( storage_domain_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL  \t    \n            THEN storage_domain_name \t\n        WHEN delete_date is not null  \t     \n            THEN storage_domain_name || ' (Detached on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM      \n    ( \t\t\n        SELECT  \t\t    \n            v4_4_configuration_history_storage_domains.*,  \t\t    \n            v4_4_map_history_datacenters_storage_domains.datacenter_id \t\t\n        FROM \t\t    \n            v4_4_configuration_history_storage_domains             \n            LEFT JOIN              \n            v4_4_map_history_datacenters_storage_domains             \n                USING (storage_domain_id) \t\n    ) AS b \nWHERE      \n    history_id          \n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_storage_domains a  \t\t        \n                GROUP BY a.storage_domain_id \t        \n            ) \t\n    AND datacenter_id IN ($datacenter_id) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN delete_date ISNULL \t   \n        END",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT           \n    value AS __text,           \n    enum_key AS __value \nFROM       \n    ( \t \t\t\n        SELECT        \t\t    \n            enum_translator.*,       \t\t    \n            v4_4_configuration_history_storage_domains.storage_domain_id      \t\t\n        FROM  \t     \t\t    \n            enum_translator     \t\t    \n            LEFT JOIN \t         \t\t    \n            v4_4_configuration_history_storage_domains\t     \t\t    \n                ON  \t         \t\t        \n                    (  \t\t\t     \t\t\t\t\t\n                        enum_translator.enum_key =  \t\t\t\t \t\t\t\t\t\n                        v4_4_configuration_history_storage_domains.storage_domain_type \t\t\t\t\t\n                        AND v4_4_configuration_history_storage_domains.history_id \t\t\t\t\t    \n                            IN \t\t\t\t\t        \n                                (  \t\t\t\t\t\t\t\t\n                                    SELECT MAX (a.history_id) \t\t\t\t\t\t\t\t\n                                    FROM v4_4_configuration_history_storage_domains a \t\t\t\t\t\t\t\t\n                                    GROUP BY a.storage_domain_id \t\t\t\t\t\t\t\n                                ) \t\t\t\t\n                    )  \t\n    ) AS b  \nWHERE \n    language_code = 'en_US'       \n    AND enum_type ='STORAGE_DOMAIN_TYPE' \n    AND storage_domain_id IN ($storage_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Domain Type",
        "multi": true,
        "name": "domain_type",
        "options": [],
        "query": "SELECT DISTINCT           \n    value AS __text,           \n    enum_key AS __value \nFROM       \n    ( \t \t\t\n        SELECT        \t\t    \n            enum_translator.*,       \t\t    \n            v4_4_configuration_history_storage_domains.storage_domain_id      \t\t\n        FROM  \t     \t\t    \n            enum_translator     \t\t    \n            LEFT JOIN \t         \t\t    \n            v4_4_configuration_history_storage_domains\t     \t\t    \n                ON  \t         \t\t        \n                    (  \t\t\t     \t\t\t\t\t\n                        enum_translator.enum_key =  \t\t\t\t \t\t\t\t\t\n                        v4_4_configuration_history_storage_domains.storage_domain_type \t\t\t\t\t\n                        AND v4_4_configuration_history_storage_domains.history_id \t\t\t\t\t    \n                            IN \t\t\t\t\t        \n                                (  \t\t\t\t\t\t\t\t\n                                    SELECT MAX (a.history_id) \t\t\t\t\t\t\t\t\n                                    FROM v4_4_configuration_history_storage_domains a \t\t\t\t\t\t\t\t\n                                    GROUP BY a.storage_domain_id \t\t\t\t\t\t\t\n                                ) \t\t\t\t\n                    )  \t\n    ) AS b  \nWHERE \n    language_code = 'en_US'       \n    AND enum_type ='STORAGE_DOMAIN_TYPE' \n    AND storage_domain_id IN ($storage_id)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT                \n    value AS __text,                \n    enum_key AS __value  \nFROM            \n    ( \t \t\t         \n        SELECT             \n            enum_translator.*,             \n            v4_4_configuration_history_storage_domains.storage_domain_id,             \n            v4_4_configuration_history_storage_domains.storage_domain_type         \n        FROM   \t    \n            enum_translator     \t\t                 \n            LEFT JOIN \t         \t\t                 \n            v4_4_configuration_history_storage_domains\t     \t\t                     \n               ON   \t            \n                   (   \t\t        \n                       enum_translator.enum_key =  \t\t\t\t \t\t\t\t\t                        \n                       v4_4_configuration_history_storage_domains.storage_type  \t\t        \n                       AND  v4_4_configuration_history_storage_domains.history_id \t\t\t\t\t                                     \n                           IN \t\t\t\t\t                                             \n                               (  \t\t\t\t        \n                                   SELECT MAX (a.history_id) \t\t\t\t\t\t                          \t        \n                                   FROM v4_4_configuration_history_storage_domains a  \t\t\t\t        \n                                   GROUP BY a.storage_domain_id  \t\t\t\t    \n                               ) \t\t\t\t                     \n                   )  \t     \n    ) AS b   \nWHERE      \n    language_code = 'en_US'            \n    AND enum_type ='STORAGE_TYPE'        \n    AND storage_domain_type IN ($domain_type)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Storage Type",
        "multi": true,
        "name": "storage_type",
        "options": [],
        "query": "SELECT DISTINCT                \n    value AS __text,                \n    enum_key AS __value  \nFROM            \n    ( \t \t\t         \n        SELECT             \n            enum_translator.*,             \n            v4_4_configuration_history_storage_domains.storage_domain_id,             \n            v4_4_configuration_history_storage_domains.storage_domain_type         \n        FROM   \t    \n            enum_translator     \t\t                 \n            LEFT JOIN \t         \t\t                 \n            v4_4_configuration_history_storage_domains\t     \t\t                     \n               ON   \t            \n                   (   \t\t        \n                       enum_translator.enum_key =  \t\t\t\t \t\t\t\t\t                        \n                       v4_4_configuration_history_storage_domains.storage_type  \t\t        \n                       AND  v4_4_configuration_history_storage_domains.history_id \t\t\t\t\t                                     \n                           IN \t\t\t\t\t                                             \n                               (  \t\t\t\t        \n                                   SELECT MAX (a.history_id) \t\t\t\t\t\t                          \t        \n                                   FROM v4_4_configuration_history_storage_domains a  \t\t\t\t        \n                                   GROUP BY a.storage_domain_id  \t\t\t\t    \n                               ) \t\t\t\t                     \n                   )  \t     \n    ) AS b   \nWHERE      \n    language_code = 'en_US'            \n    AND enum_type ='STORAGE_TYPE'        \n    AND storage_domain_type IN ($domain_type)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "Null",
          "value": "Null"
        },
        "hide": 0,
        "label": "Available Disk Size (GB) <",
        "name": "disk_upper_threshold",
        "options": [
          {
            "selected": false,
            "text": "Null",
            "value": "Null"
          }
        ],
        "query": "Null",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "03 Storage Domains Inventory Dashboard",
  "uid": "StorageDomainsInventoryDashboard",
  "variables": {
    "list": []
  },
  "version": 1
}