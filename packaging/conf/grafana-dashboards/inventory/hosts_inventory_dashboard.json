{
  "__inputs": [
    {
      "name": null,
      "label": null,
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.7.4"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "The hosts inventory dashboard displays a inventory list of all hosts of the selected data center and cluster.",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1590069234476,
  "links": [],
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": true,
      "title": "Administration Portal: Hosts",
      "tooltip": "The portal does not display deleted hosts",
      "type": "link",
      "url": "https://${EngineFQDN}/ovirt-engine/webadmin/#hosts"
    }
  ],
  "panels": [
    {
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 27,
      "title": "Description",
      "type": "row"
    },
    {
      "content": "\n###### This dashboard displays an inventory list of all hosts in the selected cluster.\n\n###### **Note:** Number of CPUs and Memory Size ranges must contain numeric values or Null.\n\n",
      "datasource": "$datasource",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 21,
      "links": [],
      "mode": "markdown",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 23,
      "panels": [],
      "title": "Host Configuration Details",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "This report displays a inventory list of all hosts in the selected data center and cluster.",
      "fontSize": "100%",
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 17,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 7,
        "desc": true
      },
      "styles": [
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "is_deleted",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "cluster_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "host_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Host Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "Link to Host Dashboard",
          "linkUrl": "/ovirt-engine-grafana/d/HostDashboard/host-dashboard?orgId=1&var-datasource=$datasource&var-show_deleted=${__cell_0}&var-host_id=${__cell_2}",
          "mappingType": 1,
          "pattern": "host_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Cluster Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "cluster_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "FQDN or IP",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "fqdn_or_ip",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "VDSM Version",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "vdsm_version",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Operating System",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "host_os",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Create Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "create_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Delete Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "delete_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN02-1 - This report will display a list of all hosts configuration data by Datacenter and Cluster\n\nSELECT\n    CASE \n        WHEN v4_4_configuration_history_hosts.delete_date IS NULL\n            THEN 'No'\n        WHEN v4_4_configuration_history_hosts.delete_date IS NOT NULL\n            THEN 'Yes'\n    END AS is_deleted,\n    v4_4_configuration_history_hosts.cluster_id,\n    v4_4_configuration_history_hosts.host_id,\n    v4_4_configuration_history_hosts.host_name,\n    v4_4_configuration_history_clusters.cluster_name,\n    -- A fully qualified domain name ( fqdn )\n    v4_4_configuration_history_hosts.fqdn_or_ip,\n    v4_4_configuration_history_hosts.vdsm_version,\n    v4_4_configuration_history_hosts.host_os,\n    CAST ( v4_4_configuration_history_hosts.create_date AS date ) AS create_date,\n    CAST ( v4_4_configuration_history_hosts.delete_date AS date ) AS delete_date\nFROM \n    v4_4_configuration_history_hosts\n    LEFT OUTER JOIN v4_4_configuration_history_clusters\n        ON \n            (\n                v4_4_configuration_history_hosts.cluster_id =\n                v4_4_configuration_history_clusters.cluster_id\n                -- Here we get the cluster latest configuration\n                AND v4_4_configuration_history_clusters.history_id \n                    IN \n                        (\n                            SELECT MAX ( a.history_id )\n                            FROM v4_4_configuration_history_clusters a\n                            GROUP BY a.cluster_id\n                        )\n            )\nWHERE \n    -- Filter hosts list according to the data center that was chosen by the user\n    v4_4_configuration_history_hosts.cluster_id \n        IN \n            (\n                SELECT a.cluster_id\n                FROM v4_4_configuration_history_clusters a\n                WHERE a.datacenter_id IN ($datacenter_id)\n            )\n    -- Filter list according to the host/s that was chosen by the user\n    AND v4_4_configuration_history_hosts.host_id IN ($host_id)\n    -- Filter list according to the OS that was chosen by the user\n    AND COALESCE ( v4_4_configuration_history_hosts.host_os, 'Unknown' ) IN ($host_os)\n    -- Only show hosts with number of number of CPUs greater than or equal to the threshold set by the user\n    AND \n        CASE\n            WHEN LOWER ( '$cpu_lower_threshold' ) != 'null' AND count_threads_as_cores = TRUE\n                THEN COALESCE ( number_of_threads, 0 ) >= ($cpu_lower_threshold)\n            WHEN LOWER ( '$cpu_lower_threshold' ) != 'null' AND count_threads_as_cores IN ( FALSE, NULL )\n                THEN COALESCE ( number_of_cores, 0 ) >= ($cpu_lower_threshold)\n            ELSE 1=1\n        END\n    -- Only show hosts with number of number of CPUs smaller than the threshold set by the user\n    AND \n        CASE \n            WHEN LOWER ( '$cpu_upper_threshold' ) != 'null' AND count_threads_as_cores = TRUE\n                THEN COALESCE ( number_of_threads, 0 ) < ($cpu_upper_threshold)\n            WHEN LOWER ( '$cpu_upper_threshold' ) != 'null' AND count_threads_as_cores IN ( FALSE, NULL )\n                THEN COALESCE ( number_of_cores, 0 ) < ($cpu_upper_threshold)\n            ELSE 1=1\n        END\n    -- Only show hosts with memory size greater than or equal to the threshold set by the user\n    AND \n        CASE \n            WHEN LOWER ( '$mem_lower_threshold' ) != 'null'\n                THEN CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 >= ($mem_lower_threshold)\n            ELSE 1=1\n        END \n    -- Only show hosts with memory size smaller than the threshold set by the user\n    AND \n        CASE\n            WHEN LOWER ( '$mem_upper_threshold' ) != 'null'\n                THEN CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 < ($mem_upper_threshold)\n            ELSE 1=1\n        END\n    -- Here we get the host latest configuration\n    AND v4_4_configuration_history_hosts.history_id \n        IN     \n            (\n                SELECT MAX ( a.history_id )\n                FROM v4_4_configuration_history_hosts a\n                GROUP BY a.host_id\n            )\n    -- This will determine where deleted entities will be included in the report,\n    -- according to the user selection for \"show_deleted\" parameter\n    AND\n        CASE\n          WHEN '$show_deleted'='Yes'\n              THEN 1=1\n          WHEN '$show_deleted'='No'\n              THEN v4_4_configuration_history_hosts.delete_date isnull\n        END\nORDER BY\n    v4_4_configuration_history_hosts.cluster_id,\n    v4_4_configuration_history_hosts.delete_date DESC,\n    v4_4_configuration_history_hosts.host_name",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": " ",
      "transform": "table",
      "type": "table"
    },
    {
      "collapsed": false,
      "datasource": "$datasource",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 19,
      "panels": [],
      "title": "Host Hardware Details",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "$datasource",
      "description": "This report displays a inventory list of hosts hardware details in the selected data center and cluster.",
      "fontSize": "100%",
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 25,
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": 1,
        "desc": false
      },
      "styles": [
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "is_deleted",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "host_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Host Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "Link to Host Dashboard",
          "linkUrl": "/ovirt-engine-grafana/d/HostDashboard/host-dashboard?orgId=1&var-datasource=$datasource&var-show_deleted=${__cell_0}&var-host_id=${__cell_1}",
          "mappingType": 1,
          "pattern": "host_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "CPU Model",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "cpu_model",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Number of CPUs",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "host_cpu",
          "thresholds": [],
          "type": "number",
          "unit": "none"
        },
        {
          "alias": "Memory Size",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "host_memsize",
          "thresholds": [],
          "type": "number",
          "unit": "decgbytes"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Server Manufacturer",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Server Name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Server Serial Number",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- IN02-2 \n\nSELECT DISTINCT \n    CASE \n        WHEN v4_4_configuration_history_hosts.delete_date IS NULL\n            THEN 'No'\n        WHEN v4_4_configuration_history_hosts.delete_date IS NOT NULL\n            THEN 'Yes'\n    END AS is_deleted,\n    v4_4_configuration_history_hosts.host_id,\n    CASE \n        WHEN v4_4_configuration_history_hosts.delete_date IS NULL  \t     \t    \n            THEN host_name \t \t\n        WHEN v4_4_configuration_history_hosts.delete_date IS NOT NULL  \t      \t    \n            THEN host_name || ' (Removed on ' || CAST ( CAST ( v4_4_configuration_history_hosts.delete_date AS date ) AS varchar ) || ')'\n    END AS host_name,\n    cpu_model,\n    CASE\n        WHEN count_threads_as_cores = TRUE\n            THEN COALESCE ( v4_4_configuration_history_hosts.number_of_threads, 0 )\n        ELSE COALESCE ( v4_4_configuration_history_hosts.number_of_cores, 0 )\n    END AS host_cpu,\n    CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 AS host_memsize,\n    hardware_manufacturer AS \"Server Manufacturer\",\n    hardware_product_name AS \"Server Name\",\n    hardware_serial_number AS \"Server Serial Number\"\nFROM \n    v4_4_configuration_history_hosts\n    LEFT OUTER JOIN v4_4_configuration_history_clusters\n        ON \n            (\n                v4_4_configuration_history_hosts.cluster_id =\n                v4_4_configuration_history_clusters.cluster_id\n                -- Here we get the cluster latest configuration\n                AND v4_4_configuration_history_clusters.history_id \n                    IN \n                        (\n                            SELECT MAX ( a.history_id )\n                            FROM v4_4_configuration_history_clusters a\n                            GROUP BY a.cluster_id\n                        )\n            )\nWHERE \n    -- Filter hosts list according to the data center that was chosen by the user\n    v4_4_configuration_history_hosts.cluster_id \n        IN \n            (\n                SELECT a.cluster_id\n                FROM v4_4_configuration_history_clusters a\n                WHERE a.datacenter_id IN ($datacenter_id)\n            )\n    -- Filter list according to the host/s that was chosen by the user\n    AND host_id IN ($host_id)\n    -- Filter list according to the OS that was chosen by the user\n    AND COALESCE ( v4_4_configuration_history_hosts.host_os, 'Unknown' ) IN ($host_os)\n    -- Only show hosts with number of number of CPUs greater than or equal to the threshold set by the user\n    AND \n        CASE\n            WHEN LOWER ( '$cpu_lower_threshold' ) != 'null' AND count_threads_as_cores = TRUE\n                THEN COALESCE ( number_of_threads, 0 ) >= ($cpu_lower_threshold)\n            WHEN LOWER ( '$cpu_lower_threshold' ) != 'null' AND count_threads_as_cores IN ( FALSE, NULL )\n                THEN COALESCE ( number_of_cores, 0 ) >= ($cpu_lower_threshold)\n            ELSE 1=1\n        END\n    -- Only show hosts with number of number of CPUs smaller than the threshold set by the user\n    AND \n        CASE \n            WHEN LOWER ( '$cpu_upper_threshold' ) != 'null' AND count_threads_as_cores = TRUE\n                THEN COALESCE ( number_of_threads, 0 ) < ($cpu_upper_threshold)\n            WHEN LOWER ( '$cpu_upper_threshold' ) != 'null' AND count_threads_as_cores IN ( FALSE, NULL )\n                THEN COALESCE ( number_of_cores, 0 ) < ($cpu_upper_threshold)\n            ELSE 1=1\n        END\n    -- Only show hosts with memory size greater than or equal to the threshold set by the user\n    AND \n        CASE \n            WHEN LOWER ( '$mem_lower_threshold' ) != 'null'\n                THEN CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 >= ($mem_lower_threshold)\n            ELSE 1=1\n        END \n    -- Only show hosts with memory size smaller than the threshold set by the user\n    AND \n        CASE\n            WHEN LOWER ( '$mem_upper_threshold' ) != 'null'\n                THEN CAST ( COALESCE ( memory_size_mb, 0 ) AS float ) / 1024 < ($mem_upper_threshold)\n            ELSE 1=1\n        END\n    AND\n        v4_4_configuration_history_hosts.history_id\n            IN\n                (\n                    SELECT MAX (history_id)\n                    FROM v4_4_configuration_history_hosts\n                    GROUP BY host_id\n                )\n    AND\n        CASE\n            WHEN '$show_deleted'='Yes'\n                THEN 1=1\n            WHEN '$show_deleted'='No'\n                THEN v4_4_configuration_history_hosts.delete_date isnull\n        END\nORDER BY host_name, hardware_manufacturer, hardware_product_name",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": " ",
      "transform": "table",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 22,
  "style": "dark",
  "tags": [
    "Host",
    "Cluster",
    "CPU",
    "Memory",
    "OS"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": "No",
          "value": "No"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Show Deleted Entities?",
        "multi": false,
        "name": "show_deleted",
        "options": [
          {
            "selected": true,
            "text": "No",
            "value": "No"
          },
          {
            "selected": false,
            "text": "Yes",
            "value": "Yes"
          }
        ],
        "query": "No,Yes",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT  \n    CAST ( datacenter_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL  \t    \n            THEN datacenter_name \t\n        WHEN delete_date IS NOT NULL  \t     \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM v4_4_configuration_history_datacenters \nWHERE      \n    history_id          \n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_datacenters a  \t\t        \n                GROUP BY a.datacenter_id \t        \n            ) \t\n    AND datacenter_id  \t        \n        IN \t\t\t    \n            ( \t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t\n                WHERE  \t\t\t\t\t    \n                    cluster_id \t\t\t\t\t        \n                        IN \t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_hosts  \t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\n            ) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t   \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Data Center",
        "multi": true,
        "name": "datacenter_id",
        "options": [],
        "query": "SELECT DISTINCT  \n    CAST ( datacenter_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL  \t    \n            THEN datacenter_name \t\n        WHEN delete_date IS NOT NULL  \t     \n            THEN datacenter_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM v4_4_configuration_history_datacenters \nWHERE      \n    history_id          \n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_datacenters a  \t\t        \n                GROUP BY a.datacenter_id \t        \n            ) \t\n    AND datacenter_id  \t        \n        IN \t\t\t    \n            ( \t\t\t\t\t\n                SELECT DISTINCT datacenter_id \t\t\t\t\t\n                FROM v4_4_configuration_history_clusters \t\t\t\t\t\n                WHERE  \t\t\t\t\t    \n                    cluster_id \t\t\t\t\t        \n                        IN \t\t\t\t\t            \n                            ( \t\t\t\t\t\t\t\t\t\n                                SELECT DISTINCT cluster_id \t\t\t\t\t\t\t\t\t\n                                FROM v4_4_configuration_history_hosts  \t\t\t\t\t\t\t\t\n                            ) \t\t\t\t\n            ) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN v4_4_configuration_history_datacenters.delete_date ISNULL \t   \n        END",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT  \n    CAST ( cluster_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL  \t    \n            THEN cluster_name \t\n        WHEN delete_date IS NOT NULL  \t     \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM v4_4_configuration_history_clusters \nWHERE      \n    history_id          \n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_clusters a  \t\t        \n                GROUP BY a.cluster_id \t        \n            ) \t\n    AND cluster_id  \t        \n        IN \t\t\t    \n            ( \t\t\t\t\t\n                SELECT DISTINCT cluster_id \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts \t\t\t\t\n            ) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t   \n        END    \n    AND datacenter_id IN ($datacenter_id)",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Cluster",
        "multi": true,
        "name": "cluster_id",
        "options": [],
        "query": "SELECT DISTINCT  \n    CAST ( cluster_id AS varchar ) AS __value, \n    CASE     \n        WHEN delete_date IS NULL  \t    \n            THEN cluster_name \t\n        WHEN delete_date IS NOT NULL  \t     \n            THEN cluster_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')' \n    END AS __text \nFROM v4_4_configuration_history_clusters \nWHERE      \n    history_id          \n        IN              \n            (  \t            \n                SELECT MAX ( a.history_id )  \t\t        \n                FROM v4_4_configuration_history_clusters a  \t\t        \n                GROUP BY a.cluster_id \t        \n            ) \t\n    AND cluster_id  \t        \n        IN \t\t\t    \n            ( \t\t\t\t\t\n                SELECT DISTINCT cluster_id \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts \t\t\t\t\n            ) \t\n    AND \t   \n        CASE  \t       \n            WHEN '$show_deleted'='Yes' \t           \n                THEN 1=1 \t\t   \n            WHEN '$show_deleted'='No' \t\t       \n                THEN v4_4_configuration_history_clusters.delete_date ISNULL \t   \n        END    \n    AND datacenter_id IN ($datacenter_id)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT   \n    CAST ( host_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN host_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_hosts  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND cluster_id IN ($cluster_id)  \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                \n        END",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "Host",
        "multi": true,
        "name": "host_id",
        "options": [],
        "query": "SELECT DISTINCT   \n    CAST ( host_id AS varchar ) AS __value,  \n    CASE          \n        WHEN delete_date IS NULL  \t     \t    \n            THEN host_name \t \t\n        WHEN delete_date IS NOT null  \t      \t    \n            THEN host_name || ' (Removed on ' || CAST ( CAST ( delete_date AS date ) AS varchar ) || ')'  \n    END AS __text  \t\t\nFROM v4_4_configuration_history_hosts  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            ) \t \t\t\t\n    AND cluster_id IN ($cluster_id)  \t\t\t\n    AND \t    \t\t\t    \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                \n        END",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT DISTINCT                   \n    CASE  \t    \n        WHEN host_os IS NULL\n            THEN 'Unknown'\n        WHEN host_os IS NOT NULL\n            THEN host_os \t\n    END AS __text   \nFROM v4_4_configuration_history_hosts  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            )\n    AND host_id IN ($host_id)  \t\t\t\n    AND \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                \n        END  ",
        "hide": 0,
        "includeAll": true,
        "index": -1,
        "label": "OS",
        "multi": true,
        "name": "host_os",
        "options": [],
        "query": "SELECT DISTINCT                   \n    CASE  \t    \n        WHEN host_os IS NULL\n            THEN 'Unknown'\n        WHEN host_os IS NOT NULL\n            THEN host_os \t\n    END AS __text   \nFROM v4_4_configuration_history_hosts  \t\t\nWHERE       \t\t    \n    history_id           \t\t\t    \n        IN               \t\t\t\t\n            (  \t             \t\t\t\t\t\n                SELECT MAX ( a.history_id )  \t\t         \t\t\t\t\t\n                FROM v4_4_configuration_history_hosts a  \t\t         \t\t\t\t\t\n                GROUP BY a.host_id \t         \t\t\t\t\n            )\n    AND host_id IN ($host_id)  \t\t\t\n    AND \n        CASE  \t        \t\t\t\t    \n            WHEN '$show_deleted'='Yes' \t            \t\t\t\t\t    \n                THEN 1=1 \t\t    \t\t\t\t\t\n            WHEN '$show_deleted'='No' \t\t        \t\t\t\t\t    \n                THEN v4_4_configuration_history_hosts.delete_date ISNULL \t                \n        END  ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "Null",
          "value": "Null"
        },
        "hide": 0,
        "label": "Number of CPUs >=",
        "name": "cpu_lower_threshold",
        "options": [
          {
            "selected": false,
            "text": "Null",
            "value": "Null"
          }
        ],
        "query": "Null",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "Null",
          "value": "Null"
        },
        "hide": 0,
        "label": "Number of CPUs <",
        "name": "cpu_upper_threshold",
        "options": [
          {
            "selected": false,
            "text": "Null",
            "value": "Null"
          }
        ],
        "query": "Null",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "Null",
          "value": "Null"
        },
        "hide": 0,
        "label": "Memory Size (GB) >=",
        "name": "mem_lower_threshold",
        "options": [
          {
            "selected": false,
            "text": "Null",
            "value": "Null"
          }
        ],
        "query": "Null",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "Null",
          "value": "Null"
        },
        "hide": 0,
        "label": "Memory Size (GB) <",
        "name": "mem_upper_threshold",
        "options": [
          {
            "selected": false,
            "text": "Null",
            "value": "Null"
          }
        ],
        "query": "Null",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "$datasource",
        "definition": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "EngineFQDN",
        "options": [],
        "query": "SELECT var_value\nFROM history_configuration\nWHERE var_name = 'EngineFQDN'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {
    "hidden": true,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "02 Hosts Inventory Dashboard",
  "uid": "HostsInventoryDashboard",
  "variables": {
    "list": []
  },
  "version": 1
}